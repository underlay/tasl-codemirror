{"version":3,"sources":["webpack://@underlay/tasl-codemirror/./src/taslx/config.ts","webpack://@underlay/tasl-codemirror/./src/taslx/index.ts","webpack://@underlay/tasl-codemirror/./src/taslx/lint.ts","webpack://@underlay/tasl-codemirror/./src/taslx/syntax.ts","webpack://@underlay/tasl-codemirror/./node_modules/lezer/dist/index.cjs","webpack://@underlay/tasl-codemirror/./node_modules/lezer/node_modules/lezer-tree/dist/tree.cjs","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/history/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/fold/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/closebrackets/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/autocomplete/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/rectangular-selection/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/goto-line/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/basic-setup/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/commands/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/comment/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/gutter/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/highlight-selection/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/highlight/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/language/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/lint/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/matchbrackets/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/panel/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/rangeset/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/search/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/state/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/text/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/tooltip/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/w3c-keyname/index.es.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/view/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/apg.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/mapping.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/morphism.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/namespace.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/type.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/utils.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/lib/value.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/rng.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/regex.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/validate.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/stringify.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/v1.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/parse.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/v35.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/md5.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/v3.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/v4.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/sha1.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/v5.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/nil.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/version.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/grammar/tasl.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/grammar/taslx.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/index.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/stdlib.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/tasl.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/taslx.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/utils.ts","webpack://@underlay/tasl-codemirror/./node_modules/lezer-tree/src/tree.ts","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/rdf.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/xsd.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/DataFactory.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/Store.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/Parse.js","webpack://@underlay/tasl-codemirror/./node_modules/style-mod/src/style-mod.js","webpack://@underlay/tasl-codemirror/./node_modules/ziterable/index.js","webpack://@underlay/tasl-codemirror/webpack/bootstrap","webpack://@underlay/tasl-codemirror/webpack/runtime/compat get default export","webpack://@underlay/tasl-codemirror/webpack/runtime/define property getters","webpack://@underlay/tasl-codemirror/webpack/runtime/hasOwnProperty shorthand","webpack://@underlay/tasl-codemirror/webpack/runtime/make namespace object","webpack://@underlay/tasl-codemirror/./demo/taslx.js"],"names":["EditorView","EditorState","readOnlyConfig","editable","of","lineNumbers","defaultHighlightStyle","highlightSelectionMatches","syntax","editableConfig","basicSetup","keymap","defaultKeymap","commentKeymap","key","preventDefault","run","indentMore","indentLess","lintView","view","cursor","syntaxTree","state","slice","from","to","doc","sliceString","error","node","message","LintError","namespaces","exprs","mapping","diagnostics","name","errors","severity","firstChild","type","isError","namespace","term","getChild","uriPattern","test","namespacePattern","push","source","identifier","prefix","expressions","getChildren","parseExprs","terms","length","getURI","APG","map","reportChildErrors","nextSibling","Object","entries","filter","sorted","sort","a","c","b","d","defaultNamespaces","fromEntries","parseURI","e","value","makeLinter","onChange","linter","props","undefined","nodes","reduce","prev","concat","dereference","projection","injection","string","JSON","parse","constant","slots","slot","tuple","cases","CASE","match","Error","parseExpr","parent","LezerLanguage","define","parser","configure","indentNodeProp","add","Tuple","continuedIndent","except","Match","foldNodeProp","subtree","styleTags","Comment","tags","comment","Prefix","ExprName","typeName","Variable","Term","className","propertyName","Identifier","Constant","String","Projector","operator","Injector","Pointer","bracket","separator","keyword","expr","languageData","closeBrackets","brackets","indentOnInput","commentTokens","line","defineProperty","exports","Recover","lezerTree","Stack","cx","stack","reducePos","pos","score","buffer","bufferBase","this","_","i","start","action","depth","dPrec","dynamicPrecedence","minRepeatTerm","storeNode","pushState","getGoto","base","count","stateFlag","baseStateID","pop","end","size","isReduce","cur","top","index","next","nextEnd","nextState","maxNode","shift","reused","off","isNode","sim","SimulatedStack","stateSlot","hasAction","force","types","before","frame","indexOf","nextStates","best","s","result","split","validAction","forceReduce","data","other","dialectID","dialect","flags","rest","offset","goto","StackBufferCursor","maybeNext","Token","TokenGroup","id","input","token","group","groupMask","scan","accEnd","allows","overrides","accept","get","low","high","mid","readToken","decodeArray","Type","Uint16Array","array","out","charCodeAt","stop","digit","prototype","contextual","fallback","extend","verbose","process","env","LOG","stackIDs","cutAt","tree","side","childBefore","childAfter","prevSibling","FragmentCursor","fragments","fragment","safeFrom","safeTo","trees","nextFragment","fr","openStart","openEnd","nextStart","last","children","positions","TreeBuffer","CachedToken","super","arguments","extended","mask","dummyToken","TokenCache","tokens","mainToken","actions","tokenizers","actionIndex","main","tokenizer","updateCachedToken","startIndex","addActions","eofTerm","clear","specialized","specializers","read","set","putAction","pair","Rec","Parse","startPos","context","recovering","nextStackID","nested","nestEnd","nestWrap","topTerm","stacks","advance","finishNested","stopped","stoppedTokens","maybeNest","newStacks","nest","checkNest","advanceStack","tok","startNested","finished","findFinished","stackToTree","strict","console","log","getName","SyntaxError","runRecovery","forceAll","maxRemaining","some","outer","j","sameState","splice","stackID","cached","nodeAt","nodeSet","useNode","Tree","inner","defaultReduce","getActions","localStack","apply","pushStackDedup","restarted","tokenEnd","deadEnd","restart","done","advanceFully","forceBase","insert","recoverByInsert","recoverByDelete","forceFinish","build","create","topID","maxBufferLength","bufferLength","minRepeatType","info","findNested","spec","scanForNestEnd","filterEnd","wrapType","startParse","clip","endToken","NodeType","none","placeholder","WeakMap","fromCodePoint","Dialect","disabled","Parser","DefaultBufferLength","nextStateCache","cachedDialect","version","RangeError","tokenArray","tokenData","nodeNames","repeatNodeCount","nodeProps","setProp","nodeID","prop","deserialize","propSpec","states","Uint32Array","stateData","topTerms","keys","topRules","r","NodeSet","skipped","skippedNodes","maxTerm","dialects","dynamicPrecedences","tokenPrecTable","tokenPrec","termNames","l","parseDialect","stringInput","loose","table","groupTag","target","terminal","flag","max","iPrev","findOffset","config","copy","assign","t","found","find","obj","hasOwnProperty","call","prec","values","part","Uint8Array","NodeProp","TreeCursor","ExternalTokenizer","options","nextPropID","CachedNode","str","Number","propObj","closedBy","openedBy","noProps","src","Array","isArray","direct","groups","newTypes","newProps","toString","join","stringify","scope","topNode","moveTo","_tree","TreeNode","enter","leave","mustLeave","isAnonymous","BalanceBranchFactor","balanceRange","_a","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","maxSize","fork","skip","minStart","nodeSize","localSkipped","nodeStart","findBufferSize","endPos","copyToBuffer","localChildren","localPositions","localInRepeat","reverse","bufferStart","buildTree","empty","childString","endIndex","dir","after","pick","_parent","full","findChild","BufferNode","BufferContext","hasChild","nextChild","val","nextSignificantParent","is","child","externalSibling","bufferNode","yieldNode","n","unshift","yieldBuf","yield","sibling","atLastNode","move","cache","ch","outerType","innerType","maxChild","Math","ceil","groupFrom","groupStart","only","containsType","elt","TreeFragment","open","changes","minGap","fI","nextF","cI","nextC","nextPos","fromA","cut","fFrom","fTo","min","toA","toB","partial","f","StringInput","at","fromHistory","Annotation","isolateHistory","invertedEffects","Facet","historyConfig","combine","configs","combineConfig","minDepth","newGroupDelay","historyField","StateField","HistoryState","tr","facet","fromHist","annotation","item","HistEvent","fromTransaction","undone","updateBranch","addSelection","startState","selection","isolate","Transaction","addMapping","desc","event","time","userEvent","addChanges","cmd","dispatch","historyState","field","undo","redo","undoSelection","redoSelection","histState","branch","effects","mapped","startSelection","selectionsAfter","invert","selections","maxLen","newEvent","newBranch","conc","lastEvent","sels","eq","setSelAfter","popSelection","addMappingToBranch","mapEvent","extraSelections","mappedChanges","mapDesc","fullMapping","composeDesc","StateEffect","prevTime","prevUserEvent","ranges","isAdjacent","iterChangedRanges","_f","_t","compose","update","annotations","historyKeymap","mac","mapRange","range","mapPos","foldEffect","unfoldEffect","selectedLines","lines","head","visualLineAt","foldState","Decoration","folded","foldExists","foldWidget","filterFrom","filterTo","onSelection","primary","between","provide","foldInside","maybeEnable","append","codeFolding","foldKeymap","foldable","reconfigure","defaultConfig","placeholderDOM","placeholderText","foldConfig","baseTheme","widget","WidgetType","conf","element","document","createElement","textContent","setAttribute","phrase","title","themeClass","onclick","posAtDOM","foldGutterDefaults","openText","closedText","FoldMarker","GutterMarker","span","$foldPlaceholder","backgroundColor","border","color","borderRadius","margin","padding","defaults","closeBracketEffect","MapMode","skipBracketEffect","closedBracket","startSide","endSide","bracketState","lineStart","lineAt","prevLineStart","effect","definedClosing","closing","charAt","languageDataAt","closeBracketsKeymap","dont","changeByRange","prevChar","nextChar","EditorSelection","scrollIntoView","closedBracketAt","handleOpen","close","closeBefore","anchor","handleClose","_open","moved","primaryIndex","handleSame","allowTriple","isTriple","sliceDoc","charCategorizer","CharCategory","resolve","CompletionContext","explicit","abortListeners","text","search","ensureAnchor","_type","listener","Option","completion","addStart","addEnd","RegExp","ignoreCase","applyCompletion","option","label","FuzzyMatcher","pattern","chars","any","precise","byWord","p","char","upper","toUpperCase","toLowerCase","astral","word","first","len","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","prevType","completionConfig","activateOnTyping","override","maxRenderedOptions","fontFamily","overflowY","whiteSpace","maxHeight","listStyle","lineHeight","background_fallback","color_fallback","content","opacity","display","textAlign","position","width","maxWidth","MaxInfoWidth","right","left","verticalAlign","height","borderLeft","$completionMatchedText","textDecoration","$completionDetail","marginLeft","fontStyle","$completionIcon","fontSize","paddingRight","createListBox","ul","li","appendChild","icon","labelElt","detail","createTextNode","detailElt","classList","rangeAroundSelected","total","selected","floor","CompletionTooltip","stateField","placeInfo","measureInfo","write","positionInfo","cState","dom","addEventListener","parentNode","nodeName","exec","list","requestMeasure","updateSel","prevState","remove","updateSelectedOption","createInfoDialog","opt","hasAttribute","removeAttribute","container","getBoundingClientRect","self","scrollTop","bottom","sel","querySelector","rect","clientHeight","textDirection","Direction","spaceLeft","spaceRight","innerWidth","style","toggle","CompletionDialog","attrs","tooltip","timestamp","makeAttrs","active","hasResult","matcher","boost","cmpOption","sortOptions","selectedValue","completionState","Date","now","CompletionState","random","ActiveSource","every","touchesRange","iA","iB","endA","endB","sameResults","docChanged","setSelectedEffect","setSelected","baseAttrs","dScore","lA","lB","handleUserEvent","handleChange","startCompletionEffect","closeCompletionEffect","setActiveEffect","_tr","ActiveResult","sources","moveCompletionSelection","forward","by","step","offsetHeight","acceptCompletion","RunningQuery","updates","completionPlugin","ViewPlugin","debounceUpdate","running","debounceAccept","composing","startQuery","selectionSet","doesReset","transactions","query","handler","logException","clearTimeout","q","setTimeout","startUpdate","pending","Promise","then","aborted","scheduleAccept","err","updated","current","eventHandlers","fieldMarker","fieldRange","class","ActiveSnippet","deco","setActive","moveToField","snippetState","selectionInsideField","moveField","precedence","completionKeymap","MaxOff","getPos","posAtCoords","x","clientX","y","clientY","col","ref","coordsAtPos","viewport","round","abs","defaultCharacterWidth","absoluteColumn","tabSize","number","extTag","Symbol","createLineDialog","innerHTML","go","parseInt","isNaN","focus","keyCode","gotoLineKeymap","panel","highlightSpecialChars","fullConfig","canFold","canUnfold","gutter","lineMarker","initialSpacer","domEventHandlers","click","foldGutter","drawSelection","closed","handleInsertion","autocompletion","eventFilter","altKey","button","startSel","newStart","newLine","_extend","multiple","startLine","endLine","startOff","endOff","startCol","endCol","leftOver","rectangleFor","rectangleSelectionStyle","rectangularSelection","highlightActiveLine","lintKeymap","setSel","moveSel","how","rangeEnd","cursorByChar","moveByChar","cursorCharLeft","cursorCharRight","cursorCharForward","cursorCharBackward","cursorByGroup","moveByGroup","cursorGroupLeft","cursorGroupRight","cursorGroupForward","cursorGroupBackward","interestingNode","bracketProp","moveBySyntax","newPos","matched","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","moveVertically","cursorLineUp","cursorLineDown","cursorByPage","cursorPageUp","cursorPageDown","moveByLineBoundary","moveToLineBoundary","space","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineStart","cursorLineEnd","toMatchingBracket","matching","cursorMatchingBracket","selectMatchingBracket","extendSel","goalColumn","selectByChar","selectCharLeft","selectCharRight","selectCharForward","selectCharBackward","selectByGroup","selectGroupLeft","selectGroupRight","selectGroupForward","selectGroupBackward","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineStart","selectLineEnd","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","selectAll","selectLine","selectedLineBlocks","selectParentSyntax","simplifySelection","deleteBy","towards","deleteByChar","codePoint","drop","getIndentUnit","findClusterBreak","deleteCodePointBackward","deleteCodePointForward","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","cat","nextCat","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","lineEnd","deleteTrailingWhitespace","iter","lineBreak","trailing","splitLine","transposeChars","blocks","upto","moveLine","block","nextLine","moveLineUp","moveLineDown","copyLine","copyLineUp","copyLineDown","deleteLine","insertNewline","replaceSelection","insertNewlineAndIndent","explode","isBetweenBrackets","IndentContext","simulateBreak","simulateDoubleBreak","indent","getIndentation","indentString","lineIndent","changeBySelectedLine","atLine","changeSet","indentSelection","overrideIndentation","norm","indentUnit","keep","emacsStyleKeymap","standardKeymap","toggleLineComment","toggleLineCommentWithOption","CommentOption","Toggle","lineComment","OnlyComment","lineUncomment","OnlyUncomment","toggleBlockComment","toggleBlockCommentWithOption","blockComment","blockUncomment","getConfig","BlockCommenter","LineCommenter","selectionCommented","isSelectionCommented","isRangeCommented","startText","endText","textBefore","SearchMargin","textAfter","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","lineCommentToken","linesAcrossSelection","linesAcrossRange","getLinesInRange","column","isRangeLineSkipped","isLineSkipped","minCol","posAfter","marginLen","_state","Infinity","isRangeLineDiscarded","constructor","_view","elementClass","mapMode","renderEmptyElements","elementStyle","markers","updateSpacer","activeGutters","gutters","$gutters","boxSizing","borderRight","$gutter","flexDirection","flexShrink","overflow","$gutterElement","minWidth","unfixGutters","gutterView","fixed","SingleGutterView","scrollDOM","insertBefore","contentDOM","updateGutters","contexts","UpdateContext","viewportLines","BlockType","finish","minHeight","contentHeight","change","heightChanged","viewportChanged","known","g","PluginField","offsetWidth","localMarkers","forLine","above","elements","newElt","GutterElement","compare","sameMarkers","removeChild","spacer","visualLineAtHeight","cssText","prevMarkers","eltClass","cssClass","marginTop","lastChild","cls","m","toDOM","lineNumberMarkers","lineNumberConfig","formatNumber","exists","NumberMarker","lineNumberGutter","others","maxLineNumber","defaultTheme","activeLineHighlighter","lineDeco","attributes","decorations","getDeco","lastLineStart","v","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","ext","matchHighlighter","matchDeco","mainMatchDeco","check","wordAt","trim","visibleRanges","nextTagID","Tag","modified","tag","mod","Modifier","nextModifierID","instances","mods","permute","byName","pieces","mode","rule","Rule","ruleNodeProp","highlightStyleProp","stylings","highlightStyle","specs","styling","Styling","module","modSpec","treeHighlighter","language","TreeHighlighter","nodeStack","classStack","inheritStack","markCache","getTree","buildDeco","curClass","builder","flush","mark","iterate","inheritedClass","opaque","matchContext","st","_s","backTo","literal","heading","punctuation","meta","docComment","variableName","labelName","macroName","docString","character","integer","float","bool","regexp","escape","url","null","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","quote","emphasis","strong","link","monospace","inserted","deleted","changed","invalid","documentMeta","processingInstruction","definition","defineModifier","function","standard","local","special","fontWeight","languageDataProp","defineLanguageFacet","baseData","Language","extraExtensions","setState","parseState","EditorParseContext","work","takeTree","LanguageState","extension","ParseWorker","languageDataFacetAt","timeout","isTop","hasNested","lang","DocInput","cursorPos","prevString","stringStart","syncTo","skippedUntil","endTime","newState","fromB","startLen","cutFragments","until","requestIdle","window","requestIdleCallback","callback","cancelIdle","cancelIdleCallback","working","bind","scheduleWork","updateViewport","reset","takeSkipped","deadline","timeRemaining","indentService","cols","ts","service","ast","scanPos","strategy","indentStrategy","TreeIndentContext","syntaxIndentation","_b","overriden","countColumn","delimitedStrategy","ignoreClosed","topIndent","textAfterPos","atBreak","isParent","delimitedIndent","align","units","closedAt","aligned","openToken","openLine","isSkipped","bracketedAligned","baseIndent","flatIndent","matchExcept","rules","newDoc","newSelection","foldService","syntaxFolding","SelectedDiagnostic","diagnostic","LintState","findDiagnostic","maybeEnableLint","lintState","activeMark","lintTooltip","setDiagnostics","setDiagnosticsEffect","togglePanel","movePanelSelection","selPos","DiagnosticWidget","LintPanel","stackStart","stackEnd","renderDiagnostic","openLintPanel","closeLintPanel","nextDiagnostic","LintDelay","lintTime","onmousedown","PanelItem","items","tabIndex","moveSelection","selectedIndex","contains","needsSync","newSelectedItem","_start","_end","sync","domPos","rm","underline","btoa","$diagnostic","$diagnosticAction","font","$lintRange","backgroundPosition","backgroundRepeat","backgroundImage","$lintPoint","borderBottom","borderBottomColor","background","$matchingBracket","$nonmatchingBracket","DefaultBrackets","bracketMatchingConfig","afterCursor","maxScanDistance","matchingMark","nonmatchingMark","bracketMatchingUnique","matchBrackets","bracketMatching","matchingNodes","byProp","matches","sub","_pos","firstToken","matchMarkedBrackets","tokenType","startCh","startToken","iterRange","distance","basePos","matchPlainBrackets","panelConfig","topContainer","bottomContainer","panels","panelPlugin","showPanel","getPanel","plugin","PanelGroup","panelClass","mount","syncClasses","scrollMargin","classes","syncDOM","curDOM","themeClasses","$panels","borderTop","RangeValue","Range","point","cmpRange","Far","Chunk","maxPoint","startAt","arr","lo","hi","diff","findIndex","newFrom","newTo","curFrom","curTo","RangeSet","chunkPos","chunk","nextLayer","chunkEnd","updateSpec","LayerCursor","spill","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPoint","minPointSize","sharedChunks","inA","Map","shared","Set","findSharedChunks","sideA","SpanCursor","sideB","iterGaps","iterator","activeForPoint","chunkStart","lastFrom","lastTo","setMaxPoint","newArrays","finishChunk","layer","rank","gotoInner","has","heap","heapBubble","childIndex","activeTo","activeRank","minActive","pointFrom","pointRank","removeActive","findMinIndex","trackOpen","trackExtra","nextVal","addActive","startA","startB","dPos","clipEnd","comparePoint","sameValues","compareRange","foundPos","basicNormalize","normalize","SearchCursor","bufferPos","peek","fromCharCode","code","Query","replace","caseInsensitive","setQuery","searchState","SearchState","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","highlight","valid","searchCommand","openSearchPanel","findNextMatch","findNext","maybeAnnounceMatch","findPrevInRange","findPrevious","selectMatches","replaceNext","replaceAll","buildPanel","select","searchExtensions","closeSearchPanel","root","activeElement","searchKeymap","searchField","onchange","onkeyup","replaceField","caseField","checked","updateQuery","onkeydown","runScopeHandlers","shiftKey","Break","DefaultSplit","ChangeDesc","sections","ins","posA","posB","individual","iterChanges","composeSets","mapSet","assoc","Simple","TrackDel","TrackBefore","TrackAfter","ChangeSet","_toB","resultSections","resultInserted","filteredSections","SectionIter","addSection","addInsert","filtered","parts","toJSON","lineSep","insText","insLen","json","forceJoin","setA","setB","mkSet","len2","sectionLen","insB","textBit","forward2","SelectionRange","level","which","fromJSON","normalized","bidiLevel","goal","checkSelection","docLength","nextID","compareInput","isStatic","default","sameArray","static","FacetProvider","deps","maybePrec","compute","computeN","dependencies","addresses","getter","idx","multi","depDoc","depSel","depAddrs","dep","addr","ensureAddr","newVal","oldVal","compareArray","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","oldAddr","address","dynAddr","getAddr","createF","updateF","compareF","facets","oldIdx","maybeIndex","Prec","PrecExtension","TaggedExtension","tagExtension","Configuration","replacements","dynamicSlots","staticValues","statusTemplate","oldState","fields","seen","tagsSeen","getOwnPropertySymbols","flatten","dynamicSlot","status","applying","allowMultipleSelections","lineSeparator","changeFilter","transactionFilter","transactionExtender","AnnotationType","StateEffectType","_doc","newLength","applyTransaction","ann","joinRanges","mergeTransaction","sequential","mapForA","mapForB","mapEffects","resolveTransactionInner","docSize","reconf","single","asArray","resolveTransaction","seq","extenders","extendTransaction","back","invertedDesc","filters","filterTransaction","addToHistory","nonASCIISingleCaseWordChar","wordChar","require","toText","result1","newChanges","newMapped","mapBy","extensions","configuration","staticFacet","asSingle","phrases","provider","wordChars","Space","hasWordChar","Word","Other","isExtendingChar","isRegionalIndicator","nextClusterBreak","surrogateLow","surrogateHigh","codePointAt","codePointSize","countBefore","prevClusterBreak","code0","code1","findColumn","Text","lineCache","cacheLine","lineInner","decompose","TextNode","iterA","RawTextCursor","iterB","offA","offB","strA","strB","eqContent","PartialTextCursor","LineCursor","iterLines","textLength","TextLeaf","lineCachePos","isLine","Line","sliceText","newLen","appendText","lineLengthTo","lineLengthFrom","lastLineLength","firstLineLength","lengthDiff","chunkLength","maxLength","minLength","chunked","currentLength","currentChunk","childLength","offsets","limit","LineContent","contextStart","strings","tooltipPlugin","inView","measureReq","readMeasure","writeMeasure","tooltips","showTooltip","tooltipViews","tp","createTooltip","views","tip","tooltipView","maybeMeasure","editor","innerHeight","measured","tView","strictSide","positioned","$tooltip","zIndex","HoverPlugin","setHover","lastMouseMove","hoverTimeout","mouseInside","checkHover","mouseenter","mouseleave","mousemove","lastMove","timeStamp","isOverRange","nodeType","isInTooltip","removeEventListener","createRange","fromDOM","domAtPos","setEnd","setStart","rects","getClientRects","hoverTooltip","hoverState","hideOnChange","nFrom","8","9","10","12","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","44","45","46","59","61","91","92","106","107","108","109","110","111","144","145","160","161","162","163","164","165","173","186","187","188","189","190","191","192","219","220","221","222","229","48","49","50","51","52","53","54","55","56","57","chrome","navigator","userAgent","safari","vendor","gecko","platform","ie","brokenModifierNames","nav","documentElement","ie_edge","ie_upto10","ie_11up","webkit","browser","ie_version","documentMode","gecko_version","chrome_version","ios","android","webkit_version","getSelection","hasSelection","anchorNode","clientRectsFor","tempRange","nodeValue","isEquivalentPosition","targetNode","targetOff","scanFor","domIndex","previousSibling","maxOffset","childNodes","flattenRect","windowRect","win","DOMSelection","anchorOffset","focusNode","focusOffset","domSel","scratchRange","preventScrollSupported","focusPreventScroll","scrollLeft","ownerDocument","preventScroll","DOMPos","ContentView","dirty","editorView","posBefore","posAtStart","breakAfter","_side","track","reuseDOM","written","syncNodeInto","_dom","bias","fromI","fromStart","toI","toEnd","domBoundsAround","startDOM","endDOM","andParent","markParentsDirty","childList","cmView","markDirty","setParent","_rec","_event","ChildCursor","childCursor","findPos","none$1","InlineView","_other","TextView","textDOM","setDOM","createDOM","_from","_to","textCoords","MarkView","tagName","mergeInlineChildren","sliceInlineChildren","inlineDOMAtPos","coordsInChildren","WidgetView","customView","updateDOM","contentEditable","ignoreEvent","CompositionView","elts","toOff","fromOff","dLen","merge","become","replaceChildren","getSide","joinInlineInto","coordsAt","combineAttrs","attrsEq","keysA","keysB","updateAttrs","_widget","MarkDecoration","PointDecoration","getInclusive","LineDecoration","estimatedHeight","isReplace","WidgetRange","WidgetBefore","WidgetAfter","inclusiveStart","inclusiveEnd","inclusive","addRange","theme","strs","darkTheme","baseThemeID","expandThemeClasses","buildTheme","template","selector","$","outline_fallback","outline","$scroller","alignItems","overflowX","$content","flexGrow","caretColor","$line","$selectionLayer","contain","$selectionBackground","$cursorLayer","pointerEvents","animation","visibility","$cursor","borderLeftColor","$placeholder","$button","$textfield","LineClass","LineView","prevAttrs","takeDeco","transferDOM","setDeco","none$2","childPos","hack","cmIgnore","totalWidth","charWidth","docView","BlockWidgetView","_takeDeco","posAtEnd","ContentBuilder","curLine","breakAtStart","textOff","posCovered","getLine","take","wrapMarks","buildText","addWidget","NullWidget","addLineDeco","LTR","RTL","dec","LowTypes","ArabicTypes","BidiRE","BidiSpan","order","maybe","computeOrder","direction","trivialOrder","prevStrong","beforeL","rtl","movedOver","moveVisually","spanI","indexForward","nextIndex","nextSpan","wrappingWhiteSpace","HeightOracle","lineWrapping","heightSamples","lineLength","lineHeights","newHeight","h","knownHeights","MeasuredHeights","heights","BlockInfo","QueryType","HeightMap","oracle","oldDoc","me","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","_height","_value","blockAt","_force","more","setHeight","outdated","collapsed","widgetHeight","HeightMapGap","heightForLine","firstLine","lastLine","ByHeight","heightForGap","rightTop","rightOffset","subQuery","ByPos","forEachLine","rightStart","balanced","decomposeLeft","mergeGaps","decomposeRight","rebalance","around","covering","writtenTo","isCovered","heightRelevant","addBlock","blankContent","gap","enterLine","ensureLine","DecorationComparator","none$3","clickAddsSelectionRange","dragMovesSelection","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","exception","onerror","PluginFieldProvider","scrollMargins","nextPluginID","viewPlugin","handlers","pluginDecorations","PluginInstance","dummy","destroy","editorAttributes","contentAttributes","styleModule","ChangedRange","dI","rI","addToSet","ViewUpdate","changedRanges","hasFocus","inputState","notifiedFocused","LineGap","gA","gB","wrapping","LineGapWidget","vertical","ViewState","pixelViewport","paddingTop","paddingBottom","contentWidth","heightOracle","heightMap","scrollTo","printing","mustEnforceCursorAssoc","applyChanges","setDoc","getViewport","lineGaps","ensureLineGaps","lineGapDeco","draw","computeVisibleRanges","newDeco","contentChanges","heightChanges","extendWithRanges","comp","heightRelevantDecoChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLineGaps","mapLineGaps","repeated","getComputedStyle","scrollHeight","scrollWidth","clientWidth","parentRect","host","visiblePixelRange","dTop","dBottom","measureVisibleLineHeights","refresh","mustRefresh","measureTextSize","enforceCursorAssoc","Viewport","newTop","newBottom","gaps","viewFrom","viewTo","structure","lineStructure","findPosition","gapTo","gapFrom","gapSize","findFraction","ratio","same","editorTop","dist","counted","none$4","DocView","viewports","compositionDeco","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","updateInner","updateDeco","textNode","nearbyTextNode","cView","nearest","CompositionWidget","computeCompositionDeco","forceSelection","prevDeco","decoDiff","DecorationComparator$1","findChangedDeco","pointerSel","updateSelection","oldLength","updateChildren","observer","ignore","viewState","replaceRange","breakAtEnd","fromPointer","mayControlSelection","nextToUneditable","nextTo","collapse","cursorBidiLevel","removeAllRanges","modify","domView","rootView","localPosFromDOM","measure","visible","BlockGapWidget","computeBlockGapDeco","pluginField","mLeft","mRight","mTop","mBottom","margins","defaultView","bounding","body","moveX","moveY","scrollBy","scrollRectIntoView","MaxNodeHeight","remaining","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","halfLine","defaultLineHeight","bounced","blockAtHeight","elementFromPoint","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","posFromDOM","spans","bidiSpans","InputState","lastKeyCode","lastKeyTime","lastSelectionOrigin","lastSelectionTime","scrollHandlers","registeredEvents","customHandlers","compositionEndedAt","mouseSelection","eventBelongsToEditor","ignoreDuringComposition","mustFlushObserver","forceFlush","runCustomHandlers","ensureHandlers","origin","defaultPrevented","scroll","MouseSelection","startEvent","up","metaKey","ctrlKey","addsSelectionRange","dragMove","dragMovesSelection$1","dragging","rangeCount","getRangeAt","isInPrimarySelection","buttons","bubbles","brokenClipboardAPI","doPaste","byLine","lastLinewiseCopy","rangeForClick","linePos","groupAt","keydown","macCtrl","mustCapture","setSelectionOrigin","touchdown","touchmove","mousedown","makeStyle","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","getClickType","startRange","basicMouseSelection","startMouseSelection","insideY","inside","findPositionSide","dragstart","dataTransfer","setData","effectAllowed","dropPos","getData","del","paste","clipboardData","capturePaste","forceClearComposition","linewise","copiedRange","clearData","selectionEnd","selectionStart","captureCopy","blur","beforeprint","compositionstart","compositionupdate","compositionend","observeOptions","characterData","characterDataOldValue","useCharData","DOMObserver","onScrollChanged","ignoreSelection","delayedFlush","queue","scrollTargets","intersection","intersecting","parentCheck","MutationObserver","mutations","mut","removedNodes","oldValue","flushSoon","onCharData","prevValue","onSelectionChange","onScroll","IntersectionObserver","listenForScroll","intersectionRatio","createEvent","observe","disconnect","takeRecords","clearSelection","records","newSel","typeOver","record","readMutation","rec","ignoreMutation","curView","DOMReader","points","findPointBefore","readNode","nextView","isBlockElement","fromView","overrideDOMText","readRange","findPointIn","DOMPoint","dispatchKey","cancelable","down","KeyboardEvent","dispatchEvent","plugins","editorAttrs","contentAttrs","bidiCache","updateState","measureScheduled","measureRequests","_dispatch","bounds","selPoints","selectionPoints","reader","selectionFromPoints","preferredPos","preferredSide","minLen","findDiff","iHead","iAnchor","isCollapsed","selectionCollapsed","applyDOMChange","runScrollHandlers","mountStyles","resizeDebounce","handleResize","redrawn","CachedOrder","updatePlugins","styleModules","prevSpecs","newPlugins","cancelAnimationFrame","measuring","warn","BadMeasure","scrollPosIntoView","spellcheck","contenteditable","role","request","requestAnimationFrame","takeField","inst","readMeasured","ensureTop","lineAtHeight","initial","byGroup","includeWrap","coords","editorRect","lineView","startCoords","resolvedGoal","startY","extra","goalCol","otherLine","MaxBidiLine","entry","dark","given","querySelectorAll","lastDir","currentPlatform","modifiers","keymaps","handleKeyEvents","runHandlers","bindings","buildKeymap","storedPrefix","bound","isPrefix","checkPrefix","command","scopeObj","k","alt","ctrl","normalizeKeyName","commands","ourObj","binding","maps","keyName","isChar","fallthrough","runFor","baseName","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelectionPlugin","hideNativeSelection","Piece","fromClass","rangePieces","cursors","readPos","drawSel","selectionLayer","cursorLayer","setBlinkRate","animationDuration","confChanged","geometryChanged","animationName","ltr","contentRect","getBase","lineStyle","leftSide","paddingLeft","rightSide","visualStart","visualEnd","wrappedLine","drawForLine","piece","selectionClass","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","docLine","spanFrom","spanTo","measureRange","prim","measureCursor","themeSpec","primaryCursorClass","cursorClass","Specials","Names","0","7","11","8203","8204","8205","8206","8207","8232","8233","65279","65532","_supportsTabSize","supportsTabSize","styles","MozTabSize","UnicodeRegexpSupport","unicode","specialCharConfig","render","specialChars","addSpecialChars","replaceTabs","specialCharPlugin","tabStyle","decorationCache","recompute","confChange","getDecorationsFor","TabWidget","SpecialCharWidget","ph","placeHolder","custom","tab","Placeholder","wrap","__test","isVariant","Variant","isRecord","Record","isLiteralValue","isNamedNode","isPointer","instance","isCoproduct","coproduct","isProduct","product","isLiteral","isUri","uri","isReference","reference","schema","__esModule","_getRequireWildcardCache","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","_interopRequireWildcard","_utils","labels","freeze","datatype","components","forEntries","termType","unitKeys","unitValues","_exportNames","ns","_mapping","forEach","enumerable","_morphism","validateMapping","M","S","T","validateExpressions","fold","delta","TI","SI","mapKeys","indices","imageValue","mapExpressions","pullback","getKeys","N3","_ziterable","signalInvalidType","expression","NamedNode","Literal","rootId","k1","k2","pullbackComponents","applyExpressions","isTypeAssignable","applyCases","unify","path","identity","tail","component","forType","includes","isTypeEqual","A","B","keyA","keyB","unifyComponents","unifyOptions","object","getKeyIndex","keyMap","_uuid","v4","validateInstance","validateValue","forValue","leaf","getRandomValues","rnds8","rng","crypto","msCrypto","uuid","byteToHex","substr","TypeError","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","hashfunc","generateUUID","unescape","encodeURIComponent","bytes","stringToBytes","DNS","URL","getOutputLength","inputLength8","safeAdd","lsw","md5cmn","num","cnt","md5ff","md5gg","md5hh","md5ii","v35","msg","output","length32","hexTab","hex","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","bytesToWords","rnds","z","ROTL","K","H","N","_i","pow","_i2","W","_t2","_lezer","spec_identifier","__proto__","edge","defaultTypes","xsd","boolean","double","date","dateTime","base64Binary","rdf","parseType","references","names","sourceNode","labelNode","termNodes","printSyntax","nil","langString","Decimal","dateTimeStamp","gYear","gMonth","gDay","gYearMonth","gMonthDay","duration","yearMonthDuration","dayTimeDuration","unsignedByte","unsignedShort","unsignedInt","unsignedLong","positiveInteger","nonNegativeInteger","nonPositiveInteger","hexBinary","anyURI","normalizedString","NMTOKEN","Name","NCNames","_blankNodeCounter","xsdString","rdfLangString","equals","BlankNode","DefaultGraph","Default","fromId","lastIndexOf","toId","Quad","subject","predicate","graph","namedNode","iri","blankNode","variable","languageOrDataType","defaultGraph","quad","SPO","POS","OSP","Store","quads","sizeCache","graphMap","ids","entities","blankNodeIndex","addQuads","subjects","predicates","objects","index0","key0","key1","key2","existed","index1","index2","delete","rotation","generateIndex1","value0","generateIndex2","value1","makeQuad","value2","entity0","entity1","entity2","name0","name1","name2","countInIndex1","graphIndex","newGraphIndex","args","getGraphIndex","o","addToIndex","addQuad","removeFromIndex","stream","removeQuad","removeMatches","graphId","getGraphId","graphs","getGraphIndices","generateIndex","getIds","countInIndex","loopBy2Keys","loopByKey1","loopByKey0","unique","suggestedName","nnClosingTagError","unexpectedCharError","quadClosingPeriodError","nnOpeningToken","nnOpeningTokenOffset","nnClosingPostfix","nnClosingPostfixOffset","bnOpeningPrefix","bnOpeningPrefixOffset","bnClosingToken","bnClosingTokenOffset","ltOpeningTokenOffset","ltReservedReplace","ltReservedReplaceFn","lgOpeningPrefixOffset","dtSplitPrefix","dtSplitPrefixOffset","rightBoundary","leftBoundary","namedNodeValue","substring","blankNodeValue","objEndIndex","literalValue","COUNT","for","SET","globalThis","StyleModule","processSelector","selectors","isAt","modules","StyleSet","adoptedSet","adoptedStyleSheets","CSSStyleSheet","sheet","styleTag","insertRule","getRules","iterators","arg","results","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","toStringTag","getElementById"],"mappings":"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","file":"taslx.min.js","sourcesContent":["import { basicSetup } from \"@codemirror/next/basic-setup\"\nimport {\n\tdefaultKeymap,\n\tindentMore,\n\tindentLess,\n} from \"@codemirror/next/commands\"\nimport { EditorView, keymap } from \"@codemirror/next/view\"\nimport { commentKeymap } from \"@codemirror/next/comment\"\n\nimport { Extension } from \"@codemirror/next/state\"\n\nimport { lineNumbers } from \"@codemirror/next/gutter\"\nimport { highlightSelectionMatches } from \"@codemirror/next/highlight-selection\"\nimport { defaultHighlightStyle } from \"@codemirror/next/highlight\"\n\nimport { syntax } from \"./syntax.js\"\n\nexport * from \"@codemirror/next/state\"\n\nexport { EditorView } from \"@codemirror/next/view\"\nexport { EditorState } from \"@codemirror/next/state\"\n\nexport const readOnlyConfig: Extension[] = [\n\tEditorView.editable.of(false),\n\tlineNumbers(),\n\tdefaultHighlightStyle,\n\thighlightSelectionMatches(),\n\tsyntax,\n]\n\nexport const editableConfig: Extension[] = [\n\tbasicSetup,\n\tsyntax,\n\tkeymap([\n\t\t...defaultKeymap,\n\t\t...commentKeymap,\n\t\t{\n\t\t\tkey: \"Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentMore,\n\t\t},\n\t\t{\n\t\t\tkey: \"Shift-Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentLess,\n\t\t},\n\t]),\n]\n","export * from \"./syntax.js\"\nexport * from \"./lint.js\"\nexport * from \"./config.js\"\n","import { EditorState, Extension } from \"@codemirror/next/state\"\nimport { Diagnostic, linter } from \"@codemirror/next/lint\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { syntaxTree } from \"@codemirror/next/language\"\nimport { SyntaxNode, TreeCursor } from \"lezer-tree\"\n\nimport { APG, ns } from \"@underlay/apg\"\n\nimport {\n\tdefaultNamespaces,\n\tLintError,\n\tnamespacePattern,\n\tParseState,\n\tparseURI,\n\turiPattern,\n} from \"@underlay/tasl-lezer\"\n\nexport interface UpdateProps {\n\terrors: number\n\tstate: EditorState\n\tmapping: APG.Mapping\n\tnamespaces: Record<string, string>\n}\n\ninterface parseState extends ParseState {\n\texprs: Record<string, APG.Expression[]>\n\tmapping: Record<string, APG.Map>\n\tdiagnostics: Diagnostic[]\n}\n\nexport function lintView(\n\tview: EditorView\n): UpdateProps & { diagnostics: Diagnostic[] } {\n\tconst cursor = syntaxTree(view.state).cursor()\n\n\tconst slice = ({ from, to }: SyntaxNode) =>\n\t\tview.state.doc.sliceString(from, to)\n\tconst error = (node: SyntaxNode, message: string) =>\n\t\tnew LintError(node.from, node.to, slice(node), message)\n\n\tconst state: parseState = {\n\t\tslice,\n\t\terror,\n\t\tnamespaces: {},\n\t\texprs: {},\n\t\tmapping: {},\n\t\tdiagnostics: [],\n\t}\n\n\tif (cursor.name === \"Mapping\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\treturn {\n\t\t\terrors: 1,\n\t\t\tstate: view.state,\n\t\t\tmapping: {},\n\t\t\tnamespaces: {},\n\t\t\tdiagnostics: [\n\t\t\t\t{\n\t\t\t\t\tfrom: cursor.from,\n\t\t\t\t\tto: cursor.to,\n\t\t\t\t\tmessage: \"Syntax error: invalid document\",\n\t\t\t\t\tseverity: \"error\",\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t}\n\n\tdo {\n\t\tif (cursor.type.isError) {\n\t\t} else if (cursor.type.name === \"Namespace\") {\n\t\t\tlet namespace = \"\"\n\n\t\t\tconst term = cursor.node.getChild(\"Term\")\n\t\t\tif (term !== null) {\n\t\t\t\tnamespace = state.slice(term)\n\t\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\t\tconst { from, to } = term\n\t\t\t\t\tconst message = `Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\t\tconst { from, to } = term\n\t\t\t\t\tconst message = \"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst prefix = state.slice(identifier)\n\t\t\t\tif (prefix in state.namespaces) {\n\t\t\t\t\tconst { from, to } = identifier\n\t\t\t\t\tconst message = `Duplicate namespace: ${prefix}`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tstate.namespaces[prefix] = namespace\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Expr\") {\n\t\t\tconst identifier = cursor.node.getChild(\"ExprName\")\n\t\t\tconst expressions = cursor.node.getChildren(\"Expression\")\n\t\t\tconst exprs = parseExprs(state, expressions)\n\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst name = state.slice(identifier)\n\t\t\t\tif (name in state.exprs) {\n\t\t\t\t\tconst { from, to } = identifier\n\t\t\t\t\tconst message = `Invalid expression declaration: expression ${name} has already been declared`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tstate.exprs[name] = exprs\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Map\") {\n\t\t\tconst terms = cursor.node.getChildren(\"Term\")\n\t\t\tif (terms.length > 0) {\n\t\t\t\tconst key = getURI(state, terms[0])\n\t\t\t\tif (key !== null) {\n\t\t\t\t\tif (key in state.mapping) {\n\t\t\t\t\t\tconst { from, to } = terms[0]\n\t\t\t\t\t\tconst message = `Invalid map declaration: map ${key} has already been declared`\n\t\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst expressions = cursor.node.getChildren(\"Expression\")\n\t\t\t\t\t\tconst source = terms.length > 1 ? getURI(state, terms[1]) : key\n\t\t\t\t\t\tstate.mapping[key] = APG.map(source, parseExprs(state, expressions))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treportChildErrors(state.diagnostics, cursor)\n\t} while (cursor.nextSibling())\n\n\tconst namespaces: [string, string][] = Object.entries(\n\t\tstate.namespaces\n\t).filter(([_, base]) => base !== null) as [string, string][]\n\n\tconst sorted = state.diagnostics.sort(\n\t\t({ from: a, to: c }, { from: b, to: d }) =>\n\t\t\ta < b ? -1 : b < a ? 1 : c < d ? -1 : d < c ? 1 : 0\n\t)\n\n\treturn {\n\t\terrors: sorted.length,\n\t\tstate: view.state,\n\t\tmapping: state.mapping,\n\t\tnamespaces: { ...defaultNamespaces, ...Object.fromEntries(namespaces) },\n\t\tdiagnostics: sorted,\n\t}\n}\n\nexport const makeLinter = (\n\tonChange?: (props: UpdateProps) => void\n): Extension =>\n\tlinter((view: EditorView) => {\n\t\tconst { diagnostics, ...props } = lintView(view)\n\t\tif (onChange !== undefined) {\n\t\t\tonChange(props)\n\t\t}\n\t\treturn diagnostics\n\t})\n\nfunction getURI(state: parseState, node: SyntaxNode): string {\n\ttry {\n\t\treturn parseURI(state, node)\n\t} catch (e) {\n\t\tif (e instanceof LintError) {\n\t\t\tconst { from, to, message, value } = e\n\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn value\n\t\t} else {\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\nconst parseExprs = (state: parseState, nodes: SyntaxNode[]) =>\n\tnodes.reduce<APG.Expression[]>(\n\t\t(prev, node) => prev.concat(parseExpr(state, node)),\n\t\t[]\n\t)\n\n// Variable | Optional | Reference | Unit | Iri | Literal | Product | Coproduct\nfunction parseExpr(state: parseState, node: SyntaxNode): APG.Expression[] {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.exprs) {\n\t\t\treturn state.exprs[value]\n\t\t} else {\n\t\t\tconst { from, to } = node\n\t\t\tconst message = `Expression ${value} is not defined`\n\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn []\n\t\t}\n\t} else if (node.name === \"Dereference\") {\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn []\n\t\t}\n\n\t\tconst key = getURI(state, term)\n\t\treturn [APG.dereference(key)]\n\t} else if (node.name === \"Projection\") {\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn []\n\t\t}\n\n\t\tconst key = getURI(state, term)\n\t\treturn [APG.projection(key)]\n\t} else if (node.name === \"Injection\") {\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn []\n\t\t}\n\n\t\tconst key = getURI(state, term)\n\t\treturn [APG.injection(key)]\n\t} else if (node.name === \"Identifier\") {\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn []\n\t\t}\n\n\t\tconst key = getURI(state, term)\n\t\treturn [APG.identifier(key)]\n\t} else if (node.name === \"Constant\") {\n\t\tconst string = node.getChild(\"String\")\n\t\tconst value =\n\t\t\tstring === null ? '\"\"' : (JSON.parse(state.slice(string)) as string)\n\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn []\n\t\t}\n\n\t\tconst key = getURI(state, term)\n\t\treturn [APG.constant(value, key)]\n\t} else if (node.name === \"Tuple\") {\n\t\tconst slots: Record<string, APG.Expression[]> = {}\n\t\tfor (const slot of node.getChildren(\"Slot\")) {\n\t\t\tconst term = slot.getChild(\"Term\")\n\t\t\tif (term === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, term)\n\t\t\tif (key in slots) {\n\t\t\t\tconst { from, to } = term\n\t\t\t\tconst message = `Duplicate tuple slot key`\n\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t}\n\n\t\t\tconst expressions = slot.getChildren(\"Expression\")\n\t\t\tslots[key] = parseExprs(state, expressions)\n\t\t}\n\n\t\treturn [APG.tuple(slots)]\n\t} else if (node.name === \"Match\") {\n\t\tconst cases: Record<string, APG.Expression[]> = {}\n\t\tfor (const CASE of node.getChildren(\"Case\")) {\n\t\t\tconst term = CASE.getChild(\"Term\")\n\t\t\tif (term === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, term)\n\t\t\tif (key in cases) {\n\t\t\t\tconst { from, to } = term\n\t\t\t\tconst message = `Duplicate match case key`\n\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t}\n\n\t\t\tconst expressions = CASE.getChildren(\"Expression\")\n\t\t\tcases[key] = parseExprs(state, expressions)\n\t\t}\n\n\t\treturn [APG.match(cases)]\n\t} else {\n\t\tthrow new Error(\"Unexpected Expression node\")\n\t}\n}\n\nfunction reportChildErrors(diagnostics: Diagnostic[], cursor: TreeCursor) {\n\tif (cursor.type.isError) {\n\t\tconst { from, to } = cursor\n\t\tconst message = `Syntax error: unexpected or missing token (that's all we know)`\n\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t}\n\tif (cursor.firstChild()) {\n\t\tdo {\n\t\t\treportChildErrors(diagnostics, cursor)\n\t\t} while (cursor.nextSibling())\n\t\tcursor.parent()\n\t}\n}\n","import {\n\tcontinuedIndent,\n\tindentNodeProp,\n\tfoldNodeProp,\n\tLezerLanguage,\n} from \"@codemirror/next/language\"\n\nimport { styleTags, tags } from \"@codemirror/next/highlight\"\nimport { SyntaxNode } from \"lezer-tree\"\n\nimport { parser } from \"@underlay/tasl-lezer/grammar/taslx.js\"\n\nexport const syntax = LezerLanguage.define({\n\tparser: parser.configure({\n\t\tprops: [\n\t\t\tindentNodeProp.add({\n\t\t\t\tTuple: continuedIndent({ except: /^\\s*\\}/ }),\n\t\t\t\tMatch: continuedIndent({ except: /^\\s*\\]/ }),\n\t\t\t}),\n\t\t\tfoldNodeProp.add({\n\t\t\t\tTuple(subtree: SyntaxNode) {\n\t\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t\t},\n\t\t\t\tMatch(subtree: SyntaxNode) {\n\t\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t\t},\n\t\t\t}),\n\t\t\tstyleTags({\n\t\t\t\tComment: tags.comment,\n\t\t\t\tPrefix: tags.namespace,\n\t\t\t\tExprName: tags.typeName,\n\t\t\t\tVariable: tags.typeName,\n\t\t\t\tTerm: tags.name,\n\t\t\t\t\"Map/Term\": tags.className,\n\t\t\t\t\"Dereference/Term\": tags.className,\n\t\t\t\t\"Tuple/Term\": tags.propertyName,\n\t\t\t\t\"Match/Term\": tags.propertyName,\n\t\t\t\t\"Projection/Term\": tags.propertyName,\n\t\t\t\t\"Injection/Term\": tags.propertyName,\n\t\t\t\tIdentifier: tags.string,\n\t\t\t\t\"Identifier/Term\": tags.string,\n\t\t\t\tConstant: tags.string,\n\t\t\t\tString: tags.string,\n\t\t\t\t\"Constant/Term\": tags.string,\n\t\t\t\tProjector: tags.operator,\n\t\t\t\tInjector: tags.operator,\n\t\t\t\tPointer: tags.operator,\n\t\t\t\t\"{ }\": tags.bracket,\n\t\t\t\t\"[ ]\": tags.bracket,\n\t\t\t\t\"->\": tags.separator,\n\t\t\t\t\">-\": tags.separator,\n\t\t\t\t\";\": tags.separator,\n\t\t\t\t\"Namespace/Term\": tags.namespace,\n\t\t\t\tnamespace: tags.keyword,\n\t\t\t\texpr: tags.keyword,\n\t\t\t\tmap: tags.keyword,\n\t\t\t}),\n\t\t],\n\t}),\n\tlanguageData: {\n\t\tcloseBrackets: { brackets: [\"[\", \"{\", \"<\"] },\n\t\tindentOnInput: /^\\s*[\\}\\]]$/,\n\t\tcommentTokens: { line: \"#\" },\n\t},\n})\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar lezerTree = require('lezer-tree');\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack {\n    /// @internal\n    constructor(\n    /// A group of values that the stack will share with all\n    /// split instances\n    ///@internal\n    cx, \n    /// Holds state, pos, value stack pos (15 bits array index, 15 bits\n    /// buffer index) triplets for all but the top state\n    /// @internal\n    stack, \n    /// The current parse state @internal\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    reducePos, \n    /// The input position up to which this stack has parsed.\n    pos, \n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    bufferBase, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    parent) {\n        this.cx = cx;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.parent = parent;\n    }\n    /// @internal\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /// @internal\n    static start(cx, state, pos = 0) {\n        return new Stack(cx, [], state, pos, pos, 0, [], 0, null);\n    }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /// @internal\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /// @internal\n    reduce(action) {\n        let depth = action >> 19 /* ReduceDepthShift */, type = action & 65535 /* ValueMask */;\n        let { parser } = this.cx;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* StayFlag */ ? 6 : 0);\n        let start = this.stack[base - 2];\n        let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n    }\n    // Shift a value into the buffer\n    /// @internal\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Err */) { // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /// @internal\n    shift(action, next, nextEnd) {\n        if (action & 131072 /* GotoFlag */) {\n            this.pushState(action & 65535 /* ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* StayFlag */) == 0) { // Regular shift\n            let start = this.pos, nextState = action, { parser } = this.cx;\n            if (nextEnd > this.pos || next <= parser.maxNode) {\n                this.pos = nextEnd;\n                if (!parser.stateFlag(nextState, 1 /* Skipped */))\n                    this.reducePos = nextEnd;\n            }\n            this.pushState(nextState, start);\n            if (next <= parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            if (next <= this.cx.parser.maxNode)\n                this.buffer.push(next, this.pos, nextEnd, 4);\n            this.pos = nextEnd;\n        }\n    }\n    // Apply an action\n    /// @internal\n    apply(action, next, nextEnd) {\n        if (action & 65536 /* ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextEnd);\n    }\n    // Add a prebuilt node into the buffer. This may be a reused node or\n    // the result of running a nested parser.\n    /// @internal\n    useNode(value, next) {\n        let index = this.cx.reused.length - 1;\n        if (index < 0 || this.cx.reused[index] != value) {\n            this.cx.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size < 0 means this is a reused value */);\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /// @internal\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.cx, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /// @internal\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.cx.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd);\n        this.storeNode(0 /* Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 200 /* Token */;\n    }\n    /// Check if the given term would be able to be shifted (optionally\n    /// after some reductions) on this stack. This can be useful for\n    /// external tokenizers that want to make sure they only provide a\n    /// given token when it applies.\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.cx.parser.stateSlot(sim.top, 4 /* DefaultReduce */) || this.cx.parser.hasAction(sim.top, term);\n            if ((action & 65536 /* ReduceFlag */) == 0)\n                return true;\n            if (action == 0)\n                return false;\n            sim.reduce(action);\n        }\n    }\n    /// Find the start position of the rule that is currently being parsed.\n    get ruleStart() {\n        for (let state = this.state, base = this.stack.length;;) {\n            let force = this.cx.parser.stateSlot(state, 5 /* ForcedReduce */);\n            if (!(force & 65536 /* ReduceFlag */))\n                return 0;\n            base -= 3 * (force >> 19 /* ReduceDepthShift */);\n            if ((force & 65535 /* ValueMask */) < this.cx.parser.minRepeatTerm)\n                return this.stack[base + 1];\n            state = this.stack[base];\n        }\n    }\n    /// Find the start position of an instance of any of the given term\n    /// types, or return `null` when none of them are found.\n    ///\n    /// **Note:** this is only reliable when there is at least some\n    /// state that unambiguously matches the given rule on the stack.\n    /// I.e. if you have a grammar like this, where the difference\n    /// between `a` and `b` is only apparent at the third token:\n    ///\n    ///     a { b | c }\n    ///     b { \"x\" \"y\" \"x\" }\n    ///     c { \"x\" \"y\" \"z\" }\n    ///\n    /// Then a parse state after `\"x\"` will not reliably tell you that\n    /// `b` is on the stack. You _can_ pass `[b, c]` to reliably check\n    /// for either of those two rules (assuming that `a` isn't part of\n    /// some rule that includes other things starting with `\"x\"`).\n    ///\n    /// When `before` is given, this keeps scanning up the stack until\n    /// it finds a match that starts before that position.\n    startOf(types, before) {\n        let state = this.state, frame = this.stack.length, { parser } = this.cx;\n        for (;;) {\n            let force = parser.stateSlot(state, 5 /* ForcedReduce */);\n            let depth = force >> 19 /* ReduceDepthShift */, term = force & 65535 /* ValueMask */;\n            if (types.indexOf(term) > -1) {\n                let base = frame - (3 * (force >> 19 /* ReduceDepthShift */)), pos = this.stack[base + 1];\n                if (before == null || before > pos)\n                    return pos;\n            }\n            if (frame == 0)\n                return null;\n            if (depth == 0) {\n                frame -= 3;\n                state = this.stack[frame];\n            }\n            else {\n                frame -= 3 * (depth - 1);\n                state = parser.getGoto(this.stack[frame - 3], term, true);\n            }\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /// @internal\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.cx.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* MaxNext */ || this.stack.length >= 120 /* DampenInsertStackDepth */) {\n            let best = nextStates.filter(s => s != this.state && this.cx.parser.hasAction(s, next));\n            if (this.stack.length < 120 /* DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* MaxNext */ && i < nextStates.length; i++)\n                    if (best.indexOf(nextStates[i]) < 0)\n                        best.push(nextStates[i]);\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* MaxNext */; i++) {\n            if (nextStates[i] == this.state)\n                continue;\n            let stack = this.split();\n            stack.storeNode(0 /* Err */, stack.pos, stack.pos, 4, true);\n            stack.pushState(nextStates[i], this.pos);\n            stack.score -= 200 /* Token */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /// @internal\n    forceReduce() {\n        let reduce = this.cx.parser.stateSlot(this.state, 5 /* ForcedReduce */);\n        if ((reduce & 65536 /* ReduceFlag */) == 0)\n            return false;\n        if (!this.cx.parser.validAction(this.state, reduce)) {\n            this.storeNode(0 /* Err */, this.reducePos, this.reducePos, 4, true);\n            this.score -= 100 /* Reduce */;\n        }\n        this.reduce(reduce);\n        return true;\n    }\n    /// @internal\n    forceAll() {\n        while (!this.cx.parser.stateFlag(this.state, 2 /* Accepting */) && this.forceReduce()) { }\n        return this;\n    }\n    /// Check whether this state has no further actions (assumed to be a direct descendant of the\n    /// top state, since any other states must be able to continue\n    /// somehow). @internal\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.cx;\n        return parser.data[parser.stateSlot(this.state, 1 /* Actions */)] == 65535 /* End */ &&\n            !parser.stateSlot(this.state, 4 /* DefaultReduce */);\n    }\n    /// Restart the stack (put it back in its start state). Only safe\n    /// when this.stack.length == 3 (state is directly below the top\n    /// state). @internal\n    restart() {\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /// @internal\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /// Get the parser used by this stack.\n    get parser() { return this.cx.parser; }\n    /// Test whether a given dialect (by numeric ID, as exported from\n    /// the terms file) is enabled.\n    dialectEnabled(dialectID) { return this.cx.parser.dialect.flags[dialectID]; }\n}\nvar Recover;\n(function (Recover) {\n    Recover[Recover[\"Token\"] = 200] = \"Token\";\n    Recover[Recover[\"Reduce\"] = 100] = \"Reduce\";\n    Recover[Recover[\"MaxNext\"] = 4] = \"MaxNext\";\n    Recover[Recover[\"MaxInsertStackDepth\"] = 300] = \"MaxInsertStackDepth\";\n    Recover[Recover[\"DampenInsertStackDepth\"] = 120] = \"DampenInsertStackDepth\";\n})(Recover || (Recover = {}));\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(stack) {\n        this.stack = stack;\n        this.top = stack.state;\n        this.rest = stack.stack;\n        this.offset = this.rest.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* ValueMask */, depth = action >> 19 /* ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.rest == this.stack.stack)\n                this.rest = this.rest.slice();\n            this.rest.push(this.top, 0, 0);\n            this.offset += 3;\n        }\n        else {\n            this.offset -= (depth - 1) * 3;\n        }\n        let goto = this.stack.cx.parser.getGoto(this.rest[this.offset - 3], term, true);\n        this.top = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack) {\n        return new StackBufferCursor(stack, stack.bufferBase + stack.buffer.length, stack.buffer.length);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n/// Tokenizers write the tokens they read into instances of this class.\nclass Token {\n    constructor() {\n        /// The start of the token. This is set by the parser, and should not\n        /// be mutated by the tokenizer.\n        this.start = -1;\n        /// This starts at -1, and should be updated to a term id when a\n        /// matching token is found.\n        this.value = -1;\n        /// When setting `.value`, you should also set `.end` to the end\n        /// position of the token. (You'll usually want to use the `accept`\n        /// method.)\n        this.end = -1;\n    }\n    /// Accept a token, setting `value` and `end` to the given values.\n    accept(value, end) {\n        this.value = value;\n        this.end = end;\n    }\n}\n/// @internal\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, token, stack) { readToken(this.data, input, token, stack, this.id); }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// Exports that are used for `@external tokens` in the grammar should\n/// export an instance of this class.\nclass ExternalTokenizer {\n    /// Create a tokenizer. The first argument is the function that,\n    /// given an input stream and a token object,\n    /// [fills](#lezer.Token.accept) the token object if it recognizes a\n    /// token. `token.start` should be used as the start position to\n    /// scan from.\n    constructor(\n    /// @internal\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data, input, token, stack, group) {\n    let state = 0, groupMask = 1 << group, dialect = stack.cx.parser.dialect;\n    scan: for (let pos = token.start;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (token.value == -1 || token.value == term || stack.cx.parser.overrides(term, token.value))) {\n                    token.accept(term, pos);\n                    break;\n                }\n            }\n        let next = input.get(pos++);\n        // Do a binary search on the state's edges\n        for (let low = 0, high = data[state + 2]; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1];\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                continue scan;\n            }\n        }\n        break;\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* BigValCode */) {\n                value = 65535 /* BigVal */;\n                break;\n            }\n            if (next >= 92 /* Gap2 */)\n                next--;\n            if (next >= 34 /* Gap1 */)\n                next--;\n            let digit = next - 32 /* Start */;\n            if (digit >= 46 /* Base */) {\n                digit -= 46 /* Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\n// FIXME find some way to reduce recovery work done when the input\n// doesn't match the grammar at all.\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to <= pos : cursor.from >= pos) && !cursor.type.isError)\n                    return side < 0 ? cursor.to - 1 : cursor.from + 1;\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        this.fragments = fragments;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            else if (start == pos && start + next.length <= this.safeTo) {\n                return start == pos && start >= this.safeFrom ? next : null;\n            }\n            if (next instanceof lezerTree.TreeBuffer) {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n            else {\n                this.index[last]++;\n                if (start + next.length >= pos) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n        }\n    }\n}\nclass CachedToken extends Token {\n    constructor() {\n        super(...arguments);\n        this.extended = -1;\n        this.mask = 0;\n    }\n    clear(start) {\n        this.start = start;\n        this.value = this.extended = -1;\n    }\n}\nconst dummyToken = new Token;\nclass TokenCache {\n    constructor(parser) {\n        this.tokens = [];\n        this.mainToken = dummyToken;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack, input) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.cx, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* TokenizerMask */);\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask) {\n                this.updateCachedToken(token, tokenizer, stack, input);\n                token.mask = mask;\n            }\n            if (token.value != 0 /* Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (!main) {\n            main = dummyToken;\n            main.start = stack.pos;\n            if (stack.pos == input.length)\n                main.accept(stack.cx.parser.eofTerm, stack.pos);\n            else\n                main.accept(0 /* Err */, stack.pos + 1);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    updateCachedToken(token, tokenizer, stack, input) {\n        token.clear(stack.pos);\n        tokenizer.token(input, token, stack);\n        if (token.value > -1) {\n            let { parser } = stack.cx;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](input.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.cx.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else if (stack.pos == input.length) {\n            token.accept(stack.cx.parser.eofTerm, stack.pos);\n        }\n        else {\n            token.accept(0 /* Err */, stack.pos + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.cx, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */);; i += 3) {\n                if (data[i] == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Other */)\n                            index = this.putAction(pair(data, i + 1), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nvar Rec;\n(function (Rec) {\n    Rec[Rec[\"Distance\"] = 5] = \"Distance\";\n    Rec[Rec[\"MaxRemainingPerStep\"] = 3] = \"MaxRemainingPerStep\";\n    Rec[Rec[\"MinBufferLengthPrune\"] = 200] = \"MinBufferLengthPrune\";\n    Rec[Rec[\"ForceReduceLimit\"] = 10] = \"ForceReduceLimit\";\n})(Rec || (Rec = {}));\n/// A parse context can be used for step-by-step parsing. After\n/// creating it, you repeatedly call `.advance()` until it returns a\n/// tree to indicate it has reached the end of the parse.\nclass Parse {\n    constructor(parser, input, startPos, context) {\n        this.parser = parser;\n        this.input = input;\n        this.startPos = startPos;\n        this.context = context;\n        // The position to which the parse has advanced.\n        this.pos = 0;\n        this.recovering = 0;\n        this.nextStackID = 0x2654;\n        this.nested = null;\n        this.nestEnd = 0;\n        this.nestWrap = null;\n        this.reused = [];\n        this.tokens = new TokenCache(parser);\n        this.topTerm = parser.top[1];\n        this.stacks = [Stack.start(this, parser.top[0], this.startPos)];\n        let fragments = context === null || context === void 0 ? void 0 : context.fragments;\n        this.fragments = fragments && fragments.length ? new FragmentCursor(fragments) : null;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        if (this.nested) {\n            let result = this.nested.advance();\n            this.pos = this.nested.pos;\n            if (result) {\n                this.finishNested(this.stacks[0], result);\n                this.nested = null;\n            }\n            return null;\n        }\n        let stacks = this.stacks, pos = this.pos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        let maybeNest;\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], nest;\n            for (;;) {\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (nest = this.checkNest(stack)) {\n                    if (!maybeNest || maybeNest.stack.score < stack.score)\n                        maybeNest = nest;\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.mainToken;\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (maybeNest) {\n            this.startNested(maybeNest);\n            return null;\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished)\n                return this.stackToTree(finished);\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + this.parser.getName(this.tokens.mainToken.value));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished)\n                return this.stackToTree(finished.forceAll());\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 200 /* MinBufferLengthPrune */ && other.buffer.length > 200 /* MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n        }\n        this.pos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.pos)\n                this.pos = newStacks[i].pos;\n        return null;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { input, parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.fragments) {\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof lezerTree.Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof lezerTree.Tree)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* ValueMask */)})`);\n            return true;\n        }\n        let actions = this.tokens.getActions(stack, input);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            localStack.apply(action, term, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            let nest = this.checkNest(stack);\n            if (nest)\n                return nest;\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        let maybeNest;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done) {\n                    if (done !== true)\n                        maybeNest = done;\n                    continue;\n                }\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done) {\n                    if (done !== true)\n                        maybeNest = done;\n                    break;\n                }\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.input.length > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        if (finished)\n            return finished;\n        if (maybeNest)\n            for (let s of this.stacks)\n                if (s.score > maybeNest.stack.score) {\n                    maybeNest = undefined;\n                    break;\n                }\n        if (maybeNest)\n            this.startNested(maybeNest);\n        return null;\n    }\n    forceFinish() {\n        let stack = this.stacks[0].split();\n        if (this.nested)\n            this.finishNested(stack, this.nested.forceFinish());\n        return this.stackToTree(stack.forceAll());\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack, pos = stack.pos) {\n        return lezerTree.Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.startPos,\n            length: pos - this.startPos,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    checkNest(stack) {\n        let info = this.parser.findNested(stack.state);\n        if (!info)\n            return null;\n        let spec = info.value;\n        if (typeof spec == \"function\")\n            spec = spec(this.input, stack);\n        return spec ? { stack, info, spec } : null;\n    }\n    startNested(nest) {\n        let { stack, info, spec } = nest;\n        this.stacks = [stack];\n        this.nestEnd = this.scanForNestEnd(stack, info.end, spec.filterEnd);\n        this.nestWrap = typeof spec.wrapType == \"number\" ? this.parser.nodeSet.types[spec.wrapType] : spec.wrapType || null;\n        if (spec.startParse) {\n            this.nested = spec.startParse(this.input.clip(this.nestEnd), stack.pos, this.context);\n        }\n        else {\n            this.finishNested(stack);\n        }\n    }\n    scanForNestEnd(stack, endToken, filter) {\n        for (let pos = stack.pos; pos < this.input.length; pos++) {\n            dummyToken.start = pos;\n            dummyToken.value = -1;\n            endToken.token(this.input, dummyToken, stack);\n            if (dummyToken.value > -1 && (!filter || filter(this.input.read(pos, dummyToken.end))))\n                return pos;\n        }\n        return this.input.length;\n    }\n    finishNested(stack, tree) {\n        if (this.nestWrap)\n            tree = new lezerTree.Tree(this.nestWrap, tree ? [tree] : [], tree ? [0] : [], this.nestEnd - stack.pos);\n        else if (!tree)\n            tree = new lezerTree.Tree(lezerTree.NodeType.none, [], [], this.nestEnd - stack.pos);\n        let info = this.parser.findNested(stack.state);\n        stack.useNode(tree, this.parser.getGoto(stack.state, info.placeholder, true));\n        if (verbose)\n            console.log(this.stackID(stack) + ` (via unnest)`);\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\n/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nclass Parser {\n    /// @internal\n    constructor(spec) {\n        /// @internal\n        this.bufferLength = lezerTree.DefaultBufferLength;\n        /// @internal\n        this.strict = false;\n        this.nextStateCache = [];\n        this.cachedDialect = null;\n        if (spec.version != 13 /* Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${13 /* Version */})`);\n        let tokenArray = decodeArray(spec.tokenData);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.specialized = new Uint16Array(spec.specialized ? spec.specialized.length : 0);\n        this.specializers = [];\n        if (spec.specialized)\n            for (let i = 0; i < spec.specialized.length; i++) {\n                this.specialized[i] = spec.specialized[i].term;\n                this.specializers[i] = spec.specialized[i].get;\n            }\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        this.nodeSet = new lezerTree.NodeSet(nodeNames.map((name, i) => lezerTree.NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.nested = (spec.nested || []).map(([name, value, endToken, placeholder]) => {\n            return { name, value, end: new TokenGroup(decodeArray(endToken), 0), placeholder };\n        });\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        for (let i = 0, l = this.states.length / 6 /* Size */; i < l; i++)\n            this.nextStateCache[i] = null;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    /// Parse a given string or stream.\n    parse(input, startPos = 0, context = {}) {\n        if (typeof input == \"string\")\n            input = lezerTree.stringInput(input);\n        let cx = new Parse(this, input, startPos, context);\n        for (;;) {\n            let done = cx.advance();\n            if (done)\n                return done;\n        }\n    }\n    /// Start an incremental parse.\n    startParse(input, startPos = 0, context = {}) {\n        if (typeof input == \"string\")\n            input = lezerTree.stringInput(input);\n        return new Parse(this, input, startPos, context);\n    }\n    /// Get a goto table entry @internal\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /// Check if this state has an action for a given terminal @internal\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /// @internal\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* Size */) + slot];\n    }\n    /// @internal\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* Flags */) & flag) > 0;\n    }\n    /// @internal\n    findNested(state) {\n        let flags = this.stateSlot(state, 0 /* Flags */);\n        return flags & 4 /* StartNest */ ? this.nested[flags >> 10 /* NestShift */] : null;\n    }\n    /// @internal\n    validAction(state, action) {\n        if (action == this.stateSlot(state, 4 /* DefaultReduce */))\n            return true;\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    return false;\n            }\n            if (action == pair(this.data, i + 1))\n                return true;\n        }\n    }\n    /// Get the states that can follow this one through shift actions or\n    /// goto jumps. @internal\n    nextStates(state) {\n        let cached = this.nextStateCache[state];\n        if (cached)\n            return cached;\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* ReduceFlag */ >> 16)) == 0 && result.indexOf(this.data[i + 1]) < 0)\n                result.push(this.data[i + 1]);\n        }\n        let table = this.goto, max = table[0];\n        for (let term = 0; term < max; term++) {\n            for (let pos = table[term + 1];;) {\n                let groupTag = table[pos++], target = table[pos++];\n                for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                    if (table[pos] == state && result.indexOf(target) < 0)\n                        result.push(target);\n                if (groupTag & 1)\n                    break;\n            }\n        }\n        return this.nextStateCache[state] = result;\n    }\n    /// @internal\n    overrides(token, prev) {\n        let iPrev = findOffset(this.data, this.tokenPrecTable, prev);\n        return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev;\n    }\n    /// Configure the parser. Returns a new parser instance that has the\n    /// given settings modified. Settings not provided in `config` are\n    /// kept from the original parser.\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(Parser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.nested)\n            copy.nested = this.nested.map(obj => {\n                if (!Object.prototype.hasOwnProperty.call(config.nested, obj.name))\n                    return obj;\n                return { name: obj.name, value: config.nested[obj.name], end: obj.end, placeholder: obj.placeholder };\n            });\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /// Returns the name associated with a given term. This will only\n    /// work for all terms when the parser was generated with the\n    /// `--names` option. By default, only the names of tagged terms are\n    /// stored.\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /// The eof term id is always allocated directly after the node\n    /// types. @internal\n    get eofTerm() { return this.maxNode + 1; }\n    /// Tells you whether this grammar has any nested grammars.\n    get hasNested() { return this.nested.length > 0; }\n    /// @internal\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /// @internal\n    parseDialect(dialect) {\n        if (this.cachedDialect && this.cachedDialect.source == dialect)\n            return this.cachedDialect;\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return this.cachedDialect = new Dialect(dialect, flags, disabled);\n    }\n    /// (used by the output of the parser generator) @internal\n    static deserialize(spec) {\n        return new Parser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        if (stack.pos == stack.cx.input.length &&\n            stack.cx.parser.stateFlag(stack.state, 2 /* Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\n\nexports.NodeProp = lezerTree.NodeProp;\nexports.NodeSet = lezerTree.NodeSet;\nexports.NodeType = lezerTree.NodeType;\nexports.Tree = lezerTree.Tree;\nexports.TreeCursor = lezerTree.TreeCursor;\nexports.ExternalTokenizer = ExternalTokenizer;\nexports.Parser = Parser;\nexports.Stack = Stack;\nexports.Token = Token;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/// The default maximum length of a `TreeBuffer` node.\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nconst CachedNode = new WeakMap();\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type. You can optionally pass a\n    /// `deserialize` function.\n    constructor({ deserialize } = {}) {\n        this.id = nextPropID++;\n        this.deserialize = deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// Create a string-valued node prop whose deserialize function is\n    /// the identity function.\n    static string() { return new NodeProp({ deserialize: str => str }); }\n    /// Create a number-valued node prop whose deserialize function is\n    /// just `Number`.\n    static number() { return new NodeProp({ deserialize: Number }); }\n    /// Creates a boolean-valued node prop whose deserialize function\n    /// returns true for any input.\n    static flag() { return new NodeProp({ deserialize: () => true }); }\n    /// Store a value for this prop in the given object. This can be\n    /// useful when building up a prop object to pass to the\n    /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n    /// argument.\n    set(propObj, value) {\n        propObj[this.id] = value;\n        return propObj;\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#tree.NodeSet.extend) or\n    /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n    /// values for each node type in the set. Takes a [match\n    /// object](#tree.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* Top */ : 0) | (spec.skipped ? 2 /* Skipped */ : 0) |\n            (spec.error ? 4 /* Error */ : 0) | (spec.name == null ? 8 /* Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src)\n                    src[0].set(props, src[1]);\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#tree.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#tree.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.nodeSet) a node set, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method should be created with\n    /// [`NodeProp.add`](#tree.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    add[0].set(newProps, add[1]);\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. You usually want to go through\n    /// [`Tree.build`](#tree.Tree^build) instead.\n    constructor(type, \n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n    }\n    /// @internal\n    toString() {\n        let children = this.children.map(c => c.toString()).join();\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n    /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n    /// to the given position and side.\n    cursor(pos, side = 0) {\n        let scope = (pos != null && CachedNode.get(this)) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        if (pos != null) {\n            cursor.moveTo(pos, side);\n            CachedNode.set(this, cursor._tree);\n        }\n        return cursor;\n    }\n    /// Get a [tree cursor](#tree.TreeCursor) that, unlike regular\n    /// cursors, doesn't skip [anonymous](#tree.NodeType.isAnonymous)\n    /// nodes.\n    fullCursor() {\n        return new TreeCursor(this.topNode, true);\n    }\n    /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    resolve(pos, side = 0) {\n        return this.cursor(pos, side).node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, the given node\n    /// will not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        for (let c = this.cursor();;) {\n            let mustLeave = false;\n            if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to) !== false)) {\n                if (c.firstChild())\n                    continue;\n                if (!c.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(c.type, c.from, c.to);\n                mustLeave = c.type.isAnonymous;\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Balance the direct children of this tree.\n    balance(maxBufferLength = DefaultBufferLength) {\n        return this.children.length <= BalanceBranchFactor ? this\n            : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0, maxBufferLength, this.length);\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nclass TreeBuffer {\n    /// Create a tree buffer @internal\n    constructor(\n    /// @internal\n    buffer, \n    // The total length of the group of nodes in the buffer.\n    length, \n    /// @internal\n    set, type = NodeType.none) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n        this.type = type;\n    }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, after) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (after != -100000000 /* None */) {\n                let start = buffer[i + 1], end = buffer[i + 2];\n                if (dir > 0) {\n                    if (end > after)\n                        pick = i;\n                    if (end > after)\n                        break;\n                }\n                else {\n                    if (start < after)\n                        pick = i;\n                    if (end >= after)\n                        break;\n                }\n            }\n            else {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n}\nclass TreeNode {\n    constructor(node, from, index, _parent) {\n        this.node = node;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this.node.type; }\n    get name() { return this.node.type.name; }\n    get to() { return this.from + this.node.length; }\n    nextChild(i, dir, after, full = false) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (after != -100000000 /* None */ && (dir < 0 ? start >= after : start + next.length <= after))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    let index = next.findChild(0, next.buffer.length, dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - start);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if (full || (!next.type.isAnonymous || hasChild(next))) {\n                    let inner = new TreeNode(next, start, i, parent);\n                    return full || !inner.type.isAnonymous ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after);\n                }\n            }\n            if (full || !parent.type.isAnonymous)\n                return null;\n            i = parent.index + dir;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, -100000000 /* None */); }\n    get lastChild() { return this.nextChild(this.node.children.length - 1, -1, -100000000 /* None */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos); }\n    childBefore(pos) { return this.nextChild(this.node.children.length - 1, -1, pos); }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null;\n    }\n    get prevSibling() {\n        return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null;\n    }\n    get cursor() { return new TreeCursor(this); }\n    resolve(pos, side = 0) {\n        return this.cursor.moveTo(pos, side).node;\n    }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this.node.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor, result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    child(dir, after) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - this.context.start);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, -100000000 /* None */); }\n    get lastChild() { return this.child(-1, -100000000 /* None */); }\n    childAfter(pos) { return this.child(1, pos); }\n    childBefore(pos) { return this.child(-1, pos); }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, -100000000 /* None */));\n    }\n    get cursor() { return new TreeCursor(this); }\n    resolve(pos, side = 0) {\n        return this.cursor.moveTo(pos, side).node;\n    }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// @internal\n    constructor(node, full = false) {\n        this.full = full;\n        this.buffer = null;\n        this.stack = [];\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enter(dir, after) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, after, this.full));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - this.buffer.start);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enter(1, -100000000 /* None */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enter(-1, -100000000 /* None */); }\n    /// Move the cursor to the first child that starts at or after `pos`.\n    childAfter(pos) { return this.enter(1, pos); }\n    /// Move to the last child that ends at or before `pos`.\n    childBefore(pos) { return this.enter(-1, pos); }\n    /// Move the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode(this.full ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = this.full ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree._parent.nextChild(this._tree.index + dir, dir, -100000000 /* None */, this.full));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, -100000000 /* None */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, -100000000 /* None */, this.full)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n                let child = parent.node.children[i];\n                if (this.full || !child.type.isAnonymous || child instanceof TreeBuffer || hasChild(child))\n                    return false;\n            }\n        }\n        return true;\n    }\n    move(dir) {\n        if (this.enter(dir, -100000000 /* None */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty, its next sibling or the next sibling of\n    /// the first parent node that has one.\n    next() { return this.move(1); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by ist last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev() { return this.move(-1); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        for (;;) {\n            if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos))\n                break;\n            if (this.from == this.to ||\n                (side < 1 ? this.from >= pos : this.from > pos) ||\n                (side > -1 ? this.to <= pos : this.to < pos)) {\n                this.parent();\n                break;\n            }\n        }\n        return this;\n    }\n    /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#tree.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#tree.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree.node;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => !ch.type.isAnonymous || ch instanceof TreeBuffer || hasChild(ch));\n}\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\nconst BalanceBranchFactor = 8;\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, topID = 0, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        while (id == inRepeat) {\n            cursor.next();\n            ({ id, start, end, size } = cursor);\n        }\n        let startPos = start - parentStart;\n        if (size < 0) { // Reused node\n            children.push(reused[id]);\n            positions.push(startPos);\n            cursor.next();\n            return;\n        }\n        let type = types[id], node, buffer;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index, inRepeat);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet, inRepeat < 0 ? NodeType.none : types[inRepeat]);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            while (cursor.pos > endPos)\n                takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n                node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start);\n            else\n                node = new Tree(type, localChildren, localPositions, end - start);\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let nodeSize = fork.size, startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0)\n                    break scan;\n                if (fork.id >= minRepeatType)\n                    localSkipped += 4;\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index, inRepeat) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (id == inRepeat)\n            return index;\n        let startIndex = index;\n        if (size > 4) {\n            let endPos = cursor.pos - (size - 4);\n            while (cursor.pos > endPos)\n                index = copyToBuffer(bufferStart, buffer, index, inRepeat);\n        }\n        if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[topID], children.reverse(), positions.reverse(), length);\n}\nfunction balanceRange(outerType, innerType, children, positions, from, to, start, maxBufferLength, length) {\n    let localChildren = [], localPositions = [];\n    if (length <= maxBufferLength) {\n        for (let i = from; i < to; i++) {\n            localChildren.push(children[i]);\n            localPositions.push(positions[i] - start);\n        }\n    }\n    else {\n        let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor));\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i];\n            i++;\n            for (; i < to; i++) {\n                let nextEnd = positions[i] + children[i].length;\n                if (nextEnd - groupStart > maxChild)\n                    break;\n            }\n            if (i == groupFrom + 1) {\n                let only = children[groupFrom];\n                if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n                    for (let j = 0; j < only.children.length; j++) {\n                        localChildren.push(only.children[j]);\n                        localPositions.push(only.positions[j] + groupStart - start);\n                    }\n                    continue;\n                }\n                localChildren.push(only);\n            }\n            else if (i == groupFrom + 1) {\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart, maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart);\n                if (innerType != NodeType.none && !containsType(inner.children, innerType))\n                    inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length);\n                localChildren.push(inner);\n            }\n            localPositions.push(groupStart - start);\n        }\n    }\n    return new Tree(outerType, localChildren, localPositions, length);\n}\nfunction containsType(nodes, type) {\n    for (let elt of nodes)\n        if (elt.type == type)\n            return true;\n    return false;\n}\n/// Tree fragments are used during [incremental\n/// parsing](#lezer.ParseOptions.fragments) to track parts of old\n/// trees that can be reused in a new parse. An array of fragments is\n/// used to track regions of an old tree whose nodes might be reused\n/// in new parses. Use the static\n/// [`applyChanges`](#tree.TreeFragment^applyChanges) method to update\n/// fragments for document changes.\nclass TreeFragment {\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, open) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = open;\n    }\n    get openStart() { return (this.open & 1 /* Start */) > 0; }\n    get openEnd() { return (this.open & 2 /* End */) > 0; }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        let cI = 0, pos = 0, off = 0;\n        for (;;) {\n            let nextC = cI < changes.length ? changes[cI++] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null :\n                            new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, (cI > 0 ? 1 /* Start */ : 0) | (nextC ? 2 /* End */ : 0));\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the token at its\n    /// end is not included in [`safeTo`](#tree.TreeFragment.safeTo).\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, partial ? 2 /* End */ : 0)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n}\n// Creates an `Input` that is backed by a single, flat string.\nfunction stringInput(input) { return new StringInput(input); }\nclass StringInput {\n    constructor(string, length = string.length) {\n        this.string = string;\n        this.length = length;\n    }\n    get(pos) {\n        return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos);\n    }\n    lineAfter(pos) {\n        if (pos < 0)\n            return \"\";\n        let end = this.string.indexOf(\"\\n\", pos);\n        return this.string.slice(pos, end < 0 ? this.length : Math.min(end, this.length));\n    }\n    read(from, to) { return this.string.slice(from, Math.min(this.length, to)); }\n    clip(at) { return new StringInput(this.string, at); }\n}\n\nexports.DefaultBufferLength = DefaultBufferLength;\nexports.NodeProp = NodeProp;\nexports.NodeSet = NodeSet;\nexports.NodeType = NodeType;\nexports.Tree = Tree;\nexports.TreeBuffer = TreeBuffer;\nexports.TreeCursor = TreeCursor;\nexports.TreeFragment = TreeFragment;\nexports.stringInput = stringInput;\n//# sourceMappingURL=tree.cjs.map\n","import { Annotation, Facet, combineConfig, StateField, Transaction, StateEffect } from '@codemirror/next/state';\n\nconst fromHistory = Annotation.define();\n/// Transaction annotation that will prevent that annotation from\n/// being combined with other annotations in the undo history. Given\n/// `\"before\"`, it'll prevent merging with previous transactions. With\n/// `\"after\"`, subsequent transactions won't be combined with this\n/// one. With `\"full\"`, the transaction is isolated on both sides.\nconst isolateHistory = Annotation.define();\n/// This facet provides a way to register functions that, given a\n/// transaction, provide a set of effects that the history should\n/// store when inverting the transaction. This can be used to\n/// integrate some kinds of effects in the history, so that they can\n/// be undone (and redone again).\nconst invertedEffects = Facet.define();\nconst historyConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500\n        }, { minDepth: Math.max, newGroupDelay: Math.min });\n    }\n});\nconst historyField = StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr), from = fromHist.side;\n            let other = from == 0 /* Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* Done */ ? fromHist.rest : other, from == 0 /* Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return tr.changes.length ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    }\n});\n/// Create a history extension with the given configuration.\nfunction history(config = {}) {\n    // FIXME register beforeinput handler\n    return [\n        historyField,\n        historyConfig.of(config)\n    ];\n}\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        let historyState = state.field(historyField, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/// Undo a single group of history events. Returns false if no group\n/// was available.\nconst undo = cmd(0 /* Done */, false);\n/// Redo a group of history events. Returns false if no group was\n/// available.\nconst redo = cmd(1 /* Undone */, false);\n/// Undo a selection change.\nconst undoSelection = cmd(0 /* Done */, true);\n/// Redo a selection change.\nconst redoSelection = cmd(1 /* Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/// The amount of undoable change events available in a given state.\nconst undoDepth = depth(0 /* Done */);\n/// The amount of redoable change events available in a given state.\nconst redoDepth = depth(1 /* Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, newGroupDelay, maxLen) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes &&\n            time - this.prevTime < newGroupDelay &&\n            !lastEvent.selectionsAfter.length &&\n            lastEvent.changes.length && event.changes &&\n            isAdjacent(lastEvent.changes, event.changes)) {\n            done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, maxLen, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == \"keyboardselection\" && this.prevUserEvent == userEvent &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) })\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false\n            });\n        }\n    }\n}\nHistoryState.empty = new HistoryState(none, none);\n/// Default key bindings for the undo history.\n///\n/// - Mod-z: [`undo`](#history.undo).\n/// - Mod-y (Mod-Shift-z on macOS): [`redo`](#history.redo).\n/// - Mod-u: [`undoSelection`](#history.undoSelection).\n/// - Alt-u (Mod-Shift-u on macOS): [`redoSelection`](#history.redoSelection).\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nexport { history, historyKeymap, invertedEffects, isolateHistory, redo, redoDepth, redoSelection, undo, undoDepth, undoSelection };\n","import { StateEffect, StateField, Facet, combineConfig } from '@codemirror/next/state';\nimport { Decoration, EditorView, WidgetType, themeClass } from '@codemirror/next/view';\nimport { foldable } from '@codemirror/next/language';\nimport { gutter, GutterMarker } from '@codemirror/next/gutter';\n\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\nconst foldEffect = StateEffect.define({ map: mapRange });\nconst unfoldEffect = StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.visualLineAt(head));\n    }\n    return lines;\n}\nconst foldState = StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.primary;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: [EditorView.decorations]\n});\nfunction foldInside(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = ({ from, to });\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state) {\n    return state.field(foldState, false) ? undefined : { append: codeFolding() };\n}\n/// Fold the lines that are selected, if possible.\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: foldEffect.of(range),\n                reconfigure: maybeEnable(view.state) });\n            return true;\n        }\n    }\n    return false;\n};\n/// Unfold folded ranges on selected lines.\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = foldInside(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\n/// Fold all top-level foldable ranges.\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.visualLineAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.visualLineAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects, reconfigure: maybeEnable(view.state) });\n    return !!effects.length;\n};\n/// Unfold all folded code.\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n/// Default fold-related key bindings.\n///\n///  - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](#fold.foldCode).\n///  - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](#fold.unfoldCode).\n///  - Ctrl-Alt-[: [`foldAll`](#fold.foldAll).\n///  - Ctrl-Alt-]: [`unfoldAll`](#fold.unfoldAll).\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/// Create an extension that configures code folding.\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = Decoration.replace({ widget: new class extends WidgetType {\n        ignoreEvents() { return false; }\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM();\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = themeClass(\"foldPlaceholder\");\n            element.onclick = event => {\n                let line = view.visualLineAt(view.posAtDOM(event.target));\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\"\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/// Create an extension that registers a fold gutter, which shows a\n/// fold status indicator before lines which can be clicked to fold or\n/// unfold the line.\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    return [\n        gutter({\n            style: \"foldGutter\",\n            lineMarker(view, line) {\n                // FIXME optimize this. At least don't run it for updates that\n                // don't change anything relevant\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    return canUnfold;\n                if (foldable(view.state, line.from, line.to))\n                    return canFold;\n                return null;\n            },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: {\n                click: (view, line) => {\n                    let folded = foldInside(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme = EditorView.baseTheme({\n    $foldPlaceholder: {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \"$gutterElement.foldGutter\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\nexport { codeFolding, foldAll, foldCode, foldGutter, foldKeymap, unfoldAll, unfoldCode };\n","import { EditorView } from '@codemirror/next/view';\nimport { StateEffect, MapMode, StateField, EditorSelection, Transaction, CharCategory } from '@codemirror/next/state';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nimport { codePointSize, codePointAt, fromCodePoint } from '@codemirror/next/text';\nimport { syntaxTree } from '@codemirror/next/language';\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\nconst closeBracketEffect = StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst skipBracketEffect = StateEffect.define({\n    map(value, mapping) { return mapping.mapPos(value); }\n});\nconst closedBracket = new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.primary.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.primary.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects) {\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n            else if (effect.is(skipBracketEffect))\n                value = value.update({ filter: from => from != effect.value });\n        }\n        return value;\n    }\n});\n/// Extension to enable bracket-closing behavior. When a closeable\n/// bracket is typed, its closing bracket is immediately inserted\n/// after the cursor. When closing a bracket directly in front of that\n/// closing bracket, the cursor moves over the existing bracket.\nfunction closeBrackets() {\n    return [EditorView.inputHandler.of(handleInput), bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.primary;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = handleInsertion(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/// Command that implements deleting a pair of matching brackets when\n/// the cursor is between them.\nconst deleteBracketPair = ({ state, dispatch }) => {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length),\n                        annotations: Transaction.userEvent.of(\"delete\") };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/// Close-brackets related key bindings. Binds Backspace to\n/// [`deleteBracketPair`](#closebrackets.deleteBracketPair).\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/// Implements the extension's behavior on text insertion. @internal\nfunction handleInsertion(state, ch) {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (ch == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (ch == closed && closedBracketAt(state, state.selection.primary.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        annotations: Transaction.userEvent.of(\"input\")\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, moved = state.selection.ranges.map(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state.update({\n        selection: EditorSelection.create(moved, state.selection.primaryIndex),\n        scrollIntoView: true,\n        effects: state.selection.ranges.map(({ from }) => skipBracketEffect.of(from))\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos);\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),\n                    effects: skipBracketEffect.of(pos) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            let prev = state.sliceDoc(pos - 1, pos);\n            if (prev != token && state.charCategorizer(pos)(prev) != CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        annotations: Transaction.userEvent.of(\"input\")\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolve(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexport { closeBrackets, closeBracketsKeymap, deleteBracketPair, handleInsertion };\n","import { showTooltip, tooltips } from '@codemirror/next/tooltip';\nimport { Facet, combineConfig, StateEffect, StateField, Transaction, Text, EditorSelection, precedence } from '@codemirror/next/state';\nimport { syntaxTree, indentUnit } from '@codemirror/next/language';\nimport { EditorView, Direction, themeClass, ViewPlugin, logException, Decoration, WidgetType, keymap } from '@codemirror/next/view';\nimport { codePointAt, codePointSize, fromCodePoint } from '@codemirror/next/text';\n\n/// An instance of this is passed to completion source functions.\nclass CompletionContext {\n    /// Create a new completion context. (Mostly useful for testing\n    /// completion sources—in the editor, the extension will create\n    /// these for you.)\n    constructor(\n    /// The editor state that the completion happens in.\n    state, \n    /// The position at which the completion happens.\n    pos, \n    /// Indicates whether completion was activated explicitly, or\n    /// implicitly by typing. The usual way to respond to this is to\n    /// only return completions when either there is part of a\n    /// completable entity at the cursor, or explicit is true.\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /// @internal\n        this.abortListeners = [];\n    }\n    /// Get the extent, content, and (if there is a token) type of the\n    /// token before `this.pos`.\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolve(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /// Get the match of the given expression directly before the\n    /// cursor.\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /// Yields true when the query has been aborted. Can be useful in\n    /// asynchronous queries to avoid doing work that will be ignored.\n    get aborted() { return this.abortListeners == null; }\n    /// Allows you to register abort handlers, which will be called when\n    /// the query is\n    /// [aborted](#autocomplete.CompletionContext.aborted).\n    addEventListener(_type, listener) {\n        if (this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nclass Option {\n    constructor(completion, source, match) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n    }\n}\nfunction cur(state) { return state.selection.primary.head; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\nfunction applyCompletion(view, option) {\n    let apply = option.completion.apply || option.completion.label;\n    let result = option.source;\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length }\n        });\n    }\n    else {\n        apply(view, option.completion, result.from, result.to);\n    }\n}\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0);\n            return first == chars[0] ? [0, 0, codePointSize(first)]\n                : first == folded[0] ? [-200 /* CaseFold */, 0, codePointSize(first)] : null;\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [0, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        let preciseTo = 0;\n        let byWordTo = 0, byWordFolded = false;\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Lower */ : next >= 65 && next <= 90 ? 1 /* Upper */ : 0 /* NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Upper */ : ch != ch.toUpperCase() ? 2 /* Lower */ : 0 /* NonWord */);\n            if (type == 1 /* Upper */ || prevType == 0 /* NonWord */ && type != 0 /* NonWord */ &&\n                (this.chars[byWordTo] == next || (this.folded[byWordTo] == next && (byWordFolded = true))))\n                byWord[byWordTo++] = i;\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* CaseFold */, 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* NotStart */, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* CaseFold */ + -700 /* NotStart */, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0) + -700 /* NotStart */, byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* NotStart */ : 0) + -200 /* CaseFold */ + -1100 /* Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            maxRenderedOptions: 100\n        });\n    }\n});\n\nconst MaxInfoWidth = 300;\nconst baseTheme = EditorView.baseTheme({\n    \"$tooltip.autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            overflowY: \"auto\",\n            whiteSpace: \"nowrap\",\n            maxHeight: \"10em\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li\": {\n                cursor: \"pointer\",\n                padding: \"1px 1em 1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li[aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            }\n        }\n    },\n    \"$completionListIncompleteTop:before, $completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \"$tooltip.completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: MaxInfoWidth + \"px\",\n    },\n    \"$tooltip.completionInfo.left\": { right: \"100%\" },\n    \"$tooltip.completionInfo.right\": { left: \"100%\" },\n    \"$$light $snippetField\": { backgroundColor: \"#ddd\" },\n    \"$$dark $snippetField\": { backgroundColor: \"#333\" },\n    \"$snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    $completionMatchedText: {\n        textDecoration: \"underline\"\n    },\n    $completionDetail: {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    $completionIcon: {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\"\n    },\n    \"$completionIcon.function, $completionIcon.method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \"$completionIcon.class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \"$completionIcon.interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \"$completionIcon.variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \"$completionIcon.constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \"$completionIcon.type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \"$completionIcon.enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \"$completionIcon.property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \"$completionIcon.keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \"$completionIcon.namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \"$completionIcon.text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nfunction createListBox(options, id, range) {\n    const ul = document.createElement(\"ul\");\n    ul.id = id;\n    ul.setAttribute(\"role\", \"listbox\");\n    ul.setAttribute(\"aria-expanded\", \"true\");\n    for (let i = range.from; i < range.to; i++) {\n        let { completion, match } = options[i];\n        const li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        let icon = li.appendChild(document.createElement(\"div\"));\n        icon.className = themeClass(\"completionIcon\" + (completion.type ? \".\" + completion.type : \"\"));\n        icon.setAttribute(\"aria-hidden\", \"true\");\n        let labelElt = li.appendChild(document.createElement(\"span\"));\n        labelElt.className = themeClass(\"completionLabel\");\n        let { label, detail } = completion, off = 0;\n        for (let j = 1; j < match.length;) {\n            let from = match[j++], to = match[j++];\n            if (from > off)\n                labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n            let span = labelElt.appendChild(document.createElement(\"span\"));\n            span.appendChild(document.createTextNode(label.slice(from, to)));\n            span.className = themeClass(\"completionMatchedText\");\n            off = to;\n        }\n        if (off < label.length)\n            labelElt.appendChild(document.createTextNode(label.slice(off)));\n        if (detail) {\n            let detailElt = li.appendChild(document.createElement(\"span\"));\n            detailElt.className = themeClass(\"completionDetail\");\n            detailElt.textContent = detail;\n        }\n        li.setAttribute(\"role\", \"option\");\n    }\n    if (range.from)\n        ul.classList.add(themeClass(\"completionListIncompleteTop\"));\n    if (range.to < options.length)\n        ul.classList.add(themeClass(\"completionListIncompleteBottom\"));\n    return ul;\n}\nfunction createInfoDialog(option) {\n    let dom = document.createElement(\"div\");\n    dom.className = themeClass(\"tooltip.completionInfo\");\n    let { info } = option.completion;\n    if (typeof info == \"string\")\n        dom.textContent = info;\n    else\n        dom.appendChild(info(option.completion));\n    return dom;\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfo = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.positionInfo(pos),\n            key: this\n        };\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.list = this.dom.appendChild(createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfo);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        if (update.state.field(this.stateField) != update.prevState.field(this.stateField))\n            this.updateSel();\n    }\n    positioned() {\n        if (this.info)\n            this.view.requestMeasure(this.placeInfo);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfo);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let option = open.options[open.selected];\n            if (option.completion.info) {\n                this.info = this.dom.appendChild(createInfoDialog(option));\n                this.view.requestMeasure(this.placeInfo);\n            }\n        }\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel)\n            return null;\n        let rect = this.dom.getBoundingClientRect();\n        let top = sel.getBoundingClientRect().top - rect.top;\n        if (top < 0 || top > this.list.clientHeight - 10)\n            return null;\n        let left = this.view.textDirection == Direction.RTL;\n        let spaceLeft = rect.left, spaceRight = innerWidth - rect.right;\n        if (left && spaceLeft < Math.min(MaxInfoWidth, spaceRight))\n            left = false;\n        else if (!left && spaceRight < Math.min(MaxInfoWidth, spaceLeft))\n            left = true;\n        return { top, left };\n    }\n    positionInfo(pos) {\n        if (this.info && pos) {\n            this.info.style.top = pos.top + \"px\";\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-left\", pos.left);\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-right\", !pos.left);\n        }\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\nconst MaxOptions = 300;\nfunction sortOptions(active, state) {\n    let options = [];\n    for (let a of active)\n        if (a.hasResult()) {\n            let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n            for (let option of a.result.options)\n                if (match = matcher.match(option.label)) {\n                    if (option.boost != null)\n                        match[0] += option.boost;\n                    options.push(new Option(option, a, match));\n                }\n        }\n    options.sort(cmpOption);\n    return options.length > MaxOptions ? options.slice(0, MaxOptions) : options;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);\n    }\n    static build(active, state, id, prev) {\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return null;\n        let selected = 0;\n        if (prev) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length && !selected; i++) {\n                if (options[i].completion == selectedValue)\n                    selected = i;\n            }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), [{\n                pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n                style: \"autocomplete\",\n                create: completionTooltip(completionState)\n            }], prev ? prev.timestamp : Date.now(), selected);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, [Object.assign(Object.assign({}, this.tooltip[0]), { pos: changes.mapPos(this.tooltip[0].pos) })], this.timestamp, this.selected);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override || state.languageDataAt(\"autocomplete\", cur(state));\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) || new ActiveSource(source, 0 /* Inactive */, false);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open)\n            : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : none; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nfunction makeAttrs(id, selected) {\n    return {\n        \"aria-autocomplete\": \"list\",\n        \"aria-activedescendant\": id + \"-\" + selected,\n        \"aria-owns\": id\n    };\n}\nconst baseAttrs = { \"aria-autocomplete\": \"list\" }, none = [];\nfunction cmpOption(a, b) {\n    let dScore = b.match[0] - a.match[0];\n    if (dScore)\n        return dScore;\n    let lA = a.completion.label, lB = b.completion.label;\n    return lA < lB ? -1 : lA == lB ? 0 : 1;\n}\nclass ActiveSource {\n    constructor(source, state, explicit) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = tr.annotation(Transaction.userEvent), value = this;\n        if (event == \"input\" || event == \"delete\")\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* Inactive */)\n            value = new ActiveSource(value.source, 0 /* Inactive */, false);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* Pending */, effect.value);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* Inactive */, false);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(_tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this : new ActiveSource(this.source, 1 /* Pending */, false);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* Inactive */, false) : this;\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, result, from, to, span) {\n        super(source, 2 /* Result */, explicit);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n        this.span = span;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicit ? pos < from : pos <= from) || pos > to)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* Pending */ : 0 /* Inactive */, false);\n        if (this.span && (from == to || this.span.test(tr.state.sliceDoc(from, to))))\n            return new ActiveResult(this.source, this.explicit, this.result, from, to, this.span);\n        return new ActiveSource(this.source, 1 /* Pending */, this.explicit);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to)\n            ? new ActiveSource(this.source, 0 /* Inactive */, false)\n            : new ActiveResult(this.source, this.explicit, this.result, tr.changes.mapPos(this.from), tr.changes.mapPos(this.to, 1), this.span);\n    }\n    map(mapping) {\n        return new ActiveResult(this.source, this.explicit, this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1), this.span);\n    }\n}\nconst startCompletionEffect = StateEffect.define();\nconst closeCompletionEffect = StateEffect.define();\nconst setActiveEffect = StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.hasResult() && !mapping.empty ? s.map(mapping) : s); }\n});\nconst setSelectedEffect = StateEffect.define();\nconst completionState = StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: [\n        showTooltip.nFrom(state => state.tooltip),\n        EditorView.contentAttributes.from(state => state.attrs)\n    ]\n});\n\nconst CompletionInteractMargin = 75;\n/// Returns a command that moves the completion selection forward or\n/// backward by the given amount.\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = view.dom.querySelector(\".cm-tooltip-autocomplete\")))\n            step = Math.max(2, Math.floor(tooltip.offsetHeight / tooltip.firstChild.offsetHeight));\n        let selected = cState.open.selected + step * (forward ? 1 : -1), { length } = cState.open.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/// Accept the current completion.\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/// Explicitly start autocompletion.\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/// Close the currently active completion.\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(source, context) {\n        this.source = source;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.prevState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let event = tr.annotation(Transaction.userEvent);\n            return (tr.selection || tr.docChanged) && event != \"input\" && event != \"delete\";\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && query.time - Date.now() > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* Pending */ && !this.running.some(q => q.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* None */)\n            for (let tr of update.transactions) {\n                if (tr.annotation(Transaction.userEvent) == \"input\")\n                    this.composing = 2 /* Changed */;\n                else if (this.composing == 2 /* Changed */ && tr.selection)\n                    this.composing = 3 /* ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* Pending */ && !this.running.some(r => r.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit);\n        let pending = new RunningQuery(active.source, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.source, query.context.explicit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state), query.done.span ? ensureAnchor(query.done.span, true) : null);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.source);\n            if (current && current.state == 1 /* Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.source, 0 /* Inactive */, false);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        compositionstart() {\n            this.composing = 1 /* Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* ChangedAndMoved */)\n                this.view.dispatch({ effects: startCompletionEffect.of(false) });\n            this.composing = 0 /* None */;\n        }\n    } // See https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/949\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.slice(0, Math.min(100, lineObj.length)))[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3], found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (name ? fields[i].name == name : seq != null && fields[i].seq == seq)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name: name || null });\n                    found = i;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = Decoration.widget({ widget: new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = themeClass(\"snippetFieldPosition\");\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = Decoration.mark({ class: themeClass(\"snippetField\") });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = StateEffect.define();\nconst snippetState = StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: [EditorView.decorations.from(val => val ? val.deco : Decoration.none)]\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/// Convert a snippet template to a function that can apply it.\n/// Snippets are written using syntax like this:\n///\n///     \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n///\n/// Each `${}` placeholder (you may also use `#{}`) indicates a field\n/// that the user can fill in. Its name, if any, will be the default\n/// content for the field.\n///\n/// When the snippet is activated by calling the returned function,\n/// the code is inserted at the given position. Newlines in the\n/// template are indented by the indentation of the start line, plus\n/// one [indent unit](#language.indentUnit) per tab character after\n/// the newline.\n///\n/// On activation, (all instances of) the first field are selected.\n/// The user can move between fields with Tab and Shift-Tab as long as\n/// the fields are active. Moving to the last field or moving the\n/// cursor out of the current field deactivates the fields.\n///\n/// The order of fields defaults to textual order, but you can add\n/// numbers to placeholders (`${1}` or `${1:defaultText}`) to provide\n/// a custom order.\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, _completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = { changes: { from, to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            spec.effects = setActive.of(new ActiveSnippet(ranges, 0));\n            if (editor.state.field(snippetState, false) === undefined)\n                spec.reconfigure = { append: [snippetState, snippetKeymap, baseTheme] };\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\nconst snippetKeymap = precedence(keymap([\n    { key: \"Tab\", run: moveField(1), shift: moveField(-1) },\n    { key: \"Escape\", run: clearSnippet }\n]), \"override\");\n\n/// Returns an extension that enables autocompletion.\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        baseTheme,\n        tooltips(),\n        precedence(keymap([\n            { key: \"ArrowDown\", run: moveCompletionSelection(true) },\n            { key: \"ArrowUp\", run: moveCompletionSelection(false) },\n            { key: \"PageDown\", run: moveCompletionSelection(true, \"page\") },\n            { key: \"PageUp\", run: moveCompletionSelection(false, \"page\") },\n            { key: \"Enter\", run: acceptCompletion }\n        ]), \"override\")\n    ];\n}\n/// Basic keybindings for autocompletion.\n///\n///  - Ctrl-Space (Cmd-Space on macOS): [`startCompletion`](#autocomplete.startCompletion)\n///  - Escape: [`closeCompletion`](#autocomplete.closeCompletion)\nconst completionKeymap = [\n    { key: \"Mod-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion }\n];\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/// Given a a fixed array of options, return an autocompleter that\n/// compares those options to the current\n/// [token](#autocomplete.CompletionContext.tokenBefore) and returns\n/// the matching ones.\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [span, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, span } : null;\n    };\n}\n/// Wrap the given completion source so that it will not fire when the\n/// cursor is in a syntax node with one of the given names.\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolve(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n        return source(context);\n    };\n}\n/// Create a completion source from an array of snippet specs.\nfunction completeSnippets(snippets) {\n    return completeFromList(snippets.map(s => Object.assign({}, s, { apply: snippet(s.snippet) })));\n}\n/// Get the current completion status. When completions are available,\n/// this will return `\"active\"`. When completions are pending (in the\n/// process of being queried), this returns `\"pending\"`. Otherwise, it\n/// returns `null`.\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* Inactive */) ? \"active\" : null;\n}\n/// Returns the available completions as an array.\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options.map(o => o.completion) : [];\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, closeCompletion, completeFromList, completeSnippets, completionKeymap, completionStatus, currentCompletions, ifNotIn, moveCompletionSelection, snippet, startCompletion };\n","import { EditorSelection } from '@codemirror/next/state';\nimport { EditorView } from '@codemirror/next/view';\nimport { findColumn, countColumn } from '@codemirror/next/text';\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i), str = line.length > MaxOff ? line.slice(0, 2 * endCol) : line.slice();\n            let start = findColumn(str, 0, startCol, state.tabSize), end = findColumn(str, 0, endCol, state.tabSize);\n            if (!start.leftOver)\n                ranges.push(EditorSelection.range(line.from + start.offset, line.from + end.offset));\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (offset == null)\n        return null;\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.slice(0, offset - line.from), 0, view.state.tabSize);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.prevState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/// Create an extension that enables rectangular selections. By\n/// default, it will rect to left mouse drag with the alt key held\n/// down. When such a selection occurs, the text within the rectangle\n/// that was dragged over will be selected, as one selection\n/// [range](#state.SelectionRange) per line. You can pass a custom\n/// predicate function, which takes a `mousedown` event and returns\n/// true if it should be used for rectangular selection.\nfunction rectangularSelection(eventFilter) {\n    let filter = eventFilter || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexport { rectangularSelection };\n","import { getPanel, panels, showPanel } from '@codemirror/next/panel';\nimport { EditorSelection } from '@codemirror/next/state';\nimport { EditorView, themeClass } from '@codemirror/next/view';\n\nconst extTag = typeof Symbol == \"undefined\" ? \"__goto-line\" : Symbol(\"goto-line\");\nfunction createLineDialog(view) {\n    let dom = document.createElement(\"form\");\n    dom.innerHTML = `<label>${view.state.phrase(\"Go to line:\")} <input class=${themeClass(\"textfield\")} name=line></label>\n<button class=${themeClass(\"button\")} type=submit>${view.state.phrase(\"go\")}</button>`;\n    let input = dom.querySelector(\"input\");\n    function go() {\n        let n = parseInt(input.value, 10);\n        view.dispatch({\n            reconfigure: { [extTag]: [baseTheme] },\n            selection: !isNaN(n) && n > 0 && n <= view.state.doc.lines ? EditorSelection.cursor(view.state.doc.line(n).from) : undefined,\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    dom.addEventListener(\"keydown\", event => {\n        if (event.keyCode == 27) { // Escape\n            event.preventDefault();\n            view.dispatch({ reconfigure: { append: [baseTheme] } });\n            view.focus();\n        }\n        else if (event.keyCode == 13) { // Enter\n            event.preventDefault();\n            go();\n        }\n    });\n    dom.addEventListener(\"submit\", go);\n    return { dom, style: \"gotoLine\", pos: -10 };\n}\n/// Command that shows a dialog asking the user for a line number, and\n/// when a valid number is provided, moves the cursor to that line.\n///\n/// The dialog can be styled with the `panel.gotoLine` theme\n/// selector.\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        view.dispatch({ reconfigure: { append: [panels(), showPanel.of(createLineDialog), baseTheme] } });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n/// Keymap that binds Alt-g to [`gotoLine`](#goto-line.gotoLine).\nconst gotoLineKeymap = [\n    { key: \"Alt-g\", run: gotoLine }\n];\n\nexport { gotoLine, gotoLineKeymap };\n","import { highlightSpecialChars, drawSelection, keymap } from '@codemirror/next/view';\nexport { EditorView } from '@codemirror/next/view';\nimport { EditorState } from '@codemirror/next/state';\nexport { EditorState } from '@codemirror/next/state';\nimport { history, historyKeymap } from '@codemirror/next/history';\nimport { foldGutter, foldKeymap } from '@codemirror/next/fold';\nimport { indentOnInput } from '@codemirror/next/language';\nimport { lineNumbers } from '@codemirror/next/gutter';\nimport { defaultKeymap } from '@codemirror/next/commands';\nimport { bracketMatching } from '@codemirror/next/matchbrackets';\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/next/closebrackets';\nimport { searchKeymap } from '@codemirror/next/search';\nimport { autocompletion, completionKeymap } from '@codemirror/next/autocomplete';\nimport { commentKeymap } from '@codemirror/next/comment';\nimport { rectangularSelection } from '@codemirror/next/rectangular-selection';\nimport { gotoLineKeymap } from '@codemirror/next/goto-line';\nimport { highlightActiveLine, highlightSelectionMatches } from '@codemirror/next/highlight-selection';\nimport { defaultHighlightStyle } from '@codemirror/next/highlight';\nimport { lintKeymap } from '@codemirror/next/lint';\n\n/// This is an extension value that just pulls together a whole lot of\n/// extensions that you might want in a basic editor. It is meant as a\n/// convenient helper to quickly set up CodeMirror without installing\n/// and importing a lot of packages.\n///\n/// Specifically, it includes...\n///\n///  - [the default command bindings](#commands.defaultKeymap)\n///  - [line numbers](#gutter.lineNumbers)\n///  - [special character highlighting](#view.highlightSpecialChars)\n///  - [the undo history](#history.history)\n///  - [a fold gutter](#fold.foldGutter)\n///  - [custom selection drawing](#view.drawSelection)\n///  - [multiple selections](#state.EditorState^allowMultipleSelections)\n///  - [reindentation on input](#language.indentOnInput)\n///  - [the default highlight style](#highlight.defaultHighlightStyle)\n///  - [bracket matching](#matchbrackets.bracketMatching)\n///  - [bracket closing](#closebrackets.closeBrackets)\n///  - [autocompletion](#autocomplete.autocompletion)\n///  - [rectangular selection](#rectangular-selection.rectangularSelection)\n///  - [active line highlighting](#highlight-selection.highlightActiveLine)\n///  - [selection match highlighting](#highlight-selection.highlightSelectionMatches)\n///  - [search](#search.searchKeymap)\n///  - [go to line](#goto-line.gotoLineKeymap)\n///  - [commenting](#comment.commentKeymap)\n///  - [linting](#lint.lintKeymap)\n///\n/// (You'll probably want to add some language package to your setup\n/// too.)\n///\n/// This package does not allow customization. The idea is that, once\n/// you decide you want to configure your editor more precisely, you\n/// take this package's source (which is just a bunch of imports and\n/// an array literal), copy it into your own code, and adjust it as\n/// desired.\nconst basicSetup = [\n    lineNumbers(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    defaultHighlightStyle,\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...commentKeymap,\n        ...gotoLineKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n];\n\nexport { basicSetup };\n","import { Transaction, EditorSelection, CharCategory } from '@codemirror/next/state';\nimport { Text, countColumn, codePointSize, codePointAt } from '@codemirror/next/text';\nimport { Direction } from '@codemirror/next/view';\nimport { matchBrackets } from '@codemirror/next/matchbrackets';\nimport { IndentContext, getIndentation, indentString, indentUnit, getIndentUnit, syntaxTree } from '@codemirror/next/language';\nimport { NodeProp } from 'lezer-tree';\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.primaryIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, annotations: Transaction.userEvent.of(\"keyboardselection\") });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one character to the left (which is backward in\n/// left-to-right text, forward in right-to-left text).\nconst cursorCharLeft = view => cursorByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection one character to the right.\nconst cursorCharRight = view => cursorByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection one character forward.\nconst cursorCharForward = view => cursorByChar(view, true);\n/// Move the selection one character backward.\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection across one group of word or non-word (but also\n/// non-space) characters.\nconst cursorGroupLeft = view => cursorByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection one group to the right.\nconst cursorGroupRight = view => cursorByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection one group forward.\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/// Move the selection one group backward.\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolve(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/// Move the cursor over the next syntactic element to the left.\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the cursor over the next syntactic element to the right.\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one line up.\nconst cursorLineUp = view => cursorByLine(view, false);\n/// Move the selection one line down.\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction cursorByPage(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward, view.dom.clientHeight) : rangeEnd(range, forward));\n}\n/// Move the selection one page up.\nconst cursorPageUp = view => cursorByPage(view, false);\n/// Move the selection one page down.\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.visualLineAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head > line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/// Move the selection to the next line wrap point, or to the end of\n/// the line if there isn't one left on this line.\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection to previous line wrap point, or failing that to\n/// the start of the line.\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection to the start of the line.\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from, 1));\n/// Move the selection to the end of the line.\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/// Move the selection to the bracket matching the one it is currently\n/// on, if any.\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/// Extend the selection to the bracket matching the one the selection\n/// head is currently on, if any.\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/// Move the selection head one character to the left, while leaving\n/// the anchor in place.\nconst selectCharLeft = view => selectByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection head one character to the right.\nconst selectCharRight = view => selectByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection head one character forward.\nconst selectCharForward = view => selectByChar(view, true);\n/// Move the selection head one character backward.\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/// Move the selection head one [group](#commands.cursorGroupLeft) to\n/// the left.\nconst selectGroupLeft = view => selectByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection head one group to the right.\nconst selectGroupRight = view => selectByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection head one group forward.\nconst selectGroupForward = view => selectByGroup(view, true);\n/// Move the selection head one group backward.\nconst selectGroupBackward = view => selectByGroup(view, false);\n/// Move the selection head over the next syntactic element to the left.\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the selection head over the next syntactic element to the right.\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/// Move the selection head one line up.\nconst selectLineUp = view => selectByLine(view, false);\n/// Move the selection head one line down.\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, view.dom.clientHeight));\n}\n/// Move the selection head one page up.\nconst selectPageUp = view => selectByPage(view, false);\n/// Move the selection head one page down.\nconst selectPageDown = view => selectByPage(view, true);\n/// Move the selection head to the next line boundary.\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection head to the previous line boundary.\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection head to the start of the line.\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from));\n/// Move the selection head to the end of the line.\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to));\n/// Move the selection to the start of the document.\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/// Move the selection to the end of the document.\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/// Move the selection head to the start of the document.\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: 0 }));\n    return true;\n};\n/// Move the selection head to the end of the document.\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: state.doc.length }));\n    return true;\n};\n/// Select the entire document.\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Expand the selection to cover entire lines.\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: new EditorSelection(ranges), annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Select the next syntactic construct that is larger than the\n/// selection. Note that this will only work insofar as the language\n/// [provider](#language.language) you use builds up a full\n/// syntax tree.\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolve(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/// Simplify the current selection. When multiple ranges are selected,\n/// reduce it to its primary range. Otherwise, if the selection is\n/// non-empty, convert it to a cursor selection.\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = new EditorSelection([cur.primary]);\n    else if (!cur.primary.empty)\n        selection = new EditorSelection([EditorSelection.cursor(cur.primary.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(view, by) {\n    let { state } = view, changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"delete\") });\n    return true;\n}\nconst deleteByChar = (view, forward, codePoint) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), before;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, 0, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        return pos;\n    }\n    let target;\n    if (codePoint) {\n        let next = line.slice(pos - line.from + (forward ? 0 : -2), pos - line.from + (forward ? 2 : 0));\n        let size = next ? codePointSize(codePointAt(next, 0)) : 1;\n        target = forward ? Math.min(state.doc.length, pos + size) : Math.max(0, pos - size);\n    }\n    else {\n        target = line.findClusterBreak(pos - line.from, forward) + line.from;\n    }\n    if (target == pos && line.number != (forward ? state.doc.lines : 1))\n        target += forward ? 1 : -1;\n    return target;\n});\n/// Delete the selection, or, for cursor selections, the code point\n/// before the cursor.\nconst deleteCodePointBackward = view => deleteByChar(view, false, true);\n/// Delete the selection, or, for cursor selections, the code point\n/// after the cursor.\nconst deleteCodePointForward = view => deleteByChar(view, true, true);\n/// Delete the selection, or, for cursor selections, the character\n/// before the cursor.\nconst deleteCharBackward = view => deleteByChar(view, false, false);\n/// Delete the selection or the character after the cursor.\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (view, forward) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        let next, nextChar;\n        if (pos == (forward ? line.to : line.from)) {\n            if (line.number == (forward ? state.doc.lines : 1))\n                break;\n            line = state.doc.line(line.number + (forward ? 1 : -1));\n            next = forward ? line.from : line.to;\n            nextChar = \"\\n\";\n        }\n        else {\n            next = line.findClusterBreak(pos - line.from, forward) + line.from;\n            nextChar = line.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        }\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextCat != CharCategory.Space)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/// Delete the selection or backward until the end of the next\n/// [group](#view.EditorView.moveByGroup).\nconst deleteGroupBackward = view => deleteByGroup(view, false);\n/// Delete the selection or forward until the end of the next group.\nconst deleteGroupForward = view => deleteByGroup(view, true);\n/// Delete the selection, or, if it is a cursor selection, delete to\n/// the end of the line. If the cursor is directly at the end of the\n/// line, delete the line break after it.\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.visualLineAt(pos).to;\n    if (pos < lineEnd)\n        return lineEnd;\n    return Math.max(view.state.doc.length, pos + 1);\n});\n/// Delete all whitespace directly before a line end from the\n/// document.\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes }));\n    return true;\n};\n/// Replace each selection range with a line break, leaving the cursor\n/// on the line before the break.\nconst splitLine = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") }));\n    return true;\n};\n/// Flip the characters before and after the cursor(s).\nconst transposeChars = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : line.findClusterBreak(pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : line.findClusterBreak(pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (upto == startLine.number)\n            blocks[blocks.length - 1].to = endLine.to;\n        else\n            blocks.push({ from: startLine.from, to: endLine.to });\n        upto = endLine.number;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        if (forward)\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.slice() + state.lineBreak });\n        else\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.slice() });\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Move the selected lines up one line.\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/// Move the selected lines down one line.\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Create a copy of the selected lines. Keep the selection in the top copy.\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/// Create a copy of the selected lines. Keep the selection in the bottom copy.\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/// Delete selected lines.\nconst deleteLine = view => {\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true });\n    return true;\n};\n/// Replace the selection with a newline.\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolve(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/// Replace the selection with a newline and indent the newly created\n/// line(s). If the current line consists only of whitespace, this\n/// will also delete that whitespace. When the cursor is between\n/// matching brackets, an additional newline will be inserted after\n/// the cursor.\nconst insertNewlineAndIndent = ({ state, dispatch }) => {\n    let changes = state.changeByRange(({ from, to }) => {\n        let explode = from == to && isBetweenBrackets(state, from);\n        let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n        let indent = getIndentation(cx, from);\n        if (indent == null)\n            indent = /^\\s*/.exec(state.doc.lineAt(from).slice(0, 50))[0].length;\n        let line = state.doc.lineAt(from);\n        while (to < line.to && /\\s/.test(line.slice(to - line.from, to + 1 - line.from)))\n            to++;\n        if (explode)\n            ({ from, to } = explode);\n        else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.slice(0, from)))\n            from = line.from;\n        let insert = [\"\", indentString(state, indent)];\n        if (explode)\n            insert.push(indentString(state, cx.lineIndent(line)));\n        return { changes: { from, to, insert: Text.of(insert) },\n            range: EditorSelection.cursor(from + 1 + indent) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let line = state.doc.lineAt(range.from);;) {\n            if (line.number > atLine) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            if (range.to <= line.to)\n                break;\n            line = state.doc.lineAt(line.to + 1);\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/// Auto-indent the selected lines. This uses the [indentation service\n/// facet](#language.indentService) as source for auto-indent\n/// information.\nconst indentSelection = ({ state, dispatch }) => {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, 200)))[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes));\n    return true;\n};\n/// Add a [unit](#language.indentUnit) of indentation to all selected\n/// lines.\nconst indentMore = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    })));\n    return true;\n};\n/// Remove a [unit](#language.indentUnit) of indentation from all\n/// selected lines.\nconst indentLess = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let lineStart = line.slice(0, Math.min(line.length, 200));\n        let space = /^\\s*/.exec(lineStart)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, 0, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    })));\n    return true;\n};\n/// Array of key bindings containing the Emacs-style bindings that are\n/// available on macOS by default.\n///\n///  - Ctrl-b: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - Ctrl-f: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-p: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - Ctrl-n: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Ctrl-a: [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Ctrl-e: [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - Ctrl-d: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-h: [`deleteCharBackward`](#commands.deleteCharBackward)\n///  - Ctrl-k: [`deleteToLineEnd`](#commands.deleteToLineEnd)\n///  - Alt-d: [`deleteGroupForward`](#commands.deleteGroupForward)\n///  - Ctrl-Alt-h: [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-o: [`splitLine`](#commands.splitLine)\n///  - Ctrl-t: [`transposeChars`](#commands.transposeChars)\n///  - Alt-f: [`cursorGroupForward`](#commands.cursorGroupForward) ([`selectGroupForward`](#commands.selectGroupForward) with Shift)\n///  - Alt-b: [`cursorGroupBackward`](#commands.cursorGroupBackward) ([`selectGroupBackward`](#commands.selectGroupBackward) with Shift)\n///  - Alt-<: [`cursorDocStart`](#commands.cursorDocStart)\n///  - Alt->: [`cursorDocEnd`](#commands.cursorDocEnd)\n///  - Ctrl-v: [`cursorPageDown`](#commands.cursorPageDown)\n///  - Alt-v: [`cursorPageUp`](#commands.cursorPageUp)\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Alt-d\", run: deleteGroupForward },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Alt-f\", run: cursorGroupForward, shift: selectGroupForward },\n    { key: \"Alt-b\", run: cursorGroupBackward, shift: selectGroupBackward },\n    { key: \"Alt-<\", run: cursorDocStart },\n    { key: \"Alt->\", run: cursorDocEnd },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n    { key: \"Alt-v\", run: cursorPageUp },\n];\n/// An array of key bindings closely sticking to platform-standard or\n/// widely used bindings. (This includes the bindings from\n/// [`emacsStyleKeymap`](#commands.emacsStyleKeymap), with their `key`\n/// property changed to `mac`.)\n///\n///  - ArrowLeft: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - ArrowRight: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](#commands.cursorGroupLeft) ([`selectGroupLeft`](#commands.selectGroupLeft) with Shift)\n///  - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](#commands.cursorGroupRight) ([`selectGroupRight`](#commands.selectGroupRight) with Shift)\n///  - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - ArrowUp: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - ArrowDown: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Cmd-ArrowUp (on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - PageUp: [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - PageDown: [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - Home: [`cursorLineBoundaryBackward`](#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](#commands.selectLineBoundaryBackward) with Shift)\n///  - End: [`cursorLineBoundaryForward`](#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](#commands.selectLineBoundaryForward) with Shift)\n///  - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Enter: [`insertNewlineAndIndent`](#commands.insertNewlineAndIndent)\n///  - Ctrl-a (Cmd-a on macOS): [`selectAll`](#commands.selectAll)\n///  - Backspace: [`deleteCodePointBackward`](#commands.deleteCodePointBackward)\n///  - Delete: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](#commands.deleteGroupForward)\nconst standardKeymap = [\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCodePointBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n].concat(emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/// The default keymap. Includes all bindings from\n/// [`standardKeymap`](#commands.standardKeymap) plus the following:\n///\n/// - Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](#commands.selectSyntaxLeft) with Shift)\n/// - Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](#commands.cursorSyntaxRight) ([`selectSyntaxRight`](#commands.selectSyntaxRight) with Shift)\n/// - Alt-ArrowUp: [`moveLineUp`](#commands.moveLineUp)\n/// - Alt-ArrowDown: [`moveLineDown`](#commands.moveLineDown)\n/// - Shift-Alt-ArrowUp: [`copyLineUp`](#commands.copyLineUp)\n/// - Shift-Alt-ArrowDown: [`copyLineDown`](#commands.copyLineDown)\n/// - Escape: [`simplifySelection`](#commands.simplifySelection)\n/// - Ctrl-l (Cmd-l on macOS): [`selectLine`](#commands.selectLine)\n/// - Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](#commands.selectParentSyntax)\n/// - Ctrl-[ (Cmd-[ on macOS): [`indentLess`](#commands.indentLess)\n/// - Ctrl-] (Cmd-] on macOS): [`indentMore`](#commands.indentMore)\n/// - Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](#commands.indentSelection)\n/// - Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](#commands.deleteLine)\n/// - Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](#commands.cursorMatchingBracket)\nconst defaultKeymap = [\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket }\n].concat(standardKeymap);\n\nexport { copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteCodePointBackward, deleteCodePointForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteTrailingWhitespace, emacsStyleKeymap, indentLess, indentMore, indentSelection, insertNewline, insertNewlineAndIndent, moveLineDown, moveLineUp, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, transposeChars };\n","import { EditorSelection } from '@codemirror/next/state';\n\n/// Comments or uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst toggleLineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineUncomment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Comments or uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst toggleBlockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockUncomment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Default key bindings for this package.\n///\n///  - Ctrl-/ (Cmd-/ on macOS): [\\`toggleLineComment\\`](#comment.toggleLineComment).\n///  - Shift-Alt-a: [\\`toggleBlockComment\\`](#comment.toggleBlockComment).\nconst commentKeymap = [\n    { key: \"Mod-/\", run: toggleLineComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n];\nfunction dispatch(cmd, target) {\n    const tr = cmd(target.state);\n    if (!tr)\n        return false;\n    target.dispatch(tr);\n    return true;\n}\nvar CommentOption;\n(function (CommentOption) {\n    CommentOption[CommentOption[\"Toggle\"] = 0] = \"Toggle\";\n    CommentOption[CommentOption[\"OnlyComment\"] = 1] = \"OnlyComment\";\n    CommentOption[CommentOption[\"OnlyUncomment\"] = 2] = \"OnlyUncomment\";\n})(CommentOption || (CommentOption = {}));\nfunction getConfig(state, pos = state.selection.primary.head) {\n    return state.languageDataAt(\"commentTokens\", pos)[0] || {};\n}\nconst toggleBlockCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.block ? new BlockCommenter(config.block.open, config.block.close).toggle(option, state) : null;\n};\nconst toggleLineCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.line ? new LineCommenter(config.line).toggle(option, state) : null;\n};\n// This class performs toggle, comment and uncomment\n// of block comments in languages that support them.\n// The `open` and `close` arguments refer to the open and close\n// tokens of which this `BlockCommenter` is made up.\nclass BlockCommenter {\n    constructor(open, close, margin = \" \") {\n        this.open = open;\n        this.close = close;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const selectionCommented = this.isSelectionCommented(state);\n        if (selectionCommented !== null) {\n            if (option !== CommentOption.OnlyComment) {\n                return state.update({\n                    changes: selectionCommented.map(({ open, close }) => [\n                        { from: open.pos - this.open.length, to: open.pos + open.margin },\n                        { from: close.pos - close.margin, to: close.pos + this.close.length }\n                    ])\n                });\n            }\n        }\n        else {\n            if (option !== CommentOption.OnlyUncomment) {\n                return state.update(state.changeByRange(range => {\n                    const shift = (this.open + this.margin).length;\n                    return {\n                        changes: [{ from: range.from, insert: this.open + this.margin },\n                            { from: range.to, insert: this.margin + this.close }],\n                        range: EditorSelection.range(range.anchor + shift, range.head + shift)\n                    };\n                }));\n            }\n        }\n        return null;\n    }\n    /// Determines whether all selection ranges in `state` are block-commented.\n    isSelectionCommented(state) {\n        let result = [];\n        for (const range of state.selection.ranges) {\n            const x = this.isRangeCommented(state, range);\n            if (x === null)\n                return null;\n            result.push(x);\n        }\n        return result;\n    }\n    /// Determines if the `range` is block-commented in the given `state`.\n    /// The `range` must be a valid range in `state`.\n    isRangeCommented(state, range) {\n        let textBefore = state.sliceDoc(range.from - SearchMargin, range.from);\n        let textAfter = state.sliceDoc(range.to, range.to + SearchMargin);\n        let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n        let beforeOff = textBefore.length - spaceBefore;\n        if (textBefore.slice(beforeOff - this.open.length, beforeOff) == this.open &&\n            textAfter.slice(spaceAfter, spaceAfter + this.close.length) == this.close) {\n            return { open: { pos: range.from - spaceBefore, margin: spaceBefore && 1 },\n                close: { pos: range.to + spaceAfter, margin: spaceAfter && 1 } };\n        }\n        let startText, endText;\n        if (range.to - range.from <= 2 * SearchMargin) {\n            startText = endText = state.sliceDoc(range.from, range.to);\n        }\n        else {\n            startText = state.sliceDoc(range.from, range.from + SearchMargin);\n            endText = state.sliceDoc(range.to - SearchMargin, range.to);\n        }\n        let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n        let endOff = endText.length - endSpace - this.close.length;\n        if (startText.slice(startSpace, startSpace + this.open.length) == this.open &&\n            endText.slice(endOff, endOff + this.close.length) == this.close) {\n            return { open: { pos: range.from + startSpace + this.open.length,\n                    margin: /\\s/.test(startText.charAt(startSpace + this.open.length)) ? 1 : 0 },\n                close: { pos: range.to - endSpace - this.close.length,\n                    margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n        }\n        return null;\n    }\n}\nconst SearchMargin = 50;\n// This class performs toggle, comment and uncomment\n// of line comments in languages that support them.\n// The `lineCommentToken` argument refer to the token of\n// which this `LineCommenter` is made up.\nclass LineCommenter {\n    constructor(lineCommentToken, margin = \" \") {\n        this.lineCommentToken = lineCommentToken;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const linesAcrossSelection = [];\n        const linesAcrossRange = {};\n        for (let i = 0; i < state.selection.ranges.length; i++) {\n            const lines = getLinesInRange(state.doc, state.selection.ranges[i]);\n            linesAcrossSelection.push(...lines);\n            linesAcrossRange[i] = lines;\n        }\n        const column = this.isRangeCommented(state, linesAcrossSelection);\n        if (column.isRangeLineSkipped) {\n            if (option != CommentOption.OnlyComment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length > 1 && column.isLineSkipped[line.number])\n                            continue;\n                        const pos = line.from + column.minCol;\n                        const posAfter = column.minCol + this.lineCommentToken.length;\n                        const marginLen = line.slice(posAfter, posAfter + 1) == \" \" ? 1 : 0;\n                        changes.push({ from: pos, to: pos + this.lineCommentToken.length + marginLen });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        else {\n            if (option != CommentOption.OnlyUncomment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length <= 1 || !column.isLineSkipped[line.number])\n                            changes.push({ from: line.from + column.minCol, insert: this.lineCommentToken + this.margin });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        return null;\n    }\n    isRangeCommented(_state, lines) {\n        let minCol = Infinity;\n        let isRangeLineDiscarded = true;\n        const isLineSkipped = [];\n        for (const line of lines) {\n            const str = line.slice(0, Math.min(line.length, SearchMargin));\n            const col = /^\\s*/.exec(str)[0].length;\n            if ((lines.length == 1 || col < str.length) && col < minCol) {\n                minCol = col;\n            }\n            if (isRangeLineDiscarded && (lines.length == 1 || col < str.length) &&\n                str.slice(col, col + this.lineCommentToken.length) != this.lineCommentToken) {\n                isRangeLineDiscarded = false;\n            }\n            isLineSkipped[line.number] = col == str.length;\n        }\n        return { minCol: minCol, isRangeLineSkipped: isRangeLineDiscarded, isLineSkipped: isLineSkipped };\n    }\n}\n// Computes the lines spanned by `range`.\n/// @internal\nfunction getLinesInRange(doc, range) {\n    let line = doc.lineAt(range.from);\n    const lines = [];\n    while (line.from + line.length < range.to ||\n        (line.from <= range.to && range.to <= line.to)) {\n        lines.push(line);\n        if (line.number + 1 <= doc.lines) {\n            line = doc.line(line.number + 1);\n        }\n        else {\n            break;\n        }\n    }\n    return lines;\n}\n\nexport { blockComment, blockUncomment, commentKeymap, lineComment, lineUncomment, toggleBlockComment, toggleLineComment };\n","import { EditorView, ViewPlugin, themeClass, BlockType, PluginField, Direction } from '@codemirror/next/view';\nimport { RangeValue, Range, RangeSet } from '@codemirror/next/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/next/state';\n\n/// A gutter marker represents a bit of information attached to a line\n/// in a specific gutter. Your own custom markers have to extend this\n/// class.\nclass GutterMarker extends RangeValue {\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// Render the DOM node for this marker, if any.\n    toDOM(_view) { return null; }\n    /// Create a range that places this marker at the given position.\n    at(pos) { return new Range(pos, pos, this); }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nconst defaults = {\n    style: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = Facet.define();\n/// Define an editor gutter.\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = EditorView.baseTheme({\n    $gutters: {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0\n    },\n    \"$$light $gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"$$dark $gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    $gutter: {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        height: \"100%\",\n        overflow: \"hidden\"\n    },\n    $gutterElement: {\n        boxSizing: \"border-box\"\n    },\n    \"$gutterElement.lineNumber\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    }\n});\nconst unfixGutters = Facet.define({\n    combine: values => values.some(x => x)\n});\n/// The gutter-drawing plugin is automatically enabled when you add a\n/// gutter, but you can use this function to explicitly configure it.\n///\n/// Unless `fixed` is explicitly set to `false`, the gutters are\n/// fixed, meaning they don't scroll along with the content\n/// horizontally.\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutters\");\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (!this.updateGutters(update))\n            return;\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport));\n        this.view.viewportLines(line => {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                return;\n            for (let cx of contexts)\n                cx.line(this.view, text);\n        }, 0);\n        for (let cx of contexts)\n            cx.finish();\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (update.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n    }\n    updateGutters(update) {\n        let prev = update.prevState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged;\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters)\n                g.dom.remove();\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        this.dom.remove();\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nclass UpdateContext {\n    constructor(gutter, viewport) {\n        this.gutter = gutter;\n        this.localMarkers = [];\n        this.i = 0;\n        this.height = 0;\n        this.cursor = RangeSet.iter(Array.isArray(gutter.markers) ? gutter.markers : [gutter.markers], viewport.from);\n    }\n    line(view, line) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        while (this.cursor.value && this.cursor.from <= line.from) {\n            if (this.cursor.from == line.from)\n                this.localMarkers.push(this.cursor.value);\n            this.cursor.next();\n        }\n        let forLine = this.gutter.config.lineMarker(view, line, this.localMarkers);\n        if (forLine)\n            this.localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (this.localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, this.localMarkers, gutter.elementClass);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            let markers = this.localMarkers, elt = gutter.elements[this.i];\n            if (sameMarkers(markers, elt.markers)) {\n                markers = elt.markers;\n                this.localMarkers.length = 0;\n            }\n            elt.update(view, line.height, above, markers, gutter.elementClass);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i)\n            gutter.dom.removeChild(gutter.elements.pop().dom);\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutter\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        this.elementClass = themeClass(\"gutterElement\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.visualLineAtHeight(event.clientY, view.contentDOM.getBoundingClientRect().top);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = config.markers(view.state);\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)], this.elementClass);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = this.config.markers(update.state);\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated], this.elementClass);\n        }\n        return this.markers != prevMarkers;\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers, eltClass) {\n        this.height = -1;\n        this.above = 0;\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers, eltClass);\n    }\n    update(view, height, above, markers, cssClass) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (this.markers != markers) {\n            this.markers = markers;\n            for (let ch; ch = this.dom.lastChild;)\n                ch.remove();\n            let cls = cssClass;\n            for (let m of markers) {\n                let dom = m.toDOM(view);\n                if (dom)\n                    this.dom.appendChild(dom);\n                let c = m.elementClass;\n                if (c)\n                    cls += \" \" + c;\n            }\n            this.dom.className = cls;\n        }\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/// Facet used to provide markers to the line number gutter.\nconst lineNumberMarkers = Facet.define();\nconst lineNumberConfig = Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM(view) {\n        let config = view.state.facet(lineNumberConfig);\n        return document.createTextNode(config.formatNumber(this.number));\n    }\n}\nconst lineNumberGutter = gutter({\n    style: \"lineNumber\",\n    markers(state) { return state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.length)\n            return null;\n        // FIXME try to make the line number queries cheaper?\n        return new NumberMarker(view.state.doc.lineAt(line.from).number);\n    },\n    initialSpacer(view) {\n        return new NumberMarker(maxLineNumber(view.state.doc.lines));\n    },\n    updateSpacer(spacer, update) {\n        let max = maxLineNumber(update.view.state.doc.lines);\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    }\n});\n/// Create a line number gutter extension. The order in which the\n/// gutters appear is determined by their extension priority.\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\n\nexport { GutterMarker, gutter, gutters, lineNumberMarkers, lineNumbers };\n","import { Decoration, themeClass, ViewPlugin, EditorView } from '@codemirror/next/view';\nimport { Facet, combineConfig, CharCategory } from '@codemirror/next/state';\nimport { SearchCursor } from '@codemirror/next/search';\n\n/// Mark lines that have a cursor on them with the \\`$activeLine\\`\n/// theme class.\nfunction highlightActiveLine() {\n    return [defaultTheme, activeLineHighlighter];\n}\nconst lineDeco = Decoration.line({ attributes: { class: themeClass(\"activeLine\") } });\nconst activeLineHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                continue;\n            let line = view.visualLineAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/// This extension highlights text that matches the selection. It uses\n/// the `$selectionMatch` theme class for the highlighting. When\n/// `highlightWordAroundCursor` is enabled, the word at the cursor\n/// itself will be highlighted with `selectionMatch.main`.\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nfunction wordAt(doc, pos, check) {\n    let line = doc.lineAt(pos);\n    let from = pos - line.from, to = pos - line.from;\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (check(line.slice(prev, from)) != CharCategory.Word)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (check(line.slice(to, next)) != CharCategory.Word)\n            break;\n        to = next;\n    }\n    return from == to ? null : line.slice(from, to);\n}\nconst matchDeco = Decoration.mark({ class: themeClass(\"selectionMatch\") });\nconst mainMatchDeco = Decoration.mark({ class: themeClass(\"selectionMatch.main\") });\nconst matchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.primary, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = wordAt(state.doc, range.head, check);\n            if (!query)\n                return Decoration.none;\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            query = state.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return Decoration.none;\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n                    (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = EditorView.baseTheme({\n    \"$$light $activeLine\": { backgroundColor: \"#f3f9ff\" },\n    \"$$dark $activeLine\": { backgroundColor: \"#223039\" },\n    \"$selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \"$searchMatch $selectionMatch\": { backgroundColor: \"transparent\" }\n});\n\nexport { highlightActiveLine, highlightSelectionMatches };\n","import { NodeProp } from 'lezer-tree';\nimport { StyleModule } from 'style-mod';\nimport { EditorView, ViewPlugin, Decoration } from '@codemirror/next/view';\nimport { Facet, precedence } from '@codemirror/next/state';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nlet nextTagID = 0;\n/// Highlighting tags are markers that denote a highlighting category.\n/// They are [associated](#highlight.styleTags) with parts of a syntax\n/// tree by a language mode, and then mapped to an actual CSS style by\n/// a [highlight style](#highlight.highlightStyle).\n///\n/// CodeMirror uses a mostly-closed set of tags for generic\n/// highlighters, so that the list of things that a theme must style\n/// is clear and bounded (as opposed to traditional open string-based\n/// systems, which make it hard for highlighting themes to cover all\n/// the tokens produced by the various languages).\n///\n/// It _is_ possible to [define](#highlight.Tag^define) your own\n/// highlighting tags for system-internal use (where you control both\n/// the language package and the highlighter), but such tags will not\n/// be picked up by other highlighters (though you can derive them\n/// from standard tags to allow the highlighters to fall back to\n/// those).\nclass Tag {\n    /// @internal\n    constructor(\n    /// The set of tags that match this tag, starting with this one\n    /// itself, sorted in order of decreasing specificity. @internal\n    set, \n    /// The base unmodified tag that this one is based on, if it's\n    /// modified @internal\n    base, \n    /// The modifiers applied to this.base @internal\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /// @internal\n        this.id = nextTagID++;\n    }\n    /// Define a new tag. If `parent` is given, the tag is treated as a\n    /// sub-tag of that parent, and [highlight\n    /// styles](#highlight.highlightStyle) that don't mention this tag\n    /// will try to fall back to the parent tag (or grandparent tag,\n    /// etc).\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /// Define a tag _modifier_, which is a function that, given a tag,\n    /// will return a tag that is a subtag of the original. Applying the\n    /// same modifier to a twice tag will return the same value (`m1(t1)\n    /// == m1(t1)`) and applying multiple modifiers will, regardless or\n    /// order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    ///\n    /// When multiple modifiers are applied to a given base tag, each\n    /// smaller set of modifiers is registered as a parent, so that for\n    /// example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    /// `m1(m3(t1)`, and so on.\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = permute(mods);\n        for (let parent of base.set)\n            for (let config of configs)\n                set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction permute(array) {\n    let result = [array];\n    for (let i = 0; i < array.length; i++) {\n        for (let a of permute(array.slice(0, i).concat(array.slice(i + 1))))\n            result.push(a);\n    }\n    return result;\n}\n/// This function is used to add a set of tags to a language syntax\n/// via\n/// [`Parser.configure`](https://lezer.codemirror.net/docs/ref#lezer.Parser.configure).\n///\n/// The argument object maps node selectors to [highlighting\n/// tags](#highlight.Tag) or arrays of tags.\n///\n/// Node selectors may hold one or more (space-separated) node paths.\n/// Such a path can be a [node\n/// name](https://lezer.codemirror.net/docs/ref#tree.NodeType.name),\n/// or multiple node names (or `*` wildcards) separated by slash\n/// characters, as in `\"Block/Declaration/VariableName\"`. Such a path\n/// matches the final node but only if its direct parent nodes are the\n/// other nodes mentioned. A `*` in such a path matches any parent,\n/// but only a single level—wildcards that match multiple parents\n/// aren't supported, both for efficiency reasons and because Lezer\n/// trees make it rather hard to reason about what they would match.)\n///\n/// A path can be ended with `/...` to indicate that the tag assigned\n/// to the node should also apply to all parent nodes, even if they\n/// match their own style (by default, only the innermost style is\n/// used).\n///\n/// When a path ends in `!`, as in `Attribute!`, no further matching\n/// happens for the node's child nodes, and the entire node gets the\n/// given style.\n///\n/// In this notation, node names that contain `/`, `!`, `*`, or `...`\n/// must be quoted as JSON strings.\n///\n/// For example:\n///\n/// ```javascript\n/// parser.withProps(\n///   styleTags({\n///     // Style Number and BigNumber nodes\n///     \"Number BigNumber\": tags.number,\n///     // Style Escape nodes whose parent is String\n///     \"String/Escape\": tags.escape,\n///     // Style anything inside Attributes nodes\n///     \"Attributes!\": tags.meta,\n///     // Add a style to all content inside Italic nodes\n///     \"Italic/...\": tags.emphasis,\n///     // Style InvalidString nodes as both `string` and `invalid`\n///     \"InvalidString\": tags.string + tags.invalid,\n///     // Style the node named \"/\" as punctuation\n///     '\"/\"': tags.punctuation\n///   })\n/// )\n/// ```\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? null : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nconst highlightStyleProp = Facet.define({\n    combine(stylings) { return stylings.length ? stylings[0] : null; }\n});\n/// Create a highlighter style that associates the given styles to the\n/// given tags. The spec's property names must be\n/// [tags](#highlight.Tag) or lists of tags (which can be concatenated\n/// with `+`). The values should be\n/// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n/// style objects that define the CSS for that tag.\n///\n/// The CSS rules created for a highlighter will be emitted in the\n/// order of the spec's properties. That means that for elements that\n/// have multiple tags associated with them, styles defined further\n/// down in the list will have a higher CSS precedence than styles\n/// defined earlier.\nfunction highlightStyle(...specs) {\n    let styling = new Styling(specs);\n    return [\n        highlightStyleProp.of(styling),\n        EditorView.styleModule.of(styling.module)\n    ];\n}\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nclass Styling {\n    constructor(spec) {\n        this.map = Object.create(null);\n        let modSpec = Object.create(null);\n        for (let style of spec) {\n            let cls = StyleModule.newName();\n            modSpec[\".\" + cls] = Object.assign({}, style, { tag: null });\n            let tags = style.tag;\n            if (!Array.isArray(tags))\n                tags = [tags];\n            for (let tag of tags)\n                this.map[tag.id] = cls;\n        }\n        this.module = new StyleModule(modSpec);\n    }\n    match(tag) {\n        for (let t of tag.set) {\n            let match = this.map[t.id];\n            if (match) {\n                if (t != tag)\n                    this.map[tag.id] = match;\n                return match;\n            }\n        }\n        return this.map[tag.id] = null;\n    }\n}\n/// Returns an extension that installs a highlighter that uses the\n/// tree produced by the given language, along with the current\n/// [highlight style](#highlight.highlightStyle), to style the\n/// document. If no highlight style is active, this plugin won't do\n/// any highlighting.\nfunction treeHighlighter(language) {\n    return precedence(ViewPlugin.define(view => new TreeHighlighter(view, language), {\n        decorations: v => v.decorations\n    }), \"fallback\");\n}\nclass TreeHighlighter {\n    constructor(view, language) {\n        this.language = language;\n        // Reused stacks for buildDeco\n        this.nodeStack = [\"\"];\n        this.classStack = [\"\"];\n        this.inheritStack = [\"\"];\n        this.markCache = Object.create(null);\n        this.tree = language.getTree(view.state);\n        this.decorations = this.buildDeco(view);\n    }\n    update(update) {\n        if (this.language.getTree(update.state).length < update.view.viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else {\n            let tree = this.language.getTree(update.state);\n            if (tree != this.tree || update.viewportChanged) {\n                this.tree = tree;\n                this.decorations = this.buildDeco(update.view);\n            }\n        }\n    }\n    buildDeco(view) {\n        const style = view.state.facet(highlightStyleProp);\n        if (!style)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        let start, curClass, depth;\n        let flush = (pos, style) => {\n            if (pos > start && style) {\n                let mark = this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style }));\n                builder.add(start, pos, mark);\n            }\n            start = pos;\n        };\n        let { nodeStack, classStack, inheritStack } = this;\n        for (let { from, to } of view.visibleRanges) {\n            curClass = \"\";\n            depth = 0;\n            start = from;\n            this.tree.iterate({\n                from, to,\n                enter: (type, start) => {\n                    depth++;\n                    let inheritedClass = inheritStack[depth - 1];\n                    let cls = inheritedClass;\n                    let rule = type.prop(ruleNodeProp), opaque = false;\n                    while (rule) {\n                        if (!rule.context || matchContext(rule.context, nodeStack, depth)) {\n                            for (let tag of rule.tags) {\n                                let st = style.match(tag);\n                                if (st) {\n                                    if (cls)\n                                        cls += \" \";\n                                    cls += st;\n                                    if (rule.mode == 1 /* Inherit */)\n                                        inheritedClass = cls;\n                                    else if (rule.mode == 0 /* Opaque */)\n                                        opaque = true;\n                                }\n                            }\n                            break;\n                        }\n                        rule = rule.next;\n                    }\n                    if (cls != curClass) {\n                        flush(start, curClass);\n                        curClass = cls;\n                    }\n                    if (opaque) {\n                        depth--;\n                        return false;\n                    }\n                    classStack[depth] = cls;\n                    inheritStack[depth] = inheritedClass;\n                    nodeStack[depth] = type.name;\n                    return undefined;\n                },\n                leave: (_t, _s, end) => {\n                    depth--;\n                    let backTo = classStack[depth];\n                    if (backTo != curClass) {\n                        flush(Math.min(to, end), curClass);\n                        curClass = backTo;\n                    }\n                }\n            });\n        }\n        return builder.finish();\n    }\n}\nfunction matchContext(context, stack, depth) {\n    if (context.length > depth - 1)\n        return false;\n    for (let d = depth - 1, i = context.length - 1; i >= 0; i--, d--) {\n        let check = context[i];\n        if (check && check != stack[d])\n            return false;\n    }\n    return true;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/// The default set of highlighting [tags](#highlight.Tag^define) used\n/// by regular language packages and themes.\n///\n/// This collection is heavily biasted towards programming language,\n/// and necessarily incomplete. A full ontology of syntactic\n/// constructs would fill a stack of books, and be impractical to\n/// write themes for. So try to make do with this set, possibly\n/// encoding more information with flags. If all else fails, [open an\n/// issue](https://github.com/codemirror/codemirror.next) to propose a\n/// new type, or [define](#highlight.Tag^define) a custom tag for your\n/// use case.\n///\n/// Note that it is not obligatory to always attach the most specific\n/// tag possible to an element—if your grammar can't easily\n/// distinguish a certain type of element, it is okay to style it as\n/// its more general variant.\n/// \n/// For tags that extend some parent tag, the documentation links to\n/// the parent.\nconst tags = {\n    /// A comment.\n    comment,\n    /// A line [comment](#highlight.tags.comment).\n    lineComment: t(comment),\n    /// A block [comment](#highlight.tags.comment).\n    blockComment: t(comment),\n    /// A documentation [comment](#highlight.tags.comment).\n    docComment: t(comment),\n    /// Any kind of identifier.\n    name,\n    /// The [name](#highlight.tags.name) of a variable.\n    variableName: t(name),\n    /// A type or tag [name](#highlight.tags.name).\n    typeName: t(name),\n    /// A property, field, or attribute [name](#highlight.tags.name).\n    propertyName: t(name),\n    /// The [name](#highlight.tags.name) of a class.\n    className: t(name),\n    /// A label [name](#highlight.tags.name).\n    labelName: t(name),\n    /// A namespace [name](#highlight.tags.name).\n    namespace: t(name),\n    /// The [name](#highlight.tags.name) of a macro.\n    macroName: t(name),\n    /// A literal value.\n    literal,\n    /// A string [literal](#highlight.tags.literal).\n    string,\n    /// A documentation [string](#highlight.tags.string).\n    docString: t(string),\n    /// A character literal (subtag of [string](#highlight.tags.string)).\n    character: t(string),\n    /// A number [literal](#highlight.tags.literal).\n    number,\n    /// An integer [number](#highlight.tags.number) literal.\n    integer: t(number),\n    /// A floating-point [number](#highlight.tags.number) literal.\n    float: t(number),\n    /// A boolean [literal](#highlight.tags.literal).\n    bool: t(literal),\n    /// Regular expression [literal](#highlight.tags.literal).\n    regexp: t(literal),\n    /// An escape [literal](#highlight.tags.literal), for example a\n    /// backslash escape in a string.\n    escape: t(literal),\n    /// A color [literal](#highlight.tags.literal).\n    color: t(literal),\n    /// A URL [literal](#highlight.tags.literal).\n    url: t(literal),\n    /// A language keyword.\n    keyword,\n    /// The [keyword](#highlight.tags.keyword) for the self or this\n    /// object.\n    self: t(keyword),\n    /// The [keyword](#highlight.tags.keyword) for null.\n    null: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    atom: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that represents a unit.\n    unit: t(keyword),\n    /// A modifier [keyword](#highlight.tags.keyword).\n    modifier: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that acts as an operator.\n    operatorKeyword: t(keyword),\n    /// A control-flow related [keyword](#highlight.tags.keyword).\n    controlKeyword: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that defines something.\n    definitionKeyword: t(keyword),\n    /// An operator.\n    operator,\n    /// An [operator](#highlight.tags.operator) that defines something.\n    derefOperator: t(operator),\n    /// Arithmetic-related [operator](#highlight.tags.operator).\n    arithmeticOperator: t(operator),\n    /// Logical [operator](#highlight.tags.operator).\n    logicOperator: t(operator),\n    /// Bit [operator](#highlight.tags.operator).\n    bitwiseOperator: t(operator),\n    /// Comparison [operator](#highlight.tags.operator).\n    compareOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that updates its operand.\n    updateOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that defines something.\n    definitionOperator: t(operator),\n    /// Type-related [operator](#highlight.tags.operator).\n    typeOperator: t(operator),\n    /// Control-flow [operator](#highlight.tags.operator).\n    controlOperator: t(operator),\n    /// Program or markup punctuation.\n    punctuation,\n    /// [Punctuation](#highlight.tags.punctuation) that separates\n    /// things.\n    separator: t(punctuation),\n    /// Bracket-style [punctuation](#highlight.tags.punctuation).\n    bracket,\n    /// Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    /// tokens).\n    angleBracket: t(bracket),\n    /// Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    /// tokens).\n    squareBracket: t(bracket),\n    /// Parentheses (usually `(` and `)` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket)).\n    paren: t(bracket),\n    /// Braces (usually `{` and `}` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket)).\n    brace: t(bracket),\n    /// Content, for example plain text in XML or markup documents.\n    content,\n    /// [Content](#highlight.tags.content) that represents a heading.\n    heading,\n    /// A level 1 [heading](#highlight.tags.heading).\n    heading1: t(heading),\n    /// A level 2 [heading](#highlight.tags.heading).\n    heading2: t(heading),\n    /// A level 3 [heading](#highlight.tags.heading).\n    heading3: t(heading),\n    /// A level 4 [heading](#highlight.tags.heading).\n    heading4: t(heading),\n    /// A level 5 [heading](#highlight.tags.heading).\n    heading5: t(heading),\n    /// A level 6 [heading](#highlight.tags.heading).\n    heading6: t(heading),\n    /// [Content](#highlight.tags.content) that represents a list or\n    /// list marker.\n    list: t(content),\n    /// [Content](#highlight.tags.content) that represents a quote.\n    quote: t(content),\n    /// [Content](#highlight.tags.content) that is emphasized.\n    emphasis: t(content),\n    /// [Content](#highlight.tags.content) that is styled strong.\n    strong: t(content),\n    /// [Content](#highlight.tags.content) that is part of a link.\n    link: t(content),\n    /// [Content](#highlight.tags.content) that is styled as code or\n    /// monospace.\n    monospace: t(content),\n    /// Inserted content in a change-tracking format.\n    inserted: t(),\n    /// Deleted content.\n    deleted: t(),\n    /// Changed content.\n    changed: t(),\n    /// An invalid or unsyntactic element.\n    invalid: t(),\n    /// Metadata or meta-instruction.\n    meta,\n    /// [Metadata](#highlight.tags.meta) that applies to the entire\n    /// document.\n    documentMeta: t(meta),\n    /// [Metadata](#highlight.tags.meta) that annotates or adds\n    /// attributes to a given syntactic element.\n    annotation: t(meta),\n    /// Processing instruction or preprocessor directive. Subtag of\n    /// [meta](#highlight.tags.meta)).\n    processingInstruction: t(meta),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    /// given element is being defined. Expected to be used with the\n    /// various [name](#highlight.tags.name) tags.\n    definition: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that\n    /// something is constant. Mostly expected to be used with\n    /// [variable names](#highlight.tags.variableName).\n    constant: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) used to indicate that a\n    /// [variable name](#highlight.tags.variableName) is being called or\n    /// being defined as a function.\n    function: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    /// [names](#highlight.tags.name) to indicate that they belong to\n    /// the standard environment.\n    standard: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    /// [names](#highlight.tags.name) is local to some scope.\n    local: Tag.defineModifier(),\n    /// A generic variant [modifier](#highlight.Tag^defineModifier) that\n    /// can be used to tag language-specific alternative variants of\n    /// some common tag. It is recommended for themes to define special\n    /// forms of at least the [string](#highlight.tags.string) and\n    /// [variable name](#highlight.tags.variableName) tags, since those\n    /// come up a lot.\n    special: Tag.defineModifier()\n};\n/// A default highlight style (works well with light themes).\nconst defaultHighlightStyle = precedence(highlightStyle({ tag: tags.deleted,\n    textDecoration: \"line-through\" }, { tag: [tags.inserted, tags.link],\n    textDecoration: \"underline\" }, { tag: tags.heading,\n    textDecoration: \"underline\",\n    fontWeight: \"bold\" }, { tag: tags.emphasis,\n    fontStyle: \"italic\" }, { tag: tags.strong,\n    fontWeight: \"bold\" }, { tag: tags.keyword,\n    color: \"#708\" }, { tag: [tags.atom, tags.bool, tags.url],\n    color: \"#219\" }, { tag: tags.number,\n    color: \"#164\" }, { tag: tags.string,\n    color: \"#a11\" }, { tag: [tags.regexp, tags.escape, tags.special(tags.string)],\n    color: \"#e40\" }, { tag: tags.definition(tags.variableName),\n    color: \"#00f\" }, { tag: tags.typeName,\n    color: \"#085\" }, { tag: tags.className,\n    color: \"#167\" }, { tag: tags.special(tags.variableName),\n    color: \"#256\" }, { tag: tags.definition(tags.propertyName),\n    color: \"#00c\" }, { tag: tags.comment,\n    color: \"#940\" }, { tag: tags.meta,\n    color: \"#555\" }, { tag: tags.invalid,\n    color: \"#f00\" }), \"fallback\");\n\nexport { Tag, defaultHighlightStyle, highlightStyle, styleTags, tags, treeHighlighter };\n","import { NodeProp, Tree, TreeFragment } from 'lezer-tree';\nimport { Facet, EditorState, StateEffect, StateField, Transaction } from '@codemirror/next/state';\nimport { ViewPlugin } from '@codemirror/next/view';\nimport { treeHighlighter } from '@codemirror/next/highlight';\nimport { countColumn } from '@codemirror/next/text';\n\n/// The facet used to associate a language with an editor state.\nconst language = Facet.define();\n/// Node prop stored on a grammar's top node to indicate the facet used\n/// to store language data related to that language.\nconst languageDataProp = new NodeProp();\n/// Helper function to define a facet (to be added to the top syntax\n/// node(s) for a language via\n/// [`languageDataProp`](#language.languageDataProp)), that will be\n/// used to associate language data with the language. You\n/// probably only need this when subclassing\n/// [`Language`](#language.Language).\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/// A language object manages parsing and per-language\n/// [metadata](#state.EditorState.languageDataAt). Parse data is\n/// managed as a [Lezer](https://lezer.codemirror.net) tree. You'll\n/// want to subclass this class for custom parsers, or use the\n/// [`LezerLanguage`](#language.LezerLanguage) or\n/// [`StreamLanguage`](#stream-parser.StreamLanguage) abstractions for\n/// [Lezer](https://lezer.codemirror.net/) or stream parsers.\nclass Language {\n    constructor(\n    /// The [language data](#state.EditorState.languageDataAt) data\n    /// facet used for this language.\n    data, parser, extraExtensions = []) {\n        this.data = data;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        let setState = StateEffect.define();\n        this.parser = parser;\n        this.field = StateField.define({\n            create(state) {\n                let parseState = new EditorParseContext(parser, state, [], Tree.empty, { from: 0, to: state.doc.length }, []);\n                if (!parseState.work(25 /* Apply */))\n                    parseState.takeTree();\n                return new LanguageState(parseState);\n            },\n            update(value, tr) {\n                for (let e of tr.effects)\n                    if (e.is(setState))\n                        return e.value;\n                return value.apply(tr);\n            }\n        });\n        this.extension = [\n            language.of(this),\n            this.field,\n            ViewPlugin.define(view => new ParseWorker(view, this.field, setState)),\n            treeHighlighter(this),\n            EditorState.languageData.of((state, pos) => state.facet(this.languageDataFacetAt(state, pos)))\n        ].concat(extraExtensions);\n    }\n    /// Retrieve the parser tree for a given state.\n    getTree(state) {\n        return state.field(this.field).tree;\n    }\n    /// Try to get a parse tree that spans at least up to `upto`. The\n    /// method will do at most `timeout` milliseconds of work to parse\n    /// up to that point if the tree isn't already available.\n    ensureTree(state, upto, timeout = 100) {\n        let parse = state.field(this.field).context;\n        return parse.tree.length >= upto || parse.work(timeout, upto) ? parse.tree : null;\n    }\n    /// @internal\n    languageDataFacetAt(state, pos) {\n        let tree = this.getTree(state);\n        let target = tree.resolve(pos, -1);\n        while (target) {\n            let facet = target.type.prop(languageDataProp);\n            if (facet)\n                return facet;\n            target = target.parent;\n        }\n        return this.data;\n    }\n}\n/// A subclass of `Language` for use with\n/// [Lezer](https://lezer.codemirror.net/docs/ref#lezer.Parser)\n/// parsers.\nclass LezerLanguage extends Language {\n    constructor(data, parser) {\n        super(data, parser);\n        this.parser = parser;\n    }\n    /// Define a language from a parser.\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LezerLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }));\n    }\n    /// Create a new instance of this language with a reconfigured\n    /// version of its parser.\n    configure(options) {\n        return new LezerLanguage(this.data, this.parser.configure(options));\n    }\n    languageDataFacetAt(state, pos) {\n        return this.parser.hasNested ? super.languageDataFacetAt(state, pos) : this.data;\n    }\n}\n/// Get the syntax tree for a state, which is the current (possibly\n/// incomplete) parse tree of the [language](#language.Language) with\n/// the highest precedence, or the empty tree if there is no language\n/// available.\nfunction syntaxTree(state) {\n    let lang = state.facet(language);\n    return lang.length ? lang[0].getTree(state) : Tree.empty;\n}\n// Lezer-style Input object for a Text document.\nclass DocInput {\n    constructor(doc, length = doc.length) {\n        this.doc = doc;\n        this.length = length;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.prevString = \"\";\n        this.cursor = doc.iter();\n    }\n    syncTo(pos) {\n        if (pos < this.cursorPos) { // Reset the cursor if we have to go back\n            this.cursor = this.doc.iter();\n            this.cursorPos = 0;\n        }\n        this.prevString = pos == this.cursorPos ? this.string : \"\";\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    get(pos) {\n        if (pos >= this.length)\n            return -1;\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos) {\n            if (pos < stringStart && pos >= stringStart - this.prevString.length)\n                return this.prevString.charCodeAt(pos - (stringStart - this.prevString.length));\n            stringStart = this.syncTo(pos);\n        }\n        return this.string.charCodeAt(pos - stringStart);\n    }\n    lineAfter(pos) {\n        if (pos >= this.length || pos < 0)\n            return \"\";\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos)\n            stringStart = this.syncTo(pos);\n        let off = pos - stringStart, result = \"\";\n        while (!this.cursor.lineBreak) {\n            result += off ? this.string.slice(off) : this.string;\n            if (this.cursorPos >= this.length) {\n                if (this.cursorPos > this.length)\n                    result = result.slice(0, result.length - (this.cursorPos - this.length));\n                break;\n            }\n            this.syncTo(this.cursorPos);\n            off = 0;\n        }\n        return result;\n    }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n    clip(at) {\n        return new DocInput(this.doc, at);\n    }\n}\n/// A parse context provided to parsers working on the editor content.\nclass EditorParseContext {\n    /// @internal\n    constructor(parser, \n    /// The current editor state.\n    state, \n    /// Tree fragments that can be reused by new parses.\n    fragments = [], \n    /// @internal\n    tree, \n    /// The current editor viewport, or some approximation thereof.\n    /// Intended to be used for opportunistically avoiding work (in\n    /// which case\n    /// [`skipUntilInView`](#language.EditorParseContext.skipUntilInView)\n    /// should be called to make sure the parser is restarted when the\n    /// skipped region becomes visible).\n    viewport, \n    /// @internal\n    skipped) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.parse = null;\n        /// @internal\n        this.skippedUntil = [];\n    }\n    /// @internal\n    // FIXME do something with badness again\n    work(time, upto) {\n        if (this.tree != Tree.empty && (upto == null ? this.tree.length == this.state.doc.length : this.tree.length >= upto))\n            return true;\n        if (!this.parse)\n            this.parse = this.parser.startParse(new DocInput(this.state.doc), 0, this);\n        let endTime = Date.now() + time;\n        for (;;) {\n            let done = this.parse.advance();\n            if (done) {\n                this.fragments = TreeFragment.addTree(done);\n                this.parse = null;\n                this.tree = done;\n                return true;\n            }\n            else if (upto != null && this.parse.pos >= upto) {\n                this.takeTree();\n                return true;\n            }\n            if (Date.now() > endTime)\n                return false;\n        }\n    }\n    /// @internal\n    takeTree() {\n        if (this.parse && this.parse.pos > this.tree.length) {\n            this.tree = this.parse.forceFinish();\n            this.fragments = TreeFragment.addTree(this.tree, this.fragments, true);\n        }\n    }\n    /// @internal\n    changes(changes, newState) {\n        let { fragments, tree, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new EditorParseContext(this.parser, newState, fragments, tree, viewport, skipped);\n    }\n    /// @internal\n    updateViewport(viewport) {\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.cutFragments(from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        return this.skipped.length < startLen;\n    }\n    /// @internal\n    cutFragments(from, to) {\n        this.fragments = TreeFragment.applyChanges(this.fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n    }\n    /// @internal\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    skipUntil(from, to, until) {\n        this.skippedUntil.push({ from, to, until });\n    }\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged)\n            return this;\n        let newState = this.context.changes(tr.changes, tr.state);\n        newState.work(25 /* Apply */);\n        return new LanguageState(newState);\n    }\n}\nlet requestIdle = typeof window != \"undefined\" && window.requestIdleCallback ||\n    ((callback, { timeout }) => setTimeout(callback, timeout));\nlet cancelIdle = typeof window != \"undefined\" && window.cancelIdleCallback || clearTimeout;\n// FIXME figure out some way to back off from full re-parses when the\n// document is large—you could waste a lot of battery re-parsing a\n// multi-megabyte document every time you insert a backtick, even if\n// it happens in the background.\nclass ParseWorker {\n    constructor(view, field, setState) {\n        this.view = view;\n        this.field = field;\n        this.setState = setState;\n        this.working = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        if (update.docChanged)\n            this.scheduleWork();\n        let cx = this.view.state.field(this.field).context;\n        if (update.viewportChanged && cx.updateViewport(update.view.viewport)) {\n            cx.reset();\n            this.scheduleWork();\n        }\n        this.takeSkipped(cx);\n    }\n    scheduleWork() {\n        if (this.working > -1)\n            return;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.tree.length >= state.doc.length)\n            return;\n        this.working = requestIdle(this.work, { timeout: 200 /* Pause */ });\n    }\n    work(deadline) {\n        this.working = -1;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.tree.length >= state.doc.length)\n            return;\n        field.context.work(deadline ? Math.max(25 /* MinSlice */, deadline.timeRemaining()) : 100 /* Slice */);\n        if (field.context.tree.length >= state.doc.length) {\n            this.view.dispatch({ effects: this.setState.of(new LanguageState(field.context)) });\n            this.takeSkipped(field.context);\n        }\n        else {\n            this.scheduleWork();\n        }\n    }\n    takeSkipped(context) {\n        while (context.skippedUntil.length) {\n            let { from, to, until } = context.skippedUntil.pop();\n            until.then(() => {\n                let field = this.view.state.field(this.field, false);\n                if (field && field.context == context) {\n                    context.cutFragments(from, to);\n                    context.reset();\n                    this.scheduleWork();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.working >= 0)\n            cancelIdle(this.working);\n    }\n}\n\n/// Facet that defines a way to provide a function that computes the\n/// appropriate indentation depth at the start of a given line, or\n/// `null` to indicate no appropriate indentation could be determined.\nconst indentService = Facet.define();\n/// Facet for overriding the unit by which indentation happens.\n/// Should be a string consisting either entirely of spaces or\n/// entirely of tabs. When not set, this defaults to 2 spaces.\nconst indentUnit = Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        if (!/^(?: +|\\t+)$/.test(values[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return values[0];\n    }\n});\n/// Return the _column width_ of an indent unit in the state.\n/// Determined by the [`indentUnit`](#language.indentUnit)\n/// facet, and [`tabSize`](#state.EditorState^tabSize) when that\n/// contains tabs.\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/// Create an indentation string that covers columns 0 to `cols`.\n/// Will use tabs for as much of the columns as possible when the\n/// [`indentUnit`](#language.indentUnit) facet contains\n/// tabs.\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize;\n    if (state.facet(indentUnit).charCodeAt(0) == 9)\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n    for (let i = 0; i < cols; i++)\n        result += \" \";\n    return result;\n}\n/// Get the indentation at the given position. Will first consult any\n/// [indent services](#language.indentService) that are registered,\n/// and if none of those return an indentation, this will check the\n/// syntax tree for the [indent node prop](#language.indentNodeProp)\n/// and use that if found. Returns a number when an indentation could\n/// be determined, and null otherwise.\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result != null)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/// Indentation contexts are used when calling [indentation\n/// services](#language.indentService). They provide helper utilities\n/// useful in indentation logic, and can selectively override the\n/// indentation reported for some lines.\nclass IndentContext {\n    /// Create an indent context.\n    constructor(\n    /// The editor state.\n    state, \n    /// @internal\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /// Get the text directly after `pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    textAfterPos(pos) {\n        var _a, _b;\n        let sim = (_a = this.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n        if (pos == sim && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak))\n            return \"\";\n        return this.state.sliceDoc(pos, Math.min(pos + 100, sim != null && sim > pos ? sim : 1e9, this.state.doc.lineAt(pos).to));\n    }\n    /// find the column position (taking tabs into account) of the given\n    /// position in the given string.\n    countColumn(line, pos) {\n        return countColumn(pos < 0 ? line : line.slice(0, pos), 0, this.state.tabSize);\n    }\n    /// Find the indentation column of the given document line.\n    lineIndent(line) {\n        var _a;\n        let override = (_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation;\n        if (override) {\n            let overriden = override(line.from);\n            if (overriden > -1)\n                return overriden;\n        }\n        let text = line.slice(0, Math.min(100, line.length));\n        return this.countColumn(text, text.search(/\\S/));\n    }\n    /// Find the column for the given position.\n    column(pos) {\n        var _a;\n        let line = this.state.doc.lineAt(pos), text = line.slice(0, pos - line.from);\n        let result = this.countColumn(text, pos - line.from);\n        let override = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation) ? this.options.overrideIndentation(line.from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S/));\n        return result;\n    }\n}\n/// A syntax tree node prop used to associate indentation strategies\n/// with node types. Such a strategy is a function from an indentation\n/// context to a column number or null, where null indicates that no\n/// definitive indentation can be determined.\nconst indentNodeProp = new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let tree = ast.resolve(pos);\n    // Enter previous nodes that end in empty error terms, which means\n    // they were broken off by error recovery, so that indentation\n    // works even if the constructs haven't been finished.\n    for (let scan = tree, scanPos = pos;;) {\n        let last = scan.childBefore(scanPos);\n        if (!last)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            tree = scan;\n            scanPos = last.from;\n        }\n        else {\n            scan = last;\n            scanPos = scan.to + 1;\n        }\n    }\n    for (; tree; tree = tree.parent) {\n        let strategy = indentStrategy(tree);\n        if (strategy)\n            return strategy(new TreeIndentContext(cx, pos, tree));\n    }\n    return null;\n}\nfunction ignoreClosed(cx) {\n    var _a, _b;\n    return cx.pos == ((_a = cx.options) === null || _a === void 0 ? void 0 : _a.simulateBreak) && ((_b = cx.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak);\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/// Objects of this type provide context information and helper\n/// methods to indentation functions.\nclass TreeIndentContext extends IndentContext {\n    /// @internal\n    constructor(base, \n    /// The position at which indentation is being computed.\n    pos, \n    /// The syntax tree node for which the indentation strategy is\n    /// registered.\n    node) {\n        super(base.state, base.options);\n        this.pos = pos;\n        this.node = node;\n    }\n    /// Get the text directly after `this.pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /// Get the indentation at the reference line for `this.node`, which\n    /// is the line on which it starts, unless there is a node that is\n    /// _not_ a parent of this node covering the start of that line. If\n    /// so, the line at the start of that node is tried, again skipping\n    /// on if it is covered by another such node.\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    var _a;\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = (_a = context.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/// An indentation strategy for delimited (usually bracketed) nodes.\n/// Will, by default, indent one unit more than the parent's base\n/// indent unless the line starts with a closing token. When `align`\n/// is true and there are non-skipped nodes on the node's opening\n/// line, the content of the node will be aligned with the end of the\n/// opening node, like this:\n///\n///     foo(bar,\n///         baz)\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/// An indentation strategy that aligns a node content to its base\n/// indentation.\nconst flatIndent = (context) => context.baseIndent;\n/// Creates an indentation strategy that, by default, indents\n/// continued lines one unit more than the node's base indentation.\n/// You can provide `except` to prevent indentation of lines that\n/// match a pattern (for example `/^else\\b/` in `if`/`else`\n/// constructs), and you can change the amount of units used with the\n/// `units` option.\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/// Enables reindentation on input. When a language defines an\n/// `indentOnInput` field in its [language\n/// data](#state.EditorState.languageDataAt), which must hold a regular\n/// expression, the line at the cursor will be reindented whenever new\n/// text is typed and the input from the start of the line up to the\n/// cursor matches that regexp.\n///\n/// To avoid unneccesary reindents, it is recommended to start the\n/// regexp with `^` (usually followed by `\\s*`), and end it with `$`.\n/// For example, `/^\\s*\\}$` will reindent when a closing brace is\n/// added at the start of a line.\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || tr.annotation(Transaction.userEvent) != \"input\")\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.primary.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.primary, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, DontIndentBeyond)))[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes }] : tr;\n    });\n}\n\n/// A facet that registers a code folding service. When called with\n/// the extent of a line, such a function should return a range\n/// object when a foldable that starts on that line (but continues\n/// beyond it), if one can be found.\nconst foldService = Facet.define();\n/// This node prop is used to associate folding information with node\n/// types. Given a syntax node, it should check whether that tree is\n/// foldable and return the range that can be collapsed when it is.\nconst foldNodeProp = new NodeProp();\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length == 0)\n        return null;\n    let inner = tree.resolve(end);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\n/// Check whether the given line is foldable. First asks any fold\n/// services registered through\n/// [`foldService`](#language.foldService), and if none of them return\n/// a result, tries to query the [fold node\n/// prop](#language.foldNodeProp) of syntax nodes that cover the end\n/// of the line.\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\n\nexport { EditorParseContext, IndentContext, Language, LezerLanguage, TreeIndentContext, continuedIndent, defineLanguageFacet, delimitedIndent, flatIndent, foldNodeProp, foldService, foldable, getIndentUnit, getIndentation, indentNodeProp, indentOnInput, indentService, indentString, indentUnit, language, languageDataProp, syntaxTree };\n","import { EditorView, Decoration, themeClass, ViewPlugin, logException, WidgetType } from '@codemirror/next/view';\nimport { StateEffect, StateField } from '@codemirror/next/state';\nimport { hoverTooltip } from '@codemirror/next/tooltip';\nimport { panels, showPanel, getPanel } from '@codemirror/next/panel';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, diagnostics.length, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state) {\n    return state.field(lintState, false) ? undefined : { append: [\n            lintState,\n            EditorView.decorations.compute([lintState], state => {\n                let { selected, panel } = state.field(lintState);\n                return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                    activeMark.range(selected.from, selected.to)\n                ]);\n            }),\n            panels(),\n            hoverTooltip(lintTooltip),\n            baseTheme\n        ] };\n}\n/// State effect that is used to update the current set of\n/// diagnostics.\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: setDiagnosticsEffect.of(diagnostics),\n        reconfigure: maybeEnableLint(state)\n    };\n}\nconst setDiagnosticsEffect = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst movePanelSelection = StateEffect.define();\nconst lintState = StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let ranges = Decoration.set(effect.value.map((d) => {\n                    return d.from < d.to\n                        ? Decoration.mark({\n                            attributes: { class: themeClass(\"lintRange.\" + d.severity) },\n                            diagnostic: d\n                        }).range(d.from, d.to)\n                        : Decoration.widget({\n                            widget: new DiagnosticWidget(d),\n                            diagnostic: d\n                        }).range(d.from);\n                }));\n                value = new LintState(ranges, value.panel, findDiagnostic(ranges));\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel ? [s.panel] : []),\n        EditorView.decorations.from(s => s.diagnostics)]\n});\nconst activeMark = Decoration.mark({ class: themeClass(\"lintRange.active\") });\nfunction lintTooltip(view, check) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(0, view.state.doc.length, (start, end, { spec }) => {\n        if (check(start, end)) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(start, stackStart);\n            stackEnd = Math.max(end, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        style: \"lint\",\n        create() {\n            let dom = document.createElement(\"ul\");\n            for (let d of found)\n                dom.appendChild(renderDiagnostic(view, d));\n            return { dom };\n        }\n    };\n}\n/// Command to open and focus the lint panel.\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: maybeEnableLint(view.state) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/// Command to close the lint panel, when open.\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Move the selection to the next diagnostic.\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.primary, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/// A set of default key bindings for the lint functionality.\n///\n/// - Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](#lint.openLintPanel)\n/// - F8: [\\`nextDiagnostic\\`](#lint.nextDiagnostic)\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst LintDelay = 500;\n/// Given a diagnostic source, this function returns an extension that\n/// enables linting with that source. It will be called whenever the\n/// editor is idle (after its content changed).\nfunction linter(source) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.lintTime = Date.now() + LintDelay;\n            this.set = true;\n            this.run = this.run.bind(this);\n            setTimeout(this.run, LintDelay);\n        }\n        run() {\n            let now = Date.now();\n            if (now < this.lintTime - 10) {\n                setTimeout(this.run, this.lintTime - now);\n            }\n            else {\n                this.set = false;\n                let { state } = this.view;\n                Promise.resolve(source(this.view)).then(annotations => {\n                    var _a, _b;\n                    if (this.view.state.doc == state.doc &&\n                        (annotations.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations));\n                }, error => { logException(this.view.state, error); });\n            }\n        }\n        update(update) {\n            if (update.docChanged) {\n                this.lintTime = Date.now() + LintDelay;\n                if (!this.set) {\n                    this.set = true;\n                    setTimeout(this.run, LintDelay);\n                }\n            }\n        }\n    });\n}\nfunction renderDiagnostic(view, diagnostic) {\n    let dom = document.createElement(\"li\");\n    dom.textContent = diagnostic.message;\n    dom.className = themeClass(\"diagnostic.\" + diagnostic.severity);\n    if (diagnostic.actions)\n        for (let action of diagnostic.actions) {\n            let button = dom.appendChild(document.createElement(\"button\"));\n            button.className = themeClass(\"diagnosticAction\");\n            button.textContent = action.name;\n            button.onclick = button.onmousedown = e => {\n                e.preventDefault();\n                let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n                if (found)\n                    action.apply(view, found.from, found.to);\n            };\n        }\n    // FIXME render source?\n    return dom;\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        let elt = document.createElement(\"span\");\n        elt.className = themeClass(\"lintPoint.\" + this.diagnostic.severity);\n        return elt;\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic);\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        this.dom = document.createElement(\"div\");\n        this.list = this.dom.appendChild(document.createElement(\"ul\"));\n        this.list.tabIndex = 0;\n        this.list.setAttribute(\"role\", \"listbox\");\n        this.list.setAttribute(\"aria-label\", this.view.state.phrase(\"Diagnostics\"));\n        this.list.addEventListener(\"keydown\", event => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38) { // ArrowUp\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40) { // ArrowDown\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                event.preventDefault();\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                event.preventDefault();\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) {\n                event.preventDefault();\n                this.view.focus();\n            } // FIXME PageDown/PageUp\n        });\n        this.list.addEventListener(\"click\", event => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        });\n        let close = this.dom.appendChild(document.createElement(\"button\"));\n        close.setAttribute(\"name\", \"close\");\n        close.setAttribute(\"aria-label\", this.view.state.phrase(\"close\"));\n        close.textContent = \"×\";\n        close.addEventListener(\"click\", () => closeLintPanel(this.view));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (!this.items.length) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n        if (!this.list.firstChild)\n            this.list.appendChild(renderDiagnostic(this.view, {\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n    }\n    moveSelection(selectedIndex) {\n        // FIXME make actions accessible\n        if (this.items.length == 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    get style() { return \"lint\"; }\n    static open(view) { return new LintPanel(view); }\n}\nfunction underline(color) {\n    if (typeof btoa != \"function\")\n        return \"none\";\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"3\">\n    <path d=\"m0 3 l2 -2 l1 0 l2 2 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>\n  </svg>`;\n    return `url('data:image/svg+xml;base64,${btoa(svg)}')`;\n}\nconst baseTheme = EditorView.baseTheme({\n    $diagnostic: {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\"\n    },\n    \"$diagnostic.error\": { borderLeft: \"5px solid #d11\" },\n    \"$diagnostic.warning\": { borderLeft: \"5px solid orange\" },\n    \"$diagnostic.info\": { borderLeft: \"5px solid #999\" },\n    $diagnosticAction: {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    $lintRange: {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\"\n    },\n    \"$lintRange.error\": { backgroundImage: underline(\"#d11\") },\n    \"$lintRange.warning\": { backgroundImage: underline(\"orange\") },\n    \"$lintRange.info\": { backgroundImage: underline(\"#999\") },\n    \"$lintRange.active\": { backgroundColor: \"#ffdd9980\" },\n    $lintPoint: {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \"$lintPoint.warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \"$lintPoint.info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \"$panel.lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\"\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    },\n    \"$tooltip.lint\": {\n        padding: 0,\n        margin: 0\n    }\n});\n\nexport { closeLintPanel, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics };\n","import { Facet, combineConfig, StateField } from '@codemirror/next/state';\nimport { syntaxTree } from '@codemirror/next/language';\nimport { EditorView, Decoration, themeClass } from '@codemirror/next/view';\nimport { NodeProp } from 'lezer-tree';\n\nconst baseTheme = EditorView.baseTheme({\n    $matchingBracket: { color: \"#0b0\" },\n    $nonmatchingBracket: { color: \"#a22\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist\n        });\n    }\n});\nconst matchingMark = Decoration.mark({ class: themeClass(\"matchingBracket\") }), nonmatchingMark = Decoration.mark({ class: themeClass(\"nonmatchingBracket\") });\nconst bracketMatchingState = StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (!match)\n                continue;\n            let mark = match.matched ? matchingMark : nonmatchingMark;\n            decorations.push(mark.range(match.start.from, match.start.to));\n            if (match.end)\n                decorations.push(mark.range(match.end.from, match.end.to));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: [EditorView.decorations]\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/// Create an extension that enables bracket matching. Whenever the\n/// cursor is next to a bracket, that bracket and the one it matches\n/// are highlighted. Or, when no matching bracket is found, another\n/// highlighting style is used to indicate this.\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\n/// Find the matching bracket for the token at `pos`, scanning\n/// direction `dir`. Only the `brackets` and `maxScanDistance`\n/// properties are used from `config`, if given. Returns null if no\n/// bracket was found at `pos`, or a match result otherwise.\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), sub = tree.resolve(pos, dir), matches;\n    if (matches = matchingNodes(sub.type, dir, brackets))\n        return matchMarkedBrackets(state, pos, dir, sub, matches, brackets);\n    else\n        return matchPlainBrackets(state, pos, dir, tree, sub.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {\n    let parent = token.parent, firstToken = { from: token.from, to: token.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor;\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1) {\n                    return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    depth--;\n                    if (depth == 0)\n                        return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: false };\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolve(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\nexport { bracketMatching, matchBrackets };\n","import { ViewPlugin, themeClass, PluginField, EditorView } from '@codemirror/next/view';\nimport { Facet } from '@codemirror/next/state';\n\nconst panelConfig = Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/// Enables the panel-managing extension.\nfunction panels(config) {\n    let ext = [panelPlugin, baseTheme];\n    if (config)\n        ext.push(panelConfig.of(config));\n    return ext;\n}\n/// Opening a panel is done by providing an object describing the\n/// panel through this facet.\nconst showPanel = Facet.define();\n/// Get the active panel created by the given constructor, if any.\n/// This can be useful when you need access to your panels' DOM\n/// structure.\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = view.state.facet(showPanel).indexOf(panel);\n    return plugin && index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.specs = view.state.facet(showPanel);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.className += \" \" + panelClass(p);\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let specs = update.state.facet(showPanel);\n        if (specs != this.specs) {\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.className += \" \" + panelClass(p);\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nfunction panelClass(panel) {\n    return themeClass(panel.style ? `panel.${panel.style}` : \"panel\");\n}\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = themeClass(this.top ? \"panels.top\" : \"panels.bottom\");\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - this.view.scrollDOM.getBoundingClientRect().top\n                : this.view.scrollDOM.getBoundingClientRect().bottom - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = EditorView.baseTheme({\n    $panels: {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"$$light $panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"$$light $panels.top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"$$light $panels.bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"$$dark $panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n\nexport { getPanel, panels, showPanel };\n","import { MapMode } from '@codemirror/next/state';\n\n/// Each range is associated with a value, which must inherit from\n/// this class.\nclass RangeValue {\n    /// Compare this value with another value. The default\n    /// implementation compares by identity.\n    eq(other) { return this == other; }\n    /// Create a [range](#rangeset.Range) with this value.\n    range(from, to = from) { return new Range(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/// A range associates a value with a range of positions.\nclass Range {\n    /// @internal\n    constructor(\n    /// The range's start position.\n    from, \n    /// Its end position.\n    to, \n    /// The value associated with this range.\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\n// The maximum amount of ranges to store in a single chunk\nconst ChunkSize = 250, \n// Chunks with points of this size are never skipped during\n// compare, since moving past those points is likely to speed\n// up, rather than slow down, the comparison.\nBigPointSize = 500, \n// A large (fixnum) value to use for max/min values.\nFar = 1e9;\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // With side == -1, return the first index where to >= pos. When\n    // side == 1, the first index where from > pos.\n    findIndex(pos, end, side = end * Far, startAt = 0) {\n        if (pos <= 0)\n            return startAt;\n        let arr = end < 0 ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end < 0 ? this.value[mid].startSide : this.value[mid].endSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1), e = this.findIndex(to, 1, undefined, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/// A range set stores a collection of [ranges](#rangeset.Range) in a\n/// way that makes them efficient to [map](#rangeset.RangeSet.map) and\n/// [update](#rangeset.RangeSet.update). This is an immutable data\n/// structure.\nclass RangeSet {\n    /// @internal\n    constructor(\n    /// @internal\n    chunkPos, \n    /// @internal\n    chunk, \n    /// @internal\n    nextLayer = RangeSet.empty, \n    /// @internal\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /// @internal\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /// @internal\n    get size() {\n        if (this == RangeSet.empty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /// @internal\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /// Update the range set, optionally adding new ranges or filtering\n    /// out existing ones.\n    update(updateSpec) {\n        let { add = [], sort = false, filter, filterFrom = 0, filterTo = this.length } = updateSpec;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add.slice().sort(cmpRange);\n        if (this == RangeSet.empty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(new Range(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer == RangeSet.empty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /// Map this range set through a set of changes, return the new set.\n    map(changes) {\n        if (changes.length == 0 || this == RangeSet.empty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next, maxPoint);\n    }\n    /// Iterate over the ranges that touch the region `from` to `to`,\n    /// calling `f` for each. There is no guarantee that the ranges will\n    /// be reported in any order. When the callback returns `false`,\n    /// iteration stops.\n    between(from, to, f) {\n        if (this == RangeSet.empty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /// Iterate over the ranges in this set, in order, including all\n    /// ranges that end at or after `from`.\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /// Iterate over the given sets, starting from `from`.\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /// Iterate over two groups of sets, calling methods on `comparator`\n    /// to notify it of possible differences. `textDiff` indicates how\n    /// the underlying data changed between these ranges, and is needed\n    /// to synchronize the iteration. `from` and `to` are coordinates in\n    /// the _new_ space, after these changes.\n    static compare(oldSets, newSets, textDiff, comparator) {\n        var _a;\n        let minPoint = (_a = comparator.minPointSize) !== null && _a !== void 0 ? _a : -1;\n        let a = oldSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && newSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let b = newSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && oldSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, minPoint);\n        let sideB = new SpanCursor(b, sharedChunks, minPoint);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /// Iterate over a group of range sets at the same time, notifying\n    /// the iterator about the ranges covering every given piece of\n    /// content. Returns the open count (see\n    /// [`SpanIterator.span`](#rangeset.SpanIterator.span)) at the end\n    /// of the iteration.\n    static spans(sets, from, to, iterator) {\n        var _a;\n        let cursor = new SpanCursor(sets, null, (_a = iterator.minPointSize) !== null && _a !== void 0 ? _a : -1).goto(from), pos = from;\n        let open = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open);\n                open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, open);\n                open = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                break;\n            pos = cursor.to;\n            cursor.next();\n        }\n        return open;\n    }\n    /// Create a range set for the given range or array of ranges. By\n    /// default, this expects the ranges to be _sorted_ (by start\n    /// position and, if two start at the same position,\n    /// `value.startSide`). You can pass `true` as second argument to\n    /// cause the method to sort them.\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? ranges.slice().sort(cmpRange) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/// The empty set of ranges.\nRangeSet.empty = new RangeSet([], [], null, -1);\nRangeSet.empty.nextLayer = RangeSet.empty;\n/// A range set builder is a data structure that helps build up a\n/// [range set](#rangeset.RangeSet) directly, without first allocating\n/// an array of [`Range`](#rangeset.Range) objects.\nclass RangeSetBuilder {\n    /// Create an empty builder.\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -Far;\n        this.lastTo = -Far;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /// Add a range. Ranges should be added in sorted (by `from` and\n    /// `value.startSide`) order.\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /// @internal\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == ChunkSize)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /// @internal\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /// Finish the range set. Returns the new set. The builder can't be\n    /// used anymore after this has been called.\n    finish() { return this.finishInner(RangeSet.empty); }\n    /// @internal\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = new RangeSet(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint < BigPointSize)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (inA.get(set.chunk[i]) == set.chunkPos[i])\n                shared.add(set.chunk[i]);\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -Far) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        let rangeIndex = this.chunkIndex == this.layer.chunk.length ? 0\n            : this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], -1, side);\n        if (!forward || this.rangeIndex < rangeIndex)\n            this.rangeIndex = rangeIndex;\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = Far;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                if (++this.rangeIndex == chunk.value.length) {\n                    this.chunkIndex++;\n                    if (this.skip) {\n                        while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                            this.chunkIndex++;\n                    }\n                    this.rangeIndex = 0;\n                }\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; cur != RangeSet.empty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -Far) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = Far;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -Far;\n        this.endSide = 0;\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -Far) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = Far;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    if (this.cursor.from < from)\n                        trackExtra = 1;\n                    this.cursor.next();\n                    if (this.to > from)\n                        this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            let openStart = 0;\n            while (openStart < trackOpen.length && trackOpen[openStart] < from)\n                openStart++;\n            this.openStart = openStart + trackExtra;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = 0; i < this.active.length; i++) {\n            if (this.activeRank[i] > this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide > this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active;\n    }\n    openEnd(to) {\n        let open = 0;\n        while (open < this.activeTo.length && this.activeTo[open] > to)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = Far;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\nexport { Range, RangeSet, RangeSetBuilder, RangeValue };\n","import { Decoration, themeClass, ViewPlugin, EditorView, runScopeHandlers } from '@codemirror/next/view';\nimport { StateEffect, StateField, EditorSelection, precedence } from '@codemirror/next/state';\nimport { showPanel, getPanel, panels } from '@codemirror/next/panel';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\" ? x => x.normalize(\"NFKD\") : x => x;\n/// A search cursor provides an iterator over text matches in a\n/// document.\nclass SearchCursor {\n    /// Create a text cursor. The query is the search string, `from` to\n    /// `to` provides the region to search.\n    ///\n    /// When `normalize` is given, it will be called, on both the query\n    /// string and the content it is matched against, before comparing.\n    /// You can, for example, create a case-insensitive search by\n    /// passing `s => s.toLowerCase()`.\n    ///\n    /// Text is always normalized with\n    /// [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    /// (when supported).\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /// The current match (only holds a meaningful value after\n        /// [`next`](#search.SearchCursor.next) has been called and when\n        /// `done` is false).\n        this.value = { from: 0, to: 0 };\n        /// Whether the end of the iterated region has been reached.\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return this.buffer.charCodeAt(this.bufferPos);\n    }\n    /// Look for the next match. Updates the iterator's\n    /// [`value`](#search.SearchCursor.value) and\n    /// [`done`](#search.SearchCursor.done) properties. Should be called\n    /// at least once before using the cursor.\n    next() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = String.fromCharCode(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos++;\n            for (;;) {\n                let peek = this.peek();\n                if (peek < 0xDC00 || peek >= 0xE000)\n                    break;\n                this.bufferPos++;\n                str += String.fromCharCode(peek);\n            }\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\n\nclass Query {\n    constructor(search, replace, caseInsensitive) {\n        this.search = search;\n        this.replace = replace;\n        this.caseInsensitive = caseInsensitive;\n    }\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace && this.caseInsensitive == other.caseInsensitive;\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.search, from, to, this.caseInsensitive ? x => x.toLowerCase() : undefined);\n    }\n    get valid() { return !!this.search; }\n}\nconst setQuery = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst searchState = StateField.define({\n    create() {\n        return new SearchState(new Query(\"\", \"\", false), []);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setQuery))\n                value = new SearchState(effect.value, value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? [createSearchPanel] : []);\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel)]\n});\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = Decoration.mark({ class: themeClass(\"searchMatch\") }), selectedMatchMark = Decoration.mark({ class: themeClass(\"searchMatch.selected\") });\nconst searchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.prevState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel.length || !query.valid)\n            return Decoration.none;\n        let state = this.view.state, viewport = this.view.viewport;\n        let cursor = query.cursor(state.doc, Math.max(0, viewport.from - query.search.length), Math.min(viewport.to + query.search.length, state.doc.length));\n        let builder = new RangeSetBuilder();\n        while (!cursor.next().done) {\n            let { from, to } = cursor.value;\n            let selected = state.selection.ranges.some(r => r.from == from && r.to == to);\n            builder.add(from, to, selected ? selectedMatchMark : matchMark);\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\nfunction findNextMatch(doc, from, query) {\n    let cursor = query.cursor(doc, from).next();\n    if (cursor.done) {\n        cursor = query.cursor(doc, 0, from + query.search.length - 1).next();\n        if (cursor.done)\n            return null;\n    }\n    return cursor.value;\n}\n/// Open the search panel if it isn't already open, and move the\n/// selection to the first match after the current primary selection.\n/// Will wrap around to the start of the document when it reaches the\n/// end.\nconst findNext = searchCommand((view, state) => {\n    let { from, to } = view.state.selection.primary;\n    let next = findNextMatch(view.state.doc, view.state.selection.primary.from + 1, state.query);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\nconst FindPrevChunkSize = 10000;\n// Searching in reverse is, rather than implementing inverted search\n// cursor, done by scanning chunk after chunk forward.\nfunction findPrevInRange(query, doc, from, to) {\n    for (let pos = to;;) {\n        let start = Math.max(from, pos - FindPrevChunkSize - query.search.length);\n        let cursor = query.cursor(doc, start, pos), range = null;\n        while (!cursor.next().done)\n            range = cursor.value;\n        if (range)\n            return range;\n        if (start == from)\n            return null;\n        pos -= FindPrevChunkSize;\n    }\n}\n/// Move the selection to the previous instance of the search query,\n/// before the current primary selection. Will wrap past the start\n/// of the document to start searching at the end again.\nconst findPrevious = searchCommand((view, { query }) => {\n    let { state } = view;\n    let range = findPrevInRange(query, state.doc, 0, state.selection.primary.to - 1) ||\n        findPrevInRange(query, state.doc, state.selection.primary.from + 1, state.doc.length);\n    if (!range)\n        return false;\n    view.dispatch({ selection: { anchor: range.from, head: range.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\n/// Select all instances of the search query.\nconst selectMatches = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), ranges = [];\n    while (!cursor.next().done)\n        ranges.push(EditorSelection.range(cursor.value.from, cursor.value.to));\n    if (!ranges.length)\n        return false;\n    view.dispatch({ selection: EditorSelection.create(ranges) });\n    return true;\n});\n/// Select all instances of the currently selected text.\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.primary.empty)\n        return false;\n    let { from, to } = sel.primary;\n    let ranges = [], primary = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            primary = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({ selection: new EditorSelection(ranges, primary) }));\n    return true;\n};\n/// Replace the current match of the search query.\nconst replaceNext = searchCommand((view, { query }) => {\n    let { state } = view, next = findNextMatch(state.doc, state.selection.primary.from, query);\n    if (!next)\n        return false;\n    let { from, to } = state.selection.primary, changes = [], selection;\n    if (next.from == from && next.to == to) {\n        changes.push({ from: next.from, to: next.to, insert: query.replace });\n        next = findNextMatch(state.doc, next.to, query);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - query.replace.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({ changes, selection, scrollIntoView: !!selection });\n    if (next)\n        maybeAnnounceMatch(view);\n    return true;\n});\n/// Replace all instances of the search query with the given\n/// replacement.\nconst replaceAll = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), changes = [];\n    while (!cursor.next().done) {\n        let { from, to } = cursor.value;\n        changes.push({ from, to, insert: query.replace });\n    }\n    if (!changes.length)\n        return false;\n    view.dispatch({ changes });\n    return true;\n});\nfunction createSearchPanel(view) {\n    let { query } = view.state.field(searchState);\n    return {\n        dom: buildPanel({\n            view,\n            query,\n            updateQuery(q) {\n                if (!query.eq(q)) {\n                    query = q;\n                    view.dispatch({ effects: setQuery.of(query) });\n                }\n            }\n        }),\n        mount() {\n            this.dom.querySelector(\"[name=search]\").select();\n        },\n        pos: 80,\n        style: \"search\"\n    };\n}\n/// Make sure the search panel is open and focused.\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel.length) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        panel.dom.querySelector(\"[name=search]\").focus();\n    }\n    else {\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: state ? undefined : { append: searchExtensions } });\n    }\n    return true;\n};\n/// Close the search panel.\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel.length)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Default search-related key bindings.\n///\n///  * Mod-f: [`openSearchPanel`](#search.openSearchPanel)\n///  * F3, Mod-g: [`findNext`](#search.findNext)\n///  * Shift-F3, Shift-Mod-g: [`findPrevious`](#search.findPrevious)\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches }\n];\nfunction elt(name, props = null, children = []) {\n    let e = document.createElement(name);\n    if (props)\n        for (let prop in props) {\n            let value = props[prop];\n            if (typeof value == \"string\")\n                e.setAttribute(prop, value);\n            else\n                e[prop] = value;\n        }\n    for (let child of children)\n        e.appendChild(typeof child == \"string\" ? document.createTextNode(child) : child);\n    return e;\n}\n// FIXME sync when search state changes independently\nfunction buildPanel(conf) {\n    function p(phrase) { return conf.view.state.phrase(phrase); }\n    let searchField = elt(\"input\", {\n        value: conf.query.search,\n        placeholder: p(\"Find\"),\n        \"aria-label\": p(\"Find\"),\n        class: themeClass(\"textfield\"),\n        name: \"search\",\n        onchange: update,\n        onkeyup: update\n    });\n    let replaceField = elt(\"input\", {\n        value: conf.query.replace,\n        placeholder: p(\"Replace\"),\n        \"aria-label\": p(\"Replace\"),\n        class: themeClass(\"textfield\"),\n        name: \"replace\",\n        onchange: update,\n        onkeyup: update\n    });\n    let caseField = elt(\"input\", {\n        type: \"checkbox\",\n        name: \"case\",\n        checked: !conf.query.caseInsensitive,\n        onchange: update\n    });\n    function update() {\n        conf.updateQuery(new Query(searchField.value, replaceField.value, !caseField.checked));\n    }\n    function keydown(e) {\n        if (runScopeHandlers(conf.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(conf.view);\n        }\n        else if (e.keyCode == 13 && e.target == replaceField) {\n            e.preventDefault();\n            replaceNext(conf.view);\n        }\n    }\n    function button(name, onclick, content) {\n        return elt(\"button\", { class: themeClass(\"button\"), name, onclick }, content);\n    }\n    let panel = elt(\"div\", { onkeydown: keydown }, [\n        searchField,\n        button(\"next\", () => findNext(conf.view), [p(\"next\")]),\n        button(\"prev\", () => findPrevious(conf.view), [p(\"previous\")]),\n        button(\"select\", () => selectMatches(conf.view), [p(\"all\")]),\n        elt(\"label\", null, [caseField, \"match case\"]),\n        elt(\"br\"),\n        replaceField,\n        button(\"replace\", () => replaceNext(conf.view), [p(\"replace\")]),\n        button(\"replaceAll\", () => replaceAll(conf.view), [p(\"replace all\")]),\n        elt(\"button\", { name: \"close\", onclick: () => closeSearchPanel(conf.view), \"aria-label\": p(\"close\") }, [\"×\"]),\n        elt(\"div\", { style: \"position: absolute; top: -10000px\", \"aria-live\": \"polite\" })\n    ]);\n    return panel;\n}\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\n// FIXME this is a kludge\nfunction maybeAnnounceMatch(view) {\n    let { from, to } = view.state.selection.primary;\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    let panel = getPanel(view, createSearchPanel);\n    if (!panel || !panel.dom.contains(view.root.activeElement))\n        return;\n    let live = panel.dom.querySelector(\"div[aria-live]\");\n    live.textContent = view.state.phrase(\"current match\") + \". \" + text;\n}\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button\": {\n            margin: \".2em .5em .2em 0\"\n        },\n        \"& label\": {\n            fontSize: \"80%\"\n        }\n    },\n    \"$$light $searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"$$dark $searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"$$light $searchMatch.selected\": { backgroundColor: \"#ff6a0054\" },\n    \"$$dark $searchMatch.selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    precedence(searchHighlighter, \"override\"),\n    panels(),\n    baseTheme\n];\n\nexport { SearchCursor, closeSearchPanel, findNext, findPrevious, openSearchPanel, replaceAll, replaceNext, searchKeymap, selectMatches, selectSelectionMatches };\n","import { Text } from '@codemirror/next/text';\nexport { Text } from '@codemirror/next/text';\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/// Distinguishes different ways in which positions can be mapped.\nvar MapMode;\n(function (MapMode) {\n    /// Map a position to a valid new position, even when its context\n    /// was deleted.\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /// Return null if deletion happens across the position.\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /// Return null if the character _before_ the position is deleted.\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /// Return null if the character _after_ the position is deleted.\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\n})(MapMode || (MapMode = {}));\n/// A change description is a variant of [change set](#state.ChangeSet)\n/// that doesn't store the inserted text. As such, it can't be\n/// applied, but is cheaper to store and manipulate.\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /// @internal\n    constructor(\n    /// @internal\n    sections) {\n        this.sections = sections;\n    }\n    /// The length of the document before the change.\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /// The length of the document after the change.\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /// False when there are actual changes in this set.\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /// Iterate over the unchanged parts left by these changes.\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /// Iterate over the ranges changed by these changes. (See\n    /// [`ChangeSet.iterChanges`](#state.ChangeSet.iterChanges) for a\n    /// variant that also provides you with the inserted text.)\n    ///\n    /// When `individual` is true, adjacent changes (which are kept\n    /// separate for [position mapping](#state.ChangeDesc.mapPos)) are\n    /// reported separately.\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a description of the inverted form of these changes.\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /// Compute the combined effect of applying another set of changes\n    /// after this one. The length of the document after this set should\n    /// match the length before `other`.\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /// Map this description, which should start with the same document\n    /// as `other`, over another set of changes, so that it can be\n    /// applied after it.\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /// Check whether these changes touch a given range. When one of the\n    /// changes entirely covers the range, the string `\"cover\"` is\n    /// returned.\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /// @internal\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n}\n/// A change set represents a group of modifications to a document. It\n/// stores the document length, and can only be applied to documents\n/// with exactly that length.\nclass ChangeSet extends ChangeDesc {\n    /// @internal\n    constructor(sections, \n    /// @internal\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /// Apply the changes to a document, returning the modified\n    /// document.\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    /// Map this set, which should start with the same document as\n    /// `other`, over another set of changes, so that it can be applied\n    /// after it. When `before` is true, map as if the changes in\n    /// `other` happened before the ones in `this`.\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /// Given the document as it existed _before_ the changes, return a\n    /// change set that represents the inverse of this set, which could\n    /// be used to go from the document created by the changes back to\n    /// the document as it existed before the changes.\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /// Combine two subsequent change sets into a single set. `other`\n    /// must start in the document produced by `this`. If `this` goes\n    /// `docA` → `docB` and `other` represents `docB` → `docC`, the\n    /// returned value will represent the change `docA` → `docC`.\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /// Given another change set starting in the same document, maps this\n    /// change set over the other, producing a new change set that can be\n    /// applied to the document produced by applying `other`. When\n    /// `before` is `true`, order changes as if `this` comes before\n    /// `other`, otherwise (the default) treat `other` as coming first.\n    ///\n    /// Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    /// `B.compose(A.map(B, true))` will produce the same document. This\n    /// provides a basic form of [operational\n    /// transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    /// and can be used for collaborative editing.\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /// Iterate over the changed ranges in the document, calling `f` for\n    /// each.\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a [change description](#state.ChangeDesc) for this change\n    /// set.\n    get desc() { return new ChangeDesc(this.sections); }\n    /// @internal\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: new ChangeDesc(filteredSections) };\n    }\n    /// Serialize this change set to a JSON-representable value.\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len, this.inserted[i >> 1].toJSON()]);\n        }\n        return parts;\n    }\n    /// Create a change set for the given changes, for a document of the\n    /// given length, using `lineSep` as line separator.\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /// Create an empty changeset of the given length.\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /// Create a changeset from its JSON representation (as produced by\n    /// [`toJSON`](#state.ChangeSet.toJSON).\n    static fromJSON(json) {\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part[1]);\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let posA = 0, posB = 0;;) {\n        if (a.ins == -1) {\n            posA += a.len;\n            a.next();\n        }\n        else if (b.ins == -1 && posB < posA) {\n            let skip = Math.min(b.len, posA - posB);\n            b.forward(skip);\n            addSection(sections, skip, -1);\n            posB += skip;\n        }\n        else if (b.ins >= 0 && (a.done || posB < posA || posB == posA && (b.len < a.len || b.len == a.len && !before))) {\n            addSection(sections, b.ins, -1);\n            while (posA > posB && !a.done && posA + a.len < posB + b.len) {\n                posA += a.len;\n                a.next();\n            }\n            posB += b.len;\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            let len = 0, end = posA + a.len;\n            for (;;) {\n                if (b.ins >= 0 && posB > posA && posB + b.len < end) {\n                    len += b.ins;\n                    posB += b.len;\n                    b.next();\n                }\n                else if (b.ins == -1 && posB < end) {\n                    let skip = Math.min(b.len, end - posB);\n                    len += skip;\n                    b.forward(skip);\n                    posB += skip;\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, a.ins);\n            if (insert)\n                addInsert(insert, sections, a.text);\n            posA = end;\n            a.next();\n        }\n        else if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/// A single selection range. When\n/// [`allowMultipleSelections`](#state.EditorState^allowMultipleSelections)\n/// is enabled, a [selection](#state.EditorSelection) may hold\n/// multiple ranges. By default, selections hold exactly one range.\nclass SelectionRange {\n    // @internal\n    constructor(\n    /// The lower side of the range.\n    from, \n    /// The upper side of the range.\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /// The anchor of the range—the side that doesn't move when you\n    /// extend it.\n    get anchor() { return this.flags & 16 /* Inverted */ ? this.to : this.from; }\n    /// The head of the range, which is moved when the range is\n    /// [extended](#state.SelectionRange.extend).\n    get head() { return this.flags & 16 /* Inverted */ ? this.from : this.to; }\n    /// True when `anchor` and `head` are at the same position.\n    get empty() { return this.from == this.to; }\n    /// If this is a cursor that is explicitly associated with the\n    /// character on one of its sides, this returns the side. -1 means\n    /// the character before its position, 1 the character after, and 0\n    /// means no association.\n    get assoc() { return this.flags & 4 /* AssocBefore */ ? -1 : this.flags & 8 /* AssocAfter */ ? 1 : 0; }\n    /// The bidirectional text level associated with this cursor.\n    get bidiLevel() {\n        let level = this.flags & 3 /* BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    get goalColumn() {\n        let value = this.flags >> 5 /* GoalColumnOffset */;\n        return value == 33554431 /* NoGoalColumn */ ? undefined : value;\n    }\n    /// Map this range through a mapping.\n    map(mapping) {\n        let from = mapping.mapPos(this.from), to = mapping.mapPos(this.to);\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /// Extend this range to cover at least `from` to `to`.\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /// Compare this range to another range.\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /// Return a JSON-serializable object representing the range.\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /// Convert a JSON representation of a range to a `SelectionRange`\n    /// instance.\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n}\n/// An editor selection holds one or more selection ranges.\nclass EditorSelection {\n    /// @internal\n    constructor(\n    /// The ranges in the selection, sorted by position. Ranges cannot\n    /// overlap (but they may touch, if they aren't empty).\n    ranges, \n    /// The index of the _primary_ range in the selection (which is\n    /// usually the range that was added last).\n    primaryIndex = 0) {\n        this.ranges = ranges;\n        this.primaryIndex = primaryIndex;\n    }\n    /// Map a selection through a mapping. Mostly used to adjust the\n    /// selection position for changes.\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(mapping)), this.primaryIndex);\n    }\n    /// Compare this selection to another selection.\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.primaryIndex != other.primaryIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /// Get the primary selection range. Usually, you should make sure\n    /// your code applies to _all_ ranges, by using methods like\n    /// [`changeByRange`](#state.EditorState.changeByRange).\n    get primary() { return this.ranges[this.primaryIndex]; }\n    /// Make sure the selection only has one range. Returns a selection\n    /// holding only the primary range from this selection.\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.primary]);\n    }\n    /// Extend this selection with an extra range.\n    addRange(range, primary = true) {\n        return EditorSelection.create([range].concat(this.ranges), primary ? 0 : this.primaryIndex + 1);\n    }\n    /// Replace a given range with another range, and then normalize the\n    /// selection to merge and sort ranges if necessary.\n    replaceRange(range, which = this.primaryIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.primaryIndex);\n    }\n    /// Convert this selection to an object that can be serialized to\n    /// JSON.\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), primaryIndex: this.primaryIndex };\n    }\n    /// Create a selection from a JSON representation.\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.primaryIndex != \"number\" || json.primaryIndex >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.primaryIndex);\n    }\n    /// Create a selection holding a single range.\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /// Sort and merge the given set of ranges, creating a valid\n    /// selection.\n    static create(ranges, primaryIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return normalized(ranges.slice(), primaryIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, primaryIndex);\n    }\n    /// Create a cursor selection range at the given position. You can\n    /// probably ignore [association](#state.SelectionRange.assoc) and\n    /// [bidi level](#state.SelectionRange.bidiLevel) in most\n    /// situations.\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return new SelectionRange(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* AssocBefore */ : 8 /* AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */));\n    }\n    /// Create a selection range.\n    static range(anchor, head, goalColumn) {\n        let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */;\n        return head < anchor ? new SelectionRange(head, anchor, 16 /* Inverted */ | goal) : new SelectionRange(anchor, head, goal);\n    }\n}\nfunction normalized(ranges, primaryIndex = 0) {\n    let primary = ranges[primaryIndex];\n    ranges.sort((a, b) => a.from - b.from);\n    primaryIndex = ranges.indexOf(primary);\n    for (let i = 1; i < ranges.length; i++) {\n        let range = ranges[i], prev = ranges[i - 1];\n        if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n            let from = prev.from, to = Math.max(range.to, prev.to);\n            if (i <= primaryIndex)\n                primaryIndex--;\n            ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n        }\n    }\n    return new EditorSelection(ranges, primaryIndex);\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/// A facet is a value that is assicated with a state and can be\n/// influenced by any number of extensions. Extensions can provide\n/// input values for the facet, and the facet combines those into an\n/// output value.\n///\n/// Examples of facets are the theme styles associated with an editor\n/// (which are all stored) or the tab size (which is reduced to a\n/// single value, using the input with the hightest precedence).\nclass Facet {\n    constructor(\n    /// @internal\n    combine, \n    /// @internal\n    compareInput, \n    /// @internal\n    compare, isStatic) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /// @internal\n        this.id = nextID++;\n        this.default = combine([]);\n    }\n    /// Define a new facet.\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static);\n    }\n    /// Returns an extension that adds the given value for this facet.\n    of(value) {\n        return new FacetProvider([], this, 0 /* Static */, value);\n    }\n    /// Create an extension that computes a value for the facet from a\n    /// state. You must take care to declare the parts of the state that\n    /// this value depends on, since your function is only called again\n    /// for a new state when one of those parts changed.\n    ///\n    /// In most cases, you'll want to use the\n    /// [`provide`](#state.StateField^define^config.provide) option when\n    /// defining a field instead.\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Single */, get);\n    }\n    /// Create an extension that computes zero or more values for this\n    /// facet from a state.\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Multi */, get);\n    }\n    /// Helper method for registering a facet source with a state field\n    /// via its [`provide`](#state.StateField^define^config.provide) option.\n    /// Returns a value that can be passed to that option to make the\n    /// field automatically provide a value for this facet.\n    from(get, prec) {\n        return field => maybePrec(prec, this.compute([field], state => get(state.field(field))));\n    }\n    /// Helper for [providing](#state.StateField^define^config.provide)\n    /// a dynamic number of values for this facet from a state field.\n    nFrom(get, prec) {\n        return field => maybePrec(prec, this.computeN([field], state => get(state.field(field))));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let idx = addresses[this.id] >> 1, multi = this.type == 2 /* Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return (state, tr) => {\n            if (!tr || tr.reconfigure) {\n                state.values[idx] = getter(state);\n                return 1 /* Changed */;\n            }\n            else {\n                let depChanged = (depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) ||\n                    depAddrs.some(addr => (ensureAddr(state, addr) & 1 /* Changed */) > 0);\n                if (!depChanged)\n                    return 0;\n                let newVal = getter(state), oldVal = tr.startState.values[idx];\n                if (multi ? compareArray(newVal, oldVal, compare) : compare(newVal, oldVal))\n                    return 0;\n                state.values[idx] = newVal;\n                return 1 /* Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    return (state, tr) => {\n        let oldAddr = !tr ? null : tr.reconfigure ? tr.startState.config.address[facet.id] : idx << 1;\n        let changed = oldAddr == null;\n        for (let dynAddr of dynamic) {\n            if (ensureAddr(state, dynAddr) & 1 /* Changed */)\n                changed = true;\n        }\n        if (!changed)\n            return 0;\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        let newVal = facet.combine(values);\n        if (oldAddr != null && facet.compare(newVal, getAddr(tr.startState, oldAddr)))\n            return 0;\n        state.values[idx] = newVal;\n        return 1 /* Changed */;\n    };\n}\nfunction maybeIndex(state, id) {\n    let found = state.config.address[id];\n    return found == null ? null : found >> 1;\n}\n/// Fields can store additional information in an editor state, and\n/// keep it in sync with the rest of the state.\nclass StateField {\n    constructor(\n    /// @internal\n    id, createF, updateF, compareF, \n    /// @internal\n    facets) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.facets = facets;\n    }\n    /// Define a state field.\n    static define(config) {\n        let facets = [];\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), facets);\n        if (config.provide)\n            for (let p of config.provide) {\n                if (p instanceof Facet)\n                    facets.push(p.compute([field], state => state.field(field)));\n                else\n                    facets.push(p(field));\n            }\n        return field;\n    }\n    /// @internal\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return (state, tr) => {\n            if (!tr) {\n                state.values[idx] = this.createF(state);\n                return 1 /* Changed */;\n            }\n            let oldVal, changed = 0;\n            if (tr.reconfigure) {\n                let oldIdx = maybeIndex(tr.startState, this.id);\n                oldVal = oldIdx == null ? this.createF(tr.startState) : tr.startState.values[oldIdx];\n                changed = 1 /* Changed */;\n            }\n            else {\n                oldVal = tr.startState.values[idx];\n            }\n            let value = this.updateF(oldVal, tr);\n            if (!changed && !this.compareF(oldVal, value))\n                changed = 1 /* Changed */;\n            if (changed)\n                state.values[idx] = value;\n            return changed;\n        };\n    }\n}\nconst Prec = { fallback: 3, default: 2, extend: 1, override: 0 };\n/// By default extensions are registered in the order they are found\n/// the flattened form of nested array that was provided. Individual\n/// extension values can be assigned a precedence to override this.\n/// Extensions that do not have a precedence set get the precedence of\n/// the nearest parent with a precedence, or\n/// [`\"default\"`](#state.Precedence) if there is no such parent. The\n/// final ordering of extensions is determined by first sorting by\n/// precedence and then by order within each precedence.\nfunction precedence(extension, value) {\n    if (!Prec.hasOwnProperty(value))\n        throw new RangeError(`Invalid precedence: ${value}`);\n    return new PrecExtension(extension, Prec[value]);\n}\nfunction maybePrec(prec, ext) {\n    return prec ? precedence(ext, prec) : ext;\n}\nclass PrecExtension {\n    constructor(e, prec) {\n        this.e = e;\n        this.prec = prec;\n    }\n}\nclass TaggedExtension {\n    constructor(tag, extension) {\n        this.tag = tag;\n        this.extension = extension;\n    }\n}\n/// Tagged extensions can be used to make a configuration dynamic.\n/// Tagging an extension allows you to later\n/// [replace](#state.TransactionSpec.reconfigure) it with\n/// another extension. A given tag may only occur once within a given\n/// configuration.\nfunction tagExtension(tag, extension) {\n    return new TaggedExtension(tag, extension);\n}\nclass Configuration {\n    constructor(source, replacements, dynamicSlots, address, staticValues) {\n        this.source = source;\n        this.replacements = replacements;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* Uninitialized */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(extension, replacements = Object.create(null), oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        for (let ext of flatten(extension, replacements)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            if (providers.every(p => p.type == 0 /* Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                let value = facet.combine(providers.map(p => p.value));\n                let oldAddr = oldState ? oldState.config.address[facet.id] : null;\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (facet.compare(value, oldVal))\n                        value = oldVal;\n                }\n                staticValues.push(value);\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        return new Configuration(extension, replacements, dynamicSlots.map(f => f(address)), address, staticValues);\n    }\n}\nfunction allKeys(obj) {\n    return (Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(obj) : []).concat(Object.keys(obj));\n}\nfunction flatten(extension, replacements) {\n    let result = [[], [], [], []];\n    let seen = new Map();\n    let tagsSeen = Object.create(null);\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known >= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof TaggedExtension) {\n            if (ext.tag in tagsSeen)\n                throw new RangeError(`Duplicate use of tag '${String(ext.tag)}' in extensions`);\n            tagsSeen[ext.tag] = true;\n            inner(replacements[ext.tag] || ext.extension, prec);\n        }\n        else if (ext.extension) {\n            inner(ext.extension, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.e, ext.prec);\n        }\n        else {\n            result[prec].push(ext);\n            if (ext instanceof StateField)\n                inner(ext.facets, prec);\n        }\n    }\n    inner(extension, Prec.default);\n    for (let key of allKeys(replacements))\n        if (!(key in tagsSeen) && key != \"full\" && replacements[key]) {\n            tagsSeen[key] = true;\n            inner(replacements[key], Prec.default);\n        }\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* Computed */)\n        return status;\n    state.status[idx] = 4 /* Computing */;\n    let changed = state.config.dynamicSlots[idx](state, state.applying);\n    return state.status[idx] = 2 /* Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = Facet.define();\nconst allowMultipleSelections = Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = Facet.define();\nconst transactionFilter = Facet.define();\nconst transactionExtender = Facet.define();\n\n/// Annotations are tagged values that are used to add metadata to\n/// transactions in an extensible way. They should be used to model\n/// things that effect the entire transaction (such as its [time\n/// stamp](#state.Transaction^time) or information about its\n/// [origin](#state.Transaction^userEvent)). For effects that happen\n/// _alongside_ the other changes made by the transaction, [state\n/// effects](#state.StateEffect) are more appropriate.\nclass Annotation {\n    /// @internal\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Define a new type of annotation.\n    static define() { return new AnnotationType(); }\n}\n/// Marker that identifies a type of [annotation](#state.Annotation).\nclass AnnotationType {\n    of(value) { return new Annotation(this, value); }\n}\n/// State effects can be used to represent additional effects\n/// associated with a [transaction](#state.Transaction.effects). They\n/// are often useful to model changes to custom [state\n/// fields](#state.StateField), when those changes aren't implicit in\n/// document or selection changes.\nclass StateEffect {\n    /// @internal\n    constructor(\n    /// @internal\n    type, \n    /// The value of this effect.\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Map this effect through a position mapping. Will return\n    /// `undefined` when that ends up deleting the effect.\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /// Tells you whether this effect object is of a given\n    /// [type](#state.StateEffectType).\n    is(type) { return this.type == type; }\n    /// Define a new effect type. The type parameter indicates the type\n    /// of values that his effect holds.\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /// Map an array of effects through a change set.\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/// Representation of a type of state effect. Defined with\n/// [`StateEffect.define`](#state.StateEffect^define).\nclass StateEffectType {\n    /// @internal\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /// @internal\n    map) {\n        this.map = map;\n    }\n    /// Create a [state effect](#state.StateEffect) instance of this\n    /// type.\n    of(value) { return new StateEffect(this, value); }\n}\n/// Changes to the editor state are grouped into transactions.\n/// Typically, a user action creates a single transaction, which may\n/// contain any number of document changes, may change the selection,\n/// or have other effects. Create a transaction by calling\n/// [`EditorState.update`](#state.EditorState.update).\nclass Transaction {\n    /// @internal\n    constructor(\n    /// The state from which the transaction starts.\n    startState, \n    /// The document changes made by this transaction.\n    changes, \n    /// The selection set by this transaction, or undefined if it\n    /// doesn't explicitly set a selection.\n    selection, \n    /// The effects added to the transaction.\n    effects, \n    /// @internal\n    annotations, \n    /// Holds an object when this transaction\n    /// [reconfigures](#state.ReconfigurationSpec) the state.\n    reconfigure, \n    /// Whether the selection should be scrolled into view after this\n    /// transaction is dispatched.\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.reconfigure = reconfigure;\n        this.scrollIntoView = scrollIntoView;\n        /// @internal\n        this._doc = null;\n        /// @internal\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /// The new document produced by the transaction. (Mostly exposed so\n    /// that [transaction filters](#state.EditorState^transactionFilter)\n    /// can look at the new document without forcing an entire new state\n    /// to be computed by accessing\n    /// [`.state`](#state.Transaction.state).\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /// The new selection produced by the transaction. If\n    /// [`this.selection`](#state.Transaction.selection) is undefined,\n    /// this will [map](#state.EditorSelection.map) the start state's\n    /// current selection through the changes made by the transaction.\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /// The new state created by the transaction.\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /// Get the value of the given annotation type, if any.\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /// Indicates whether the transaction changed the document.\n    get docChanged() { return !this.changes.empty; }\n}\n/// Annotation used to store transaction timestamps.\nTransaction.time = Annotation.define();\n/// Annotation used to associate a transaction with a user interface\n/// event. The view will set this to...\n///\n///  - `\"input\"` when the user types text\n///  - `\"delete\"` when the user deletes the selection or text near the selection\n///  - `\"keyboardselection\"` when moving the selection via the keyboard\n///  - `\"pointerselection\"` when moving the selection through the pointing device\n///  - `\"paste\"` when pasting content\n///  - `\"cut\"` when cutting\n///  - `\"drop\"` when content is inserted via drag-and-drop\nTransaction.userEvent = Annotation.define();\n/// Annotation indicating whether a transaction should be added to\n/// the undo history or not.\nTransaction.addToHistory = Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView,\n        reconfigure: !b.reconfigure ? a.reconfigure : b.reconfigure.full || !a.reconfigure ? b.reconfigure\n            : Object.assign({}, a.reconfigure, b.reconfigure)\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let reconf = spec.reconfigure;\n    if (reconf && reconf.append) {\n        reconf = Object.assign({}, reconf);\n        let tag = typeof Symbol == \"undefined\" ? \"__append\" + Math.floor(Math.random() * 0xffffffff) : Symbol(\"appendConf\");\n        reconf[tag] = reconf.append;\n        reconf.append = undefined;\n    }\n    let sel = spec.selection;\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations: asArray(spec.annotations),\n        scrollIntoView: !!spec.scrollIntoView,\n        reconfigure: reconf\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = new Transaction(state, s.changes, s.selection, s.effects, s.annotations, s.reconfigure, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.invertedDesc;\n        }\n        tr = new Transaction(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.reconfigure, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(tr, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : new Transaction(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.reconfigure, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/// This is used to [categorize](#state.EditorState.charCategorizer)\n/// characters into three categories—word characters, whitespace, and\n/// anything else. It is used do things like selecting by word.\nvar CharCategory;\n(function (CharCategory) {\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\n})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/// The editor state class is a persistent (immutable) data structure.\n/// To update a state, you [create](#state.EditorState.update) a\n/// [transaction](#state.Transaction), which produces a _new_ state\n/// instance, without modifying the original object.\n///\n/// As such, _never_ mutate properties of a state directly. That'll\n/// just break things.\nclass EditorState {\n    /// @internal\n    constructor(\n    /// @internal\n    config, \n    /// The current document.\n    doc, \n    /// The current selection.\n    selection, tr = null) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        /// @internal\n        this.applying = null;\n        this.status = config.statusTemplate.slice();\n        if (tr && !tr.reconfigure) {\n            this.values = tr.startState.values.slice();\n        }\n        else {\n            this.values = config.dynamicSlots.map(_ => null);\n            // Copy over old values for shared facets/fields if this is a reconfigure\n            if (tr)\n                for (let id in config.address) {\n                    let cur = config.address[id], prev = tr.startState.config.address[id];\n                    if (prev != null && (cur & 1) == 0)\n                        this.values[cur >> 1] = getAddr(tr.startState, prev);\n                }\n        }\n        this.applying = tr;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.applying = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Create a [transaction](#state.Transaction) that updates this\n    /// state. Any number of [transaction specs](#state.TransactionSpec)\n    /// can be passed. The [changes](#state.TransactionSpec.changes) (if\n    /// any) of each spec are assumed to start in the _current_ document\n    /// (not the document produced by previous specs), and its\n    /// [selection](#state.TransactionSpec.selection) and\n    /// [effects](#state.TransactionSpec.effects) are assumed to refer\n    /// to the document created by its _own_ changes. The resulting\n    /// transaction contains the combined effect of all the different\n    /// specs. For things like\n    /// [selection](#state.TransactionSpec.selection) or\n    /// [reconfiguration](#state.TransactionSpec.reconfigure), later\n    /// specs take precedence over earlier ones.\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /// @internal\n    applyTransaction(tr) {\n        let conf = this.config;\n        if (tr.reconfigure)\n            conf = Configuration.resolve(tr.reconfigure.full || conf.source, Object.assign(conf.replacements, tr.reconfigure, { full: undefined }), this);\n        new EditorState(conf, tr.newDoc, tr.newSelection, tr);\n    }\n    /// Create a [transaction spec](#state.TransactionSpec) that\n    /// replaces every selection range with the given content.\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /// Create a set of changes and a new selection by running the given\n    /// function for each range in the active selection. The function\n    /// can return an optional set of changes (in the coordinate space\n    /// of the start document), plus an updated range (in the coordinate\n    /// space of the document produced by the call's own changes). This\n    /// method will merge all the changes and ranges into a single\n    /// changeset and selection, and return it as a [transaction\n    /// spec](#state.TransactionSpec), which can be passed to\n    /// [`update`](#state.EditorState.update).\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.primaryIndex),\n            effects\n        };\n    }\n    /// Create a [change set](#state.ChangeSet) from the given change\n    /// description, taking the state's document length and line\n    /// separator into account.\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /// Using the state's [line\n    /// separator](#state.EditorState^lineSeparator), create a\n    /// [`Text`](#text.Text) instance from the given string.\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /// Return the given range of the document as a string.\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /// Get the value of a state [facet](#state.Facet).\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Convert this state to a JSON-serializable object.\n    toJSON() {\n        // FIXME plugin state serialization\n        return {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n    }\n    /// Deserialize a state from its JSON representation.\n    static fromJSON(json, config = {}) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions\n        });\n    }\n    /// Create a new state. You'll usually only need this when\n    /// initializing an editor—updated states are created by applying\n    /// transactions.\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || []);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection);\n    }\n    /// The size (in columns) of a tab in the document, determined by\n    /// the [`tabSize`](#state.EditorState^tabSize) facet.\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /// Get the proper [line-break](#state.EditorState^lineSeparator)\n    /// string for this state.\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /// Look up a translation for the given phrase (via the\n    /// [`phrases`](#state.EditorState^phrases) facet), or return the\n    /// original string if no translation is found.\n    phrase(phrase) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase))\n                return map[phrase];\n        return phrase;\n    }\n    /// Find the values for a given language data field, provided by the\n    /// the [`languageData`](#state.EditorState^languageData) facet.\n    languageDataAt(name, pos) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /// Return a function that can categorize strings (expected to\n    /// represent a single [grapheme cluster](#text.nextClusterBreak))\n    /// into one of:\n    ///\n    ///  - Word (contains an alphanumeric character or a character\n    ///    explicitly listed in the local language's `\"wordChars\"`\n    ///    language data, which should be a string)\n    ///  - Space (contains only whitespace)\n    ///  - Other (anything else)\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n}\n/// A facet that, when enabled, causes the editor to allow multiple\n/// ranges to be selected. Be careful though, because by default the\n/// editor relies on the native DOM selection, which cannot handle\n/// multiple selections. An extension like\n/// [`drawSelection`](#view.drawSelection) can be used to make\n/// secondary selections visible to the user.\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/// Configures the tab size to use in this state. The first\n/// (highest-precedence) value of the facet is used. If no value is\n/// given, this defaults to 4.\nEditorState.tabSize = Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/// The line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\n/// and `\"\\r\"` is treated as a separator when splitting lines, and\n/// lines are joined with `\"\\n\"`.\n///\n/// When you configure a value here, only that precise separator\n/// will be used, allowing you to round-trip documents through the\n/// editor without normalizing line separators.\nEditorState.lineSeparator = lineSeparator;\n/// Registers translation phrases. The\n/// [`phrase`](#state.EditorState.phrase) method will look through\n/// all objects registered with this facet to find translations for\n/// its argument.\nEditorState.phrases = Facet.define();\n/// A facet used to register [language\n/// data](#state.EditorState.languageDataAt) providers.\nEditorState.languageData = languageData;\n/// Facet used to register change filters, which are called for each\n/// transaction (unless explicitly\n/// [disabled](#state.TransactionSpec.filter)), and can suppress\n/// part of the transaction's changes.\n///\n/// Such a function can return `true` to indicate that it doesn't\n/// want to do anything, `false` to completely stop the changes in\n/// the transaction, or a set of ranges in which changes should be\n/// suppressed. Such ranges are represented as an array of numbers,\n/// with each pair of two number indicating the start and end of a\n/// range. So for example `[10, 20, 100, 110]` suppresses changes\n/// between 10 and 20, and between 100 and 110.\nEditorState.changeFilter = changeFilter;\n/// Facet used to register a hook that gets a chance to update or\n/// replace transaction specs before they are applied. This will\n/// only be applied for transactions that don't have\n/// [`filter`](#state.TransactionSpec.filter) set to `false`. You\n/// can either return a single (possibly the input transaction), or\n/// an array of specs (which will be combined in the same way as the\n/// arguments to [`EditorState.update`](#state.EditorState.update)).\n///\n/// When possible, it is recommended to avoid accessing\n/// [`Transaction.state`](#state.Transaction.state) in a filter,\n/// since it will force creation of a state that will then be\n/// discarded again, if the transaction is actually filtered.\n///\n/// (This functionality should be used with care. Indiscriminately\n/// modifying transaction is likely to break something or degrade\n/// the user experience.)\nEditorState.transactionFilter = transactionFilter;\n/// This is a more limited form of\n/// [`transactionFilter`](#state.EditorState^transactionFilter),\n/// which can only add\n/// [annotations](#state.TransactionSpec.annotations),\n/// [effects](#state.TransactionSpec.effects), and\n/// [configuration](#state.TransactionSpec.reconfigure) info. _But_,\n/// this type of filter runs even the transaction has disabled\n/// regular [filtering](#state.TransactionSpec.filter), making it\n/// suitable for effects that don't need to touch the changes or\n/// selection, but do want to process every transaction.\n///\n/// Extenders run _after_ filters, when both are applied.\nEditorState.transactionExtender = transactionExtender;\n\n/// Utility function for combining behaviors to fill in a config\n/// object from an array of provided configs. Will, by default, error\n/// when a field gets two values that aren't ===-equal, but you can\n/// provide combine functions per field to do something else.\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, EditorSelection, EditorState, Facet, MapMode, SelectionRange, StateEffect, StateEffectType, StateField, Transaction, combineConfig, precedence, tagExtension };\n","// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = \"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/// Returns a grapheme cluster end _after_ (not equal to) `pos`, if\n/// possible. Moves across surrogate pairs, extending characters,\n/// characters joined with zero-width joiners, and flag emoji.\nfunction nextClusterBreak(str, pos) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\n/// Returns a grapheme cluster end _before_ `pos`, if possible.\nfunction prevClusterBreak(str, pos) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/// Find the code point at the given position in a string (as in the\n/// [`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\n/// string method).\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/// Given a Unicode codepoint, return the JavaScript string that\n/// respresents it (as in\n/// [`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint).\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/// The first character that takes up two positions in a JavaScript\n/// string. It is often useful to compare with this after calling\n/// `codePointAt`, to figure out whether your character takes up 1 or\n/// 2 index positions.\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\n/// Count the column position at the given offset into the string,\n/// taking extending characters and tab size into account.\nfunction countColumn(string, n, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = nextClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/// Find the offset that corresponds to the given column position in a\n/// string, taking extending characters and tab size into account.\nfunction findColumn(string, n, col, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (n >= col)\n            return { offset: i, leftOver: 0 };\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = nextClusterBreak(string, i);\n    }\n    return { offset: string.length, leftOver: col - n };\n}\n\n/// The document tree type.\nclass Text {\n    /// @internal\n    constructor() { }\n    /// Get the line description around the given position.\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.from <= pos && line.to >= pos)\n                return line;\n        }\n        return cacheLine(this.lineInner(pos, false, 1, 0).finish(this));\n    }\n    /// Get the description for the given (1-based) line number.\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.number == n)\n                return line;\n        }\n        return cacheLine(this.lineInner(n, true, 1, 0).finish(this));\n    }\n    /// Replace a range of the text with the given lines. `text` should\n    /// have a length of at least one.\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts);\n        parts.push(text);\n        this.decompose(to, this.length, parts);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /// Append another document to this one.\n    append(text) {\n        return this.length == 0 ? text : text.length == 0 ? this : TextNode.from([this, text], this.length + text.length);\n    }\n    /// Retrieve the text between the given points.\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts);\n        return TextNode.from(parts, to - from);\n    }\n    /// Test whether this text is equal to another instance.\n    eq(other) { return this == other || eqContent(this, other); }\n    /// Iterate over the text. When `dir` is `-1`, iteration happens\n    /// from end to start. This will return lines and the breaks between\n    /// them as separate strings, and for long lines, might split lines\n    /// themselves into multiple chunks as well.\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /// Iterate over a range of the text. When `from` > `to`, the\n    /// iterator will run in reverse.\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /// Iterate over lines in the text, starting at position (_not_ line\n    /// number) `from`. An iterator returned by this combines all text\n    /// on a line into a single string (which may be expensive for very\n    /// long lines), and skips line breaks (its\n    /// [`lineBreak`](#text.TextIterator.lineBreak) property is always\n    /// false).\n    iterLines(from = 0) { return new LineCursor(this, from); }\n    /// @internal\n    toString() { return this.sliceString(0); }\n    /// Convert the document to an array of lines (which can be\n    /// deserialized again via [`Text.of`](#text.Text^of).\n    toJSON() {\n        let lines = [];\n        for (let iter = this.iterLines(); !iter.next().done;)\n            lines.push(iter.value);\n        return lines;\n    }\n    /// Create a `Text` instance for the given array of lines.\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0] && Text.empty)\n            return Text.empty;\n        let length = textLength(text);\n        return length < 1024 /* MaxLeaf */ ? new TextLeaf(text, length) : TextNode.from(TextLeaf.split(text, []), length);\n    }\n}\nif (typeof Symbol != \"undefined\")\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\nlet lineCache = [], lineCachePos = -1, lineCacheSize = 10;\nfunction cacheLine(line) {\n    return lineCache[lineCachePos = (lineCachePos + 1) % lineCacheSize] = line;\n}\n// Leaves store an array of strings. There are always line breaks\n// between these strings (though not between adjacent Text nodes).\n// These are limited in length, so that bigger documents are\n// constructed as a tree structure. Long lines will be broken into a\n// number of single-line leaves.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target) {\n        target.push(new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from)));\n    }\n    lastLineLength() { return this.text[this.text.length - 1].length; }\n    firstLineLength() { return this.text[0].length; }\n    replace(from, to, text) {\n        let newLen = this.length + text.length - (to - from);\n        if (newLen >= 1024 /* MaxLeaf */ || !(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        return new TextLeaf(appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        target[target.length - 1] += this.text[0];\n        for (let i = 1; i < this.text.length; i++)\n            target.push(this.text[i]);\n    }\n    static split(text, target) {\n        let part = [], length = -1;\n        for (let line of text) {\n            for (;;) {\n                let newLength = length + line.length + 1;\n                if (newLength < 512 /* BaseLeaf */) {\n                    length = newLength;\n                    part.push(line);\n                    break;\n                }\n                let cut = 512 /* BaseLeaf */ - length - 1, after = line.charCodeAt(cut);\n                if (after >= 0xdc00 && after < 0xe000)\n                    cut++;\n                part.push(line.slice(0, cut));\n                target.push(new TextLeaf(part, 512 /* BaseLeaf */));\n                line = line.slice(cut);\n                length = -1;\n                part = [];\n            }\n        }\n        if (length != -1)\n            target.push(new TextLeaf(part, length));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance itself on\n// changes.\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 1;\n        for (let child of children)\n            this.lines += child.lines - 1;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target) {\n                let inner = child.lineInner(target, isLine, line, offset), add;\n                if (inner.from == offset && (add = this.lineLengthTo(i))) {\n                    inner.from -= add;\n                    inner.content = null;\n                }\n                if (inner.to == end && (add = this.lineLengthFrom(i + 1))) {\n                    inner.to += add;\n                    inner.content = null;\n                }\n                return inner;\n            }\n            offset = end;\n            line = endLine;\n        }\n    }\n    decompose(from, to, target) {\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                if (pos >= from && end <= to)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target);\n            }\n            pos = end;\n        }\n    }\n    lineLengthTo(to) {\n        let length = 0;\n        for (let i = to - 1; i >= 0; i--) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.lastLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    lastLineLength() { return this.lineLengthTo(this.children.length); }\n    lineLengthFrom(from) {\n        let length = 0;\n        for (let i = from; i < this.children.length; i++) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.firstLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    firstLineLength() { return this.lineLengthFrom(0); }\n    replace(from, to, text) {\n        // Looks like a small change, try to optimize\n        if (text.length < 512 /* BaseLeaf */ && to - from < 512 /* BaseLeaf */) {\n            let lengthDiff = text.length - (to - from);\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end &&\n                    child.length + lengthDiff < (this.length + lengthDiff) >> (3 /* BranchShift */ - 1) &&\n                    child.length + lengthDiff > 0) {\n                    let copy = this.children.slice();\n                    copy[i] = child.replace(from - pos, to - pos, text);\n                    return new TextNode(copy, this.length + lengthDiff);\n                }\n                pos = end;\n            }\n        }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                let part = child.sliceString(from - pos, to - pos, lineSep);\n                if (from >= pos && to <= end)\n                    return part;\n                result += part;\n            }\n            pos = end;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    static from(children, length) {\n        if (!children.every(ch => ch instanceof Text))\n            throw new Error(\"NOP\");\n        if (length < 1024 /* MaxLeaf */) {\n            let text = [\"\"];\n            for (let child of children)\n                child.flatten(text);\n            return new TextLeaf(text, length);\n        }\n        let chunkLength = Math.max(512 /* BaseLeaf */, length >> 3 /* BranchShift */), maxLength = chunkLength << 1, minLength = chunkLength >> 1;\n        let chunked = [], currentLength = 0, currentChunk = [];\n        function add(child) {\n            let childLength = child.length, last;\n            if (!childLength)\n                return;\n            if (childLength > maxLength && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (childLength > minLength && (currentLength > minLength || currentLength == 0)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLength > 0 &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.length + last.length <= 512 /* BaseLeaf */) {\n                currentLength += childLength;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(appendText(child.text, last.text.slice()), child.length + last.length);\n            }\n            else {\n                if (currentLength + childLength > chunkLength)\n                    flush();\n                currentLength += childLength;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLength == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLength));\n            currentLength = 0;\n            currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = Text.of([\"\"]);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nfunction eqContent(a, b) {\n    if (a.length != b.length || a.lines != b.lines)\n        return false;\n    let iterA = new RawTextCursor(a), iterB = new RawTextCursor(b);\n    for (let offA = 0, offB = 0;;) {\n        if (iterA.lineBreak != iterB.lineBreak || iterA.done != iterB.done) {\n            return false;\n        }\n        else if (iterA.done) {\n            return true;\n        }\n        else if (iterA.lineBreak) {\n            iterA.next();\n            iterB.next();\n            offA = offB = 0;\n        }\n        else {\n            let strA = iterA.value.slice(offA), strB = iterB.value.slice(offB);\n            if (strA.length == strB.length) {\n                if (strA != strB)\n                    return false;\n                iterA.next();\n                iterB.next();\n                offA = offB = 0;\n            }\n            else if (strA.length > strB.length) {\n                if (strA.slice(0, strB.length) != strB)\n                    return false;\n                offA += strB.length;\n                iterB.next();\n                offB = 0;\n            }\n            else {\n                if (strB.slice(0, strA.length) != strA)\n                    return false;\n                offB += strA.length;\n                iterA.next();\n                offA = 0;\n            }\n        }\n    }\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 0 : text instanceof TextLeaf ? text.text.length : text.children.length];\n    }\n    next(skip = 0) {\n        for (;;) {\n            let last = this.nodes.length - 1;\n            if (last < 0) {\n                this.done = true;\n                this.value = \"\";\n                this.lineBreak = false;\n                return this;\n            }\n            let top = this.nodes[last];\n            let offset = this.offsets[last];\n            if (top instanceof TextLeaf) {\n                // Internal offset with lineBreak == false means we have to\n                // count the line break at this position\n                if (offset != (this.dir > 0 ? 0 : top.text.length) && !this.lineBreak) {\n                    this.lineBreak = true;\n                    if (skip == 0) {\n                        this.value = \"\\n\";\n                        return this;\n                    }\n                    skip--;\n                    continue;\n                }\n                // Otherwise, move to the next string\n                let next = top.text[offset - (this.dir < 0 ? 1 : 0)];\n                this.offsets[last] = (offset += this.dir);\n                if (offset == (this.dir > 0 ? top.text.length : 0)) {\n                    this.nodes.pop();\n                    this.offsets.pop();\n                }\n                this.lineBreak = false;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : this.dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else if (offset == (this.dir > 0 ? top.children.length : 0)) {\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else {\n                let next = top.children[this.dir > 0 ? offset : offset - 1], len = next.length;\n                this.offsets[last] = offset + this.dir;\n                if (skip > len) {\n                    skip -= len;\n                }\n                else {\n                    this.nodes.push(next);\n                    this.offsets.push(this.dir > 0 ? 0 : next instanceof TextLeaf ? next.text.length : next.children.length);\n                }\n            }\n        }\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        if (start > end) {\n            this.skip = text.length - start;\n            this.limit = start - end;\n        }\n        else {\n            this.skip = start;\n            this.limit = end - start;\n        }\n    }\n    next() {\n        if (this.limit <= 0) {\n            this.limit = -1;\n        }\n        else {\n            let { value, lineBreak, done } = this.cursor.next(this.skip);\n            this.skip = 0;\n            this.value = value;\n            let len = lineBreak ? 1 : value.length;\n            if (len > this.limit)\n                this.value = this.cursor.dir > 0 ? value.slice(0, this.limit) : value.slice(len - this.limit);\n            if (done || this.value.length == 0)\n                this.limit = -1;\n            else\n                this.limit -= this.value.length;\n        }\n        return this;\n    }\n    get lineBreak() { return this.cursor.lineBreak; }\n    get done() { return this.limit < 0; }\n}\nclass LineCursor {\n    constructor(text, from = 0) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = text.iter();\n        this.skip = from;\n    }\n    next(skip = 0) {\n        if (this.cursor.done) {\n            this.done = true;\n            this.value = \"\";\n            return this;\n        }\n        skip += this.skip;\n        this.skip = 0;\n        for (this.value = \"\";;) {\n            let { value, lineBreak, done } = this.cursor.next(skip);\n            skip = 0;\n            if (done || lineBreak)\n                return this;\n            this.value += value;\n        }\n    }\n    get lineBreak() { return false; }\n}\n/// This type describes a line in the document. It is created\n/// on-demand when lines are [queried](#text.Text.lineAt).\nclass Line {\n    /// @internal\n    constructor(\n    /// The position of the start of the line.\n    from, \n    /// The position at the end of the line (_before_ the line break,\n    /// if this isn't the last line).\n    to, \n    /// This line's line number (1-based).\n    number, \n    /// @internal\n    content) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.content = content;\n    }\n    /// The length of the line (not including any line break after it).\n    get length() { return this.to - this.from; }\n    /// Retrieve a part of the content of this line. This is a method,\n    /// rather than, say, a string property, to avoid concatenating long\n    /// lines whenever they are accessed. Try to write your code, if it\n    /// is going to be doing a lot of line-reading, to read only the\n    /// parts it needs.\n    slice(from = 0, to = this.length) {\n        if (from == to)\n            return \"\";\n        if (typeof this.content == \"string\")\n            return this.content.slice(from, to);\n        if (!this.content)\n            this.content = new LineContent(this.doc, this.from);\n        let result = this.content.slice(from, to);\n        if (from == 0 && to == this.length)\n            this.content = result;\n        return result;\n    }\n    /// @internal\n    finish(text) {\n        this.doc = text;\n        return this;\n    }\n    /// Find the next (or previous if `forward` is false) grapheme\n    /// cluster break from the given start position (as an offset inside\n    /// the line, not the document). Will return a position greater than\n    /// (or less than if `forward` is false) `start` unless there is no\n    /// such index in the string.\n    findClusterBreak(start, forward) {\n        if (start < 0 || start > this.length)\n            throw new RangeError(\"Invalid position given to Line.findClusterBreak\");\n        let contextStart, context;\n        if (this.content == \"string\") {\n            contextStart = this.from;\n            context = this.content;\n        }\n        else {\n            contextStart = Math.max(0, start - 256);\n            context = this.slice(contextStart, Math.min(this.length, contextStart + 512));\n        }\n        return (forward ? nextClusterBreak : prevClusterBreak)(context, start - contextStart) + contextStart;\n    }\n}\nclass LineContent {\n    constructor(doc, start) {\n        this.doc = doc;\n        this.start = start;\n        this.cursor = null;\n        this.strings = null;\n    }\n    // FIXME quadratic complexity (somewhat) when iterating long lines in small pieces\n    slice(from, to) {\n        if (!this.cursor) {\n            this.cursor = this.doc.iter();\n            this.strings = [this.cursor.next(this.start).value];\n        }\n        for (let result = \"\", pos = 0, i = 0;; i++) {\n            if (i == this.strings.length) {\n                let next = this.cursor.next().value;\n                if (!next)\n                    return result;\n                this.strings.push(next);\n            }\n            let string = this.strings[i], start = pos;\n            pos += string.length;\n            if (pos <= from)\n                continue;\n            result += string.slice(Math.max(0, from - start), Math.min(string.length, to - start));\n            if (pos >= to)\n                return result;\n        }\n    }\n}\n\nexport { Line, Text, codePointAt, codePointSize, countColumn, findColumn, fromCodePoint, nextClusterBreak, prevClusterBreak };\n","import { ViewPlugin, themeClass, Direction, EditorView } from '@codemirror/next/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/next/state';\n\nconst Outside = \"-10000px\";\nconst tooltipPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.tooltips = view.state.facet(showTooltip);\n        this.tooltipViews = this.tooltips.map(tp => this.createTooltip(tp));\n    }\n    update(update) {\n        let tooltips = update.state.facet(showTooltip);\n        if (tooltips == this.tooltips) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n        }\n        else {\n            let views = [];\n            for (let i = 0; i < tooltips.length; i++) {\n                let tip = tooltips[i], known = -1;\n                for (let i = 0; i < this.tooltips.length; i++)\n                    if (this.tooltips[i].create == tip.create)\n                        known = i;\n                if (known < 0) {\n                    views[i] = this.createTooltip(tip);\n                }\n                else {\n                    let tooltipView = views[i] = this.tooltipViews[known];\n                    if (tooltipView.update)\n                        tooltipView.update(update);\n                }\n            }\n            for (let t of this.tooltipViews)\n                if (views.indexOf(t) < 0)\n                    t.dom.remove();\n            this.tooltips = tooltips;\n            this.tooltipViews = views;\n            this.maybeMeasure();\n        }\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.className = themeClass(\"tooltip\" + (tooltip.style ? \".\" + tooltip.style : \"\"));\n        this.view.dom.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        for (let { dom } of this.tooltipViews)\n            dom.remove();\n    }\n    readMeasure() {\n        return {\n            editor: this.view.dom.getBoundingClientRect(),\n            pos: this.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n            size: this.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight\n        };\n    }\n    writeMeasure(measured) {\n        let { editor } = measured;\n        for (let i = 0; i < this.tooltipViews.length; i++) {\n            let tooltip = this.tooltips[i], tView = this.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= editor.top || pos.top >= editor.bottom || pos.right <= editor.left || pos.left >= editor.right) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let left = this.view.textDirection == Direction.LTR ? Math.min(pos.left, measured.innerWidth - width)\n                : Math.max(0, pos.left - width);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide &&\n                (above ? pos.top - (size.bottom - size.top) < 0 : pos.bottom + (size.bottom - size.top) > measured.innerHeight))\n                above = !above;\n            dom.style.top = (above ? pos.top - height : pos.bottom) + \"px\";\n            dom.style.left = left + \"px\";\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.tooltips.length) {\n            if (this.view.inView || this.inView)\n                this.view.requestMeasure(this.measureReq);\n            this.inView = this.view.inView;\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = EditorView.baseTheme({\n    $tooltip: {\n        position: \"fixed\",\n        border: \"1px solid #ddd\",\n        backgroundColor: \"#f5f5f5\",\n        zIndex: 100\n    }\n});\n/// Supporting extension for displaying tooltips. Allows\n/// [`showTooltip`](#tooltip.showTooltip) to be used to define\n/// tooltips.\nfunction tooltips() {\n    return [tooltipPlugin, baseTheme];\n}\n/// Behavior by which an extension can provide a tooltip to be shown.\nconst showTooltip = Facet.define();\nconst HoverTime = 750, HoverMaxDist = 10;\nclass HoverPlugin {\n    constructor(view, source, field, setHover) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.lastMouseMove = null;\n        this.hoverTimeout = -1;\n        this.mouseInside = false;\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseenter\", this.mouseenter = this.mouseenter.bind(this));\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (!this.mouseInside || this.active)\n            return;\n        let now = Date.now(), lastMove = this.lastMouseMove;\n        if (now - lastMove.timeStamp < HoverTime) {\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime - (now - lastMove.timeStamp));\n            return;\n        }\n        let pos = this.view.contentDOM.contains(lastMove.target)\n            ? this.view.posAtCoords({ x: lastMove.clientX, y: lastMove.clientY }) : -1;\n        let open = pos == null ? null : this.source(this.view, (from, to) => {\n            return from <= pos && to >= pos && (from == to || isOverRange(this.view, from, to, lastMove.clientX, lastMove.clientY));\n        });\n        if (open)\n            this.view.dispatch({ effects: this.setHover.of(open) });\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMouseMove = event;\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(event.target)) {\n            let { pos } = tooltip, end = (_a = tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords({ x: event.clientX, y: event.clientY }) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, HoverMaxDist)))\n                this.view.dispatch({ effects: this.setHover.of(null) });\n        }\n    }\n    mouseenter() {\n        this.mouseInside = true;\n    }\n    mouseleave() {\n        this.mouseInside = false;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseenter\", this.mouseenter);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin = 0) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/// Enable a hover tooltip, which shows up when the pointer hovers\n/// over ranges of text. The callback should, for each hoverable\n/// range, call its `check` argument to see if that range is being\n/// hovered over, and return a tooltip description when it is.\nfunction hoverTooltip(source, options = {}) {\n    const setHover = StateEffect.define();\n    const hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection)))\n                return null;\n            for (let effect of tr.effects)\n                if (effect.is(setHover))\n                    return effect.value;\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                return copy;\n            }\n            return value;\n        },\n        provide: [showTooltip.nFrom(v => v ? [v] : [])]\n    });\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover)),\n        tooltips()\n    ];\n}\n\nexport { hoverTooltip, showTooltip, tooltips };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { MapMode, Facet, Text as Text$1, EditorSelection, ChangeSet, Transaction, CharCategory, EditorState, precedence, combineConfig } from '@codemirror/next/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nexport { Range } from '@codemirror/next/rangeset';\nimport { Text, countColumn, findColumn, codePointAt } from '@codemirror/next/text';\nimport { keyName, base } from 'w3c-keyname';\n\nlet [nav, doc] = typeof navigator != \"undefined\"\n    ? [navigator, document]\n    : [{ userAgent: \"\", vendor: \"\", platform: \"\" }, { documentElement: { style: {} } }];\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nvar browser = {\n    mac: /Mac/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n    android: /Android\\b/.test(nav.userAgent),\n    webkit,\n    safari: /Apple Computer/.test(nav.vendor),\n    webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nfunction getSelection(root) {\n    return (root.getSelection ? root.getSelection() : document.getSelection());\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nfunction selectionCollapsed(domSel) {\n    let collapsed = domSel.isCollapsed;\n    if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n        collapsed = false;\n    return collapsed;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return dom.contains(selection.anchorNode.nodeType == 3 ? selection.anchorNode.parentNode : selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3) {\n        let range = tempRange();\n        range.setEnd(dom, dom.nodeValue.length);\n        range.setStart(dom, 0);\n        return range.getClientRects();\n    }\n    else if (dom.nodeType == 1) {\n        return dom.getClientRects();\n    }\n    else {\n        return [];\n    }\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nconst ScrollSpace = 5;\nfunction scrollRectIntoView(dom, rect) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == document.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (rect.top < bounding.top)\n                moveY = -(bounding.top - rect.top + ScrollSpace);\n            else if (rect.bottom > bounding.bottom)\n                moveY = rect.bottom - bounding.bottom + ScrollSpace;\n            if (rect.left < bounding.left)\n                moveX = -(bounding.left - rect.left + ScrollSpace);\n            else if (rect.right > bounding.right)\n                moveX = rect.right - bounding.right + ScrollSpace;\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelection {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    set(domSel) {\n        this.anchorNode = domSel.anchorNode;\n        this.anchorOffset = domSel.anchorOffset;\n        this.focusNode = domSel.focusNode;\n        this.focusOffset = domSel.focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction tempRange() { return scratchRange || (scratchRange = document.createRange()); }\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst none = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom, pos = null;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    let next = pos ? pos.nextSibling : parent.firstChild;\n                    if (next && !child.dom && !ContentView.get(next))\n                        child.reuseDOM(next);\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                if (track && track.node == parent && pos != child.dom)\n                    track.written = true;\n                syncNodeInto(parent, pos, child.dom);\n                pos = child.dom;\n            }\n            let next = pos ? pos.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm(next);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { return false; }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (end >= to && end != pos && toI == -1) {\n                toI = i;\n                toEnd = end;\n                break;\n            }\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd, startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: toI < this.children.length - 1 && toI >= 0 ? this.children[toI + 1].dom : null };\n    }\n    // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n    markDirty(andParent = false) {\n        if (this.dirty & 2 /* Node */)\n            return;\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = none) {\n        this.markDirty();\n        for (let i = from; i < to; i++)\n            this.children[i].parent = null;\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nfunction syncNodeInto(parent, after, dom) {\n    let next = after ? after.nextSibling : parent.firstChild;\n    if (dom.parentNode == parent)\n        while (next != dom)\n            next = rm(next);\n    else\n        parent.insertBefore(dom, next);\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\n\nconst none$1 = [];\nclass InlineView extends ContentView {\n    /// Return true when this view is equivalent to `other` and can take\n    /// on its role.\n    become(_other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // negative number to indicate it is before its position, or a\n    // positive number when after its position.\n    getSide() { return 0; }\n}\nInlineView.prototype.children = none$1;\nconst MaxJoinLen = 256;\nclass TextView extends InlineView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType != 3)\n            return false;\n        this.createDOM(dom);\n        return true;\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new TextView(this.text.slice(from));\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side, this.length);\n    }\n}\nclass MarkView extends InlineView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    createDOM() {\n        let dom = document.createElement(this.mark.tagName);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        this.setDOM(dom);\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        super.sync(track);\n    }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeInlineChildren(this, from, to, source ? source.children : none$1, openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new MarkView(this.mark, sliceInlineChildren(this.children, from), this.length - from);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side, length) {\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else\n            to++;\n    }\n    let range = tempRange();\n    range.setEnd(text, to);\n    range.setStart(text, from);\n    let rects = range.getClientRects(), rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends InlineView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    slice(from) { return WidgetView.create(this.widget, this.length - from, this.side); }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) { return new DOMPos(this.widget.text, pos); }\n    sync() { if (!this.dom)\n        this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) { return textCoords(this.widget.text, pos, side, this.length); }\n}\nfunction mergeInlineChildren(parent, from, to, elts, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of elts)\n        dLen += view.length;\n    parent.length += dLen;\n    let { children } = parent;\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n        let start = children[fromI];\n        // Maybe just update that view and be done\n        if (elts.length == 1 && start.merge(fromOff, toOff, elts[0], openStart, openEnd))\n            return;\n        if (elts.length == 0) {\n            start.merge(fromOff, toOff, null, openStart, openEnd);\n            return;\n        }\n        // Otherwise split it, so that we don't have to worry about aliasing front/end afterwards\n        let after = start.slice(toOff);\n        if (after.merge(0, 0, elts[elts.length - 1], 0, openEnd))\n            elts[elts.length - 1] = after;\n        else\n            elts.push(after);\n        toI++;\n        openEnd = toOff = 0;\n    }\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n        let end = children[toI];\n        if (elts.length && end.merge(0, toOff, elts[elts.length - 1], 0, openEnd)) {\n            elts.pop();\n            openEnd = 0;\n        }\n        else {\n            end.merge(0, toOff, null, 0, 0);\n        }\n    }\n    else if (toI < children.length && elts.length &&\n        children[toI].merge(0, 0, elts[elts.length - 1], 0, openEnd)) {\n        elts.pop();\n        openEnd = 0;\n    }\n    if (fromOff) {\n        let start = children[fromI];\n        if (elts.length && start.merge(fromOff, start.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n        else {\n            start.merge(fromOff, start.length, null, 0, 0);\n        }\n        fromI++;\n    }\n    else if (fromI && elts.length) {\n        let end = children[fromI - 1];\n        if (end.merge(end.length, end.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n    }\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && children[toI - 1].become(elts[elts.length - 1])) {\n        elts.pop();\n        toI--;\n        openEnd = 0;\n    }\n    while (fromI < toI && elts.length && children[fromI].become(elts[0])) {\n        elts.shift();\n        fromI++;\n        openStart = 0;\n    }\n    if (!elts.length && fromI && toI < children.length && openStart && openEnd &&\n        children[toI].merge(0, 0, children[fromI - 1], openStart, openEnd))\n        fromI--;\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI)\n        parent.replaceChildren(fromI, toI, elts);\n}\nfunction sliceInlineChildren(children, from) {\n    let result = [], off = 0;\n    for (let elt of children) {\n        let end = off + elt.length;\n        if (end > from)\n            result.push(off < from ? elt.slice(from - off) : elt);\n        off = end;\n    }\n    return result;\n}\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (side <= 0 || end == view.length ? end >= pos : end > pos)\n            return child.coordsAt(pos - off, side);\n        off = end;\n    }\n    return (view.dom.lastChild || view.dom).getBoundingClientRect();\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(name, attrs[name]);\n}\n\n/// Widgets added to the content are described by subclasses of this\n/// class. This makes it possible to delay creating of the DOM\n/// structure for a widget until it is needed, and to avoid redrawing\n/// widgets even when the decorations that define them are recreated.\n/// `T` can be a type of value passed to instances of the widget type.\nclass WidgetType {\n    /// Compare this instance to another instance of the same type.\n    /// (TypeScript can't express this, but only instances of the same\n    /// specific class will be passed to this method.) This is used to\n    /// avoid redrawing widgets when they are replace by a new\n    /// decoration of the same type. The default implementation just\n    /// returns `false`, which may be wasteful.\n    eq(_widget) { return false; }\n    /// Update a DOM element created by a widget of the same type (but\n    /// different, non-`eq` content) to reflect this widget. May return\n    /// true to indicate that it could update, false to indicate it\n    /// couldn't (in which case the widget will be redrawn). The default\n    /// implementation just returns false.\n    updateDOM(_dom) { return false; }\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// The estimated height this widget will have, to be used when\n    /// estimating the height of content that hasn't been drawn. May\n    /// return -1 to indicate you don't know. The default implementation\n    /// returns -1.\n    get estimatedHeight() { return -1; }\n    /// Can be used to configure which kinds of events inside the widget\n    /// should be ignored by the editor. The default is to ignore all\n    /// events.\n    ignoreEvent(_event) { return true; }\n    //// @internal\n    get customView() { return null; }\n}\n/// The different types of blocks that can occur in an editor view.\nvar BlockType;\n(function (BlockType) {\n    /// A line of text.\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /// A block widget associated with the position after it.\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /// A block widget associated with the position before it.\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /// A block widget [replacing](#view.Decoration^replace) a range of content.\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\n})(BlockType || (BlockType = {}));\n/// A decoration provides information on how to draw or style a piece\n/// of content. You'll usually use it wrapped in a\n/// [`Range`](#rangeset.Range), which adds a start and end position.\nclass Decoration extends RangeValue {\n    /// @internal\n    constructor(\n    /// @internal\n    startSide, \n    /// @internal\n    endSide, \n    /// @internal\n    widget, \n    /// The config object used to create this decoration.\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /// @internal\n    get heightRelevant() { return false; }\n    /// Create a mark decoration, which influences the styling of the\n    /// content in its range. Nested mark decorations will cause nested\n    /// DOM elements to be created. Nesting order is determined by\n    /// precedence of the [facet](#view.EditorView^decorations) or\n    /// (below the facet-provided decorations) [view\n    /// plugin](#view.PluginSpec.decorations). Such elements are broken\n    /// on line boundaries and on the boundaries of higher-precedence\n    /// decorations.\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /// Create a widget decoration, which adds an element at the given\n    /// position.\n    static widget(spec) {\n        let side = spec.side || 0;\n        if (spec.block)\n            side += (200000000 /* BigBlock */ + 1) * (side > 0 ? 1 : -1);\n        return new PointDecoration(spec, side, side, !!spec.block, spec.widget || null, false);\n    }\n    /// Create a replace decoration which replaces the given range with\n    /// a widget, or simply hides it.\n    static replace(spec) {\n        let block = !!spec.block;\n        let { start, end } = getInclusive(spec);\n        let startSide = block ? -200000000 /* BigBlock */ * (start ? 2 : 1) : 100000000 /* BigInline */ * (start ? -1 : 1);\n        let endSide = block ? 200000000 /* BigBlock */ * (end ? 2 : 1) : 100000000 /* BigInline */ * (end ? 1 : -1);\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /// Create a line decoration, which can add DOM attributes to the\n    /// line starting at the given position.\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /// Build a [`DecorationSet`](#view.DecorationSet) from the given\n    /// decorated range or ranges.\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /// @internal\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/// The empty set of decorations.\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(100000000 /* BigInline */ * (start ? -1 : 1), 100000000 /* BigInline */ * (end ? 1 : -1), null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-100000000 /* BigInline */, -100000000 /* BigInline */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide < 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide < 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide < 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start || false, end: end || false };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nconst MinRangeGap = 4;\nfunction addRange(from, to, ranges) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + MinRangeGap > from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nconst theme = Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = StyleModule.newName();\nfunction expandThemeClasses(sel) {\n    return sel.replace(/\\$\\w[\\w\\.]*/g, cls => {\n        let parts = cls.slice(1).split(\".\"), result = \"\";\n        for (let i = 1; i <= parts.length; i++)\n            result += \".cm-\" + parts.slice(0, i).join(\"-\");\n        return result;\n    });\n}\nfunction buildTheme(main, spec) {\n    return new StyleModule(spec, {\n        process(sel) {\n            sel = expandThemeClasses(sel);\n            return /\\$/.test(sel) ? sel.replace(/\\$/, main) : main + \" \" + sel;\n        },\n        extend(template, sel) {\n            template = expandThemeClasses(template);\n            return sel.slice(0, main.length + 1) == main + \" \"\n                ? main + \" \" + template.replace(/&/, sel.slice(main.length + 1))\n                : template.replace(/&/, sel);\n        }\n    });\n}\n/// Create a set of CSS class names for the given theme class, which\n/// can be added to a DOM element within an editor to make themes able\n/// to style it. Theme classes can be single words or words separated\n/// by dot characters. In the latter case, the returned classes\n/// combine those that match the full name and those that match some\n/// prefix—for example `\"panel.search\"` will match both the theme\n/// styles specified as `\"panel.search\"` and those with just\n/// `\"panel\"`. More specific theme classes (with more dots) take\n/// precedence over less specific ones.\nfunction themeClass(selector) {\n    if (selector.indexOf(\".\") < 0)\n        return \"cm-\" + selector;\n    let parts = selector.split(\".\"), result = \"\";\n    for (let i = 1; i <= parts.length; i++)\n        result += (result ? \" \" : \"\") + \"cm-\" + parts.slice(0, i).join(\"-\");\n    return result;\n}\nconst baseTheme = buildTheme(\".\" + baseThemeID, {\n    $: {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&$focused\": {\n            // FIXME it would be great if we could directly use the browser's\n            // default focus outline, but it appears we can't, so this tries to\n            // approximate that\n            outline_fallback: \"1px dotted #212121\",\n            outline: \"5px auto -webkit-focus-ring-color\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    $scroller: {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    $content: {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\"\n    },\n    \"$$light $content\": { caretColor: \"black\" },\n    \"$$dark $content\": { caretColor: \"white\" },\n    $line: {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    $selectionLayer: {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    $selectionBackground: {\n        position: \"absolute\",\n    },\n    \"$$light $selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"$$dark $selectionBackground\": {\n        background: \"#222\"\n    },\n    \"$$focused$light $selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"$$focused$dark $selectionBackground\": {\n        background: \"#233\"\n    },\n    $cursorLayer: {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"$$focused $cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    $cursor: {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid #bbb\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\"\n    },\n    \"$$dark $cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \"$$focused $cursor\": {\n        borderLeft: \"1.2px solid black\",\n    },\n    $placeholder: {\n        color: \"#888\",\n        display: \"inline-block\"\n    },\n    $button: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"3px\"\n    },\n    \"$$light $button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"$$dark $button\": {\n        backgroundImage: \"linear-gradient(#555, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    $textfield: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"$$light $textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"$$dark $textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n});\n\nconst LineClass = themeClass(\"line\");\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, takeDeco, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (takeDeco)\n            this.setDeco(source ? source.attrs : null);\n        mergeInlineChildren(this, from, to, source ? source.children : none$2, openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].slice(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0) {\n            this.children[i - 1].parent = null;\n            i--;\n        }\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    // Only called when building a line view in ContentBuilder\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    // FIXME might need another hack to work around Firefox's behavior\n    // of not actually displaying the cursor even though it's there in\n    // the DOM\n    sync(track) {\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = LineClass;\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(LineClass);\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        if (!last || (last.nodeName != \"BR\" && (ContentView.get(last) instanceof WidgetView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height, charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    match(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0;; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (block.length)\n                    return null;\n            }\n            off = end + block.breakAfter;\n        }\n    }\n}\nconst none$2 = [];\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        return new BlockWidgetView(this.widget, len, this.type);\n    }\n    get children() { return none$2; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n    }\n    domBoundsAround() { return null; }\n    match(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine)\n            this.content.push(this.curLine = new LineView);\n        return this.curLine;\n    }\n    addWidget(view) {\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish() {\n        if (!this.posCovered())\n            this.getLine();\n    }\n    wrapMarks(view, active) {\n        for (let i = active.length - 1; i >= 0; i--)\n            view = new MarkView(active[i], [view], view.length);\n        return view;\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length);\n            this.getLine().append(this.wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            length -= take;\n            this.textOff += take;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart) {\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let widget = this.wrapMarks(WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide), active);\n                this.getLine().append(widget, openStart);\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations) {\n        let builder = new ContentBuilder(text, from, to);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish();\n        return builder;\n    }\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\n/// Used to indicate [text direction](#view.EditorView.textDirection).\nvar Direction;\n(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\n})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/// Represents a contiguous range of text that has a single direction\n/// (as in left-to-right or right-to-left).\nclass BidiSpan {\n    /// @internal\n    constructor(\n    /// The start of the span (relative to the start of the line).\n    from, \n    /// The end of the span.\n    to, \n    /// The [\"bidi\n    /// level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    /// of the span (in this context, 0 means\n    /// left-to-right, 1 means right-to-left, 2 means left-to-right\n    /// number inside right-to-left text).\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /// The direction of this span.\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /// @internal\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /// @internal\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = line.findClusterBreak(startIndex, indexForward);\n    movedOver = line.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, 0, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, 0, span.level);\n}\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.direction = Direction.LTR;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefresh(lineHeights, whiteSpace, direction) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight || (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction;\n    }\n    refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n            this.lineWrapping != lineWrapping ||\n            this.direction != direction;\n        this.lineWrapping = lineWrapping;\n        this.direction = direction;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/// Record used to represent information about a block-level element\n/// in the editor view.\nclass BlockInfo {\n    /// @internal\n    constructor(\n    /// The start of the element in the document.\n    from, \n    /// The length of the element.\n    length, \n    /// The top position of the element.\n    top, \n    /// Its height.\n    height, \n    /// The type of element this is. When querying lines, this may be\n    /// an array of all the blocks that make up the line.\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /// The end of the element as a document position.\n    get to() { return this.from + this.length; }\n    /// The bottom position of the element.\n    get bottom() { return this.top + this.height; }\n    /// @internal\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n}\nvar QueryType;\n(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\n})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-4;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(_from, _to, doc, top, offset, f) {\n        f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = from; pos < to;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, top += lineHeight, BlockType.Text));\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from);\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let line = new HeightMapText(len, measured.heights[measured.index++]);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            oracle.heightChanged = true;\n            return HeightMap.of(nodes);\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid || this.right.height == 0 ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop || this.right.height == 0 : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? Math.max(0, deco.widget.estimatedHeight) : 0;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder);\n        return builder.finish(from);\n    }\n    get minPointSize() { return 0; }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator();\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes);\n    }\n    get minPointSize() { return 0; }\n}\n\nconst none$3 = [];\nconst clickAddsSelectionRange = Facet.define();\nconst dragMovesSelection = Facet.define();\nconst mouseSelectionStyle = Facet.define();\nconst exceptionSink = Facet.define();\nconst updateListener = Facet.define();\nconst inputHandler = Facet.define();\n/// Log or report an unhandled exception in client code. Should\n/// probably only be used by extension code that allows client code to\n/// provide functions, and calls those functions in a context where an\n/// exception can't be propagated to calling code in a reasonable way\n/// (for example when in an event handler).\n///\n/// Either calls a handler registered with\n/// [`EditorView.exceptionSink`](#view.EditorView^exceptionSink),\n/// `window.onerror`, if defined, or `console.error` (in which case\n/// it'll pass `context`, when given, as first argument).\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = Facet.define({ combine: values => values.length ? values[0] : true });\n/// Used to [declare](#view.PluginSpec.provide) which\n/// [fields](#view.PluginValue) a [view plugin](#view.ViewPlugin)\n/// provides.\nclass PluginFieldProvider {\n    /// @internal\n    constructor(\n    /// @internal\n    field, \n    /// @internal\n    get) {\n        this.field = field;\n        this.get = get;\n    }\n}\n/// Plugin fields are a mechanism for allowing plugins to provide\n/// values that can be retrieved through the\n/// [`pluginField`](#view.EditorView.pluginField) view method.\nclass PluginField {\n    from(get) {\n        return new PluginFieldProvider(this, get);\n    }\n    /// Define a new plugin field.\n    static define() { return new PluginField(); }\n}\n/// Plugins can provide additional scroll margins (space around the\n/// sides of the scrolling element that should be considered\n/// invisible) through this field. This can be useful when the\n/// plugin introduces elements that cover part of that element (for\n/// example a horizontally fixed gutter).\nPluginField.scrollMargins = PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = Facet.define();\n/// View plugins associate stateful values with a view. They can\n/// influence the way the content is drawn, and are notified of things\n/// that happen in the view.\nclass ViewPlugin {\n    constructor(\n    /// @internal\n    id, \n    /// @internal\n    create, \n    /// @internal\n    fields) {\n        this.id = id;\n        this.create = create;\n        this.fields = fields;\n        this.extension = viewPlugin.of(this);\n    }\n    /// Define a plugin from a constructor function that creates the\n    /// plugin's value, given an editor view.\n    static define(create, spec) {\n        let { eventHandlers, provide, decorations } = spec || {};\n        let fields = [];\n        if (provide)\n            for (let provider of Array.isArray(provide) ? provide : [provide])\n                fields.push(provider);\n        if (eventHandlers)\n            fields.push(domEventHandlers.from((value) => ({ plugin: value, handlers: eventHandlers })));\n        if (decorations)\n            for (let get of Array.isArray(decorations) ? decorations : [decorations])\n                fields.push(pluginDecorations.from(get));\n        return new ViewPlugin(nextPluginID++, create, fields);\n    }\n    /// Create a plugin for a class whose constructor takes a single\n    /// editor view as argument.\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\n// FIXME somehow ensure that no replacing decorations end up in here\nconst pluginDecorations = PluginField.define();\nconst domEventHandlers = PluginField.define();\nclass PluginInstance {\n    constructor(value, spec) {\n        this.value = value;\n        this.spec = spec;\n    }\n    static create(spec, view) {\n        let value;\n        try {\n            value = spec.create(view);\n        }\n        catch (e) {\n            logException(view.state, e, \"CodeMirror plugin crashed\");\n            return PluginInstance.dummy;\n        }\n        return new PluginInstance(value, spec);\n    }\n    takeField(type, target) {\n        for (let { field, get } of this.spec.fields)\n            if (field == type)\n                target.push(get(this.value));\n    }\n    update(update) {\n        if (!this.value.update)\n            return this;\n        try {\n            this.value.update(update);\n            return this;\n        }\n        catch (e) {\n            logException(update.state, e, \"CodeMirror plugin crashed\");\n            if (this.value.destroy)\n                try {\n                    this.value.destroy();\n                }\n                catch (_) { }\n            return PluginInstance.dummy;\n        }\n    }\n    destroy(view) {\n        if (this.value.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n}\nPluginInstance.dummy = new PluginInstance({}, ViewPlugin.define(() => ({})));\nconst editorAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\nconst contentAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\n// Provide decorations\nconst decorations = Facet.define();\nconst styleModule = Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/// View [plugins](#view.ViewPlugin) are given instances of this\n/// class, which describe what happened, whenever the view is updated.\nclass ViewUpdate {\n    /// @internal\n    constructor(\n    /// The editor view that the update is associated with.\n    view, \n    /// The new editor state.\n    state, \n    /// The transactions involved in the update. May be empty.\n    transactions = none$3) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /// @internal\n        this.flags = 0;\n        this.prevState = view.state;\n        this.changes = ChangeSet.empty(this.prevState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags != 1 /* Focus */;\n        }\n        if (this.docChanged)\n            this.flags |= 2 /* Height */;\n    }\n    /// Tells you whether the viewport changed in this update.\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /// Indicates whether the line height in the editor changed in this update.\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /// Returns true when the document changed or the size of the editor\n    /// or the lines or characters within it has changed.\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (16 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /// True when this update indicates a focus change.\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /// Whether the document changed in this update.\n    get docChanged() {\n        return this.transactions.some(tr => tr.docChanged);\n    }\n    /// Whether the selection was explicitly set in this update.\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /// @internal\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent;) { // (Cast to any because TypeScript is useless with Node types)\n        if (parent.nodeType == 1) {\n            if ((parent.scrollHeight > parent.clientHeight || parent.scrollWidth > parent.clientWidth) &&\n                window.getComputedStyle(parent).overflow != \"visible\") {\n                let parentRect = parent.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = parent.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: right - rect.left,\n        top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentWidth = 0;\n        this.heightOracle = new HeightOracle;\n        this.heightMap = HeightMap.empty();\n        this.scrollTo = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be signficant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.heightMap = this.heightMap.applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    update(update, scrollTo = null) {\n        let prev = this.state;\n        this.state = update.state;\n        let newDeco = this.state.facet(decorations);\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.prevState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTo && (scrollTo.head < viewport.from || scrollTo.head > viewport.to) || !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTo);\n        if (!viewport.eq(this.viewport)) {\n            this.viewport = viewport;\n            update.flags |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            update.flags |= this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        this.computeVisibleRanges();\n        if (scrollTo)\n            this.scrollTo = scrollTo;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.primary.empty && update.state.selection.primary.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(docView, repeated) {\n        let dom = docView.dom, whiteSpace = \"\", direction = Direction.LTR;\n        if (!repeated) {\n            // Vertical padding\n            let style = window.getComputedStyle(dom);\n            whiteSpace = style.whiteSpace, direction = (style.direction == \"rtl\" ? Direction.RTL : Direction.LTR);\n            this.paddingTop = parseInt(style.paddingTop) || 0;\n            this.paddingBottom = parseInt(style.paddingBottom) || 0;\n        }\n        // Pixel viewport\n        let pixelViewport = this.printing ? { top: -1e8, bottom: 1e8, left: -1e8, right: 1e8 } : visiblePixelRange(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        this.inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (!this.inView)\n            return 0;\n        let lineHeights = docView.measureVisibleLineHeights();\n        let refresh = false, bias = 0, result = 0, oracle = this.heightOracle;\n        if (!repeated) {\n            let contentWidth = docView.dom.clientWidth;\n            if (oracle.mustRefresh(lineHeights, whiteSpace, direction) ||\n                oracle.lineWrapping && Math.abs(contentWidth - this.contentWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    docView.minWidth = 0;\n                    result |= 16 /* Geometry */;\n                }\n            }\n            if (this.contentWidth != contentWidth) {\n                this.contentWidth = contentWidth;\n                result |= 16 /* Geometry */;\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n        }\n        oracle.heightChanged = false;\n        this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n        if (oracle.heightChanged)\n            result |= 2 /* Height */;\n        if (!this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTo && (this.scrollTo.head < this.viewport.from || this.scrollTo.head > this.viewport.to)) {\n            this.viewport = this.getViewport(bias, this.scrollTo);\n            result |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            result |= this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    getViewport(bias, scrollTo) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { top, bottom } = this.pixelViewport;\n        let viewport = new Viewport(map.lineAt(top - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(bottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTo is given, make sure the viewport includes that position\n        if (scrollTo) {\n            if (scrollTo.head < viewport.from) {\n                let { top: newTop } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newTop - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newTop + (bottom - top) + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n            else if (scrollTo.head > viewport.to) {\n                let { bottom: newBottom } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newBottom - (bottom - top) - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newBottom + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        return (from == 0 || top <= this.pixelViewport.top - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= this.pixelViewport.bottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > this.pixelViewport.top - 2 * 1000 /* Margin */ && bottom < this.pixelViewport.bottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.heightOracle.direction != Direction.LTR)\n            return gaps;\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, line => {\n            if (line.length < 10000 /* Margin */)\n                return;\n            let structure = lineStructure(line.from, line.to, this.state);\n            if (structure.total < 10000 /* Margin */)\n                return;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                if (line.from != this.viewport.from)\n                    viewFrom = line.from;\n                else\n                    viewFrom = findPosition(structure, (this.pixelViewport.top - line.top) / line.height);\n                if (line.to != this.viewport.to)\n                    viewTo = line.to;\n                else\n                    viewTo = findPosition(structure, (this.pixelViewport.bottom - line.top) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, this.pixelViewport.left / totalWidth);\n                viewTo = findPosition(structure, this.pixelViewport.right / totalWidth);\n            }\n            let sel = this.state.selection.primary;\n            // Make sure the gap doesn't cover a selection end\n            if (sel.from <= viewFrom && sel.to >= line.from)\n                viewFrom = sel.from;\n            if (sel.from <= line.to && sel.to >= viewTo)\n                viewTo = sel.to;\n            let gapTo = viewFrom - 10000 /* Margin */, gapFrom = viewTo + 10000 /* Margin */;\n            if (gapTo > line.from + 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.from == line.from && gap.to > gapTo - 5000 /* HalfMargin */ && gap.to < gapTo + 5000 /* HalfMargin */) ||\n                    new LineGap(line.from, gapTo, this.gapSize(line, gapTo, true, structure)));\n            if (gapFrom < line.to - 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.to == line.to && gap.from > gapFrom - 5000 /* HalfMargin */ &&\n                    gap.from < gapFrom + 5000 /* HalfMargin */) ||\n                    new LineGap(gapFrom, line.to, this.gapSize(line, gapFrom, false, structure)));\n        });\n        return gaps;\n    }\n    gapSize(line, pos, start, structure) {\n        if (this.heightOracle.lineWrapping) {\n            let height = line.height * findFraction(structure, pos);\n            return start ? height : line.height - height;\n        }\n        else {\n            let ratio = findFraction(structure, pos);\n            return structure.total * this.heightOracle.charWidth * (start ? ratio : 1 - ratio);\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n            return 8 /* LineGaps */;\n        }\n        return 0;\n    }\n    computeVisibleRanges() {\n        let deco = this.state.facet(decorations);\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { },\n            minPointSize: 20\n        });\n        this.visibleRanges = ranges;\n    }\n    lineAt(pos, editorTop) {\n        return this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    lineAtHeight(height, editorTop) {\n        return this.heightMap.lineAt(height, QueryType.ByHeight, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    blockAtHeight(height, editorTop) {\n        return this.heightMap.blockAt(height, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    forEachLine(from, to, f, editorTop) {\n        return this.heightMap.forEachLine(from, to, this.state.doc, editorTop + this.paddingTop, 0, f);\n    }\n}\n/// Indicates the range of the document that is in the visible\n/// viewport.\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n    eq(b) { return this.from == b.from && this.to == b.to; }\n}\nfunction lineStructure(from, to, state) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(state.facet(decorations), from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        },\n        minPointSize: 20 // We're only interested in collapsed ranges of a significant size\n    });\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n\nconst none$4 = [];\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.viewports = none$4;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // checkLayout, this is updated to point at the width of a given\n        // element and its extent in the document. When a change happens in\n        // that range, these are reset. That way, once we've seen a\n        // line/element of a given length, we keep the editor wide enough to\n        // fit at least that element, until it is changed, at which point we\n        // forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], this.updateDeco(), 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        var _a;\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (!((_a = this.view.inputState) === null || _a === void 0 ? void 0 : _a.composing))\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        let forceSelection = (browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.prevState.doc.lines;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        let pointerSel = update.transactions.some(tr => tr.annotation(Transaction.userEvent) == \"pointerselection\");\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0 &&\n            !(update.flags & (4 /* Viewport */ | 8 /* LineGaps */)) &&\n            update.state.selection.primary.from >= this.view.viewport.from &&\n            update.state.selection.primary.to <= this.view.viewport.to) {\n            this.updateSelection(forceSelection, pointerSel);\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, deco, update.prevState.doc.length, forceSelection, pointerSel);\n            return true;\n        }\n    }\n    // Used both by update and checkLayout do perform the actual DOM\n    // update\n    updateInner(changes, deco, oldLength, forceSelection = false, pointerSel = false) {\n        this.updateChildren(changes, deco, oldLength);\n        this.view.observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.heightMap.height + \"px\";\n            this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome ? { node: getSelection(this.view.root).focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track === null || track === void 0 ? void 0 : track.written)\n                forceSelection = true;\n            this.updateSelection(forceSelection, pointerSel);\n            this.dom.style.height = \"\";\n        });\n    }\n    updateChildren(changes, deco, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, deco);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            this.replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd) {\n        let before = this.children[fromI], last = content.length ? content[content.length - 1] : null;\n        let breakAtEnd = last ? last.breakAfter : breakAtStart;\n        // Change within a single line\n        if (fromI == toI && !breakAtStart && !breakAtEnd && content.length < 2 &&\n            before.merge(fromOff, toOff, content.length ? last : null, fromOff == 0, openStart, openEnd))\n            return;\n        let after = this.children[toI];\n        // Make sure the end of the line after the update is preserved in `after`\n        if (toOff < after.length || after.children.length && after.children[after.children.length - 1].length == 0) {\n            // If we're splitting a line, separate part of the start line to\n            // avoid that being mangled when updating the start line.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                content[content.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff || after.children.length && after.children[0].length == 0)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                content.push(after);\n            }\n        }\n        else if (after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && content.length && before.merge(fromOff, before.length, content[0], false, openStart, 0)) {\n                before.breakAfter = content.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n        // Try to merge widgets on the boundaries of the replacement\n        while (fromI < toI && content.length) {\n            if (this.children[toI - 1].match(content[content.length - 1]))\n                toI--, content.pop();\n            else if (this.children[fromI].match(content[0]))\n                fromI++, content.shift();\n            else\n                break;\n        }\n        if (fromI < toI || content.length)\n            this.replaceChildren(fromI, toI, content);\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(force = false, fromPointer = false) {\n        if (!(fromPointer || this.mayControlSelection()))\n            return;\n        let primary = this.view.state.selection.primary;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(primary.anchor);\n        let head = this.domAtPos(primary.head);\n        let domSel = getSelection(this.root);\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            (browser.gecko && primary.empty && nextToUneditable(domSel.focusNode, domSel.focusOffset)) ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                if (primary.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    domSel.collapse(anchor.node, anchor.offset);\n                    if (primary.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = primary.bidiLevel;\n                }\n                else if (domSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    domSel.collapse(anchor.node, anchor.offset);\n                    domSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (primary.anchor > primary.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    domSel.removeAllRanges();\n                    domSel.addRange(range);\n                }\n            });\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        let cursor = this.view.state.selection.primary;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head); // FIXME provide view-line-range finding helper\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom : hasSelection(this.dom, getSelection(this.root));\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start || pos == start && (child.type == BlockType.Text || !i || this.children[i - 1].breakAfter))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights() {\n        let result = [], { from, to } = this.view.viewState.viewport;\n        let minWidth = Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                result.push(child.dom.getBoundingClientRect().height);\n                let width = child.dom.scrollWidth;\n                if (width > minWidth) {\n                    this.minWidth = minWidth = width;\n                    this.minWidthFrom = pos;\n                    this.minWidthTo = end;\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let visible = this.view.viewState.viewport, viewports = [visible];\n        let { head, anchor } = this.view.state.selection.primary;\n        if (head < visible.from || head > visible.to) {\n            let { from, to } = this.view.viewState.lineAt(head, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        if (!viewports.some(({ from, to }) => anchor >= from && anchor <= to)) {\n            let { from, to } = this.view.viewState.lineAt(anchor, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        let deco = [];\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == viewports.length ? null : viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = this.view.viewState.lineAt(end, 0).bottom - this.view.viewState.lineAt(pos, 0).top;\n                deco.push(Decoration.replace({ widget: new BlockGapWidget(height), block: true, inclusive: true }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        return this.decorations = [\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco,\n            this.compositionDeco,\n            ...this.view.state.facet(decorations),\n            ...this.view.pluginField(pluginDecorations)\n        ];\n    }\n    scrollPosIntoView(pos, side) {\n        let rect = this.coordsAt(pos, side);\n        if (!rect)\n            return;\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.pluginField(PluginField.scrollMargins))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        scrollRectIntoView(this.dom, {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        });\n    }\n}\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MaxNodeHeight = 1e7;\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        if (this.height < MaxNodeHeight) {\n            while (elt.lastChild)\n                elt.lastChild.remove();\n            elt.style.height = this.height + \"px\";\n        }\n        else {\n            elt.style.height = \"\";\n            for (let remaining = this.height; remaining > 0; remaining -= MaxNodeHeight) {\n                let fill = elt.appendChild(document.createElement(\"div\"));\n                fill.style.height = Math.min(remaining, MaxNodeHeight) + \"px\";\n            }\n        }\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction computeCompositionDeco(view, changes) {\n    let sel = getSelection(view.root);\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return Decoration.none;\n    let cView = view.docView.nearest(textNode);\n    let from, to, topNode = textNode;\n    if (cView instanceof InlineView) {\n        while (cView.parent instanceof InlineView)\n            cView = cView.parent;\n        from = cView.posAtStart;\n        to = from + cView.length;\n        topNode = cView.dom;\n    }\n    else if (cView instanceof LineView) {\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        from = to = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n    }\n    else {\n        return Decoration.none;\n    }\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let text = textNode.nodeValue, { state } = view;\n    if (newTo - newFrom < text.length) {\n        if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.sliceDoc(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(topNode, textNode) }).range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text) {\n        super();\n        this.top = top;\n        this.text = text;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = line.findClusterBreak(linePos, false);\n    else\n        to = line.findClusterBreak(linePos, true);\n    let cat = categorize(line.slice(from, to));\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (categorize(line.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (categorize(line.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length, range = tempRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rects = range.getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (rect.left - 1 <= x && rect.right + 1 >= x &&\n                rect.top - 1 <= y && rect.bottom + 1 >= y) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    range.setEnd(node, i);\n                    let rectBefore = range.getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                return { node, offset: i + (after ? 1 : 0) };\n            }\n        }\n    }\n    return { node, offset: 0 };\n}\nfunction posAtCoords(view, { x, y }, bias = -1) {\n    let content = view.contentDOM.getBoundingClientRect(), block;\n    let halfLine = view.defaultLineHeight / 2;\n    for (let bounced = false;;) {\n        block = view.blockAtHeight(y, content.top);\n        if (block.top > y || block.bottom < y) {\n            bias = block.top > y ? -1 : 1;\n            y = Math.min(block.bottom - halfLine, Math.max(block.top + halfLine, y));\n            if (bounced)\n                return -1;\n            else\n                bounced = true;\n        }\n        if (block.type == BlockType.Text)\n            break;\n        y = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n    }\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : null;\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length : null;\n    // Clip x to the viewport sides\n    x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n    let root = view.root, element = root.elementFromPoint(x, y);\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n        if (root.caretPositionFromPoint) {\n            let pos = root.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (root.caretRangeFromPoint) {\n            let range = root.caretRangeFromPoint(x, y);\n            if (range)\n                ({ startContainer: node, startOffset: offset } = range);\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let pos = view.posAtCoords({ x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, view.textDirection, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    var _a;\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos);\n    let startCoords = view.coordsAtPos(startPos);\n    if (startCoords) {\n        let rect = view.dom.getBoundingClientRect();\n        let goal = (_a = start.goalColumn) !== null && _a !== void 0 ? _a : startCoords.left - rect.left;\n        let resolvedGoal = rect.left + goal;\n        let dist = distance !== null && distance !== void 0 ? distance : 5;\n        for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, extra = 0; extra < 50; extra += 10) {\n            let pos = posAtCoords(view, { x: resolvedGoal, y: startY + (dist + extra) * dir }, dir);\n            if (pos == null)\n                break;\n            if (pos != startPos)\n                return EditorSelection.cursor(pos, undefined, undefined, goal);\n        }\n    }\n    // Outside of the drawn viewport, use a crude column-based approach\n    let { doc } = view.state, line = doc.lineAt(startPos), tabSize = view.state.tabSize;\n    let goal = start.goalColumn, goalCol = 0;\n    if (goal == null) {\n        for (const iter = doc.iterRange(line.from, startPos); !iter.next().done;)\n            goalCol = countColumn(iter.value, goalCol, tabSize);\n        goal = goalCol * view.defaultCharacterWidth;\n    }\n    else {\n        goalCol = Math.round(goal / view.defaultCharacterWidth);\n    }\n    if (dir < 0 && line.from == 0)\n        return EditorSelection.cursor(0);\n    else if (dir > 0 && line.to == doc.length)\n        return EditorSelection.cursor(line.to);\n    let otherLine = doc.line(line.number + dir);\n    let result = otherLine.from;\n    let seen = 0;\n    for (const iter = doc.iterRange(otherLine.from, otherLine.to); seen >= goalCol && !iter.next().done;) {\n        const { offset, leftOver } = findColumn(iter.value, seen, goalCol, tabSize);\n        seen = goalCol - leftOver;\n        result += offset;\n    }\n    return EditorSelection.cursor(result, undefined, undefined, goal);\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        this.composing = false;\n        this.compositionEndedAt = 0;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        // Must always run, even if a custom handler handled the event\n        view.contentDOM.addEventListener(\"keydown\", (event) => {\n            view.inputState.lastKeyCode = event.keyCode;\n            view.inputState.lastKeyTime = Date.now();\n        });\n        this.notifiedFocused = view.hasFocus;\n        this.ensureHandlers(view);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view) {\n        let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n        for (let set of handlers) {\n            for (let type in set.handlers)\n                if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                    this.registeredEvents.push(type);\n                    view.contentDOM.addEventListener(type, (event) => {\n                        if (!eventBelongsToEditor(view, event))\n                            return;\n                        if (this.runCustomHandlers(type, view, event))\n                            event.preventDefault();\n                    });\n                }\n        }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && event.timeStamp - this.compositionEndedAt < 500) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return event.type == \"keydown\" || event.type == \"compositionend\";\n    }\n    startMouseSelection(view, event, style) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = new MouseSelection(this, view, event, style);\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nclass MouseSelection {\n    constructor(inputState, view, startEvent, style) {\n        this.inputState = inputState;\n        this.view = view;\n        this.startEvent = startEvent;\n        this.style = style;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection$1(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.startEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (!selection.eq(this.view.state.selection) || selection.primary.assoc != this.view.state.selection.primary.assoc)\n            this.view.dispatch({\n                selection,\n                annotations: Transaction.userEvent.of(\"pointerselection\"),\n                scrollIntoView: true\n            });\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        this.style.update(update);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection$1(view, event) {\n    let facet = view.state.facet(dragMovesSelection);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { primary } = view.state.selection;\n    if (primary.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        changes = {\n            changes: state.selection.ranges.map(r => state.doc.lineAt(r.from))\n                .filter((l, i, a) => i == 0 || a[i - 1] != l)\n                .map(line => ({ from: line.from, insert: (byLine ? text.line(i++).slice() : input) + state.lineBreak }))\n        };\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.slice() },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        annotations: Transaction.userEvent.of(\"paste\"),\n        scrollIntoView: true\n    });\n}\nfunction mustCapture(event) {\n    let mods = (event.ctrlKey ? 1 /* Ctrl */ : 0) | (event.metaKey ? 8 /* Meta */ : 0) |\n        (event.altKey ? 2 /* Alt */ : 0) | (event.shiftKey ? 4 /* Shift */ : 0);\n    let code = event.keyCode, macCtrl = browser.mac && mods == 1 /* Ctrl */;\n    return code == 8 || (macCtrl && code == 72) || // Backspace, Ctrl-h on Mac\n        code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n        code == 27 || // Esc\n        (mods == (browser.mac ? 8 /* Meta */ : 1 /* Ctrl */) && // Ctrl/Cmd-[biyz]\n            (code == 66 || code == 73 || code == 89 || code == 90));\n}\nhandlers.keydown = (view, event) => {\n    if (mustCapture(event))\n        event.preventDefault();\n    view.inputState.setSelectionOrigin(\"keyboardselection\");\n};\nhandlers.touchdown = handlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"pointerselection\");\n};\nhandlers.mousedown = (view, event) => {\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        if (view.root.activeElement != view.contentDOM)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(view, event, style);\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let line = LineView.find(view.docView, pos);\n        if (line)\n            return EditorSelection.range(line.posAtStart, line.posAtEnd);\n        let { from, to } = view.state.doc.lineAt(pos);\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (pos == null)\n        return null;\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown;\n    lastMouseDown = event;\n    return lastMouseDownCount = !last || (last.timeStamp > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.changes) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.primary.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { primary } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = primary;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(primary.from, primary.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    let text = event.dataTransfer.getData(\"Text\");\n    if (dropPos == null || !text)\n        return;\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        annotations: Transaction.userEvent.of(\"drop\")\n    });\n};\nhandlers.paste = (view, event) => {\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let text = data && data.getData(\"text/plain\");\n    if (text) {\n        doPaste(view, text);\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.slice());\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\")\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            annotations: Transaction.userEvent.of(\"cut\")\n        });\n};\nhandlers.focus = handlers.blur = view => {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n};\nhandlers.beforeprint = view => {\n    view.viewState.printing = true;\n    view.requestMeasure();\n    setTimeout(() => {\n        view.viewState.printing = false;\n        view.requestMeasure();\n    }, 2000);\n};\nfunction forceClearComposition(view) {\n    if (view.docView.compositionDeco.size)\n        view.update([]);\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (!view.inputState.composing) {\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view);\n        }\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = true;\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = false;\n    view.inputState.compositionEndedAt = Date.now();\n    setTimeout(() => {\n        if (!view.inputState.composing)\n            forceClearComposition(view);\n    }, 50);\n};\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        this.ignoreSelection = new DOMSelection;\n        this.delayedFlush = -1;\n        this.queue = [];\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.intersecting = false;\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM\n            if (browser.ie && browser.ie_version <= 11 &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = (event) => {\n            if (this.view.root.activeElement != this.dom)\n                return;\n            let sel = getSelection(this.view.root);\n            let context = sel.anchorNode && this.view.docView.nearest(sel.anchorNode);\n            if (context && context.ignoreEvent(event))\n                return;\n            // Deletions on IE11 fire their events in the wrong order, giving\n            // us a selection change event before the DOM changes are\n            // reported.\n            // (Selection.isCollapsed isn't reliable on IE)\n            if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.primary.empty &&\n                sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                this.flushSoon();\n            else\n                this.flush();\n        };\n        this.start();\n        this.onScroll = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScroll);\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n        }\n        this.listenForScroll();\n    }\n    onScroll(e) {\n        if (this.intersecting) {\n            this.flush();\n            this.onScrollChanged(e);\n        }\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        // FIXME is this shadow-root safe?\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    clearSelection() {\n        this.ignoreSelection.set(getSelection(this.view.root));\n    }\n    // Throw away any pending changes\n    clear() {\n        this.observer.takeRecords();\n        this.queue.length = 0;\n        this.clearSelection();\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    // Apply pending changes, if any\n    flush() {\n        if (this.delayedFlush >= 0)\n            return;\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let selection = getSelection(this.view.root);\n        let newSel = !this.ignoreSelection.eq(selection) && hasSelection(this.dom, selection);\n        if (records.length == 0 && !newSel)\n            return;\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        let startState = this.view.state;\n        if (from > -1 || newSel)\n            this.onChange(from, to, typeOver);\n        if (this.view.state == startState) { // The view wasn't updated\n            if (this.view.docView.dirty) {\n                this.ignore(() => this.view.docView.sync());\n                this.view.docView.dirty = 0 /* Not */;\n            }\n            this.view.docView.updateSelection();\n        }\n        this.clearSelection();\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty();\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else { // \"characterData\"\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this.intersection)\n            this.intersection.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        clearTimeout(this.parentCheck);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.primary, bounds;\n    if (start > -1 && (bounds = view.docView.domBoundsAround(start, end, 0))) {\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view.contentDOM, view.root);\n        let reader = new DOMReader(selPoints, view.state.lineBreak);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        newSel = selectionFromPoints(selPoints, from);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n        if (diff)\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: view.state.toText(reader.text.slice(diff.from, diff.toB)) };\n    }\n    else if (view.hasFocus) {\n        let domSel = getSelection(view.root);\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ? view.state.selection.primary.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset\n            ? view.state.selection.primary.anchor\n            : selectionCollapsed(domSel) ? head : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.primary.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    if (change) {\n        let startState = view.state;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events.\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view, \"Enter\", 10)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view, \"Delete\", 46))))\n            return;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) +\n                after));\n        }\n        else {\n            let changes = startState.changes(change);\n            tr = {\n                changes,\n                selection: newSel && !startState.selection.primary.eq(newSel.primary) && newSel.primary.to <= changes.newLength\n                    ? startState.selection.replaceRange(newSel.primary) : undefined\n            };\n        }\n        view.dispatch(tr, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") });\n    }\n    else if (newSel && !newSel.primary.eq(sel)) {\n        let scrollIntoView = false, annotations;\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"keyboardselection\")\n                scrollIntoView = true;\n            else\n                annotations = Transaction.userEvent.of(view.inputState.lastSelectionOrigin);\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, annotations });\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nclass DOMReader {\n    constructor(points, lineSep) {\n        this.points = points;\n        this.lineSep = lineSep;\n        this.text = \"\";\n    }\n    readRange(start, end) {\n        if (!start)\n            return;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if ((view ? view.breakAfter : isBlockElement(cur)) ||\n                ((nextView ? nextView.breakAfter : isBlockElement(next)) && !(cur.nodeName == \"BR\" && !cur.cmIgnore)))\n                this.text += this.lineSep;\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        let text;\n        if (fromView != null)\n            text = fromView.sliceString(0, undefined, this.lineSep);\n        else if (node.nodeType == 3)\n            text = node.nodeValue;\n        else if (node.nodeName == \"BR\")\n            text = node.nextSibling ? this.lineSep : \"\";\n        else if (node.nodeType == 1)\n            this.readRange(node.firstChild, null);\n        if (text != null) {\n            this.findPointIn(node, text.length);\n            this.text += text;\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointIn(node, maxLen) {\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, maxLen);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\nfunction selectionPoints(dom, root) {\n    let result = [];\n    if (root.activeElement != dom)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = getSelection(root);\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\nfunction dispatchKey(view, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    view.contentDOM.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    view.contentDOM.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/// An editor view represents the editor's user interface. It holds\n/// the editable DOM surface, and possibly other elements such as the\n/// line number gutter. It handles events and dispatches state\n/// transactions for editing actions.\nclass EditorView {\n    /// Construct a new view. You'll usually want to put `view.dom` into\n    /// your document after creating a view, so that the user can see\n    /// it.\n    constructor(\n    /// Configuration options.\n    config = {}) {\n        this.plugins = [];\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        /// @internal\n        this.updateState = 2 /* Updating */;\n        /// @internal\n        this.measureScheduled = -1;\n        /// @internal\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.className = themeClass(\"scroller\");\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n        this.observer = new DOMObserver(this, (from, to, typeOver) => {\n            applyDOMChange(this, from, to, typeOver);\n        }, event => {\n            this.inputState.runScrollHandlers(this, event);\n            this.measure();\n        });\n        this.docView = new DocView(this);\n        this.inputState = new InputState(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        ensureGlobalHandler();\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /// The current editor state.\n    get state() { return this.viewState.state; }\n    /// To be able to display large documents without consuming too much\n    /// memory or overloading the browser, CodeMirror only draws the\n    /// code that is visible (plus a margin around it) to the DOM. This\n    /// property tells you the extent of the current drawn viewport, in\n    /// document positions.\n    get viewport() { return this.viewState.viewport; }\n    /// When there are, for example, large collapsed ranges in the\n    /// viewport, its size can be a lot bigger than the actual visible\n    /// content. Thus, if you are doing something like styling the\n    /// content in the viewport, it is preferable to only do so for\n    /// these ranges, which are the subset of the viewport that is\n    /// actually drawn.\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /// Returns false when the editor is entirely scrolled out of view\n    /// or otherwise hidden.\n    get inView() { return this.viewState.inView; }\n    /// Indicates whether the user is currently composing text via\n    /// [IME](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide).\n    get composing() { return this.inputState.composing; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /// Update the view for the given array of transactions. This will\n    /// update the visible document and selection to match the state\n    /// produced by the transactions, and notify view plugins of the\n    /// change. You should usually call\n    /// [`dispatch`](#view.EditorView.dispatch) instead, which uses this\n    /// as a primitive.\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, update;\n        this.updateState = 2 /* Updating */;\n        try {\n            let state = this.state;\n            for (let tr of transactions) {\n                if (tr.startState != state)\n                    throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n                state = tr.state;\n            }\n            update = new ViewUpdate(this, state, transactions);\n            let scrollTo = transactions.some(tr => tr.scrollIntoView) ? state.selection.primary : null;\n            this.viewState.update(update, scrollTo);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty)\n                this.updatePlugins(update);\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            this.updateAttrs();\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (redrawn || scrollTo || this.viewState.mustEnforceCursorAssoc)\n            this.requestMeasure();\n        for (let listener of this.state.facet(updateListener))\n            listener(update);\n    }\n    /// Reset the view to the given state. (This will cause the entire\n    /// document to be redrawn and all view plugins to be reinitialized,\n    /// so you should probably only use it when the new state isn't\n    /// derived from the old state. Otherwise, use\n    /// [`update`](#view.EditorView.update) instead.)\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        this.updateState = 2 /* Updating */;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.prevState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [], reused = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(PluginInstance.create(spec, this));\n                }\n                else {\n                    let plugin = this.plugins[found].update(update);\n                    reused.push(plugin);\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (reused.indexOf(plugin) < 0)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.inputState.ensureHandlers(this);\n        }\n        else {\n            for (let i = 0; i < this.plugins.length; i++)\n                this.plugins[i] = this.plugins[i].update(update);\n        }\n    }\n    /// @internal\n    measure() {\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = -1; // Prevent requestMeasure calls from scheduling another animation frame\n        let updated = null;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let changed = this.viewState.measure(this.docView, i > 0);\n                let measuring = this.measureRequests;\n                if (!changed && !measuring.length && this.viewState.scrollTo == null)\n                    break;\n                this.measureRequests = [];\n                if (i > 5) {\n                    console.warn(\"Viewport failed to stabilize\");\n                    break;\n                }\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = new ViewUpdate(this, this.state);\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                this.updatePlugins(update);\n                this.updateAttrs();\n                if (changed)\n                    this.docView.update(update);\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            measuring[i].write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.scrollTo) {\n                    this.docView.scrollPosIntoView(this.viewState.scrollTo.head, this.viewState.scrollTo.assoc);\n                    this.viewState.scrollTo = null;\n                }\n                if (!(changed & 4 /* Viewport */) && this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.measureScheduled = -1;\n        if (updated)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /// Get the CSS classes for the currently active editor themes.\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? \"cm-dark\" : \"cm-light\") + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = combineAttrs(this.state.facet(editorAttributes), {\n            class: themeClass(\"wrap\") + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n        this.editorAttrs = editorAttrs;\n        let contentAttrs = combineAttrs(this.state.facet(contentAttributes), {\n            spellcheck: \"false\",\n            contenteditable: String(this.state.facet(editable)),\n            class: themeClass(\"content\"),\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        });\n        updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n        this.contentAttrs = contentAttrs;\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n    }\n    /// Find the DOM parent node and offset (child offset if `node` is\n    /// an element, character offset when it is a text node) at the\n    /// given document position.\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /// Find the document position at the given DOM node. Can be useful\n    /// for associating positions with DOM events. Will raise an error\n    /// when `node` isn't part of the editor content.\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure();\n    }\n    /// Make sure plugins get a chance to measure the DOM before the\n    /// next frame. Calling this is preferable to messing with the DOM\n    /// directly from, for example, an even handler, because it'll make\n    /// sure measuring and drawing done by other components is\n    /// synchronized, avoiding unnecessary DOM layout computations.\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /// Collect all values provided by the active plugins for a given\n    /// field.\n    pluginField(field) {\n        // FIXME make this error when called during plugin updating\n        let result = [];\n        for (let plugin of this.plugins)\n            plugin.takeField(field, result);\n        return result;\n    }\n    /// Get the value of a specific plugin, if present. Note that\n    /// plugins that crash can be dropped from a view, so even when you\n    /// know you registered a given plugin, it is recommended to check\n    /// the return value of this method.\n    plugin(plugin) {\n        for (let inst of this.plugins)\n            if (inst.spec == plugin)\n                return inst.value;\n        return null;\n    }\n    /// Find the line or block widget at the given vertical position.\n    /// `editorTop`, if given, provides the vertical position of the top\n    /// of the editor. It defaults to the editor's screen position\n    /// (which will force a DOM layout).\n    blockAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.blockAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find information for the visual line (see\n    /// [`visualLineAt`](#view.EditorView.visualLineAt)) at the given\n    /// vertical position. The resulting block info might hold another\n    /// array of block info structs in its `type` field if this line\n    /// consists of more than one block.\n    ///\n    /// Heights are interpreted relative to the given `editorTop`\n    /// position. When not given, the top position of the editor's\n    /// [content element](#view.EditorView.contentDOM) is taken.\n    visualLineAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.lineAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find the extent and height of the visual line (the content shown\n    /// in the editor as a line, which may be smaller than a document\n    /// line when broken up by block widgets, or bigger than a document\n    /// line when line breaks are covered by replaced decorations) at\n    /// the given position.\n    ///\n    /// Vertical positions are computed relative to the `editorTop`\n    /// argument. You can pass `view.dom.getBoundingClientRect().top`\n    /// here to get screen coordinates.\n    visualLineAt(pos, editorTop = 0) {\n        return this.viewState.lineAt(pos, editorTop);\n    }\n    /// Iterate over the height information of the lines in the\n    /// viewport.\n    viewportLines(f, editorTop) {\n        let { from, to } = this.viewport;\n        this.viewState.forEachLine(from, to, f, ensureTop(editorTop, this.contentDOM));\n    }\n    /// The editor's total content height.\n    get contentHeight() {\n        return this.viewState.heightMap.height + this.viewState.paddingTop + this.viewState.paddingBottom;\n    }\n    /// Move a cursor position by [grapheme\n    /// cluster](#text.nextClusterBreak). `forward` determines whether\n    /// the motion is away from the line start, or towards it. Motion in\n    /// bidirectional text is in visual order, in the editor's [text\n    /// direction](#view.EditorView.textDirection). When the start\n    /// position was the last one on the line, the returned position\n    /// will be across the line break. If there is no further line, the\n    /// original position is returned.\n    moveByChar(start, forward, by) {\n        return moveByChar(this, start, forward, by);\n    }\n    /// Move a cursor position across the next group of either\n    /// [letters](#state.EditorState.charCategorizer) or non-letter\n    /// non-whitespace characters.\n    moveByGroup(start, forward) {\n        return moveByChar(this, start, forward, initial => byGroup(this, start.head, initial));\n    }\n    /// Move to the next line boundary in the given direction. If\n    /// `includeWrap` is true, line wrapping is on, and there is a\n    /// further wrap point on the current line, the wrap point will be\n    /// returned. Otherwise this function will return the start or end\n    /// of the line.\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /// Move a cursor position vertically. When `distance` isn't given,\n    /// it defaults to moving to the next line (including wrapped\n    /// lines). Otherwise, `distance` should provide a positive distance\n    /// in pixels.\n    ///\n    /// When `start` has a\n    /// [`goalColumn`](#state.SelectionRange.goalColumn), the vertical\n    /// motion will use that as a target horizontal position. Otherwise,\n    /// the cursor's own horizontal position is used. The returned\n    /// cursor will have its goal column set to whichever column was\n    /// used.\n    moveVertically(start, forward, distance) {\n        return moveVertically(this, start, forward, distance);\n    }\n    /// Scroll the given document position into view.\n    scrollPosIntoView(pos) {\n        this.viewState.scrollTo = EditorSelection.cursor(pos);\n        this.requestMeasure();\n    }\n    /// Get the document position at the given screen coordinates.\n    /// Returns null if no valid position could be found.\n    posAtCoords(coords) {\n        this.readMeasured();\n        return posAtCoords(this, coords);\n    }\n    /// Get the screen coordinates at the given document position.\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /// The default width of a character in the editor. May not\n    /// accurately reflect the width of all characters.\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /// The default height of a line in the editor.\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /// The text direction (`direction` CSS property) of the editor.\n    get textDirection() { return this.viewState.heightOracle.direction; }\n    /// Whether this editor [wraps lines](#view.EditorView.lineWrapping)\n    /// (as determined by the `white-space` CSS property of its content\n    /// element).\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /// Returns the bidirectional text structure of the given line\n    /// (which should be in the current document) as an array of span\n    /// objects. The order of these spans matches the [text\n    /// direction](#view.EditorView.textDirection)—if that is\n    /// left-to-right, the leftmost spans come first, otherwise the\n    /// rightmost spans come first.\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirection;\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.slice(), this.textDirection);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /// Check whether the editor has focus.\n    get hasFocus() {\n        return document.hasFocus() && this.root.activeElement == this.contentDOM;\n    }\n    /// Put focus on the editor.\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /// Clean up this editor view, removing its element from the\n    /// document, unregistering event handlers, and notifying\n    /// plugins. The view instance can no longer be used after\n    /// calling this.\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n    }\n    /// Facet that can be used to add DOM event handlers. The value\n    /// should be an object mapping event names to handler functions. The\n    /// first such function to return true will be assumed to have handled\n    /// that event, and no other handlers or built-in behavior will be\n    /// activated for it.\n    /// These are registered on the [content\n    /// element](#view.EditorView.contentDOM), except for `scroll`\n    /// handlers, which will be called any time the editor's [scroll\n    /// element](#view.EditorView.scrollDOM) or one of its parent nodes\n    /// is scrolled.\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /// Create a theme extension. The first argument can be a\n    /// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    /// style spec providing the styles for the theme. These will be\n    /// prefixed with a generated class for the style.\n    ///\n    /// It is highly recommended you use _theme classes_, rather than\n    /// regular CSS classes, in your selectors. These are prefixed with\n    /// a `$` instead of a `.`, and will be expanded (as with\n    /// [`themeClass`](#view.themeClass)) to one or more prefixed class\n    /// names. So for example `$content` targets the editor's [content\n    /// element](#view.EditorView.contentDOM).\n    ///\n    /// Because the selectors will be prefixed with a scope class,\n    /// directly matching the editor's [wrapper\n    /// element](#view.EditorView.dom), which is the element on which\n    /// the scope class will be added, needs to be explicitly\n    /// differentiated by adding an additional `$` to the front of the\n    /// pattern. For example `$$focused $panel` will expand to something\n    /// like `.[scope].cm-focused .cm-panel`.\n    ///\n    /// When `dark` is set to true, the theme will be marked as dark,\n    /// which will add the `$dark` selector to the wrapper element (as\n    /// opposed to `$light` when a light theme is active).\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${baseThemeID}.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /// Create an extension that adds styles to the base theme. The\n    /// given object works much like the one passed to\n    /// [`theme`](#view.EditorView^theme). You'll often want to qualify\n    /// base styles with `$dark` or `$light` so they only apply when\n    /// there is a dark or light theme active. For example `\"$$dark\n    /// $myHighlight\"`.\n    static baseTheme(spec) {\n        return precedence(styleModule.of(buildTheme(\".\" + baseThemeID, spec)), \"fallback\");\n    }\n}\n/// Facet to add a [style\n/// module](https://github.com/marijnh/style-mod#documentation) to\n/// an editor view. The view will ensure that the module is\n/// registered in its [document\n/// root](#view.EditorView.constructor^config.root).\nEditorView.styleModule = styleModule;\n/// An input handler can be used to override the way changes to the\n/// content are handled. A handler is passed the document positions\n/// between which the change was found, and the new content. When it\n/// returns true, no further input handlers are called and the\n/// default behavior is prevented.\nEditorView.inputHandler = inputHandler;\n/// Allows you to provide a function that should be called when the\n/// library catches an exception from an extension (mostly from view\n/// plugins, but may be used by other extensions to route exceptions\n/// from user-code-provided callbacks). This is mostly useful for\n/// debugging and logging. See [`logException`](#view.logException).\nEditorView.exceptionSink = exceptionSink;\n/// A facet that can be used to have a listener function be notified\n/// every time the view updates.\nEditorView.updateListener = updateListener;\n/// Facet that controls whether the editor content is editable. When\n/// its the highest-precedence value is `false`, editing is\n/// disabled, and the content element will no longer have its\n/// `contenteditable` attribute set to `true`. (Note that this\n/// doesn't affect API calls that change the editor content, even\n/// when those are bound to keys or buttons.)\nEditorView.editable = editable;\n/// Facet used to configure whether a given selection drag event\n/// should move or copy the selection. The given predicate will be\n/// called with the `mousedown` event, and can return `true` when\n/// the drag should move the content.\nEditorView.dragMovesSelection = dragMovesSelection;\n/// Facet used to configure whether a given selecting click adds\n/// a new range to the existing selection or replaces it entirely.\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/// Allows you to influence the way mouse selection happens. The\n/// functions in this facet will be called for a `mousedown` event\n/// on the editor, and can return an object that overrides the way a\n/// selection is computed from that mouse click or drag.\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/// A facet that determines which [decorations](#view.Decoration)\n/// are shown in the view. See also [view\n/// plugins](#view.EditorView^decorations), which have a separate\n/// mechanism for providing decorations.\nEditorView.decorations = decorations;\n/// An extension that enables line wrapping in the editor.\nEditorView.lineWrapping = EditorView.theme({ $content: { whiteSpace: \"pre-wrap\" } });\n/// Facet that provides attributes for the editor's editable DOM\n/// element.\nEditorView.contentAttributes = contentAttributes;\n/// Facet that provides editor DOM attributes for the editor's\n/// outer element.\nEditorView.editorAttributes = editorAttributes;\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nfunction ensureTop(given, dom) {\n    return given == null ? dom.getBoundingClientRect().top : given;\n}\nlet resizeDebounce = -1;\nfunction ensureGlobalHandler() {\n    window.addEventListener(\"resize\", () => {\n        if (resizeDebounce == -1)\n            resizeDebounce = setTimeout(handleResize, 50);\n    });\n}\nfunction handleResize() {\n    resizeDebounce = -1;\n    let found = document.querySelectorAll(\".cm-content\");\n    for (let i = 0; i < found.length; i++) {\n        let docView = ContentView.get(found[i]);\n        if (docView)\n            docView.editorView.requestMeasure();\n    }\n}\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\n\nconst currentPlatform = typeof navigator == \"undefined\" ? \"key\"\n    : /Mac/.test(navigator.platform) ? \"mac\"\n        : /Win/.test(navigator.platform) ? \"win\"\n            : /Linux|X11/.test(navigator.platform) ? \"linux\"\n                : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst keymaps = Facet.define();\nconst handleKeyEvents = EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(view.state.facet(keymaps), event, view, \"editor\");\n    }\n});\n/// Create a view extension that registers a keymap.\n///\n/// You can add multiple keymap extensions to an editor. Their\n/// priorities determine their precedence (the ones specified early or\n/// with high priority get checked first). When a handler has returned\n/// `true` for a given key, no further handlers are called.\n///\n/// When a key is bound multiple times (either in a single keymap or\n/// in separate maps), the bound commands all get a chance to handle\n/// the key stroke, in order of precedence, until one of them returns\n/// true.\nfunction keymap(bindings, platform) {\n    return [handleKeyEvents, keymaps.of(buildKeymap(bindings, platform))];\n}\n/// Run the key handlers registered for a given scope. Returns true if\n/// any of them handled the event.\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(view.state.facet(keymaps), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(maps, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\";\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        storedPrefix = null;\n    }\n    let fallthrough = !!prefix;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    for (let map of maps) {\n        let scopeObj = map[scope], baseName;\n        if (!scopeObj)\n            continue;\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/// Returns an extension that hides the browser's native selection and\n/// cursor, replacing the selection with a background behind the text\n/// (labeled with the `$selectionBackground` theme class), and the\n/// cursors with elements overlaid over the code (using\n/// `$cursor.primary` and `$cursor.secondary`).\n///\n/// This allows the editor to display secondary selection ranges, and\n/// tends to produce a type of selection more in line with that users\n/// expect in a text editor (the native selection styling will often\n/// leave gaps between lines and won't fill the horizontal space after\n/// a line when the selection continues past it).\n///\n/// It does have a performance cost, in that it requires an extra DOM\n/// layout cycle for many updates (the selection is drawn based on DOM\n/// layout information that's only available after laying out the\n/// content).\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n        return elt;\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = themeClass(\"selectionLayer\");\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = themeClass(\"cursorLayer\");\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.prevState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.primary;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            this.cursorLayer.textContent = \"\";\n            for (let c of cursors)\n                this.cursorLayer.appendChild(c.draw());\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    $line: {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec.$line.caretColor = \"transparent !important\";\nconst hideNativeSelection = precedence(EditorView.theme(themeSpec), \"override\");\nconst selectionClass = themeClass(\"selectionBackground\");\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    return { left: rect.left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from) };\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft);\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let visualStart = view.visualLineAt(from);\n    let visualEnd = view.visualLineAt(to);\n    if (view.lineWrapping) {\n        visualStart = wrappedLine(view, from, visualStart);\n        visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to));\n    }\n    else {\n        let top = drawForLine(range.from, null);\n        let bottom = drawForLine(null, range.to);\n        let between = [];\n        if (visualStart.to < visualEnd.from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && bottom.top - top.bottom < 4)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top, right - left, bottom - top, selectionClass);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            let fromCoords = view.coordsAtPos(from, 1), toCoords = view.coordsAtPos(to, -1);\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : view.moveToLineBoundary(EditorSelection.cursor(to, 1), false).head;\n        let end = to !== null && to !== void 0 ? to : view.moveToLineBoundary(EditorSelection.cursor(from, -1), true).head;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0) {\n            let coords = view.coordsAtPos(start, -1);\n            top = Math.min(coords.top, top);\n            bottom = Math.max(coords.bottom, bottom);\n        }\n        return { top, bottom, horizontal };\n    }\n}\nconst primaryCursorClass = themeClass(\"cursor.primary\");\nconst cursorClass = themeClass(\"cursor.secondary\");\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? primaryCursorClass : cursorClass);\n}\n\nconst Specials = /[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200c\\u200e\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/gu;\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = (styles.tabSize || styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst specialCharConfig = Facet.define({\n    combine(configs) {\n        // FIXME make configurations compose properly\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/// Returns an extension that installs highlighting of special\n/// characters.\nfunction highlightSpecialChars(\n/// Configuration options.\nconfig = {}) {\n    let ext = [specialCharConfig.of(config), specialCharPlugin];\n    if (!supportsTabSize())\n        ext.push(tabStyle);\n    return ext;\n}\nconst specialCharPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = Decoration.none;\n        this.decorationCache = Object.create(null);\n        this.recompute();\n    }\n    update(update) {\n        let confChange = update.prevState.facet(specialCharConfig) != update.state.facet(specialCharConfig);\n        if (confChange)\n            this.decorationCache = Object.create(null);\n        if (confChange || update.changes.length || update.viewportChanged)\n            this.recompute();\n    }\n    recompute() {\n        let decorations = [];\n        for (let { from, to } of this.view.visibleRanges)\n            this.getDecorationsFor(from, to, decorations);\n        this.decorations = Decoration.set(decorations);\n    }\n    getDecorationsFor(from, to, target) {\n        let config = this.view.state.facet(specialCharConfig);\n        let { doc } = this.view.state;\n        for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n            if (!cursor.lineBreak) {\n                while (m = config.specialChars.exec(cursor.value)) {\n                    let code = codePointAt(m[0], 0), deco;\n                    if (code == null)\n                        continue;\n                    if (code == 9) {\n                        let line = doc.lineAt(pos + m.index);\n                        let size = this.view.state.tabSize, col = countColumn(doc.sliceString(line.from, pos + m.index), 0, size);\n                        deco = Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    else {\n                        deco = this.decorationCache[code] ||\n                            (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(config, code) }));\n                    }\n                    target.push(deco.range(pos + m.index, pos + m.index + m[0].length));\n                }\n            }\n            pos += cursor.value.length;\n        }\n    }\n}, {\n    decorations: v => v.decorations\n});\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code) {\n    if (code >= 32)\n        return null;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nconst DefaultPlaceholder = \"\\u2022\";\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM() {\n        let ph = placeHolder(this.code) || DefaultPlaceholder;\n        let desc = \"Control character \" + (Names[this.code] || this.code);\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.style.color = \"red\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = tab;\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nconst tab = StyleModule.newName(), tabStyle = EditorView.styleModule.of(new StyleModule({\n    [\".\" + tab]: {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    }\n}));\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = themeClass(\"placeholder\");\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/// Extension that enables a placeholder—a piece of extample content\n/// to show when the editor is empty.\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n/// @internal\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, highlightSpecialChars, keymap, logException, placeholder, runScopeHandlers, themeClass };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapping = exports.map = exports.match = exports.tuple = exports.injection = exports.projection = exports.dereference = exports.constant = exports.identifier = exports.isVariant = exports.Variant = exports.unit = exports.isRecord = exports.Record = exports.isLiteralValue = exports.isNamedNode = exports.isPointer = exports.Pointer = exports.instance = exports.isCoproduct = exports.coproduct = exports.isProduct = exports.product = exports.isLiteral = exports.literal = exports.isUri = exports.uri = exports.isReference = exports.reference = exports.schema = void 0;\n\nvar N3 = _interopRequireWildcard(require(\"n3.ts\"));\n\nvar _utils = require(\"./utils.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst schema = labels => Object.freeze(labels);\n\nexports.schema = schema;\n\nconst reference = value => Object.freeze({\n  type: \"reference\",\n  value\n});\n\nexports.reference = reference;\n\nconst isReference = type => type.type === \"reference\";\n\nexports.isReference = isReference;\n\nconst uri = () => Object.freeze({\n  type: \"uri\"\n});\n\nexports.uri = uri;\n\nconst isUri = type => type.type === \"uri\";\n\nexports.isUri = isUri;\n\nconst literal = datatype => Object.freeze({\n  type: \"literal\",\n  datatype\n});\n\nexports.literal = literal;\n\nconst isLiteral = type => type.type === \"literal\";\n\nexports.isLiteral = isLiteral;\n\nconst product = components => Object.freeze({\n  type: \"product\",\n  components: Object.freeze(components)\n});\n\nexports.product = product;\n\nconst isProduct = type => type.type === \"product\";\n\nexports.isProduct = isProduct;\n\nconst coproduct = options => Object.freeze({\n  type: \"coproduct\",\n  options: Object.freeze(options)\n});\n\nexports.coproduct = coproduct;\n\nconst isCoproduct = type => type.type === \"coproduct\";\n\nexports.isCoproduct = isCoproduct;\n\nconst instance = (schema, instance) => {\n  for (const [{}, values] of (0, _utils.forEntries)(instance)) {\n    Object.freeze(values);\n  }\n\n  return Object.freeze(instance);\n};\n\nexports.instance = instance;\n\nclass Pointer {\n  constructor(index) {\n    this.index = index;\n    Object.freeze(this);\n  }\n\n  get termType() {\n    return \"Pointer\";\n  }\n\n}\n\nexports.Pointer = Pointer;\n\nconst isPointer = value => value.termType === \"Pointer\";\n\nexports.isPointer = isPointer;\n\nconst isNamedNode = value => value.termType === \"NamedNode\";\n\nexports.isNamedNode = isNamedNode;\n\nconst isLiteralValue = value => value.termType === \"Literal\";\n\nexports.isLiteralValue = isLiteralValue;\n\nclass Record extends Array {\n  get termType() {\n    return \"Record\";\n  }\n\n  constructor(components, values) {\n    super(...values);\n    this.components = components;\n    Object.freeze(this);\n  }\n\n  get(key) {\n    const index = this.components.indexOf(key);\n\n    if (index in this) {\n      return this[index];\n    } else {\n      throw new Error(`Index out of range: ${index}`);\n    }\n  }\n\n  map(f) {\n    const result = new Array(this.length);\n\n    for (const [i, value] of this.entries()) {\n      result[i] = f(value, i, this);\n    }\n\n    return result;\n  }\n\n}\n\nexports.Record = Record;\n\nconst isRecord = value => value.termType === \"Record\";\n\nexports.isRecord = isRecord;\nconst unitKeys = [];\nconst unitValues = [];\n\nconst unit = () => new Record(unitKeys, unitValues);\n\nexports.unit = unit;\n\nclass Variant {\n  constructor(options, key, value) {\n    this.options = options;\n    this.key = key;\n    this.value = value;\n    this.index = options.indexOf(key);\n\n    if (this.index in options) {\n      Object.freeze(this);\n    } else {\n      throw new Error(\"Varint index out of range\");\n    }\n  }\n\n  get termType() {\n    return \"Variant\";\n  }\n\n  is(key) {\n    return key === this.key;\n  }\n\n}\n\nexports.Variant = Variant;\n\nconst isVariant = value => value.termType === \"Variant\";\n\nexports.isVariant = isVariant;\n\nconst identifier = value => Object.freeze({\n  type: \"identifier\",\n  value\n});\n\nexports.identifier = identifier;\n\nconst constant = (value, datatype) => Object.freeze({\n  type: \"constant\",\n  value,\n  datatype\n});\n\nexports.constant = constant;\n\nconst dereference = key => Object.freeze({\n  type: \"dereference\",\n  key\n});\n\nexports.dereference = dereference;\n\nconst projection = key => Object.freeze({\n  type: \"projection\",\n  key\n});\n\nexports.projection = projection;\n\nconst injection = key => Object.freeze({\n  type: \"injection\",\n  key\n});\n\nexports.injection = injection;\n\nconst tuple = slots => Object.freeze({\n  type: \"tuple\",\n  slots: Object.freeze(slots)\n});\n\nexports.tuple = tuple;\n\nconst match = cases => Object.freeze({\n  type: \"match\",\n  cases: Object.freeze(cases)\n});\n\nexports.match = match;\n\nconst map = (source, value) => Object.freeze({\n  type: \"map\",\n  source,\n  value\n});\n\nexports.map = map;\n\nconst mapping = maps => Object.freeze(maps);\n\nexports.mapping = mapping;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  APG: true,\n  ns: true\n};\nexports.ns = exports.APG = void 0;\n\nvar APG = _interopRequireWildcard(require(\"./apg.js\"));\n\nexports.APG = APG;\n\nvar ns = _interopRequireWildcard(require(\"./namespace.js\"));\n\nexports.ns = ns;\n\nvar _mapping = require(\"./mapping.js\");\n\nObject.keys(_mapping).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _mapping[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _mapping[key];\n    }\n  });\n});\n\nvar _morphism = require(\"./morphism.js\");\n\nObject.keys(_morphism).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _morphism[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _morphism[key];\n    }\n  });\n});\n\nvar _type = require(\"./type.js\");\n\nObject.keys(_type).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _type[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _type[key];\n    }\n  });\n});\n\nvar _value = require(\"./value.js\");\n\nObject.keys(_value).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _value[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _value[key];\n    }\n  });\n});\n\nvar _utils = require(\"./utils.js\");\n\nObject.keys(_utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _utils[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _utils[key];\n    }\n  });\n});\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateMapping = validateMapping;\nexports.fold = fold;\nexports.map = map;\nexports.delta = delta;\nexports.mapExpressions = void 0;\n\nvar N3 = _interopRequireWildcard(require(\"n3.ts\"));\n\nvar _ziterable = _interopRequireDefault(require(\"ziterable\"));\n\nvar APG = _interopRequireWildcard(require(\"./apg.js\"));\n\nvar _morphism = require(\"./morphism.js\");\n\nvar _utils = require(\"./utils.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction validateMapping(M, S, T) {\n  for (const [key, type] of (0, _utils.forEntries)(S)) {\n    if (!(key in M)) {\n      return false;\n    }\n\n    const {\n      source,\n      value\n    } = M[key];\n\n    if ((0, _morphism.validateExpressions)(S, value, T[source], fold(M, S, T, type))) {\n      continue;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction fold(M, S, T, type) {\n  if (type.type === \"reference\") {\n    const {\n      source\n    } = M[type.value];\n    const value = T[source];\n\n    if (value === undefined) {\n      throw new Error(\"Invalid reference index\");\n    } else {\n      return value;\n    }\n  } else if (type.type === \"uri\") {\n    return type;\n  } else if (type.type === \"literal\") {\n    return type;\n  } else if (type.type === \"product\") {\n    return APG.product((0, _utils.mapKeys)(type.components, value => fold(M, S, T, value)));\n  } else if (type.type === \"coproduct\") {\n    return APG.coproduct((0, _utils.mapKeys)(type.options, value => fold(M, S, T, value)));\n  } else {\n    (0, _utils.signalInvalidType)(type);\n  }\n}\n\nconst mapExpressions = (expressions, value, instance, schema) => expressions.reduce((value, expression) => map(expression, value, instance, schema), value);\n\nexports.mapExpressions = mapExpressions;\n\nfunction map(expression, value, instance, schema) {\n  if (expression.type === \"identifier\") {\n    return new N3.NamedNode(expression.value);\n  } else if (expression.type === \"constant\") {\n    return new N3.Literal(expression.value, \"\", new N3.NamedNode(expression.datatype));\n  } else if (expression.type === \"dereference\") {\n    if (value.termType === \"Pointer\") {\n      const {\n        key\n      } = expression;\n\n      if (key in instance && value.index in instance[key]) {\n        return instance[key][value.index];\n      } else {\n        throw new Error(\"Invalid pointer dereference\");\n      }\n    } else {\n      throw new Error(\"Invalid pointer dereference\");\n    }\n  } else if (expression.type === \"projection\") {\n    if (value.termType === \"Record\") {\n      return value.get(expression.key);\n    } else {\n      throw new Error(\"Invalid projection\");\n    }\n  } else if (expression.type === \"match\") {\n    if (value.termType === \"Variant\") {\n      if (value.key in expression.cases) {\n        const c = expression.cases[value.key];\n        return mapExpressions(c, value.value, instance, schema);\n      } else {\n        throw new Error(\"Invalid case analysis\");\n      }\n    } else {\n      throw new Error(\"Invalid match morphism\");\n    }\n  } else if (expression.type === \"tuple\") {\n    const keys = (0, _utils.getKeys)(expression.slots);\n    return new APG.Record(keys, keys.map(key => mapExpressions(expression.slots[key], value, instance, schema)));\n  } else if (expression.type === \"injection\") {\n    return new APG.Variant(Object.freeze([expression.key]), expression.key, value);\n  } else {\n    (0, _utils.signalInvalidType)(expression);\n  }\n}\n\nfunction delta(M, S, T, TI) {\n  const SI = (0, _utils.mapKeys)(S, () => []);\n  const indices = (0, _utils.mapKeys)(S, () => new Map());\n\n  for (const [key, type] of (0, _utils.forEntries)(S)) {\n    if (!(key in M) || !(key in indices)) {\n      throw new Error(\"Invalid mapping\");\n    }\n\n    const {\n      source\n    } = M[key];\n\n    if (!(source in TI)) {\n      throw new Error(\"Invalid instance\");\n    }\n\n    for (const value of TI[source]) {\n      if (indices[key].has(value)) {\n        continue;\n      } else {\n        const imageValue = mapExpressions(M[key].value, value, TI, T);\n        const i = SI[key].push(placeholder) - 1;\n        indices[key].set(value, i);\n        SI[key][i] = pullback({\n          M,\n          S,\n          T,\n          SI,\n          TI,\n          indices\n        }, type, imageValue);\n      }\n    }\n  }\n\n  for (const key of (0, _utils.getKeys)(S)) {\n    Object.freeze(SI[key]);\n  }\n\n  Object.freeze(SI);\n  return SI;\n}\n\nconst placeholder = new N3.NamedNode(_utils.rootId);\n\nfunction pullback(state, type, // in source\nvalue) {\n  if (type.type === \"reference\") {\n    // Here we actually know that value is an instance of M1[type.value]\n    // So now what?\n    // First we check to see if the value is in the index cache.\n    // (We're ultimately going to return a Pointer for sure)\n    const index = state.indices[type.value].get(value);\n\n    if (index !== undefined) {\n      return new APG.Pointer(index);\n    } else {\n      // Otherwise, we map value along the morphism M2[type.value].\n      // This gives us a value that is an instance of the image of the referenced type\n      // - ie an instance of fold(M1, T, S[type.value].value)\n      const t = state.S[type.value];\n      const m = state.M[type.value];\n      const v = mapExpressions(m.value, value, state.TI, state.T);\n      const index = state.SI[type.value].push(placeholder) - 1;\n      state.indices[type.value].set(value, index);\n      const p = pullback(state, t, v);\n      state.SI[type.value][index] = p;\n      return new APG.Pointer(index);\n    }\n  } else if (type.type === \"uri\") {\n    if (value.termType !== \"NamedNode\") {\n      throw new Error(\"Invalid image value: expected iri\");\n    } else {\n      return value;\n    }\n  } else if (type.type === \"literal\") {\n    if (value.termType !== \"Literal\") {\n      throw new Error(\"Invalid image value: expected literal\");\n    } else {\n      return value;\n    }\n  } else if (type.type === \"product\") {\n    if (value.termType !== \"Record\") {\n      throw new Error(\"Invalid image value: expected record\");\n    } else {\n      return new APG.Record(value.components, pullbackComponents(state, type, value));\n    }\n  } else if (type.type === \"coproduct\") {\n    if (value.termType !== \"Variant\") {\n      throw new Error(\"Invalid image value: expected variant\");\n    } else if (value.key in type.options) {\n      return new APG.Variant(value.options, value.key, pullback(state, type.options[value.key], value.value));\n    } else {\n      throw new Error(\"Invalid image variant\");\n    }\n  } else {\n    (0, _utils.signalInvalidType)(type);\n  }\n}\n\nfunction* pullbackComponents(state, type, value) {\n  for (const [k1, k2, field] of (0, _ziterable.default)((0, _utils.getKeys)(type.components), value.components, value)) {\n    if (k1 === k2) {\n      yield pullback(state, type.components[k1], field);\n    } else {\n      throw new Error(\"Invalid image record\");\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apply = apply;\nexports.validateExpressions = validateExpressions;\nexports.applyExpressions = void 0;\n\nvar APG = _interopRequireWildcard(require(\"./apg.js\"));\n\nvar _type = require(\"./type.js\");\n\nvar _utils = require(\"./utils.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst applyExpressions = (S, expressions, source) => expressions.reduce((type, expression) => apply(S, expression, type), source);\n\nexports.applyExpressions = applyExpressions;\n\nfunction apply(S, expression, source) {\n  if (expression.type === \"identifier\") {\n    return APG.uri();\n  } else if (expression.type === \"constant\") {\n    return APG.literal(expression.datatype);\n  } else if (expression.type === \"dereference\") {\n    if (source.type === \"reference\" && source.value in S && source.value === expression.key) {\n      return S[source.value];\n    } else {\n      throw new Error(\"Invalid dereference morphism\");\n    }\n  } else if (expression.type === \"projection\") {\n    if (source.type === \"product\" && expression.key in source.components) {\n      return source.components[expression.key];\n    } else {\n      throw new Error(\"Invalid projection morphism\");\n    }\n  } else if (expression.type === \"injection\") {\n    const {\n      key\n    } = expression;\n    return APG.coproduct({\n      [key]: source\n    });\n  } else if (expression.type === \"tuple\") {\n    return APG.product((0, _utils.mapKeys)(expression.slots, value => applyExpressions(S, value, source)));\n  } else if (expression.type === \"match\") {\n    if (source.type === \"coproduct\") {\n      const cases = Array.from(applyCases(S, source, expression));\n\n      if (cases.length === 0) {\n        throw new Error(\"Empty case analysis\");\n      } else {\n        return cases.reduce(_type.unify);\n      }\n    } else {\n      throw new Error(\"Invalid match morphism\");\n    }\n  } else {\n    (0, _utils.signalInvalidType)(expression);\n  }\n}\n\nfunction* applyCases(S, source, {\n  cases\n}) {\n  for (const key of (0, _utils.getKeys)(source.options)) {\n    if (key in cases) {\n      yield applyExpressions(S, cases[key], source.options[key]);\n    } else {\n      throw new Error(\"Invalid case analysis\");\n    }\n  }\n}\n\nfunction validateExpressions(S, expressions, source, target) {\n  let type;\n\n  try {\n    type = applyExpressions(S, expressions, source);\n  } catch (e) {\n    return false;\n  }\n\n  return (0, _type.isTypeAssignable)(type, target);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.map = exports.path = exports.CASE = exports.match = exports.slot = exports.tuple = exports.injection = exports.projection = exports.dereference = exports.constant = exports.identifier = exports.identity = exports.expression = exports.tail = exports.head = exports.some = exports.none = exports.target = exports.source = exports.value = exports.key = exports.option = exports.component = exports.coproduct = exports.product = exports.datatype = exports.literal = exports.uri = exports.reference = exports.label = void 0;\nconst label = \"http://underlay.org/ns/label\",\n      reference = \"http://underlay.org/ns/reference\",\n      uri = \"http://underlay.org/ns/uri\",\n      literal = \"http://underlay.org/ns/literal\",\n      datatype = \"http://underlay.org/ns/datatype\",\n      product = \"http://underlay.org/ns/product\",\n      coproduct = \"http://underlay.org/ns/coproduct\",\n      component = \"http://underlay.org/ns/component\",\n      option = \"http://underlay.org/ns/option\",\n      key = \"http://underlay.org/ns/key\",\n      value = \"http://underlay.org/ns/value\",\n      source = \"http://underlay.org/ns/source\",\n      target = \"http://underlay.org/ns/target\",\n      none = \"http://underlay.org/ns/none\",\n      some = \"http://underlay.org/ns/some\",\n      head = \"http://underlay.org/ns/head\",\n      tail = \"http://underlay.org/ns/tail\",\n      expression = \"http://underlay.org/ns/expression\",\n      identity = \"http://underlay.org/ns/identity\",\n      identifier = \"http://underlay.org/ns/identifier\",\n      constant = \"http://underlay.org/ns/constant\",\n      dereference = \"http://underlay.org/ns/dereference\",\n      projection = \"http://underlay.org/ns/injection\",\n      injection = \"http://underlay.org/ns/injection\",\n      tuple = \"http://underlay.org/ns/tuple\",\n      slot = \"http://underlay.org/ns/slot\",\n      match = \"http://underlay.org/ns/match\",\n      CASE = \"http://underlay.org/ns/case\",\n      path = \"http://underlay.org/ns/path\",\n      map = \"http://underlay.org/ns/map\";\nexports.map = map;\nexports.path = path;\nexports.CASE = CASE;\nexports.match = match;\nexports.slot = slot;\nexports.tuple = tuple;\nexports.injection = injection;\nexports.projection = projection;\nexports.dereference = dereference;\nexports.constant = constant;\nexports.identifier = identifier;\nexports.identity = identity;\nexports.expression = expression;\nexports.tail = tail;\nexports.head = head;\nexports.some = some;\nexports.none = none;\nexports.target = target;\nexports.source = source;\nexports.value = value;\nexports.key = key;\nexports.option = option;\nexports.component = component;\nexports.coproduct = coproduct;\nexports.product = product;\nexports.datatype = datatype;\nexports.literal = literal;\nexports.uri = uri;\nexports.reference = reference;\nexports.label = label;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forType = forType;\nexports.isTypeEqual = isTypeEqual;\nexports.isTypeAssignable = isTypeAssignable;\nexports.unify = unify;\n\nvar _ziterable = _interopRequireDefault(require(\"ziterable\"));\n\nvar APG = _interopRequireWildcard(require(\"./apg.js\"));\n\nvar _utils = require(\"./utils.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction* forType(type, stack = []) {\n  if (stack.includes(type)) {\n    throw new Error(\"Recursive type\");\n  }\n\n  yield [type, stack];\n\n  if (type.type === \"product\") {\n    stack.push(type);\n\n    for (const key of (0, _utils.getKeys)(type.components)) {\n      yield* forType(type.components[key], stack);\n    }\n\n    stack.pop();\n  } else if (type.type === \"coproduct\") {\n    stack.push(type);\n\n    for (const key of (0, _utils.getKeys)(type.options)) {\n      yield* forType(type.options[key], stack);\n    }\n\n    stack.pop();\n  }\n}\n\nfunction isTypeEqual(a, b) {\n  if (a === b) {\n    return true;\n  } else if (a.type !== b.type) {\n    return false;\n  } else if (a.type === \"reference\" && b.type === \"reference\") {\n    return a.value === b.value;\n  } else if (a.type === \"uri\" && b.type === \"uri\") {\n    return true;\n  } else if (a.type === \"literal\" && b.type === \"literal\") {\n    return a.datatype === b.datatype;\n  } else if (a.type === \"product\" && b.type === \"product\") {\n    const A = (0, _utils.getKeys)(a.components);\n    const B = (0, _utils.getKeys)(b.components);\n\n    if (A.length !== B.length) {\n      return false;\n    }\n\n    for (const [keyA, keyB] of (0, _ziterable.default)(A, B)) {\n      if (keyA !== keyB) {\n        return false;\n      } else if (isTypeEqual(a.components[keyA], a.components[keyB])) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n    const A = (0, _utils.getKeys)(a.options);\n    const B = (0, _utils.getKeys)(b.options);\n\n    if (A.length !== B.length) {\n      return false;\n    }\n\n    for (const [keyA, keyB] of (0, _ziterable.default)(A, B)) {\n      if (keyA !== keyB) {\n        return false;\n      } else if (isTypeEqual(a.options[keyA], b.options[keyB])) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isTypeAssignable(a, b) {\n  if (a === b) {\n    return true;\n  } else if (a.type !== b.type) {\n    return false;\n  } else if (a.type === \"reference\" && b.type === \"reference\") {\n    return a.value === b.value;\n  } else if (a.type === \"uri\" && b.type === \"uri\") {\n    return true;\n  } else if (a.type === \"literal\" && b.type === \"literal\") {\n    return a.datatype === b.datatype;\n  } else if (a.type === \"product\" && b.type === \"product\") {\n    for (const key of (0, _utils.getKeys)(b.components)) {\n      if (key in a.components && isTypeAssignable(a.components[key], b.components[key])) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n    for (const key of (0, _utils.getKeys)(a.options)) {\n      if (key in b.options && isTypeAssignable(a.options[key], b.options[key])) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction unify(a, b) {\n  if (a === b) {\n    return b;\n  } else if (a.type === \"reference\" && b.type === \"reference\") {\n    if (a.value === b.value) {\n      return b;\n    }\n  } else if (a.type === \"uri\" && b.type === \"uri\") {\n    return b;\n  } else if (a.type === \"literal\" && b.type === \"literal\") {\n    if (a.datatype === b.datatype) {\n      return b;\n    }\n  } else if (a.type === \"product\" && b.type === \"product\") {\n    return APG.product(Object.fromEntries(unifyComponents(a, b)));\n  }\n\n  if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n    return APG.coproduct(Object.fromEntries(unifyOptions(a, b)));\n  } else {\n    throw new Error(\"Cannot unify unequal types\");\n  }\n}\n\nfunction* unifyComponents(a, b) {\n  const A = (0, _utils.getKeys)(a.components);\n  const B = (0, _utils.getKeys)(b.components);\n\n  if (A.length !== B.length) {\n    throw new Error(\"Cannot unify unequal products\");\n  }\n\n  for (const [keyA, keyB] of (0, _ziterable.default)(A, B)) {\n    if (keyA !== keyB) {\n      throw new Error(\"Cannot unify unequal types\");\n    } else {\n      yield [keyA, unify(a.components[keyA], b.components[keyB])];\n    }\n  }\n}\n\nfunction* unifyOptions(a, b) {\n  const keys = Array.from(new Set([...(0, _utils.getKeys)(a.options), ...(0, _utils.getKeys)(b.options)])).sort();\n\n  for (const key of keys) {\n    const A = a.options[key];\n    const B = b.options[key];\n\n    if (A !== undefined && B === undefined) {\n      yield [key, A];\n    } else if (A === undefined && B !== undefined) {\n      yield [key, B];\n    } else if (A !== undefined && B !== undefined) {\n      yield [key, unify(A, B)];\n    } else {\n      throw new Error(\"Error unifying options\");\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEntries = forEntries;\nexports.getKeys = getKeys;\nexports.getKeyIndex = getKeyIndex;\nexports.mapKeys = mapKeys;\nexports.signalInvalidType = signalInvalidType;\nexports.rootId = void 0;\n\nvar _uuid = require(\"uuid\");\n\nconst keyMap = new WeakMap();\n\nfunction* forEntries(object) {\n  for (const [index, key] of getKeys(object).entries()) {\n    yield [key, object[key], index];\n  }\n}\n\nfunction getKeys(object) {\n  if (keyMap.has(object)) {\n    return keyMap.get(object);\n  } else {\n    const keys = Object.keys(object).sort();\n    Object.freeze(keys);\n    keyMap.set(object, keys);\n    return keys;\n  }\n}\n\nfunction getKeyIndex(object, key) {\n  if (keyMap.has(object)) {\n    const index = keyMap.get(object).indexOf(key);\n\n    if (index === -1) {\n      throw new Error(`Key not found: ${key}`);\n    }\n\n    return index;\n  } else {\n    const keys = Object.keys(object).sort();\n    Object.freeze(keys);\n    keyMap.set(object, keys);\n    const index = keys.indexOf(key);\n\n    if (index === -1) {\n      throw new Error(`Key not found: ${key}`);\n    }\n\n    return index;\n  }\n}\n\nfunction mapKeys(object, map) {\n  const keys = getKeys(object);\n  const result = Object.fromEntries(keys.map(key => [key, map(object[key], key)]));\n  keyMap.set(result, keys);\n  Object.freeze(result);\n  return result;\n}\n\nfunction signalInvalidType(type) {\n  console.error(type);\n  throw new Error(\"Invalid type\");\n}\n\nconst rootId = (0, _uuid.v4)();\nexports.rootId = rootId;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateInstance = validateInstance;\nexports.validateValue = validateValue;\nexports.forValue = forValue;\n\nvar _ziterable = _interopRequireDefault(require(\"ziterable\"));\n\nvar APG = _interopRequireWildcard(require(\"./apg.js\"));\n\nvar _utils = require(\"./utils.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validateInstance(schema, instance) {\n  const iter = (0, _ziterable.default)((0, _utils.forEntries)(schema), (0, _utils.forEntries)(instance));\n\n  for (const [[k1, type], [k2, values]] of iter) {\n    if (k1 !== k2) {\n      return false;\n    }\n\n    for (const value of values) {\n      if (validateValue(type, value)) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction validateValue(type, value) {\n  if (APG.isReference(type)) {\n    return value.termType === \"Pointer\";\n  } else if (APG.isUri(type)) {\n    return value.termType === \"NamedNode\";\n  } else if (APG.isLiteral(type)) {\n    return APG.isLiteralValue(value) && value.datatype.value === type.datatype;\n  } else if (APG.isProduct(type)) {\n    if (APG.isRecord(value)) {\n      const keys = (0, _utils.getKeys)(type.components);\n\n      if (keys.length !== value.length) {\n        return false;\n      }\n\n      for (const [k1, k2, v] of (0, _ziterable.default)(keys, value.components, value)) {\n        if (k1 !== k2) {\n          return false;\n        } else if (validateValue(type.components[k1], v)) {\n          continue;\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  } else if (APG.isCoproduct(type)) {\n    if (APG.isVariant(value) && value.key in type.options) {\n      return validateValue(type.options[value.key], value.value);\n    } else {\n      return false;\n    }\n  } else {\n    console.error(type);\n    throw new Error(\"Unexpected type\");\n  }\n}\n\nfunction* forValue(value, stack = []) {\n  if (stack.includes(value)) {\n    throw new Error(\"Recursive type\");\n  }\n\n  yield [value, stack];\n\n  if (value.termType === \"Record\") {\n    stack.push(value);\n\n    for (const leaf of value) {\n      yield* forValue(leaf, stack);\n    }\n\n    stack.pop();\n  } else if (value.termType === \"Variant\") {\n    stack.push(value);\n    yield* forValue(value.value, stack);\n    stack.pop();\n  }\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parser = void 0;\n\nvar _lezer = require(\"lezer\");\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {\n  __proto__: null,\n  namespace: 8,\n  type: 16,\n  class: 42,\n  edge: 46,\n  list: 50\n};\n\nconst parser = _lezer.Parser.deserialize({\n  version: 13,\n  states: \")`QYQPOOOkQPO'#C_OpQPO'#CcOuQQO'#CpOzQQO'#CrO!PQQO'#CtOOQO'#C|'#C|OOQO'#Cv'#CvQYQPOOOOQO'#Ca'#CaO!UQQO,58yOOQO'#Ce'#CeO!ZQPO,58}O!ZQPO,59[O!rQPO,59^O!wQPO,59`OOQO-E6t-E6tOOQO1G.e1G.eOOQO'#Cf'#CfO!ZQPO'#CgO!|QQO'#ChO#RQQO'#CkO#WQQO'#ClO#`QQO'#CnOOQO'#DO'#DOOOQO1G.i1G.iOOQO1G.v1G.vO#hQQO1G.xO!ZQPO1G.zOOQO,59R,59ROOQO,59S,59SO#mQPO,59VO#rQPO'#CmO#wQPO'#DTO$PQPO,59WO$UQQO'#CoO$aQPO'#DYO$iQPO,59YO$nQPO7+$dOOQO7+$f7+$fOOQO1G.q1G.qO!ZQPO,59XO$uQQO,59oO$}QPO,59oOOQO1G.r1G.rO!ZQPO,59ZO%VQQO,59tO%_QPO,59tOOQO1G.t1G.tO%gQQO<<HOO%lQPO<<HOOOQO1G.s1G.sOOQO,59c,59cO%qQQO1G/ZOOQO-E6u-E6uOOQO1G.u1G.uOOQO,59d,59dO%yQQO1G/`OOQO-E6v-E6vOOQOAN=jAN=jO&RQQOAN=jP&WQQO'#CwP&]QQO'#CxOOQOG23UG23U\",\n  stateData: \"&b~OoOSPOS~OSPOWQOeROgSOiTO~OqXO~OqZO~OU]O~OU^O~OU_O~OUaO~O]dO^hOqbOscOteOvfO{gO~O!PkO~O!RlO~OUnO~OUoO~OUpOzwP~OUsO!O|P~OUvO~OuxO~OxyO~OyzOzwX~Oz|O~O}}OycX!OcX~Oy!OO!O|X~O!O!QO~O!Q!RO~P!ZOUpOzwa~Oy!VOzwa~OUsO!O|a~Oy!ZO!O|a~OU!]O~O!Q!^O~OUpOzwi~OUsO!O|i~OU!aO~OUpO~OUsO~O\",\n  goto: \"#v}PPP!OP!SP!OP!V!Y!Y!YPP!Y!Y!c!Y!k!OP!OP!OP!s!y#PPPP#VP#ZPPPP#pPPPP#sTUOWRYPR[Q_h[]clvy}QqfV!Uz!V!_QtgV!Y!O!Z!`QWOR`WQ{qR!W{Q!PtR![!PTVOWQi[Qj]QmcQwlQ!SvQ!TyR!X}RrfRug\",\n  nodeNames: \"⚠ Comment Schema Namespace namespace Prefix Term Type type TypeName Variable Optional Reference Pointer Uri Literal Product Component Coproduct Option Class class Edge edge List list\",\n  maxTerm: 49,\n  nodeProps: [[_lezer.NodeProp.group, -7, 10, 11, 12, 14, 15, 16, 18, \"Expression\"]],\n  skippedNodes: [0, 1],\n  repeatNodeCount: 3,\n  tokenData: \"'c~RjX^!spq!sst#hz{#s}!O#x!P!Q$T![!]$f!]!^$q!^!_$v!_!`%T!`!a%f!a!b%s!c!}%x!}#O&}#P#Q'S#T#o%x#o#p'X#q#r'^#y#z!s$f$g!s#BY#BZ!s$IS$I_!s$I|$JO!s$JT$JU!s$KV$KW!s&FU&FV!s~!xYo~X^!spq!s#y#z!s$f$g!s#BY#BZ!s$IS$I_!s$I|$JO!s$JT$JU!s$KV$KW!s&FU&FV!s~#mQP~OY#hZ~#h~#xO]~~#{P!`!a$O~$TOx~~$WP!_!`$Z~$^P!`!a$a~$fO!Q~~$iP![!]$l~$qO!R~~$vOy~~${Pt~!`!a%O~%TO^~~%WP!_!`%Z~%^P!P!Q%a~%fO!P~R%kPuP}!O%nQ%sO}Q~%xOs~R&PSUQqP!Q![%x![!]&]!c!}%x#T#o%xQ&bXUQst&]}!O&]!O!P&]!P!Q&]!Q![&]![!]&]!c!}&]#R#S&]#T#o&]~'SO{~~'XO!O~~'^Ov~~'cOz~\",\n  tokenizers: [0, 1],\n  topRules: {\n    \"Schema\": [0, 2]\n  },\n  specialized: [{\n    term: 33,\n    get: value => spec_identifier[value] || -1\n  }],\n  tokenPrec: 0\n});\n\nexports.parser = parser;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parser = void 0;\n\nvar _lezer = require(\"lezer\");\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {\n  __proto__: null,\n  namespace: 8,\n  expr: 16,\n  map: 50\n};\n\nconst parser = _lezer.Parser.deserialize({\n  version: 13,\n  states: \")xQYQPOOOeQPO'#C_OjQPO'#CcOoQQO'#CtOOQO'#C}'#C}OOQO'#Cv'#CvQYQPOOOOQO'#Ca'#CaOtQQO,58yOOQO'#Ce'#CeOyQPO,58}O!hQPO,59`OOQO-E6t-E6tOOQO1G.e1G.eOOQO'#Cf'#CfO!oQQO'#CgO!tQQO'#CiO!yQQO'#CkO#OQQO'#CmO#TQPO'#CnO#YQQO'#CpO#bQQO'#CrOOQO'#DR'#DRO#jQPO'#DPO$UQPO'#DPOOQO1G.i1G.iOOQO1G.z1G.zO$pQQO1G.zOOQO,59R,59ROOQO,59T,59TOOQO,59V,59VO$uQPO,59XO$zQQO,59YO%PQPO'#CqO%[QPO'#DVO%dQPO,59[O%iQQO'#CsO%tQPO'#D[O%|QPO,59^O$UQPO'#CyO&RQPO,59kO&RQPO,59kOyQPO7+$fOOQO1G.s1G.sO&mQPO1G.tOyQPO,59]O&rQQO,59qO&zQPO,59qOOQO1G.v1G.vOyQPO,59_O'SQQO,59vO'[QPO,59vOOQO1G.x1G.xOOQO,59e,59eOOQO-E6w-E6wO'dQPO1G/VOOQO<<HQ<<HQOOQO7+$`7+$`OOQO1G.w1G.wOOQO,59c,59cO(OQQO1G/]OOQO-E6u-E6uOOQO1G.y1G.yOOQO,59d,59dO(WQQO1G/bOOQO-E6v-E6vP(`QQO'#CwP(eQQO'#Cx\",\n  stateData: \"(j~OpOSPOS~OSPOWQOiRO~OrVO~OrXO~OUZO~OU]O~O[_O^`O`aOccOr^OthOvbOxdO}eO~O!RkO~PyOUlO~OUmO~OUnO~OUoO~OvpO~OUqO|yP~OUtO!Q!OP~OtwOSsXWsXisXnsX{sX|sX!QsX~O[_O^`O`aOccOr^OvbOxdO}eO~OUzO~Ow{O~OU|O~Oz}O{eX|eX~O{!OO|yX~O|!QO~O!P!RO{gX!QgX~O{!SO!Q!OX~O!Q!UO~OtwOSsaWsaisansa{sa|sa!Qsa~Ow!ZO~OUqO|ya~O{!^O|ya~OUtO!Q!Oa~O{!bO!Q!Oa~OtwOSsiWsiisinsi{si|si!Qsi~OUqO|yi~OUtO!Q!Oi~OUqO~OUtO~O\",\n  goto: \"$Z!PPPP!QP!UP!QP!X![![P![P![P![![P![!e![!m!QP!u!{#R#XPPP#cP#gP#vPPP$TPPPP$WTSOURWPRYQ_fYZhwz}!RQrdV!]!O!^!dQueV!a!S!b!eQUOR[UQ!PrR!_!PQ!TuR!c!TQxgS!Wx!XR!XyTTOUQiYQjZQ!YzQ![}R!`!RYgYZz}!RQyhR!VwRsdRve\",\n  nodeNames: \"⚠ Comment Mapping Namespace namespace Prefix Term Expr expr ExprName Variable Dereference Pointer Projection Projector Injection Injector Identifier Constant String Tuple Slot Match Case Map map\",\n  maxTerm: 49,\n  nodeProps: [[_lezer.NodeProp.group, -8, 10, 11, 13, 15, 17, 18, 20, 22, \"Expression\"]],\n  skippedNodes: [0, 1],\n  repeatNodeCount: 4,\n  tokenData: \")Q~RkX^!vpq!vrs#kst%wz{&S}!O&X!O!P&d!P!Q&i![!]&n!]!^&y!^!_'O!`!a'T!c!}'b!}#O(g#P#Q(l#T#o'b#o#p(q#p#q(v#q#r({#y#z!v$f$g!v#BY#BZ!v$IS$I_!v$I|$JO!v$JT$JU!v$KV$KW!v&FU&FV!v~!{Yp~X^!vpq!v#y#z!v$f$g!v#BY#BZ!v$IS$I_!v$I|$JO!v$JT$JU!v$KV$KW!v&FU&FV!v~#nUpq#kqr#krs$Qs#O#k#O#P$V#P~#k~$VOc~~$YXrs#k!P!Q#k#O#P#k#U#V#k#Y#Z#k#b#c#k#f#g#k#h#i#k#i#j$u~$xR!Q![%R!c!i%R#T#Z%R~%UR!Q![%_!c!i%_#T#Z%_~%bR!Q![%k!c!i%k#T#Z%k~%nR!Q![#k!c!i#k#T#Z#k~%|QP~OY%wZ~%w~&XO[~~&[P!`!a&_~&dOz~~&iO^~~&nO`~~&qP![!]&t~&yO!R~~'OO{~~'TOv~R'YPwP}!O']Q'bO!PQR'iSUQrP!Q!['b![!]'u!c!}'b#T#o'bQ'zXUQst'u}!O'u!O!P'u!P!Q'u!Q!['u![!]'u!c!}'u#R#S'u#T#o'u~(lO}~~(qO!Q~~(vOx~~({Ot~~)QO|~\",\n  tokenizers: [0, 1],\n  topRules: {\n    \"Mapping\": [0, 2]\n  },\n  specialized: [{\n    term: 34,\n    get: value => spec_identifier[value] || -1\n  }],\n  tokenPrec: 0\n});\n\nexports.parser = parser;","export * from \"./tasl.js\"\nexport * from \"./taslx.js\"\nexport * from \"./stdlib.js\"\nexport * from \"./utils.js\"\n","import { APG } from \"@underlay/apg\"\nimport { rdf, xsd } from \"n3.ts\"\n\nexport const defaultTypes: Record<string, APG.Type> = {\n\tunit: APG.product({}),\n\turi: APG.uri(),\n\n\tstring: APG.literal(xsd.string),\n\tboolean: APG.literal(xsd.boolean),\n\tinteger: APG.literal(xsd.integer),\n\tdouble: APG.literal(xsd.double),\n\tdate: APG.literal(xsd.date),\n\tdateTime: APG.literal(xsd.dateTime),\n\tbase64Binary: APG.literal(xsd.base64Binary),\n\tJSON: APG.literal(rdf.JSON),\n}\n\nexport const defaultNamespaces: Record<string, string> = {\n\tul: \"http://underlay.org/ns/\",\n\txsd: \"http://www.w3.org/2001/XMLSchema#\",\n\trdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n}\n","import { APG, ns } from \"@underlay/apg\"\nimport { SyntaxNode } from \"lezer\"\n\nimport { parser } from \"../grammar/tasl.js\"\n\nimport {\n\tLintError,\n\tnamespacePattern,\n\tParseState,\n\tparseURI,\n\turiPattern,\n} from \"./utils.js\"\nimport { defaultTypes } from \"./stdlib.js\"\n\ninterface parseState extends ParseState {\n\tschema: Record<string, APG.Type>\n\ttypes: Record<string, APG.Type>\n\treferences: { from: number; to: number; key: string }[]\n}\n\nexport interface ParseTaslResult {\n\tschema: APG.Schema\n\tnamespaces: Record<string, string>\n}\n\nexport function parseTasl(input: string): ParseTaslResult {\n\tconst tree = parser.configure({ strict: true }).parse(input)\n\tconst cursor = tree.cursor()\n\n\tif (cursor.name === \"Schema\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tthrow new LintError(cursor.from, cursor.to, \"\", \"Invalid top-level node\")\n\t}\n\n\tconst slice = ({ from, to }: SyntaxNode) => input.slice(from, to)\n\tconst error = (node: SyntaxNode, message: string) =>\n\t\tnew LintError(node.from, node.to, slice(node), message)\n\tconst state: parseState = {\n\t\tslice,\n\t\terror,\n\t\tnamespaces: {},\n\t\ttypes: { ...defaultTypes },\n\t\tschema: {},\n\t\treferences: [],\n\t}\n\n\tdo {\n\t\tif (cursor.type.name === \"Namespace\") {\n\t\t\tconst term = cursor.node.getChild(\"Term\")!\n\t\t\tconst namespace = state.slice(term)\n\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tterm,\n\t\t\t\t\t`Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t)\n\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tterm,\n\t\t\t\t\t\"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")!\n\t\t\tconst prefix = state.slice(identifier)\n\t\t\tif (prefix in state.namespaces) {\n\t\t\t\tthrow state.error(identifier, `Duplicate namespace: ${prefix}`)\n\t\t\t} else {\n\t\t\t\tstate.namespaces[prefix] = namespace\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Type\") {\n\t\t\tconst identifier = cursor.node.getChild(\"TypeName\")!\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\tconst type = parseType(state, expression)\n\n\t\t\tconst name = state.slice(identifier)\n\t\t\tif (name in state.types) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tidentifier,\n\t\t\t\t\t`Invalid type declaration: type ${name} has already been declared`\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tstate.types[name] = type\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Class\") {\n\t\t\tconst node = cursor.node.getChild(\"Term\")!\n\t\t\tconst term = parseURI(state, node)!\n\t\t\tif (term in state.schema) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tnode,\n\t\t\t\t\t`Invalid class declaration: class ${term} has already been declared`\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\t\tstate.schema[term] = parseType(state, expression)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Edge\") {\n\t\t\tconst terms = cursor.node.getChildren(\"Term\")\n\t\t\tconst names = terms.map((uri) => parseURI(state, uri))\n\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst value = expression && parseType(state, expression)\n\n\t\t\tconst [sourceNode, labelNode, targetNode] = terms\n\t\t\tconst [source, label, target] = names\n\t\t\tif (label in state.schema) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tlabelNode,\n\t\t\t\t\t`Invalid edge declaration: class ${label} has already been declared`\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tif (!(source in state.schema)) {\n\t\t\t\t\tconst { from, to } = sourceNode\n\t\t\t\t\tstate.references.push({ from, to, key: source })\n\t\t\t\t}\n\n\t\t\t\tif (!(target in state.schema)) {\n\t\t\t\t\tconst { from, to } = targetNode\n\t\t\t\t\tstate.references.push({ from, to, key: target })\n\t\t\t\t}\n\n\t\t\t\tconst components: Record<string, APG.Type> = {\n\t\t\t\t\t[ns.source]: APG.reference(source),\n\t\t\t\t\t[ns.target]: APG.reference(target),\n\t\t\t\t}\n\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tcomponents[ns.value] = value\n\t\t\t\t}\n\n\t\t\t\tstate.schema[label] = APG.product(components)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"List\") {\n\t\t\tconst node = cursor.node.getChild(\"Term\")!\n\t\t\tconst term = parseURI(state, node)!\n\t\t\tif (term in state.schema) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tnode,\n\t\t\t\t\t`Invalid list declaration: class ${term} has already been declared`\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\t\tstate.schema[term] = APG.coproduct({\n\t\t\t\t\t[ns.none]: APG.product({}),\n\t\t\t\t\t[ns.some]: APG.product({\n\t\t\t\t\t\t[ns.head]: parseType(state, expression),\n\t\t\t\t\t\t[ns.tail]: APG.reference(term),\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t} while (cursor.nextSibling())\n\n\tfor (const { from, to, key } of state.references) {\n\t\tif (key in state.schema) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tconst message = `Invalid reference: class ${key} is not defined`\n\t\t\tthrow new LintError(from, to, key, message)\n\t\t}\n\t}\n\n\treturn { schema: APG.schema(state.schema), namespaces: state.namespaces }\n}\n\n// Variable | Optional | Reference  | Uri | Literal | Product | Coproduct\nexport function parseType(state: parseState, node: SyntaxNode): APG.Type {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.types) {\n\t\t\treturn state.types[value]\n\t\t} else {\n\t\t\tthrow state.error(node, `Type ${value} is not defined`)\n\t\t}\n\t} else if (node.name === \"Optional\") {\n\t\tconst expression = node.getChild(\"Expression\")!\n\t\tconst type = parseType(state, expression)\n\t\treturn APG.coproduct({ [ns.none]: APG.product({}), [ns.some]: type })\n\t} else if (node.name === \"Reference\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst key = parseURI(state, term)\n\t\tif (!(key in state.schema)) {\n\t\t\tconst { from, to } = term\n\t\t\tstate.references.push({ from, to, key })\n\t\t}\n\n\t\treturn APG.reference(key)\n\t} else if (node.name === \"Uri\") {\n\t\treturn APG.uri()\n\t} else if (node.name === \"Literal\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst datatype = parseURI(state, term)\n\t\treturn APG.literal(datatype)\n\t} else if (node.name === \"Product\") {\n\t\tconst components: Record<string, APG.Type> = {}\n\t\tfor (const component of node.getChildren(\"Component\")) {\n\t\t\tconst term = component.getChild(\"Term\")!\n\n\t\t\tconst key = parseURI(state, term)\n\t\t\tif (key in components) {\n\t\t\t\tthrow state.error(term, `Duplicate product component key: ${key}`)\n\t\t\t} else {\n\t\t\t\tconst expression = component.getChild(\"Expression\")!\n\t\t\t\tcomponents[key] = parseType(state, expression)\n\t\t\t}\n\t\t}\n\n\t\treturn APG.product(components)\n\t} else if (node.name === \"Coproduct\") {\n\t\tconst options: Record<string, APG.Type> = {}\n\t\tfor (const option of node.getChildren(\"Option\")) {\n\t\t\tconst term = option.getChild(\"Term\")!\n\t\t\tconst key = parseURI(state, term)\n\t\t\tif (key in options) {\n\t\t\t\tthrow state.error(term, `Duplicate coproduct option key: ${key}`)\n\t\t\t} else {\n\t\t\t\tconst expression = option.getChild(\"Expression\")\n\t\t\t\tif (expression === null) {\n\t\t\t\t\toptions[key] = APG.product({})\n\t\t\t\t} else {\n\t\t\t\t\toptions[key] = parseType(state, expression)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn APG.coproduct(options)\n\t} else {\n\t\tthrow new Error(\"Unexpected Expression node\")\n\t}\n}\n","import { APG } from \"@underlay/apg\"\nimport { SyntaxNode } from \"lezer\"\n\nimport { parser } from \"../grammar/taslx.js\"\n\nimport {\n\tLintError,\n\tnamespacePattern,\n\tparseURI,\n\turiPattern,\n\tParseState,\n} from \"./utils.js\"\n\ninterface parseState extends ParseState {\n\tmapping: Record<string, APG.Map>\n\texprs: Record<string, APG.Expression[]>\n}\n\nexport interface ParseTaslxResult {\n\tmapping: APG.Mapping\n\tnamespaces: Record<string, string>\n}\n\nexport function parseTaslx(input: string): ParseTaslxResult {\n\tconst slice = (node: SyntaxNode) => input.slice(node.from, node.to)\n\tconst error = (node: SyntaxNode, message: string) =>\n\t\tnew LintError(node.from, node.to, slice(node), message)\n\n\tconst state: parseState = {\n\t\tslice,\n\t\terror,\n\t\tnamespaces: {},\n\t\texprs: {},\n\t\tmapping: {},\n\t}\n\n\tconst tree = parser.configure({ strict: true }).parse(input)\n\tconst cursor = tree.cursor()\n\n\tif (cursor.name === \"Mapping\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tthrow state.error(cursor.node, \"Invalid top-level node\")\n\t}\n\n\tdo {\n\t\tif (cursor.type.name === \"Namespace\") {\n\t\t\tconst term = cursor.node.getChild(\"Term\")!\n\t\t\tconst namespace = state.slice(term)\n\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tterm,\n\t\t\t\t\t`Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t)\n\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tterm,\n\t\t\t\t\t\"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")!\n\t\t\tconst prefix = state.slice(identifier)\n\t\t\tif (prefix in state.namespaces) {\n\t\t\t\tthrow state.error(identifier, `Duplicate namespace: ${prefix}`)\n\t\t\t} else {\n\t\t\t\tstate.namespaces[prefix] = namespace\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Expr\") {\n\t\t\tconst identifier = cursor.node.getChild(\"ExprName\")!\n\t\t\tconst nodes = cursor.node.getChildren(\"Expression\")\n\t\t\tconst exprs = parseExprs(state, nodes)\n\n\t\t\tconst name = state.slice(identifier)\n\t\t\tif (name in state.exprs) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\tidentifier,\n\t\t\t\t\t`Invalid expression declaration: expression ${name} has already been declared`\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tstate.exprs[name] = exprs\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Map\") {\n\t\t\tconst termNodes = cursor.node.getChildren(\"Term\")\n\t\t\tconst terms = termNodes.map((node) => parseURI(state, node))\n\t\t\tconst key = terms[0]\n\t\t\tconst source = terms.length > 1 ? terms[1] : key\n\t\t\tif (key in state.mapping) {\n\t\t\t\tthrow state.error(\n\t\t\t\t\ttermNodes[0],\n\t\t\t\t\t`Invalid map declaration: map ${key} has already been declared`\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tconst expressions = cursor.node.getChildren(\"Expression\")\n\t\t\t\tstate.mapping[key] = APG.map(source, parseExprs(state, expressions))\n\t\t\t}\n\t\t}\n\t} while (cursor.nextSibling())\n\n\treturn { mapping: APG.mapping(state.mapping), namespaces: state.namespaces }\n}\n\nexport const parseExprs = (state: parseState, nodes: SyntaxNode[]) =>\n\tnodes.reduce<APG.Expression[]>(\n\t\t(exprs, node) => exprs.concat(parseExpr(state, node)),\n\t\t[]\n\t)\n\nexport function parseExpr(\n\tstate: parseState,\n\tnode: SyntaxNode\n): APG.Expression[] {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.exprs) {\n\t\t\treturn state.exprs[value]\n\t\t} else {\n\t\t\tthrow state.error(node, `Expression ${value} is not defined`)\n\t\t}\n\t} else if (node.name === \"Dereference\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst key = parseURI(state, term)\n\t\treturn [APG.dereference(key)]\n\t} else if (node.name === \"Projection\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst key = parseURI(state, term)\n\t\treturn [APG.projection(key)]\n\t} else if (node.name === \"Injection\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst key = parseURI(state, term)\n\t\treturn [APG.injection(key)]\n\t} else if (node.name === \"Identifier\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst key = parseURI(state, term)\n\t\treturn [APG.identifier(key)]\n\t} else if (node.name === \"Constant\") {\n\t\tconst string = node.getChild(\"String\")!\n\t\tconst text = state.slice(string)\n\t\tconst value = JSON.parse(text)\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow state.error(string, `Invalid constant: ${text}`)\n\t\t}\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst datatype = parseURI(state, term)\n\t\treturn [APG.constant(value, datatype)]\n\t} else if (node.name === \"Tuple\") {\n\t\tconst slots: Record<string, APG.Expression[]> = {}\n\t\tfor (const slot of node.getChildren(\"Slot\")) {\n\t\t\tconst term = slot.getChild(\"Term\")!\n\t\t\tconst key = parseURI(state, term)\n\t\t\tif (key in slots) {\n\t\t\t\tthrow state.error(term, `Duplicate tuple slot key: ${key}`)\n\t\t\t} else {\n\t\t\t\tconst expressions = slot.getChildren(\"Expressions\")\n\t\t\t\tslots[key] = parseExprs(state, expressions)\n\t\t\t}\n\t\t}\n\n\t\treturn [APG.tuple(slots)]\n\t} else if (node.name === \"Match\") {\n\t\tconst cases: Record<string, APG.Expression[]> = {}\n\t\tfor (const CASE of node.getChildren(\"Case\")) {\n\t\t\tconst term = CASE.getChild(\"Term\")!\n\t\t\tconst key = parseURI(state, term)\n\t\t\tif (key in cases) {\n\t\t\t\tthrow state.error(term, `Duplicate match case key: ${key}`)\n\t\t\t} else {\n\t\t\t\tconst expressions = CASE.getChildren(\"Expressions\")\n\t\t\t\tcases[key] = parseExprs(state, expressions)\n\t\t\t}\n\t\t}\n\n\t\treturn [APG.match(cases)]\n\t} else {\n\t\tthrow new Error(\"Unexpected Expression node\")\n\t}\n}\n","import { SyntaxNode } from \"lezer\"\n\nexport interface ParseState {\n\tslice: (node: SyntaxNode) => string\n\terror: (node: SyntaxNode, message: string) => LintError\n\tnamespaces: Record<string, string>\n}\n\nexport class LintError extends Error {\n\tconstructor(\n\t\treadonly from: number,\n\t\treadonly to: number,\n\t\treadonly value: string,\n\t\tmessage: string\n\t) {\n\t\tsuper(message)\n\t}\n}\n\nexport const uriPattern = /^[a-z]+:[a-zA-Z0-9-/_.:#]+$/\nexport const namespacePattern = /[#/]$/\n\nexport function parseURI(\n\tstate: {\n\t\tnamespaces: Record<string, string>\n\t\tslice: (node: SyntaxNode) => string\n\t},\n\tnode: SyntaxNode\n): string {\n\tconst value = state.slice(node)\n\tconst index = value.indexOf(\":\")\n\tif (index === -1) {\n\t\tconst { from, to } = node\n\t\tconst message = `Invalid URI: URIs must be of the form [namespace]:[path]`\n\t\tthrow new LintError(from, to, value, message)\n\t}\n\n\tconst prefix = value.slice(0, index)\n\tif (prefix in state.namespaces) {\n\t\treturn state.namespaces[prefix] + value.slice(index + 1)\n\t} else {\n\t\tconst { from, to } = node\n\t\tconst message = `Invalid URI: namespace ${prefix} is not defined`\n\t\tthrow new LintError(from, to, value, message)\n\t}\n}\n\nexport function printSyntax(node: SyntaxNode, prefix: string = \"\") {\n\tconsole.log(`${prefix}- ${node.type.name} ${node.from} ${node.to}`)\n\tfor (let child = node.firstChild; child !== null; child = child.nextSibling) {\n\t\tprintSyntax(child, prefix + \"  \")\n\t}\n}\n","/// The default maximum length of a `TreeBuffer` node.\nexport const DefaultBufferLength = 1024\n\nlet nextPropID = 0\n\nconst CachedNode = new WeakMap<Tree, TreeNode>()\n\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nexport class NodeProp<T> {\n  /// @internal\n  id: number\n\n  /// A method that deserializes a value of this prop from a string.\n  /// Can be used to allow a prop to be directly written in a grammar\n  /// file. Defaults to raising an error.\n  deserialize: (str: string) => T\n\n  /// Create a new node prop type. You can optionally pass a\n  /// `deserialize` function.\n  constructor({deserialize}: {deserialize?: (str: string) => T} = {}) {\n    this.id = nextPropID++\n    this.deserialize = deserialize || (() => {\n      throw new Error(\"This node type doesn't define a deserialize function\")\n    })\n  }\n\n  /// Create a string-valued node prop whose deserialize function is\n  /// the identity function.\n  static string() { return new NodeProp<string>({deserialize: str => str}) }\n\n  /// Create a number-valued node prop whose deserialize function is\n  /// just `Number`.\n  static number() { return new NodeProp<number>({deserialize: Number}) }\n\n  /// Creates a boolean-valued node prop whose deserialize function\n  /// returns true for any input.\n  static flag() { return new NodeProp<boolean>({deserialize: () => true}) }\n\n  /// Store a value for this prop in the given object. This can be\n  /// useful when building up a prop object to pass to the\n  /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n  /// argument.\n  set(propObj: {[prop: number]: any}, value: T) {\n    propObj[this.id] = value\n    return propObj\n  }\n\n  /// This is meant to be used with\n  /// [`NodeSet.extend`](#tree.NodeSet.extend) or\n  /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n  /// values for each node type in the set. Takes a [match\n  /// object](#tree.NodeType^match) or function that returns undefined\n  /// if the node type doesn't get this prop, and the prop's value if\n  /// it does.\n  add(match: {[selector: string]: T} | ((type: NodeType) => T | undefined)): NodePropSource {\n    if (typeof match != \"function\") match = NodeType.match(match)\n    return (type) => {\n      let result = (match as (type: NodeType) => T | undefined)(type)\n      return result === undefined ? null : [this, result]\n    }\n  }\n\n  /// Prop that is used to describe matching delimiters. For opening\n  /// delimiters, this holds an array of node names (written as a\n  /// space-separated string when declaring this prop in a grammar)\n  /// for the node types of closing delimiters that match it.\n  static closedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n  /// attached to closing delimiters, holding an array of node names\n  /// of types of matching opening delimiters.\n  static openedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// Used to assign node types to groups (for example, all node\n  /// types that represent an expression could be tagged with an\n  /// `\"Expression\"` group).\n  static group = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n}\n\n/// Type returned by [`NodeProp.add`](#tree.NodeProp.add). Describes\n/// the way a prop should be added to each node type in a node set.\nexport type NodePropSource = (type: NodeType) => null | [NodeProp<any>, any]\n\n// Note: this is duplicated in lezer/src/constants.ts\nconst enum NodeFlag {\n  Top = 1,\n  Skipped = 2,\n  Error = 4,\n  Anonymous = 8\n}\n\nconst noProps: {[propID: number]: any} = Object.create(null)\n\n/// Each node in a syntax tree has a node type associated with it.\nexport class NodeType {\n  /// @internal\n  constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    readonly name: string,\n    /// @internal\n    readonly props: {readonly [prop: number]: any},\n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    readonly id: number,\n    /// @internal\n    readonly flags: number = 0) {}\n\n  static define(spec: {\n    /// The ID of the node type. When this type is used in a\n    /// [set](#tree.NodeSet), the ID must correspond to its index in\n    /// the type array.\n    id: number, \n    /// The name of the node type. Leave empty to define an anonymous\n    /// node.\n    name?: string,\n    /// [Node props](#tree.NodeProp) to assign to the type. The value\n    /// given for any given prop should correspond to the prop's type.\n    props?: readonly ([NodeProp<any>, any] | NodePropSource)[],\n    /// Whether is is a [top node](#tree.NodeType.isTop).\n    top?: boolean,\n    /// Whether this node counts as an [error\n    /// node](#tree.NodeType.isError).\n    error?: boolean,\n    /// Whether this node is a [skipped](#tree.NodeType.isSkipped)\n    /// node.\n    skipped?: boolean\n  }) {\n    let props = spec.props && spec.props.length ? Object.create(null) : noProps\n    let flags = (spec.top ? NodeFlag.Top : 0) | (spec.skipped ? NodeFlag.Skipped : 0) |\n      (spec.error ? NodeFlag.Error : 0) | (spec.name == null ? NodeFlag.Anonymous : 0)\n    let type = new NodeType(spec.name || \"\", props, spec.id, flags)\n    if (spec.props) for (let src of spec.props) {\n      if (!Array.isArray(src)) src = src(type)!\n      if (src) src[0].set(props, src[1])\n    }\n    return type\n  }\n\n  /// Retrieves a node prop for this type. Will return `undefined` if\n  /// the prop isn't present on this node.\n  prop<T>(prop: NodeProp<T>): T | undefined { return this.props[prop.id] }\n\n  /// True when this is the top node of a grammar.\n  get isTop() { return (this.flags & NodeFlag.Top) > 0 }\n\n  /// True when this node is produced by a skip rule.\n  get isSkipped() { return (this.flags & NodeFlag.Skipped) > 0 }\n\n  /// Indicates whether this is an error node.\n  get isError() { return (this.flags & NodeFlag.Error) > 0 }\n\n  /// When true, this node type doesn't correspond to a user-declared\n  /// named node, for example because it is used to cache repetition.\n  get isAnonymous() { return (this.flags & NodeFlag.Anonymous) > 0 }\n\n  /// Returns true when this node's name or one of its\n  /// [groups](#tree.NodeProp^group) matches the given string.\n  is(name: string | number) {\n    if (typeof name == 'string') {\n      if (this.name == name) return true\n      let group = this.prop(NodeProp.group)\n      return group ? group.indexOf(name) > -1 : false\n    }\n    return this.id == name\n  }\n\n  /// An empty dummy node type to use when no actual type is available.\n  static none: NodeType = new NodeType(\"\", Object.create(null), 0, NodeFlag.Anonymous)\n\n  /// Create a function from node types to arbitrary values by\n  /// specifying an object whose property names are node or\n  /// [group](#tree.NodeProp^group) names. Often useful with\n  /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n  /// names, separated by spaces, in a single property name to map\n  /// multiple node names to a single value.\n  static match<T>(map: {[selector: string]: T}): (node: NodeType) => T | undefined {\n    let direct = Object.create(null)\n    for (let prop in map)\n      for (let name of prop.split(\" \")) direct[name] = map[prop]\n    return (node: NodeType) => {\n      for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n        let found = direct[i < 0 ? node.name : groups![i]]\n        if (found) return found\n      }\n    }\n  }\n}\n\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.nodeSet) a node set, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nexport class NodeSet {\n  /// Create a set with the given types. The `id` property of each\n  /// type should correspond to its position within the array.\n  constructor(\n    /// The node types in this set, by id.\n    readonly types: readonly NodeType[]\n  ) {\n    for (let i = 0; i < types.length; i++) if (types[i].id != i)\n      throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\")\n  }\n\n  /// Create a copy of this set with some node properties added. The\n  /// arguments to this method should be created with\n  /// [`NodeProp.add`](#tree.NodeProp.add).\n  extend(...props: NodePropSource[]): NodeSet {\n    let newTypes: NodeType[] = []\n    for (let type of this.types) {\n      let newProps = null\n      for (let source of props) {\n        let add = source(type)\n        if (add) {\n          if (!newProps) newProps = Object.assign({}, type.props)\n          add[0].set(newProps, add[1])\n        }\n      }\n      newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type)\n    }\n    return new NodeSet(newTypes)\n  }\n}\n\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nexport class Tree {\n  /// Construct a new tree. You usually want to go through\n  /// [`Tree.build`](#tree.Tree^build) instead.\n  constructor(\n    readonly type: NodeType,\n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    readonly children: readonly (Tree | TreeBuffer)[],\n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    readonly positions: readonly number[],\n    /// The total length of this tree\n    readonly length: number\n  ) {}\n\n  /// @internal\n  toString(): string {\n    let children = this.children.map(c => c.toString()).join()\n    return !this.type.name ? children :\n      (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n      (children.length ? \"(\" + children + \")\" : \"\")\n  }\n\n  /// The empty tree\n  static empty = new Tree(NodeType.none, [], [], 0)\n\n  /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n  /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n  /// to the given position and side.\n  cursor(pos?: number, side: -1 | 0 | 1 = 0): TreeCursor {\n    let scope = (pos != null && CachedNode.get(this)) || (this.topNode as TreeNode)\n    let cursor = new TreeCursor(scope)\n    if (pos != null) {\n      cursor.moveTo(pos, side)\n      CachedNode.set(this, cursor._tree)\n    }\n    return cursor\n  }\n\n  /// Get a [tree cursor](#tree.TreeCursor) that, unlike regular\n  /// cursors, doesn't skip [anonymous](#tree.NodeType.isAnonymous)\n  /// nodes.\n  fullCursor(): TreeCursor {\n    return new TreeCursor(this.topNode as TreeNode, true)\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n  /// tree.\n  get topNode(): SyntaxNode {\n    return new TreeNode(this, 0, 0, null)\n  }\n\n  /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n  /// If `side` is -1, this will move into nodes that end at the\n  /// position. If 1, it'll move into nodes that start at the\n  /// position. With 0, it'll only enter nodes that cover the position\n  /// from both sides.\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor(pos, side).node\n  }\n\n  /// Iterate over the tree and its children, calling `enter` for any\n  /// node that touches the `from`/`to` region (if given) before\n  /// running over such a node's children, and `leave` (if given) when\n  /// leaving the node. When `enter` returns `false`, the given node\n  /// will not have its children iterated over (or `leave` called).\n  iterate(spec: {\n    enter(type: NodeType, from: number, to: number): false | void,\n    leave?(type: NodeType, from: number, to: number): void,\n    from?: number,\n    to?: number\n  }) {\n    let {enter, leave, from = 0, to = this.length} = spec\n    for (let c = this.cursor();;) {\n      let mustLeave = false\n      if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to) !== false)) {\n        if (c.firstChild()) continue\n        if (!c.type.isAnonymous) mustLeave = true\n      }\n      for (;;) {\n        if (mustLeave && leave) leave(c.type, c.from, c.to)\n        mustLeave = c.type.isAnonymous\n        if (c.nextSibling()) break\n        if (!c.parent()) return\n        mustLeave = true\n      }\n    }\n  }\n\n  /// Balance the direct children of this tree.\n  balance(maxBufferLength = DefaultBufferLength) {\n    return this.children.length <= BalanceBranchFactor ? this\n      : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0,\n                     maxBufferLength, this.length)\n  }\n\n  /// Build a tree from a postfix-ordered buffer of node information,\n  /// or a cursor over such a buffer.\n  static build(data: BuildData) { return buildTree(data) }\n}\n\ntype BuildData = {\n  /// The buffer or buffer cursor to read the node data from.\n  ///\n  /// When this is an array, it should contain four values for every\n  /// node in the tree.\n  ///\n  ///  - The first holds the node's type, as a node ID pointing into\n  ///    the given `NodeSet`.\n  ///  - The second holds the node's start offset.\n  ///  - The third the end offset.\n  ///  - The fourth the amount of space taken up in the array by this\n  ///    node and its children. Since there's four values per node,\n  ///    this is the total number of nodes inside this node (children\n  ///    and transitive children) plus one for the node itself, times\n  ///    four.\n  ///\n  /// Parent nodes should appear _after_ child nodes in the array. As\n  /// an example, a node of type 10 spanning positions 0 to 4, with\n  /// two children, of type 11 and 12, might look like this:\n  ///\n  ///     [11, 0, 1, 4, 12, 2, 4, 4, 10, 0, 4, 12]\n  buffer: BufferCursor | readonly number[],\n  /// The node types to use.\n  nodeSet: NodeSet,\n  /// The id of the top node type, if any.\n  topID?: number,\n  /// The position the tree should start at. Defaults to 0.\n  start?: number,\n  /// The length of the wrapping node. The end offset of the last\n  /// child is used when not provided.\n  length?: number,\n  /// The maximum buffer length to use. Defaults to\n  /// [`DefaultBufferLength`](#tree.DefaultBufferLength).\n  maxBufferLength?: number,\n  /// An optional set of reused nodes that the buffer can refer to.\n  reused?: (Tree | TreeBuffer)[],\n  /// The first node type that indicates repeat constructs in this\n  /// grammar.\n  minRepeatType?: number\n}\n\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nexport class TreeBuffer {\n  /// Create a tree buffer @internal\n  constructor(\n    /// @internal\n    readonly buffer: Uint16Array,\n    // The total length of the group of nodes in the buffer.\n    readonly length: number,\n    /// @internal\n    readonly set: NodeSet,\n    readonly type = NodeType.none\n  ) {}\n\n  /// @internal\n  toString() {\n    let result: string[] = []\n    for (let index = 0; index < this.buffer.length;) {\n      result.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result.join(\",\")\n  }\n\n  /// @internal\n  childString(index: number): string {\n    let id = this.buffer[index], endIndex = this.buffer[index + 3]\n    let type = this.set.types[id], result = type.name\n    if (/\\W/.test(result) && !type.isError) result = JSON.stringify(result)\n    index += 4\n    if (endIndex == index) return result\n    let children: string[] = []\n    while (index < endIndex) {\n      children.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result + \"(\" + children.join(\",\") + \")\"\n  }\n\n  /// @internal\n  findChild(startIndex: number, endIndex: number, dir: 1 | -1, after: number) {\n    let {buffer} = this, pick = -1\n    for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n      if (after != After.None) {\n        let start = buffer[i + 1], end = buffer[i + 2]\n        if (dir > 0) {\n          if (end > after) pick = i\n          if (end > after) break\n        } else {\n          if (start < after) pick = i\n          if (end >= after) break\n        }\n      } else {\n        pick = i\n        if (dir > 0) break\n      }\n    }\n    return pick\n  }\n}\n\nconst enum After { None = -1e8 }\n\n/// A syntax node provides an immutable pointer at a give node in a\n/// tree. When iterating over large amounts of nodes, you may want to\n/// use a mutable [cursor](#tree.TreeCursor) instead, which is more\n/// efficient.\nexport interface SyntaxNode {\n  /// The type of the node.\n  type: NodeType\n  /// The name of the node (`.type.name`).\n  name: string\n  /// The start position of the node.\n  from: number\n  /// The end position of the node.\n  to: number\n\n  /// The node's parent node, if any.\n  parent: SyntaxNode | null\n  /// The first child, if the node has children.\n  firstChild: SyntaxNode | null\n  /// The node's last child, if available.\n  lastChild: SyntaxNode | null\n  /// The first child that starts at or after `pos`.\n  childAfter(pos: number): SyntaxNode | null\n  /// The last child that ends at or before `pos`.\n  childBefore(pos: number): SyntaxNode | null\n  /// This node's next sibling, if any.\n  nextSibling: SyntaxNode | null\n  /// This node's previous sibling.\n  prevSibling: SyntaxNode | null\n  /// A [tree cursor](#tree.TreeCursor) starting at this node.\n  cursor: TreeCursor\n  /// Find the node around, before (if `side` is -1), or after (`side`\n  /// is 1) the given position. Will look in parent nodes if the\n  /// position is outside this node.\n  resolve(pos: number, side?: -1 | 0 | 1): SyntaxNode\n\n  /// Get the first child of the given type (which may be a [node\n  /// name](#tree.NodeProp.name) or a [group\n  /// name](#tree.NodeProp^group)). If `before` is non-null, only\n  /// return children that occur somewhere after a node with that name\n  /// or group. If `after` is non-null, only return children that\n  /// occur somewhere before a node with that name or group.\n  getChild(type: string | number, before?: string | number | null, after?: string | number | null): SyntaxNode | null\n\n  /// Like [`getChild`](#tree.SyntaxNode.getChild), but return all\n  /// matching children, not just the first.\n  getChildren(type: string | number, before?: string | number | null, after?: string | number | null): SyntaxNode[]\n}\n\nclass TreeNode implements SyntaxNode {\n  constructor(readonly node: Tree,\n              readonly from: number,\n              readonly index: number,\n              readonly _parent: TreeNode | null) {}\n\n  get type() { return this.node.type }\n\n  get name() { return this.node.type.name }\n\n  get to() { return this.from + this.node.length }\n\n  nextChild(i: number, dir: 1 | -1, after: number, full = false): TreeNode | BufferNode | null {\n    for (let parent: TreeNode = this;;) {\n      for (let {children, positions} = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n        let next = children[i], start = positions[i] + parent.from\n        if (after != After.None && (dir < 0 ? start >= after : start + next.length <= after))\n          continue\n        if (next instanceof TreeBuffer) {\n          let index = next.findChild(0, next.buffer.length, dir, after == After.None ? After.None : after - start)\n          if (index > -1) return new BufferNode(new BufferContext(parent, next, i, start), null, index)\n        } else if (full || (!next.type.isAnonymous || hasChild(next))) {\n          let inner = new TreeNode(next, start, i, parent)\n          return full || !inner.type.isAnonymous ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after)\n        }\n      }\n      if (full || !parent.type.isAnonymous) return null\n      i = parent.index + dir\n      parent = parent._parent!\n      if (!parent) return null\n    }\n  }\n\n  get firstChild() { return this.nextChild(0, 1, After.None) }\n  get lastChild() { return this.nextChild(this.node.children.length - 1, -1, After.None) }\n\n  childAfter(pos: number) { return this.nextChild(0, 1, pos) }\n  childBefore(pos: number) { return this.nextChild(this.node.children.length - 1, -1, pos) }\n\n  nextSignificantParent() {\n    let val: TreeNode = this\n    while (val.type.isAnonymous && val._parent) val = val._parent\n    return val\n  }\n\n  get parent() {\n    return this._parent ? this._parent.nextSignificantParent() : null\n  }\n\n  get nextSibling() {\n    return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null\n  }\n  get prevSibling() {\n    return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  getChild(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    return getChildren(this, type, before, after)\n  }\n\n  /// @internal\n  toString() { return this.node.toString() }\n}\n\nfunction getChildren(node: SyntaxNode, type: string | number, before: string | number | null, after: string | number | null): SyntaxNode[] {\n  let cur = node.cursor, result: SyntaxNode[] = []\n  if (!cur.firstChild()) return result\n  if (before != null) while (!cur.type.is(before)) if (!cur.nextSibling()) return result\n  for (;;) {\n    if (after != null && cur.type.is(after)) return result\n    if (cur.type.is(type)) result.push(cur.node)\n    if (!cur.nextSibling()) return after == null ? result : []\n  }\n}\n\nclass BufferContext {\n  constructor(readonly parent: TreeNode,\n              readonly buffer: TreeBuffer,\n              readonly index: number,\n              readonly start: number) {}\n}\n\nclass BufferNode implements SyntaxNode {\n  type: NodeType\n\n  get name() { return this.type.name }\n\n  get from() { return this.context.start + this.context.buffer.buffer[this.index + 1] }\n\n  get to() { return this.context.start + this.context.buffer.buffer[this.index + 2] }\n\n  constructor(readonly context: BufferContext,\n              readonly _parent: BufferNode | null,\n              readonly index: number) {\n    this.type = context.buffer.set.types[context.buffer.buffer[index]]\n  }\n\n  child(dir: 1 | -1, after: number): BufferNode | null {\n    let {buffer} = this.context\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.context.start)\n    return index < 0 ? null : new BufferNode(this.context, this, index)\n  }\n\n  get firstChild() { return this.child(1, After.None) }\n  get lastChild() { return this.child(-1, After.None) }\n\n  childAfter(pos: number) { return this.child(1, pos) }\n  childBefore(pos: number) { return this.child(-1, pos) }\n\n  get parent() {\n    return this._parent || this.context.parent.nextSignificantParent()\n  }\n\n  externalSibling(dir: 1 | -1) {\n    return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1)\n  }\n\n  get nextSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let after = buffer.buffer[this.index + 3]\n    if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n      return new BufferNode(this.context, this._parent, after)\n    return this.externalSibling(1)\n  }\n\n  get prevSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let parentStart = this._parent ? this._parent.index + 4 : 0\n    if (this.index == parentStart) return this.externalSibling(-1)\n    return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, After.None))\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  /// @internal\n  toString() { return this.context.buffer.childString(this.index) }\n\n  getChild(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    return getChildren(this, type, before, after)\n  }\n}\n\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nexport class TreeCursor {\n  /// The node's type.\n  type!: NodeType\n\n  /// Shorthand for `.type.name`.\n  get name() { return this.type.name }\n\n  /// The start source offset of this node.\n  from!: number\n\n  /// The end source offset.\n  to!: number\n\n  /// @internal\n  _tree!: TreeNode\n  private buffer: BufferContext | null = null\n  private stack: number[] = []\n  private index: number = 0\n  private bufferNode: BufferNode | null = null\n\n  /// @internal\n  constructor(node: TreeNode | BufferNode, readonly full = false) {\n    if (node instanceof TreeNode) {\n      this.yieldNode(node)\n    } else {\n      this._tree = node.context.parent\n      this.buffer = node.context\n      for (let n: BufferNode | null = node._parent; n; n = n._parent) this.stack.unshift(n.index)\n      this.bufferNode = node\n      this.yieldBuf(node.index)\n    }\n  }\n\n  private yieldNode(node: TreeNode | null) {\n    if (!node) return false\n    this._tree = node\n    this.type = node.type\n    this.from = node.from\n    this.to = node.to\n    return true\n  }\n\n  private yieldBuf(index: number, type?: NodeType) {\n    this.index = index\n    let {start, buffer} = this.buffer!\n    this.type = type || buffer.set.types[buffer.buffer[index]]\n    this.from = start + buffer.buffer[index + 1]\n    this.to = start + buffer.buffer[index + 2]\n    return true\n  }\n\n  private yield(node: TreeNode | BufferNode | null) {\n    if (!node) return false\n    if (node instanceof TreeNode) {\n      this.buffer = null\n      return this.yieldNode(node)\n    }\n    this.buffer = node.context\n    return this.yieldBuf(node.index, node.type)\n  }\n\n  /// @internal\n  toString() {\n    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString()\n  }\n\n  /// @internal\n  enter(dir: 1 | -1, after: number) {\n    if (!this.buffer)\n      return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, after, this.full))\n\n    let {buffer} = this.buffer\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.buffer.start)\n    if (index < 0) return false\n    this.stack.push(this.index)\n    return this.yieldBuf(index)\n  }\n\n  /// Move the cursor to this node's first child. When this returns\n  /// false, the node has no child, and the cursor has not been moved.\n  firstChild() { return this.enter(1, After.None) }\n\n  /// Move the cursor to this node's last child.\n  lastChild() { return this.enter(-1, After.None) }\n\n  /// Move the cursor to the first child that starts at or after `pos`.\n  childAfter(pos: number) { return this.enter(1, pos) }\n\n  /// Move to the last child that ends at or before `pos`.\n  childBefore(pos: number) { return this.enter(-1, pos) }\n\n  /// Move the node's parent node, if this isn't the top node.\n  parent() {\n    if (!this.buffer) return this.yieldNode(this.full ? this._tree._parent : this._tree.parent)\n    if (this.stack.length) return this.yieldBuf(this.stack.pop()!)\n    let parent = this.full ? this.buffer.parent : this.buffer.parent.nextSignificantParent()\n    this.buffer = null\n    return this.yieldNode(parent)\n  }\n\n  /// @internal\n  sibling(dir: 1 | -1) {\n    if (!this.buffer)\n      return !this._tree._parent ? false\n        : this.yield(this._tree._parent.nextChild(this._tree.index + dir, dir, After.None, this.full))\n\n    let {buffer} = this.buffer, d = this.stack.length - 1\n    if (dir < 0) {\n      let parentStart = d < 0 ? 0 : this.stack[d] + 4\n      if (this.index != parentStart)\n        return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, After.None))\n    } else {\n      let after = buffer.buffer[this.index + 3]\n      if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n        return this.yieldBuf(after)\n    }\n    return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, After.None, this.full)) : false\n  }\n\n  /// Move to this node's next sibling, if any.\n  nextSibling() { return this.sibling(1) }\n\n  /// Move to this node's previous sibling, if any.\n  prevSibling() { return this.sibling(-1) }\n\n  private atLastNode(dir: 1 | -1) {\n    let index, parent: TreeNode | null, {buffer} = this\n    if (buffer) {\n      if (dir > 0) {\n        if (this.index < buffer.buffer.buffer.length) return false\n      } else {\n        for (let i = 0; i < this.index; i++) if (buffer.buffer.buffer[i + 3] < this.index) return false\n      }\n      ;({index, parent} = buffer)\n    } else {\n      ({index, _parent: parent} = this._tree)\n    }\n    for (; parent; {index, _parent: parent} = parent) {\n      for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n        let child = parent.node.children[i]\n        if (this.full || !child.type.isAnonymous || child instanceof TreeBuffer || hasChild(child)) return false\n      }\n    }\n    return true\n  }\n\n  private move(dir: 1 | -1) {\n    if (this.enter(dir, After.None)) return true\n    for (;;) {\n      if (this.sibling(dir)) return true\n      if (this.atLastNode(dir) || !this.parent()) return false\n    }\n  }\n\n  /// Move to the next node in a\n  /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n  /// traversal, going from a node to its first child or, if the\n  /// current node is empty, its next sibling or the next sibling of\n  /// the first parent node that has one.\n  next() { return this.move(1) }\n\n  /// Move to the next node in a last-to-first pre-order traveral. A\n  /// node is followed by ist last child or, if it has none, its\n  /// previous sibling or the previous sibling of the first parent\n  /// node that has one.\n  prev() { return this.move(-1) }\n\n  /// Move the cursor to the innermost node that covers `pos`. If\n  /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n  /// it will enter nodes that start at `pos`.\n  moveTo(pos: number, side: -1 | 0 | 1 = 0) {\n    // Move up to a node that actually holds the position, if possible\n    while (this.from == this.to ||\n           (side < 1 ? this.from >= pos : this.from > pos) ||\n           (side > -1 ? this.to <= pos : this.to < pos))\n      if (!this.parent()) break\n\n    // Then scan down into child nodes as far as possible\n    for (;;) {\n      if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos)) break\n      if (this.from == this.to ||\n          (side < 1 ? this.from >= pos : this.from > pos) ||\n          (side > -1 ? this.to <= pos : this.to < pos)) {\n        this.parent()\n        break\n      }\n    }\n    return this\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n  /// position.\n  get node(): SyntaxNode {\n    if (!this.buffer) return this._tree\n    \n    let cache = this.bufferNode, result: BufferNode | null = null, depth = 0\n    if (cache && cache.context == this.buffer) {\n      scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n        for (let c: BufferNode | null = cache; c; c = c._parent) if (c.index == index) {\n          if (index == this.index) return c\n          result = c\n          depth = d + 1\n          break scan\n        }\n        index = this.stack[--d]\n      }\n    }\n    for (let i = depth; i < this.stack.length; i++) result = new BufferNode(this.buffer, result, this.stack[i])\n    return this.bufferNode = new BufferNode(this.buffer, result, this.index)\n  }\n\n  /// Get the [tree](#tree.Tree) that represents the current node, if\n  /// any. Will return null when the node is in a [tree\n  /// buffer](#tree.TreeBuffer).\n  get tree(): Tree | null {\n    return this.buffer ? null : this._tree.node\n  }\n}\n\nfunction hasChild(tree: Tree): boolean {\n  return tree.children.some(ch => !ch.type.isAnonymous || ch instanceof TreeBuffer || hasChild(ch))\n}\n\n/// This is used by `Tree.build` as an abstraction for iterating over\n/// a tree buffer. A cursor initially points at the very last element\n/// in the buffer. Every time `next()` is called it moves on to the\n/// previous one.\nexport interface BufferCursor {\n  /// The current buffer position (four times the number of nodes\n  /// remaining).\n  pos: number\n  /// The node ID of the next node in the buffer.\n  id: number\n  /// The start position of the next node in the buffer.\n  start: number\n  /// The end position of the next node.\n  end: number\n  /// The size of the next node (the number of nodes inside, counting\n  /// the node itself, times 4).\n  size: number\n  /// Moves `this.pos` down by 4.\n  next(): void\n  /// Create a copy of this cursor.\n  fork(): BufferCursor\n}\n\nclass FlatBufferCursor implements BufferCursor {\n  constructor(readonly buffer: readonly number[], public index: number) {}\n\n  get id() { return this.buffer[this.index - 4] }\n  get start() { return this.buffer[this.index - 3] }\n  get end() { return this.buffer[this.index - 2] }\n  get size() { return this.buffer[this.index - 1] }\n\n  get pos() { return this.index }\n\n  next() { this.index -= 4 }\n\n  fork() { return new FlatBufferCursor(this.buffer, this.index) }\n}\n\nconst BalanceBranchFactor = 8\n\nfunction buildTree(data: BuildData) {\n  let {buffer, nodeSet, topID = 0,\n       maxBufferLength = DefaultBufferLength,\n       reused = [],\n       minRepeatType = nodeSet.types.length} = data as BuildData\n  let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer as BufferCursor\n  let types = nodeSet.types\n  function takeNode(parentStart: number, minPos: number,\n                    children: (Tree | TreeBuffer)[], positions: number[],\n                    inRepeat: number) {\n    let {id, start, end, size} = cursor\n    while (id == inRepeat) { cursor.next(); ({id, start, end, size} = cursor) }\n\n    let startPos = start - parentStart\n    if (size < 0) { // Reused node\n      children.push(reused[id])\n      positions.push(startPos)\n      cursor.next()\n      return\n    }\n\n    let type = types[id], node, buffer: {size: number, start: number, skip: number} | undefined\n    if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n      // Small enough for a buffer, and no reused nodes inside\n      let data = new Uint16Array(buffer.size - buffer.skip)\n      let endPos = cursor.pos - buffer.size, index = data.length\n      while (cursor.pos > endPos)\n        index = copyToBuffer(buffer.start, data, index, inRepeat)\n      node = new TreeBuffer(data, end - buffer.start, nodeSet, inRepeat < 0 ? NodeType.none : types[inRepeat])\n      startPos = buffer.start - parentStart\n    } else { // Make it a node\n      let endPos = cursor.pos - size\n      cursor.next()\n      let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n      let localInRepeat = id >= minRepeatType ? id : -1\n      while (cursor.pos > endPos)\n        takeNode(start, endPos, localChildren, localPositions, localInRepeat)\n      localChildren.reverse(); localPositions.reverse()\n\n      if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n        node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start)\n      else\n        node = new Tree(type, localChildren, localPositions, end - start)\n    }\n\n    children.push(node)\n    positions.push(startPos)\n  }\n\n  function findBufferSize(maxSize: number, inRepeat: number) {\n    // Scan through the buffer to find previous siblings that fit\n    // together in a TreeBuffer, and don't contain any reused nodes\n    // (which can't be stored in a buffer).\n    // If `inRepeat` is > -1, ignore node boundaries of that type for\n    // nesting, but make sure the end falls either at the start\n    // (`maxSize`) or before such a node.\n    let fork = cursor.fork()\n    let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength\n    let result = {size: 0, start: 0, skip: 0}\n    scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n      // Pretend nested repeat nodes of the same type don't exist\n      if (fork.id == inRepeat) {\n        // Except that we store the current state as a valid return\n        // value.\n        result.size = size; result.start = start; result.skip = skip\n        skip += 4; size += 4\n        fork.next()\n        continue\n      }\n      let nodeSize = fork.size, startPos = fork.pos - nodeSize\n      if (nodeSize < 0 || startPos < minPos || fork.start < minStart) break\n      let localSkipped = fork.id >= minRepeatType ? 4 : 0\n      let nodeStart = fork.start\n      fork.next()\n      while (fork.pos > startPos) {\n        if (fork.size < 0) break scan\n        if (fork.id >= minRepeatType) localSkipped += 4\n        fork.next()\n      }\n      start = nodeStart\n      size += nodeSize\n      skip += localSkipped\n    }\n    if (inRepeat < 0 || size == maxSize) {\n      result.size = size; result.start = start; result.skip = skip\n    }\n    return result.size > 4 ? result : undefined\n  }\n\n  function copyToBuffer(bufferStart: number, buffer: Uint16Array, index: number, inRepeat: number): number {\n    let {id, start, end, size} = cursor\n    cursor.next()\n    if (id == inRepeat) return index\n    let startIndex = index\n    if (size > 4) {\n      let endPos = cursor.pos - (size - 4)\n      while (cursor.pos > endPos)\n        index = copyToBuffer(bufferStart, buffer, index, inRepeat)\n    }\n    if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n      buffer[--index] = startIndex\n      buffer[--index] = end - bufferStart\n      buffer[--index] = start - bufferStart\n      buffer[--index] = id\n    }\n    return index\n  }\n\n  let children: (Tree | TreeBuffer)[] = [], positions: number[] = []\n  while (cursor.pos > 0) takeNode(data.start || 0, 0, children, positions, -1)\n  let length = data.length ?? (children.length ? positions[0] + children[0].length : 0)\n  return new Tree(types[topID], children.reverse(), positions.reverse(), length)\n}\n\nfunction balanceRange(outerType: NodeType, innerType: NodeType,\n                      children: readonly (Tree | TreeBuffer)[], positions: readonly number[],\n                      from: number, to: number,\n                      start: number, maxBufferLength: number, length: number): Tree {\n  let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n  if (length <= maxBufferLength) {\n    for (let i = from; i < to; i++) {\n      localChildren.push(children[i])\n      localPositions.push(positions[i] - start)\n    }\n  } else {\n    let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor))\n    for (let i = from; i < to;) {\n      let groupFrom = i, groupStart = positions[i]\n      i++\n      for (; i < to; i++) {\n        let nextEnd = positions[i] + children[i].length\n        if (nextEnd - groupStart > maxChild) break\n      }\n      if (i == groupFrom + 1) {\n        let only = children[groupFrom]\n        if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n          for (let j = 0; j < only.children.length; j++) {\n            localChildren.push(only.children[j])\n            localPositions.push(only.positions[j] + groupStart - start)\n          }\n          continue\n        }\n        localChildren.push(only)\n      } else if (i == groupFrom + 1) {\n        localChildren.push(children[groupFrom])\n      } else {\n        let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart,\n                                 maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart)\n        if (innerType != NodeType.none && !containsType(inner.children, innerType))\n          inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length)\n        localChildren.push(inner)\n      }\n      localPositions.push(groupStart - start)\n    }\n  }\n  return new Tree(outerType, localChildren, localPositions, length)\n}\n\nfunction containsType(nodes: readonly (Tree | TreeBuffer)[], type: NodeType) {\n  for (let elt of nodes) if (elt.type == type) return true\n  return false\n}\n\n/// The [`TreeFragment.applyChanges`](#tree.TreeFragment^applyChanges)\n/// method expects changed ranges in this format.\nexport interface ChangedRange {\n  /// The start of the change in the start document\n  fromA: number\n  /// The end of the change in the start document\n  toA: number\n  /// The start of the replacement in the new document\n  fromB: number\n  /// The end of the replacement in the new document\n  toB: number\n}\n\nconst enum Open { Start = 1, End = 2 }\n\n/// Tree fragments are used during [incremental\n/// parsing](#lezer.ParseOptions.fragments) to track parts of old\n/// trees that can be reused in a new parse. An array of fragments is\n/// used to track regions of an old tree whose nodes might be reused\n/// in new parses. Use the static\n/// [`applyChanges`](#tree.TreeFragment^applyChanges) method to update\n/// fragments for document changes.\nexport class TreeFragment {\n  constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    readonly from: number,\n    /// The end of the unchanged range.\n    readonly to: number,\n    /// The tree that this fragment is based on.\n    readonly tree: Tree,\n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    readonly offset: number,\n    private open: number\n  ) {}\n\n  get openStart() { return (this.open & Open.Start) > 0 }\n\n  get openEnd() { return (this.open & Open.End) > 0 }\n\n  /// Apply a set of edits to an array of fragments, removing or\n  /// splitting fragments as necessary to remove edited ranges, and\n  /// adjusting offsets for fragments that moved.\n  static applyChanges(fragments: readonly TreeFragment[], changes: readonly ChangedRange[], minGap = 128) {\n    if (!changes.length) return fragments\n    let result: TreeFragment[] = []\n    let fI = 1, nextF = fragments.length ? fragments[0] : null\n    let cI = 0, pos = 0, off = 0\n    for (;;) {\n      let nextC = cI < changes.length ? changes[cI++] : null\n      let nextPos = nextC ? nextC.fromA : 1e9\n      if (nextPos - pos >= minGap) while (nextF && nextF.from < nextPos) {\n        let cut: TreeFragment | null = nextF\n        if (pos >= cut.from || nextPos <= cut.to || off) {\n          let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off\n          cut = fFrom >= fTo ? null :\n            new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off,\n                             (cI > 0 ? Open.Start : 0) | (nextC ? Open.End : 0))\n        }\n        if (cut) result.push(cut)\n        if (nextF.to > nextPos) break\n        nextF = fI < fragments.length ? fragments[fI++] : null\n      }\n      if (!nextC) break\n      pos = nextC.toA\n      off = nextC.toA - nextC.toB\n    }\n    return result\n  }\n\n  /// Create a set of fragments from a freshly parsed tree, or update\n  /// an existing set of fragments by replacing the ones that overlap\n  /// with a tree with content from the new tree. When `partial` is\n  /// true, the parse is treated as incomplete, and the token at its\n  /// end is not included in [`safeTo`](#tree.TreeFragment.safeTo).\n  static addTree(tree: Tree, fragments: readonly TreeFragment[] = [], partial = false) {\n    let result = [new TreeFragment(0, tree.length, tree, 0, partial ? Open.End : 0)]\n    for (let f of fragments) if (f.to > tree.length) result.push(f)\n    return result\n  }\n}\n\n/// Interface used to represent an in-progress parse, which can be\n/// moved forward piece-by-piece.\nexport interface PartialParse {\n  /// Advance the parse state by some amount.\n  advance(): Tree | null\n  /// The current parse position.\n  pos: number\n  /// Get the currently parsed content as a tree, even though the\n  /// parse hasn't finished yet.\n  forceFinish(): Tree\n}\n\n/// A parse context is an object providing additional information to the\n/// parser. It is passed through to nested parsers.\nexport interface ParseContext {\n  /// A set of fragments from a previous parse to be used for incremental\n  /// parsing. These should be aligned with the current document\n  /// (through a call to\n  /// [`TreeFragment.applyChanges`](#tree.TreeFragment^applyChanges))\n  /// if any changes were made since they were produced. The parser\n  /// will try to reuse nodes from the fragments in the new parse,\n  /// greatly speeding up the parse when it can do so for most of the\n  /// document.\n  fragments?: readonly TreeFragment[]\n}\n\n/// This is the interface the parser uses to access the document. It\n/// exposes a sequence of UTF16 code units. Most (but not _all_)\n/// access, especially through `get`, will be sequential, so\n/// implementations can optimize for that.\nexport interface Input {\n  /// The end of the stream.\n  length: number\n  /// Get the code unit at the given position. Will return -1 when\n  /// asked for a point below 0 or beyond the end of the stream.\n  get(pos: number): number\n  /// Returns the string between `pos` and the next newline character\n  /// or the end of the document. Not used by the built-in tokenizers,\n  /// but can be useful in custom tokenizers or completely custom\n  /// parsers.\n  lineAfter(pos: number): string\n  /// Read part of the stream as a string\n  read(from: number, to: number): string\n  /// Return a new `Input` over the same data, but with a lower\n  /// `length`. Used, for example, when nesting grammars to give the\n  /// inner grammar a narrower view of the input.\n  clip(at: number): Input\n}\n\n// Creates an `Input` that is backed by a single, flat string.\nexport function stringInput(input: string): Input { return new StringInput(input) }\n\nclass StringInput implements Input {\n  constructor(readonly string: string, readonly length = string.length) {}\n\n  get(pos: number) {\n    return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos)\n  }\n\n  lineAfter(pos: number) {\n    if (pos < 0) return \"\"\n    let end = this.string.indexOf(\"\\n\", pos)\n    return this.string.slice(pos, end < 0 ? this.length : Math.min(end, this.length))\n  }\n  \n  read(from: number, to: number): string { return this.string.slice(from, Math.min(this.length, to)) }\n\n  clip(at: number) { return new StringInput(this.string, at) }\n}\n","export const type = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nexport const nil = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\";\nexport const first = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\";\nexport const rest = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\";\nexport const langString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\nexport const JSON = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON\";\n","export const string = \"http://www.w3.org/2001/XMLSchema#string\";\nexport const boolean = \"http://www.w3.org/2001/XMLSchema#boolean\";\nexport const Decimal = \"http://www.w3.org/2001/XMLSchema#decimal\";\nexport const integer = \"http://www.w3.org/2001/XMLSchema#integer\";\nexport const double = \"http://www.w3.org/2001/XMLSchema#double\";\nexport const float = \"http://www.w3.org/2001/XMLSchema#float\";\nexport const date = \"http://www.w3.org/2001/XMLSchema#date\";\nexport const time = \"http://www.w3.org/2001/XMLSchema#time\";\nexport const dateTime = \"http://www.w3.org/2001/XMLSchema#dateTime\";\nexport const dateTimeStamp = \"http://www.w3.org/2001/XMLSchema#dateTimeStamp\";\nexport const gYear = \"http://www.w3.org/2001/XMLSchema#gYear\";\nexport const gMonth = \"http://www.w3.org/2001/XMLSchema#gMonth\";\nexport const gDay = \"http://www.w3.org/2001/XMLSchema#gDay\";\nexport const gYearMonth = \"http://www.w3.org/2001/XMLSchema#gYearMonth\";\nexport const gMonthDay = \"http://www.w3.org/2001/XMLSchema#gMonthDay\";\nexport const duration = \"http://www.w3.org/2001/XMLSchema#duration\";\nexport const yearMonthDuration = \"http://www.w3.org/2001/XMLSchema#yearMonthDuration\";\nexport const dayTimeDuration = \"http://www.w3.org/2001/XMLSchema#dayTimeDuration\";\nexport const byte = \"http://www.w3.org/2001/XMLSchema#byte\";\nexport const short = \"http://www.w3.org/2001/XMLSchema#short\";\nexport const int = \"http://www.w3.org/2001/XMLSchema#int\";\nexport const long = \"http://www.w3.org/2001/XMLSchema#long\";\nexport const unsignedByte = \"http://www.w3.org/2001/XMLSchema#unsignedByte\";\nexport const unsignedShort = \"http://www.w3.org/2001/XMLSchema#unsignedShort\";\nexport const unsignedInt = \"http://www.w3.org/2001/XMLSchema#unsignedInt\";\nexport const unsignedLong = \"http://www.w3.org/2001/XMLSchema#unsignedLong\";\nexport const positiveInteger = \"http://www.w3.org/2001/XMLSchema#positiveInteger\";\nexport const nonNegativeInteger = \"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\";\nexport const nonPositiveInteger = \"http://www.w3.org/2001/XMLSchema#nonPositiveInteger\";\nexport const hexBinary = \"http://www.w3.org/2001/XMLSchema#hexBinary\";\nexport const base64Binary = \"http://www.w3.org/2001/XMLSchema#base64Binary\";\nexport const anyURI = \"http://www.w3.org/2001/XMLSchema#anyURI\";\nexport const language = \"http://www.w3.org/2001/XMLSchema#language\";\nexport const normalizedString = \"http://www.w3.org/2001/XMLSchema#normalizedString\";\nexport const token = \"http://www.w3.org/2001/XMLSchema#token\";\nexport const NMTOKEN = \"http://www.w3.org/2001/XMLSchema#NMTOKEN\";\nexport const Name = \"http://www.w3.org/2001/XMLSchema#Name\";\nexport const NCNames = \"http://www.w3.org/2001/XMLSchema#NCNames\";\n","import { rdf, xsd } from \"./IRIs.js\";\nlet _blankNodeCounter = 0;\nexport class NamedNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get termType() {\n        return \"NamedNode\";\n    }\n    get id() {\n        return `<${this.value}>`;\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return other.termType === \"NamedNode\" && other.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nconst xsdString = new NamedNode(xsd.string);\nconst rdfLangString = new NamedNode(rdf.langString);\nexport class Literal {\n    constructor(value, language, datatype) {\n        this.value = value;\n        this.language = language;\n        this.datatype = datatype;\n        if (datatype.value === xsd.string) {\n            this.id = JSON.stringify(value);\n        }\n        else if (datatype.value === rdf.langString && language !== \"\") {\n            this.id = `${JSON.stringify(value)}@${this.language}`;\n        }\n        else {\n            this.id = `${JSON.stringify(value)}^^<${datatype.value}>`;\n        }\n    }\n    get termType() {\n        return \"Literal\";\n    }\n    get datatypeString() {\n        return this.datatype.value;\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return (this.termType === term.termType &&\n                this.value === term.value &&\n                this.language === term.language &&\n                this.datatype.equals(term.datatype));\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n            language: this.language,\n            datatype: { termType: \"NamedNode\", value: this.datatype.value },\n        };\n    }\n}\nexport class BlankNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `_:${this.value}`;\n    }\n    get termType() {\n        return \"BlankNode\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class Variable {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `?${this.value}`;\n    }\n    get termType() {\n        return \"Variable\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class DefaultGraph {\n    get termType() {\n        return \"DefaultGraph\";\n    }\n    get id() {\n        return \"\";\n    }\n    get value() {\n        return \"\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: \"\",\n        };\n    }\n}\nexport const Default = new DefaultGraph();\nexport function fromId(id) {\n    if (id === \"\") {\n        return Default;\n    }\n    switch (id[0]) {\n        case \"_\":\n            return new BlankNode(id.slice(2));\n        case \"?\":\n            return new Variable(id.slice(1));\n        case '\"':\n            const i = id.lastIndexOf('\"');\n            if (i === -1) {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n            const value = id.slice(1, i);\n            if (id.length === i + 1) {\n                return new Literal(value, \"\", xsdString);\n            }\n            else if (id[i + 1] === \"@\") {\n                return new Literal(value, id.slice(i + 2), rdfLangString);\n            }\n            else if (id.slice(i, i + 4) === '\"^^<' && id[id.length - 1] === \">\") {\n                const datatype = new NamedNode(id.slice(i + 4, -1));\n                return new Literal(value, \"\", datatype);\n            }\n            else {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n        case \"<\":\n            return new NamedNode(id.slice(1, -1));\n        default:\n            throw new Error(`Invalid term id ${id}`);\n    }\n}\nexport function toId(term) {\n    if (typeof term === \"string\") {\n        return term;\n    }\n    switch (term.termType) {\n        case \"NamedNode\":\n            return `<${term.value}>`;\n        case \"BlankNode\":\n            return \"_:\" + term.value;\n        case \"Variable\":\n            return \"?\" + term.value;\n        case \"DefaultGraph\":\n            return \"\";\n        case \"Literal\":\n            return ('\"' +\n                term.value +\n                '\"' +\n                (term.language\n                    ? \"@\" + term.language\n                    : term.datatype && term.datatype.value !== xsd.string\n                        ? \"^^<\" + term.datatype.value + \">\"\n                        : \"\"));\n        default:\n            throw new Error(\"Invalid term: \" + term);\n    }\n}\n// TODO: think about it\nexport class Quad extends Array {\n    constructor(subject, predicate, object, graph) {\n        super(subject, predicate, object, graph || Default);\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph || Default;\n    }\n    get termType() {\n        return \"Quad\";\n    }\n    get value() {\n        return \"\";\n    }\n    get id() {\n        if (this.graph.equals(Default)) {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} .`;\n        }\n        else {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} ${this.graph.id} .`;\n        }\n    }\n    toJSON() {\n        return {\n            termType: \"Quad\",\n            value: \"\",\n            subject: this.subject.toJSON(),\n            predicate: this.predicate.toJSON(),\n            object: this.object.toJSON(),\n            graph: this.graph.toJSON(),\n        };\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return (other.termType === \"Quad\" &&\n                this.subject.equals(other.subject) &&\n                this.predicate.equals(other.predicate) &&\n                this.object.equals(other.object) &&\n                this.graph.equals(other.graph));\n        }\n    }\n}\nfunction namedNode(iri) {\n    return new NamedNode(iri);\n}\nfunction blankNode(name) {\n    return new BlankNode(name || `b${_blankNodeCounter++}`);\n}\nfunction literal(value, languageOrDataType) {\n    if (languageOrDataType === undefined) {\n        return new Literal(value, \"\", xsdString);\n    }\n    else if (typeof languageOrDataType === \"string\") {\n        return new Literal(value, languageOrDataType, rdfLangString);\n    }\n    else {\n        const datatype = new NamedNode(languageOrDataType.value);\n        return new Literal(value, \"\", datatype);\n    }\n}\nfunction variable(name) {\n    return new Variable(name);\n}\nfunction defaultGraph() {\n    return Default;\n}\nfunction quad(subject, predicate, object, graph) {\n    return new Quad(subject, predicate, object, graph);\n}\n// export function getTerm(\n// \tterm: null | string | Term\n// ): null | NamedNode | BlankNode | Literal | Variable | DefaultGraph {\n// \tif (term === null) {\n// \t\treturn null\n// \t} else if (typeof term === \"string\") {\n// \t\treturn fromId(term)\n// \t} else if (term instanceof BaseTerm) {\n// \t\treturn term\n// \t} else {\n// \t\tswitch (term.termType) {\n// \t\t\tcase \"NamedNode\":\n// \t\t\t\treturn new NamedNode(term.value)\n// \t\t\tcase \"BlankNode\":\n// \t\t\t\treturn new BlankNode(term.value)\n// \t\t\tcase \"Literal\":\n// \t\t\t\treturn new Literal(\n// \t\t\t\t\tterm.value,\n// \t\t\t\t\tterm.language || new NamedNode(term.datatype.value)\n// \t\t\t\t)\n// \t\t\tcase \"DefaultGraph\":\n// \t\t\t\treturn Default\n// \t\t\tcase \"Variable\":\n// \t\t\t\treturn new Variable(term.value)\n// \t\t}\n// \t}\n// }\nconst DataFactory = {\n    namedNode,\n    blankNode,\n    variable,\n    literal,\n    defaultGraph,\n    quad,\n};\nexport default DataFactory;\n","import DataFactory, { toId, fromId, Quad } from \"./DataFactory.js\";\nconst SPO = [\"subject\", \"predicate\", \"object\"];\nconst POS = [\"predicate\", \"object\", \"subject\"];\nconst OSP = [\"object\", \"subject\", \"predicate\"];\nexport default class Store {\n    constructor(quads) {\n        this.sizeCache = 0;\n        this.graphMap = new Map();\n        this.id = 0;\n        this.ids = new Map([[\"><\", 0]]);\n        this.entities = new Map();\n        this.blankNodeIndex = 0;\n        // Add quads if passed\n        if (quads !== undefined) {\n            this.addQuads(quads);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.quads(null, null, null, null);\n    }\n    get size() {\n        if (this.sizeCache !== null) {\n            return this.sizeCache;\n        }\n        // Calculate the number of quads by counting to the deepest level\n        let size = 0;\n        for (const { subjects } of this.graphMap.values()) {\n            for (const predicates of subjects.values()) {\n                for (const objects of predicates.values()) {\n                    size += objects.size;\n                }\n            }\n        }\n        this.sizeCache = size;\n        return size;\n    }\n    // ## Private methods\n    // Returns if the index has changed, if the entry did not already exist.\n    addToIndex(index0, key0, key1, key2) {\n        // Create layers as necessary\n        let existed = false;\n        const index1 = index0.get(key0);\n        if (index1 === undefined) {\n            index0.set(key0, new Map([[key1, new Set([key2])]]));\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 === undefined) {\n                index1.set(key1, new Set([key2]));\n            }\n            else {\n                existed = index2.has(key2);\n                index2.add(key2);\n            }\n        }\n        return existed;\n    }\n    // ### `_removeFromIndex` removes a quad from a three-layered index\n    removeFromIndex(index0, key0, key1, key2) {\n        // Remove the quad from the index\n        const index1 = index0.get(key0);\n        const index2 = index1.get(key1);\n        index2.delete(key2);\n        if (index2.size === 0) {\n            index1.delete(key1);\n            if (index1.size === 0) {\n                index0.delete(key0);\n            }\n        }\n    }\n    *generateIndex(index0, key0, key1, key2, rotation, graph) {\n        const entities = [\"\", \"\", \"\"];\n        if (key0) {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                entities[0] = this.entities.get(key0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n        else {\n            for (const [value0, index1] of index0) {\n                entities[0] = this.entities.get(value0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n    }\n    *generateIndex1(e, index1, key1, key2, r, graph) {\n        if (key1) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                e[1] = this.entities.get(key1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n        else {\n            for (const [value1, index2] of index1) {\n                e[1] = this.entities.get(value1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n    }\n    *generateIndex2(e, key2, index2, r, graph) {\n        if (key2) {\n            if (index2.has(key2)) {\n                e[2] = this.entities.get(key2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n        else {\n            for (const value2 of index2) {\n                e[2] = this.entities.get(value2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n    }\n    makeQuad([entity0, entity1, entity2], [name0, name1, name2], graph) {\n        const parts = { subject: null, predicate: null, object: null };\n        parts[name0] = fromId(entity0);\n        parts[name1] = fromId(entity1);\n        parts[name2] = fromId(entity2);\n        return new Quad(parts.subject, parts.predicate, parts.object, fromId(graph));\n    }\n    *loopByKey0(index0, key0) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            yield* index1.keys();\n        }\n    }\n    *loopByKey1(index0, key1) {\n        for (const [key0, index1] of index0) {\n            if (index1.has(key1)) {\n                yield key0;\n            }\n        }\n    }\n    *loopBy2Keys(index0, key0, key1) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                yield* index2.keys();\n            }\n        }\n    }\n    // ### `countInIndex` counts matching quads in a three-layered index.\n    // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n    // Any of these keys can be undefined, which is interpreted as a wildcard.\n    countInIndex(index0, key0, key1, key2) {\n        let count = 0;\n        if (key0 === null) {\n            for (const index1 of index0.values()) {\n                count += this.countInIndex1(index1, key1, key2);\n            }\n        }\n        else {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                count = this.countInIndex1(index1, key1, key2);\n            }\n        }\n        return count;\n    }\n    countInIndex1(index1, key1, key2) {\n        let count = 0;\n        if (key1 === null) {\n            for (const index2 of index1.values()) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        return count;\n    }\n    // ### `getGraphIndices` returns an array with the given graph,\n    // or all graphs if the argument is null or undefined.\n    getGraphIndices(graph) {\n        if (graph === undefined || graph === null) {\n            return this.graphMap;\n        }\n        else {\n            const graphIndex = this.graphMap.get(graph);\n            return new Map([[graph, graphIndex]]);\n        }\n    }\n    getGraphIndex(graph) {\n        const graphIndex = this.graphMap.get(graph);\n        if (graphIndex !== undefined) {\n            return graphIndex;\n        }\n        const newGraphIndex = Object.freeze({\n            subjects: new Map(),\n            predicates: new Map(),\n            objects: new Map(),\n        });\n        this.graphMap.set(graph, newGraphIndex);\n        return newGraphIndex;\n    }\n    addQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            if (args[3] === undefined) {\n                graph = \"\";\n            }\n            else {\n                graph = toId(args[3]);\n            }\n        }\n        const graphIndex = this.getGraphIndex(graph);\n        // Since entities can often be long IRIs, we avoid storing them in every index.\n        // Instead, we have a separate index that maps entities to numbers,\n        // which are then used as keys in the other indexes.\n        if (!this.ids.has(subject)) {\n            const id = ++this.id;\n            this.entities.set(id, subject);\n            this.ids.set(subject, id);\n        }\n        const s = this.ids.get(subject);\n        if (!this.ids.has(predicate)) {\n            const id = ++this.id;\n            this.entities.set(id, predicate);\n            this.ids.set(predicate, id);\n        }\n        const p = this.ids.get(predicate);\n        if (!this.ids.has(object)) {\n            const id = ++this.id;\n            this.entities.set(id, object);\n            this.ids.set(object, id);\n        }\n        const o = this.ids.get(object);\n        const changed = this.addToIndex(graphIndex.subjects, s, p, o);\n        this.addToIndex(graphIndex.predicates, p, o, s);\n        this.addToIndex(graphIndex.objects, o, s, p);\n        // The cached quad count is now invalid\n        this.sizeCache = null;\n        return changed;\n    }\n    // ### `addQuads` adds multiple quads to the store\n    addQuads(quads) {\n        for (const quad of quads) {\n            this.addQuad(quad);\n        }\n    }\n    removeQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else if (args.length === 3) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = \"\";\n        }\n        else if (args.length === 4) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = toId(args[3]);\n        }\n        // Find internal identifiers for all components\n        // and verify the quad exists.\n        const index = this.graphMap.get(graph);\n        if (index === undefined) {\n            return false;\n        }\n        if (!this.ids.has(subject) ||\n            !this.ids.has(predicate) ||\n            !this.ids.has(object)) {\n            return false;\n        }\n        const [s, p, o] = [\n            this.ids.get(subject),\n            this.ids.get(predicate),\n            this.ids.get(object),\n        ];\n        const subjects = index.subjects.get(s);\n        if (subjects === undefined) {\n            return false;\n        }\n        const predicates = subjects.get(p);\n        if (predicates === undefined || !predicates.has(o)) {\n            return false;\n        }\n        // Remove it from all indexes\n        this.removeFromIndex(index.subjects, s, p, o);\n        this.removeFromIndex(index.predicates, p, o, s);\n        this.removeFromIndex(index.objects, o, s, p);\n        if (this.sizeCache !== null) {\n            this.sizeCache--;\n        }\n        if (index.subjects.size === 0) {\n            this.graphMap.delete(graph);\n        }\n        return true;\n    }\n    // ### `remove` removes a stream of quads from the store\n    remove(stream) {\n        for (const quad of stream) {\n            this.removeQuad(quad);\n        }\n    }\n    // ### `removeMatches` removes all matching quads from the store\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    removeMatches(subject, predicate, object, graph) {\n        return this.remove(this.quads(subject, predicate, object, graph));\n    }\n    // ### `deleteGraph` removes all triples with the given graph from the store\n    deleteGraph(graph) {\n        return this.removeMatches(null, null, null, graph);\n    }\n    getGraphId(graph) {\n        const graphId = toId(graph);\n        if (this.graphMap.has(graphId)) {\n            return graphId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    // TODO::::::\n    getIds(s, p, o, graph) {\n        return [\n            s === null ? null : this.ids.get(toId(s)),\n            p === null ? null : this.ids.get(toId(p)),\n            o === null ? null : this.ids.get(toId(o)),\n            graph === null ? null : this.getGraphId(graph),\n        ];\n    }\n    *q(s, p, o, g) {\n        const graphs = this.getGraphIndices(g);\n        for (const [graphId, { subjects, predicates, objects }] of graphs) {\n            // Choose the optimal index, based on what fields are present\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    yield* this.generateIndex(objects, o, s, p, OSP, graphId);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    yield* this.generateIndex(subjects, s, p, null, SPO, graphId);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                yield* this.generateIndex(predicates, p, o, null, POS, graphId);\n            }\n            else if (o) {\n                // If only object is given, the object index will be the fastest\n                yield* this.generateIndex(objects, o, null, null, OSP, graphId);\n            }\n            else {\n                // If nothing is given, iterate subjects and predicates first\n                yield* this.generateIndex(subjects, null, null, null, SPO, graphId);\n            }\n        }\n    }\n    // ### `match` returns a stream of quads matching a pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    *quads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return;\n        }\n        yield* this.q(s, p, o, g);\n    }\n    getQuads(subject, predicate, object, graph) {\n        return Array.from(this.quads(subject, predicate, object, graph));\n    }\n    countQuads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return 0;\n        }\n        const graphs = this.getGraphIndices(g);\n        let count = 0;\n        for (const content of graphs.values()) {\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    count += this.countInIndex(content.objects, o, s, p);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    count += this.countInIndex(content.subjects, s, p, o);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                count += this.countInIndex(content.predicates, p, o, s);\n            }\n            else {\n                // If only object is possibly given, the object index will be the fastest\n                count += this.countInIndex(content.objects, o, s, p);\n            }\n        }\n        return count;\n    }\n    getSubjects(predicate, object, graph) {\n        return Array.from(this.subjects(predicate, object, graph));\n    }\n    *subjects(predicate, object, graph) {\n        const [_, p, o, g] = this.getIds(null, predicate, object, graph);\n        if (p === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (p) {\n                if (o) {\n                    // If predicate and object are given, the POS index is best.\n                    iterator = this.loopBy2Keys(predicates, p, o);\n                }\n                else {\n                    // If only predicate is given, the SPO index is best.\n                    iterator = this.loopByKey1(subjects, p);\n                }\n            }\n            else if (o) {\n                // If only object is given, the OSP index is best.\n                iterator = this.loopByKey0(objects, o);\n            }\n            else {\n                // If no params given, iterate all the subjects\n                iterator = subjects.keys();\n            }\n            for (const s of iterator) {\n                yield* this.unique(s, ids);\n            }\n        }\n    }\n    getPredicates(subject, object, graph) {\n        return Array.from(this.predicates(subject, object, graph));\n    }\n    *predicates(subject, object, graph) {\n        const [s, _, o, g] = this.getIds(subject, null, object, graph);\n        if (s === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the OSP index is best.\n                    iterator = this.loopBy2Keys(objects, o, s);\n                }\n                else {\n                    // If only subject is given, the SPO index is best.\n                    iterator = this.loopByKey0(subjects, s);\n                }\n            }\n            else if (o) {\n                // If only object is given, the POS index is best.\n                iterator = this.loopByKey1(predicates, o);\n            }\n            else {\n                // If no params given, iterate all the predicates.\n                iterator = predicates.keys();\n            }\n            for (const p of iterator) {\n                yield* this.unique(p, ids);\n            }\n        }\n    }\n    // ### `getObjects` returns all objects that match the pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    getObjects(subject, predicate, graph) {\n        return Array.from(this.objects(subject, predicate, graph));\n    }\n    *objects(subject, predicate, graph) {\n        const [s, p, _, g] = this.getIds(subject, predicate, null, graph);\n        if (s === undefined || p === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            if (s) {\n                if (p) {\n                    // If subject and predicate are given, the SPO index is best.\n                    for (const o of this.loopBy2Keys(subjects, s, p)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n                else {\n                    // If only subject is given, the OSP index is best.\n                    for (const o of this.loopByKey1(objects, s)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n            }\n            else if (p) {\n                // If only predicate is given, the POS index is best.\n                for (const o of this.loopByKey0(predicates, p)) {\n                    yield* this.unique(o, ids);\n                }\n            }\n            else {\n                // If no params given, iterate all the objects.\n                for (const o of objects.keys()) {\n                    yield* this.unique(o, ids);\n                }\n            }\n        }\n    }\n    getGraphs(subject, predicate, object) {\n        return Array.from(this.graphs(subject, predicate, object));\n    }\n    *graphs(subject, predicate, object) {\n        const [s, p, o, _] = this.getIds(subject, predicate, object, null);\n        if (s === undefined || p === undefined || o === undefined) {\n            return;\n        }\n        for (const g of this.graphMap.keys()) {\n            const graph = fromId(g);\n            for (const _ of this.q(s, p, o, g)) {\n                yield graph;\n                break;\n            }\n        }\n    }\n    *unique(id, ids) {\n        if (!ids.has(id)) {\n            ids.add(id);\n            yield fromId(this.entities.get(id));\n        }\n    }\n    createBlankNode(suggestedName) {\n        let name = \"\";\n        if (suggestedName) {\n            // Generate a name based on the suggested name\n            name = \"_:\" + suggestedName;\n            for (let index = 1; this.ids.has(name); index++) {\n                name = \"_:\" + suggestedName + index;\n            }\n        }\n        else {\n            // Generate a generic blank node name\n            do {\n                name = \"_:b\" + this.blankNodeIndex++;\n            } while (this.ids.has(name));\n        }\n        // Add the blank node to the entities, avoiding the generation of duplicates\n        const id = ++this.id;\n        this.ids.set(name, id);\n        this.entities.set(id, name);\n        return DataFactory.blankNode(name.substr(2));\n    }\n}\n","import { Quad, NamedNode, BlankNode, Literal, Default, } from \"./DataFactory.js\";\nconst nnClosingTagError = () => new Error(`named node without closing angle bracket`);\nconst bnOpenTagError = () => new Error(`invalid blank node label`);\nconst unexpectedCharError = (identifier) => new Error(`Unexpected character '${identifier}'`);\nconst quadClosingPeriodError = (line) => new Error(`quad without closing period ${line}`);\nconst nnOpeningToken = \"<\";\nconst nnOpeningTokenOffset = nnOpeningToken.length;\nconst nnClosingToken = \">\";\nconst nnClosingPostfix = \"> \";\nconst nnClosingPostfixOffset = nnClosingPostfix.length;\nconst bnOpeningToken = \"_\";\nconst bnOpeningPrefix = \"_:\";\nconst bnOpeningPrefixOffset = bnOpeningPrefix.length;\nconst bnClosingToken = \" \";\nconst bnClosingTokenOffset = bnClosingToken.length;\nconst ltOpeningToken = '\"';\nconst ltOpeningTokenOffset = ltOpeningToken.length;\nconst quadClosingPostfix = \".\";\nconst ltReservedReplace = /\\\\(.)/g;\nconst ltReservedReplaceFn = (match) => {\n    switch (match) {\n        case \"\\\\n\":\n            return \"\\n\";\n        case \"\\\\r\":\n            return \"\\r\";\n        case '\\\\\"':\n            return '\"';\n        case \"\\\\\\\\\":\n            return \"\\\\\";\n        default:\n            throw new Error(`Unknown token ${match}`);\n    }\n};\n// const lgOpeningToken: string = \"@\"\n// const lgOpeningTokenOffset: number = lgOpeningToken.length\nconst lgOpeningPrefix = '\"@';\nconst lgOpeningPrefixOffset = lgOpeningPrefix.length;\nconst lgClosingToken = \" \";\nconst dtSplitPrefix = '\"^^<';\nconst dtSplitPrefixOffset = dtSplitPrefix.length;\nconst xsdString = new NamedNode(\"http://www.w3.org/2001/XMLSchema#string\");\nconst rdfLangString = new NamedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\");\nexport default function* Parse(input) {\n    if (!input || input.length === 0) {\n        return;\n    }\n    let rightBoundary, leftBoundary;\n    let lang, datatype;\n    let subject, predicate, object, graph;\n    for (const line of input.split(\"\\n\")) {\n        if (line === \"\") {\n            continue;\n        }\n        rightBoundary = -1;\n        leftBoundary = -1;\n        /*\n         * Parse the subject\n         */\n        switch (line.charAt(0)) {\n            case nnOpeningToken:\n                rightBoundary = line.indexOf(nnClosingPostfix);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                const namedNodeValue = line.substring(nnOpeningTokenOffset, rightBoundary);\n                subject = new NamedNode(namedNodeValue);\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                rightBoundary = line.indexOf(bnClosingToken);\n                const blankNodeValue = line.substring(bnOpeningPrefixOffset, rightBoundary);\n                subject = new BlankNode(blankNodeValue);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(0));\n        }\n        /*\n         * Parse the predicate\n         */\n        // We currently assume blank nodes can't be predicates\n        rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n        if (rightBoundary === -1) {\n            throw nnClosingTagError();\n        }\n        leftBoundary =\n            line.indexOf(nnOpeningToken, leftBoundary) + nnOpeningTokenOffset;\n        predicate = new NamedNode(line.substring(leftBoundary, rightBoundary));\n        leftBoundary = rightBoundary + nnClosingPostfixOffset;\n        /*\n         * Parse the object\n         */\n        switch (line.charAt(leftBoundary)) {\n            case nnOpeningToken:\n                leftBoundary = leftBoundary + nnOpeningTokenOffset;\n                // When parsing ntriples, the space of the nnClosingPostfix might not exist, so it can't be used\n                rightBoundary = line.indexOf(nnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                object = new NamedNode(line.substring(leftBoundary, rightBoundary));\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                leftBoundary =\n                    line.indexOf(bnOpeningPrefix, leftBoundary) + bnOpeningPrefixOffset;\n                rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw quadClosingPeriodError(line);\n                }\n                const value = line.substring(leftBoundary, rightBoundary);\n                object = new BlankNode(value);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            case '\"':\n                leftBoundary = leftBoundary + ltOpeningTokenOffset;\n                const objEndIndex = line.lastIndexOf(ltOpeningToken);\n                const literalValue = line\n                    .substring(leftBoundary, objEndIndex)\n                    .replace(ltReservedReplace, ltReservedReplaceFn);\n                leftBoundary = objEndIndex;\n                // dtOrLgBoundary = line.indexOf(dtSplitPrefix, leftBoundary)\n                if (line.substring(leftBoundary, leftBoundary + dtSplitPrefixOffset) ===\n                    dtSplitPrefix) {\n                    // Typed literal\n                    rightBoundary = line.indexOf(nnClosingToken, leftBoundary + dtSplitPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw nnClosingTagError();\n                    }\n                    const value = line.substring(leftBoundary + dtSplitPrefixOffset, rightBoundary);\n                    lang = null;\n                    datatype = new NamedNode(value);\n                    leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                }\n                else if (line.substring(leftBoundary, leftBoundary + lgOpeningPrefixOffset) ===\n                    lgOpeningPrefix) {\n                    rightBoundary = line.indexOf(lgClosingToken, leftBoundary + lgOpeningPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw quadClosingPeriodError(line);\n                    }\n                    lang = line.substring(leftBoundary + lgOpeningPrefixOffset, rightBoundary);\n                    datatype = rdfLangString;\n                    leftBoundary = rightBoundary;\n                }\n                else {\n                    // Implicit literals are strings\n                    lang = null;\n                    datatype = xsdString;\n                    leftBoundary += ltOpeningTokenOffset + 1;\n                }\n                object =\n                    lang === null\n                        ? new Literal(literalValue, \"\", datatype)\n                        : new Literal(literalValue, lang, rdfLangString);\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(leftBoundary));\n        }\n        /*\n         * Parse the graph, if any\n         */\n        if (line[leftBoundary] === nnOpeningToken) {\n            leftBoundary += nnOpeningTokenOffset;\n            rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n            if (rightBoundary === -1) {\n                throw nnClosingTagError();\n            }\n            else if (line.substring(rightBoundary, rightBoundary + nnClosingPostfixOffset) !== nnClosingPostfix) {\n                throw nnClosingTagError();\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            leftBoundary = rightBoundary + nnClosingPostfixOffset;\n            graph = new NamedNode(value);\n        }\n        else if (line[leftBoundary] === bnOpeningToken) {\n            if (line.substring(leftBoundary, leftBoundary + bnOpeningPrefixOffset) !==\n                bnOpeningPrefix) {\n                throw bnOpenTagError();\n            }\n            leftBoundary = leftBoundary + bnOpeningPrefixOffset;\n            rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n            if (rightBoundary === -1) {\n                throw quadClosingPeriodError(line);\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            graph = new BlankNode(value);\n            leftBoundary = rightBoundary + bnClosingTokenOffset;\n        }\n        else {\n            graph = Default;\n        }\n        if (line.substring(leftBoundary) === quadClosingPostfix) {\n            yield new Quad(subject, predicate, object, graph);\n        }\n        else {\n            throw quadClosingPeriodError(line);\n        }\n    }\n}\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{process: (string) → string, extend: (string, string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `process` is given, it is called on regular (non-`@`)\n  // selector properties to provide the actual selector. When `extend`\n  // is given, it is called when a property containing an `&` is\n  // found, and should somehow combine the `&`-template (its first\n  // argument) with the selector (its second argument) to produce an\n  // extended selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {process, extend} = options || {}\n\n    function processSelector(selector) {\n      if (/^@/.test(selector)) return [selector]\n      let selectors = selector.split(\",\")\n      return process ? selectors.map(process) : selectors\n    }\n\n    function render(selectors, spec, target) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0])\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(selectors.map(s => extend ? extend(prop, s) : prop.replace(/&/, s)), value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(isAt[1] == \"keyframes\" ? [prop] : processSelector(prop), value, local)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || isAt && isAt[1] == \"keyframes\") target.push(selectors.join(\",\") + \" {\" + local.join(\" \") + \"}\")\n    }\n\n    for (let prop in spec) render(processSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = null\n\nclass StyleSet {\n  constructor(root) {\n    if (root.adoptedStyleSheets && typeof CSSStyleSheet != \"undefined\") {\n      if (adoptedSet) {\n        root.adoptedStyleSheets = [adoptedSet.sheet].concat(root.adoptedStyleSheets)\n        return root[SET] = adoptedSet\n      }\n      this.sheet = new CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet].concat(root.adoptedStyleSheets)\n      adoptedSet = this\n    } else {\n      this.styleTag = (root.ownerDocument || root).createElement(\"style\")\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst zip = (...args) => ({\n    [Symbol.iterator]() {\n        const iterators = args.map((arg) => arg[Symbol.iterator]());\n        let i = 0;\n        return {\n            next() {\n                const results = iterators.map((iter) => iter.next());\n                if (results.some(({ done }) => done)) {\n                    return { done: true, value: undefined };\n                }\n                else {\n                    const values = results.map(({ value }) => value);\n                    return { done: false, value: [...values, i++] };\n                }\n            },\n        };\n    },\n});\nexports.default = zip;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { openLintPanel } from \"@codemirror/next/lint\"\nimport { EditorState } from \"@codemirror/next/state\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { editableConfig, makeLinter } from \"../lib/taslx/index\"\n\nconst initialValue = `# Welcome to the schema editor!\n# If you're new, you probably want to read\n# the schema language documentation here:\n# http://r1.underlay.org/docs/schemas\n\nnamespace ex http://example.com#\nnamespace ul http://underlay.org/ns/\n\nexpr foo . ex:jskl | .ex:jklfs\n\nmap ex:jksl :: ex:jsl\n  | foo\n  | \"jkfls\" <ex:fjsl>\n  | / ex:99\n  | * ex:si99\n  | {ex:sjlk}\n\n\n\n\n\n\n\n`\n\nconst linter = makeLinter()\nconst extensions = [...editableConfig, linter]\n\nconst state = EditorState.create({\n\tdoc: initialValue,\n\textensions,\n})\n\nconst view = new EditorView({\n\tstate,\n\tparent: document.getElementById(\"editor\"),\n})\n\nopenLintPanel(view)\nview.focus()\n"],"sourceRoot":""}