{"version":3,"sources":["webpack://@underlay/tasl-codemirror/./src/config.ts","webpack://@underlay/tasl-codemirror/./src/error.ts","webpack://@underlay/tasl-codemirror/./src/index.ts","webpack://@underlay/tasl-codemirror/./src/lint.ts","webpack://@underlay/tasl-codemirror/./src/syntax.ts","webpack://@underlay/tasl-codemirror/./node_modules/lezer/dist/index.cjs","webpack://@underlay/tasl-codemirror/./node_modules/lezer/node_modules/lezer-tree/dist/tree.cjs","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/history/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/fold/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/closebrackets/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/autocomplete/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/rectangular-selection/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/goto-line/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/basic-setup/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/commands/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/comment/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/gutter/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/highlight-selection/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/highlight/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/language/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/lint/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/matchbrackets/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/panel/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/rangeset/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/search/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/state/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/text/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/tooltip/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/w3c-keyname/index.es.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/view/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/apg.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/namespace.ts","webpack://@underlay/tasl-codemirror/./node_modules/uuid/dist/esm-browser/rng.js","webpack://@underlay/tasl-codemirror/./node_modules/uuid/dist/esm-browser/regex.js","webpack://@underlay/tasl-codemirror/./node_modules/uuid/dist/esm-browser/validate.js","webpack://@underlay/tasl-codemirror/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/utils.ts","webpack://@underlay/tasl-codemirror/./node_modules/uuid/dist/esm-browser/v4.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/type.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/morphism.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/path.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/mapping.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/value.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/grammar/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/index.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/parse.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/stdlib.ts","webpack://@underlay/tasl-codemirror/./node_modules/lezer-tree/src/tree.ts","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/IRIs.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/DataFactory.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/Store.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/Parse.js","webpack://@underlay/tasl-codemirror/./node_modules/style-mod/src/style-mod.js","webpack://@underlay/tasl-codemirror/./node_modules/ziterable/index.js","webpack://@underlay/tasl-codemirror/webpack/bootstrap","webpack://@underlay/tasl-codemirror/webpack/runtime/compat get default export","webpack://@underlay/tasl-codemirror/webpack/runtime/define property getters","webpack://@underlay/tasl-codemirror/webpack/runtime/hasOwnProperty shorthand","webpack://@underlay/tasl-codemirror/webpack/runtime/make namespace object","webpack://@underlay/tasl-codemirror/./demo/index.js"],"names":["readOnlyConfig","EditorView","editable","of","lineNumbers","defaultHighlightStyle","highlightSelectionMatches","schemaSyntax","editableConfig","basicSetup","keymap","defaultKeymap","commentKeymap","key","preventDefault","run","indentMore","indentLess","errorUnit","Object","freeze","type","lintView","state","cursor","syntaxTree","parseState","slice","from","to","doc","sliceString","namespaces","references","types","defaultTypes","schema","diagnostics","name","push","message","severity","errors","firstChild","isError","namespace","uri","node","getChild","uriPattern","test","namespacePattern","source","identifier","prefix","expression","getType","getURI","uris","getChildren","names","map","length","sourceNode","labelNode","targetNode","label","target","components","ns","value","head","options","none","some","tail","reportChildErrors","nextSibling","entries","filter","sorted","sort","a","c","b","d","defaultNamespaces","fromEntries","parseURI","e","LintError","datatype","component","option","parent","makeSchemaLinter","onChange","linter","view","props","undefined","LezerLanguage","define","parser","configure","indentNodeProp","add","Product","continuedIndent","except","Coproduct","foldNodeProp","subtree","styleTags","Comment","tags","comment","Prefix","TypeName","typeName","Variable","Uri","className","Prop","propertyName","Iri","string","Unit","literal","Literal","Pointer","operator","Optional","bracket","separator","keyword","class","edge","list","languageData","closeBrackets","brackets","indentOnInput","commentTokens","line","defineProperty","exports","Recover","lezerTree","Stack","cx","stack","reducePos","pos","score","buffer","bufferBase","this","_","i","concat","start","action","depth","dPrec","dynamicPrecedence","minRepeatTerm","storeNode","pushState","getGoto","base","count","stateFlag","baseStateID","pop","term","end","size","isReduce","cur","top","index","next","nextEnd","nextState","maxNode","reduce","shift","reused","off","isNode","sim","SimulatedStack","stateSlot","hasAction","force","before","frame","indexOf","nextStates","best","s","result","split","validAction","forceReduce","data","other","dialectID","dialect","flags","rest","offset","goto","StackBufferCursor","maybeNext","Token","TokenGroup","id","input","token","group","groupMask","scan","accEnd","allows","overrides","accept","get","low","high","mid","readToken","decodeArray","Type","Uint16Array","array","out","charCodeAt","stop","digit","prototype","contextual","fallback","extend","verbose","process","env","LOG","stackIDs","cutAt","tree","side","childBefore","childAfter","prevSibling","FragmentCursor","fragments","fragment","safeFrom","safeTo","trees","nextFragment","fr","openStart","openEnd","nextStart","last","children","positions","TreeBuffer","CachedToken","super","arguments","extended","mask","dummyToken","TokenCache","tokens","mainToken","actions","tokenizers","actionIndex","main","tokenizer","updateCachedToken","startIndex","addActions","eofTerm","clear","specialized","specializers","read","set","putAction","pair","Rec","Parse","startPos","context","recovering","nextStackID","nested","nestEnd","nestWrap","topTerm","stacks","advance","finishNested","stopped","stoppedTokens","maybeNest","newStacks","nest","checkNest","advanceStack","tok","startNested","finished","findFinished","stackToTree","strict","console","log","getName","SyntaxError","runRecovery","forceAll","maxRemaining","outer","j","sameState","splice","stackID","cached","nodeAt","match","nodeSet","useNode","Tree","inner","defaultReduce","getActions","localStack","apply","pushStackDedup","restarted","tokenEnd","deadEnd","restart","done","advanceFully","forceBase","insert","recoverByInsert","recoverByDelete","forceFinish","build","create","topID","maxBufferLength","bufferLength","minRepeatType","info","findNested","spec","scanForNestEnd","filterEnd","wrapType","startParse","clip","endToken","NodeType","placeholder","WeakMap","String","fromCodePoint","Dialect","disabled","Parser","DefaultBufferLength","nextStateCache","cachedDialect","version","RangeError","tokenArray","tokenData","nodeNames","repeatNodeCount","nodeProps","setProp","nodeID","prop","deserialize","propSpec","states","Uint32Array","stateData","topTerms","keys","topRules","r","NodeSet","error","skipped","skippedNodes","maxTerm","dialects","dynamicPrecedences","tokenPrecTable","tokenPrec","termNames","l","parseDialect","stringInput","loose","table","groupTag","terminal","slot","flag","max","prev","iPrev","findOffset","config","copy","assign","t","found","find","obj","hasOwnProperty","call","prec","values","part","Uint8Array","NodeProp","TreeCursor","ExternalTokenizer","nextPropID","CachedNode","Error","str","Number","propObj","closedBy","openedBy","noProps","src","Array","isArray","direct","groups","newTypes","newProps","toString","join","JSON","stringify","scope","topNode","moveTo","_tree","TreeNode","enter","leave","mustLeave","isAnonymous","BalanceBranchFactor","balanceRange","_a","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","maxSize","fork","skip","minStart","nodeSize","localSkipped","nodeStart","findBufferSize","endPos","copyToBuffer","localChildren","localPositions","localInRepeat","reverse","bufferStart","buildTree","empty","childString","endIndex","dir","after","pick","_parent","full","findChild","BufferNode","BufferContext","hasChild","nextChild","val","nextSignificantParent","is","child","externalSibling","bufferNode","yieldNode","n","unshift","yieldBuf","yield","sibling","atLastNode","move","cache","ch","outerType","innerType","maxChild","Math","ceil","groupFrom","groupStart","only","containsType","nodes","elt","TreeFragment","open","changes","minGap","fI","nextF","cI","nextC","nextPos","fromA","cut","fFrom","fTo","min","toA","toB","partial","f","StringInput","at","fromHistory","Annotation","isolateHistory","invertedEffects","Facet","historyConfig","combine","configs","combineConfig","minDepth","newGroupDelay","historyField","StateField","HistoryState","tr","facet","fromHist","annotation","item","HistEvent","fromTransaction","undone","updateBranch","addSelection","startState","selection","isolate","Transaction","addMapping","desc","event","time","userEvent","addChanges","cmd","dispatch","historyState","field","undo","redo","undoSelection","redoSelection","histState","branch","effects","mapped","startSelection","selectionsAfter","invert","selections","maxLen","newEvent","newBranch","conc","lastEvent","sels","eq","setSelAfter","popSelection","addMappingToBranch","mapping","mapEvent","extraSelections","mappedChanges","mapDesc","fullMapping","composeDesc","StateEffect","prevTime","prevUserEvent","ranges","isAdjacent","iterChangedRanges","_f","_t","compose","update","annotations","historyKeymap","mac","mapRange","range","mapPos","foldEffect","unfoldEffect","selectedLines","lines","visualLineAt","foldState","Decoration","folded","foldExists","foldWidget","filterFrom","filterTo","onSelection","primary","between","provide","foldInside","maybeEnable","append","codeFolding","foldKeymap","foldable","reconfigure","defaultConfig","placeholderDOM","placeholderText","foldConfig","baseTheme","widget","WidgetType","conf","element","document","createElement","textContent","setAttribute","phrase","title","themeClass","onclick","posAtDOM","foldGutterDefaults","openText","closedText","FoldMarker","GutterMarker","span","$foldPlaceholder","backgroundColor","border","color","borderRadius","margin","padding","defaults","closeBracketEffect","MapMode","skipBracketEffect","closedBracket","startSide","endSide","bracketState","lineStart","lineAt","prevLineStart","effect","definedClosing","closing","charAt","languageDataAt","closeBracketsKeymap","dont","changeByRange","prevChar","nextChar","EditorSelection","scrollIntoView","closedBracketAt","handleOpen","close","closeBefore","anchor","handleClose","_open","moved","primaryIndex","handleSame","allowTriple","isTriple","sliceDoc","charCategorizer","CharCategory","resolve","CompletionContext","explicit","abortListeners","text","expr","search","ensureAnchor","_type","listener","Option","completion","addStart","addEnd","RegExp","ignoreCase","applyCompletion","FuzzyMatcher","pattern","chars","any","precise","byWord","p","char","upper","toUpperCase","toLowerCase","astral","word","first","len","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","prevType","completionConfig","activateOnTyping","override","maxRenderedOptions","fontFamily","overflowY","whiteSpace","maxHeight","listStyle","lineHeight","background_fallback","color_fallback","content","opacity","display","textAlign","position","width","maxWidth","MaxInfoWidth","right","left","verticalAlign","height","borderLeft","$completionMatchedText","textDecoration","$completionDetail","marginLeft","fontStyle","$completionIcon","fontSize","paddingRight","createListBox","ul","li","appendChild","icon","labelElt","detail","createTextNode","detailElt","classList","rangeAroundSelected","total","selected","floor","CompletionTooltip","stateField","placeInfo","measureInfo","write","positionInfo","cState","dom","addEventListener","parentNode","nodeName","exec","requestMeasure","updateSel","prevState","remove","updateSelectedOption","createInfoDialog","opt","hasAttribute","removeAttribute","container","getBoundingClientRect","self","scrollTop","bottom","sel","querySelector","rect","clientHeight","textDirection","Direction","spaceLeft","spaceRight","innerWidth","style","toggle","CompletionDialog","attrs","tooltip","timestamp","makeAttrs","active","hasResult","matcher","boost","cmpOption","sortOptions","selectedValue","completionState","Date","now","CompletionState","random","ActiveSource","every","touchesRange","iA","iB","endA","endB","sameResults","docChanged","setSelectedEffect","setSelected","baseAttrs","dScore","lA","lB","handleUserEvent","handleChange","startCompletionEffect","closeCompletionEffect","setActiveEffect","_tr","ActiveResult","sources","moveCompletionSelection","forward","by","step","offsetHeight","acceptCompletion","RunningQuery","updates","completionPlugin","ViewPlugin","debounceUpdate","running","debounceAccept","composing","startQuery","selectionSet","doesReset","transactions","query","handler","logException","clearTimeout","q","setTimeout","startUpdate","pending","Promise","then","aborted","scheduleAccept","err","updated","current","eventHandlers","fieldMarker","fieldRange","ActiveSnippet","deco","setActive","moveToField","snippetState","selectionInsideField","moveField","precedence","completionKeymap","MaxOff","getPos","posAtCoords","x","clientX","y","clientY","col","ref","coordsAtPos","viewport","round","abs","defaultCharacterWidth","absoluteColumn","tabSize","number","extTag","Symbol","createLineDialog","innerHTML","go","parseInt","isNaN","focus","keyCode","gotoLineKeymap","panel","highlightSpecialChars","fullConfig","canFold","canUnfold","gutter","lineMarker","initialSpacer","domEventHandlers","click","foldGutter","drawSelection","EditorState","closed","handleInsertion","autocompletion","eventFilter","altKey","button","startSel","newStart","newLine","_extend","multiple","startLine","endLine","startOff","endOff","startCol","endCol","leftOver","rectangleFor","rectangleSelectionStyle","rectangularSelection","highlightActiveLine","lintKeymap","setSel","moveSel","how","rangeEnd","cursorByChar","moveByChar","cursorCharLeft","cursorCharRight","cursorCharForward","cursorCharBackward","cursorByGroup","moveByGroup","cursorGroupLeft","cursorGroupRight","cursorGroupForward","cursorGroupBackward","interestingNode","bracketProp","moveBySyntax","newPos","matched","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","moveVertically","cursorLineUp","cursorLineDown","cursorByPage","cursorPageUp","cursorPageDown","moveByLineBoundary","moveToLineBoundary","space","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineStart","cursorLineEnd","toMatchingBracket","matching","cursorMatchingBracket","selectMatchingBracket","extendSel","goalColumn","selectByChar","selectCharLeft","selectCharRight","selectCharForward","selectCharBackward","selectByGroup","selectGroupLeft","selectGroupRight","selectGroupForward","selectGroupBackward","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineStart","selectLineEnd","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","selectAll","selectLine","selectedLineBlocks","selectParentSyntax","simplifySelection","deleteBy","towards","deleteByChar","codePoint","drop","getIndentUnit","findClusterBreak","deleteCodePointBackward","deleteCodePointForward","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","cat","nextCat","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","lineEnd","deleteTrailingWhitespace","iter","lineBreak","trailing","splitLine","transposeChars","blocks","upto","moveLine","block","nextLine","moveLineUp","moveLineDown","copyLine","copyLineUp","copyLineDown","deleteLine","insertNewline","replaceSelection","insertNewlineAndIndent","explode","isBetweenBrackets","IndentContext","simulateBreak","simulateDoubleBreak","indent","getIndentation","indentString","lineIndent","changeBySelectedLine","atLine","changeSet","indentSelection","overrideIndentation","norm","indentUnit","keep","emacsStyleKeymap","standardKeymap","toggleLineComment","toggleLineCommentWithOption","CommentOption","Toggle","lineComment","OnlyComment","lineUncomment","OnlyUncomment","toggleBlockComment","toggleBlockCommentWithOption","blockComment","blockUncomment","getConfig","BlockCommenter","LineCommenter","selectionCommented","isSelectionCommented","isRangeCommented","startText","endText","textBefore","SearchMargin","textAfter","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","lineCommentToken","linesAcrossSelection","linesAcrossRange","getLinesInRange","column","isRangeLineSkipped","isLineSkipped","minCol","posAfter","marginLen","_state","Infinity","isRangeLineDiscarded","constructor","_view","elementClass","mapMode","renderEmptyElements","elementStyle","markers","updateSpacer","activeGutters","gutters","$gutters","boxSizing","borderRight","$gutter","flexDirection","flexShrink","overflow","$gutterElement","minWidth","unfixGutters","gutterView","fixed","SingleGutterView","scrollDOM","insertBefore","contentDOM","updateGutters","contexts","UpdateContext","viewportLines","BlockType","finish","minHeight","contentHeight","change","heightChanged","viewportChanged","known","g","PluginField","offsetWidth","localMarkers","forLine","above","elements","newElt","GutterElement","compare","sameMarkers","removeChild","spacer","visualLineAtHeight","cssText","prevMarkers","eltClass","cssClass","marginTop","lastChild","cls","m","toDOM","lineNumberMarkers","lineNumberConfig","formatNumber","exists","NumberMarker","lineNumberGutter","others","maxLineNumber","defaultTheme","activeLineHighlighter","lineDeco","attributes","decorations","getDeco","lastLineStart","v","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","ext","matchHighlighter","matchDeco","mainMatchDeco","check","wordAt","trim","visibleRanges","nextTagID","Tag","modified","tag","mod","Modifier","nextModifierID","instances","mods","permute","byName","pieces","mode","parse","rule","Rule","ruleNodeProp","highlightStyleProp","stylings","highlightStyle","specs","styling","Styling","module","modSpec","treeHighlighter","language","TreeHighlighter","nodeStack","classStack","inheritStack","markCache","getTree","buildDeco","curClass","builder","flush","mark","iterate","inheritedClass","opaque","matchContext","st","_s","backTo","heading","punctuation","meta","docComment","variableName","labelName","macroName","docString","character","integer","float","bool","regexp","escape","url","null","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","quote","emphasis","strong","link","monospace","inserted","deleted","changed","invalid","documentMeta","processingInstruction","definition","defineModifier","constant","function","standard","local","special","fontWeight","languageDataProp","defineLanguageFacet","baseData","Language","extraExtensions","setState","EditorParseContext","work","takeTree","LanguageState","extension","ParseWorker","languageDataFacetAt","timeout","isTop","hasNested","lang","DocInput","cursorPos","prevString","stringStart","syncTo","skippedUntil","endTime","newState","fromB","startLen","cutFragments","until","requestIdle","window","requestIdleCallback","callback","cancelIdle","cancelIdleCallback","working","bind","scheduleWork","updateViewport","reset","takeSkipped","deadline","timeRemaining","indentService","cols","ts","service","ast","scanPos","strategy","indentStrategy","TreeIndentContext","syntaxIndentation","_b","overriden","countColumn","delimitedStrategy","ignoreClosed","topIndent","textAfterPos","atBreak","isParent","delimitedIndent","align","units","closedAt","aligned","openToken","openLine","isSkipped","bracketedAligned","baseIndent","flatIndent","matchExcept","rules","newDoc","newSelection","foldService","syntaxFolding","SelectedDiagnostic","diagnostic","LintState","findDiagnostic","maybeEnableLint","lintState","activeMark","lintTooltip","setDiagnostics","setDiagnosticsEffect","togglePanel","movePanelSelection","selPos","DiagnosticWidget","LintPanel","stackStart","stackEnd","renderDiagnostic","openLintPanel","closeLintPanel","nextDiagnostic","LintDelay","lintTime","onmousedown","PanelItem","items","tabIndex","moveSelection","selectedIndex","contains","needsSync","newSelectedItem","_start","_end","sync","domPos","rm","underline","btoa","$diagnostic","$diagnosticAction","font","$lintRange","backgroundPosition","backgroundRepeat","backgroundImage","$lintPoint","borderBottom","borderBottomColor","background","$matchingBracket","$nonmatchingBracket","DefaultBrackets","bracketMatchingConfig","afterCursor","maxScanDistance","matchingMark","nonmatchingMark","bracketMatchingUnique","matchBrackets","bracketMatching","matchingNodes","byProp","matches","sub","_pos","firstToken","matchMarkedBrackets","tokenType","startCh","startToken","iterRange","distance","basePos","matchPlainBrackets","panelConfig","topContainer","bottomContainer","panels","panelPlugin","showPanel","getPanel","plugin","PanelGroup","panelClass","mount","syncClasses","scrollMargin","classes","syncDOM","curDOM","themeClasses","$panels","borderTop","RangeValue","Range","point","cmpRange","Far","Chunk","maxPoint","startAt","arr","lo","hi","diff","findIndex","newFrom","newTo","curFrom","curTo","RangeSet","chunkPos","chunk","nextLayer","chunkEnd","updateSpec","LayerCursor","spill","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPoint","minPointSize","sharedChunks","inA","Map","shared","Set","findSharedChunks","sideA","SpanCursor","sideB","iterGaps","iterator","activeForPoint","chunkStart","lastFrom","lastTo","setMaxPoint","newArrays","finishChunk","layer","rank","gotoInner","has","heap","heapBubble","childIndex","activeTo","activeRank","minActive","pointFrom","pointRank","removeActive","findMinIndex","trackOpen","trackExtra","nextVal","addActive","startA","startB","dPos","clipEnd","comparePoint","sameValues","compareRange","foundPos","basicNormalize","normalize","SearchCursor","bufferPos","peek","fromCharCode","code","Query","replace","caseInsensitive","setQuery","searchState","SearchState","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","highlight","valid","searchCommand","openSearchPanel","findNextMatch","findNext","maybeAnnounceMatch","findPrevInRange","findPrevious","selectMatches","replaceNext","replaceAll","buildPanel","select","searchExtensions","closeSearchPanel","root","activeElement","searchKeymap","searchField","onchange","onkeyup","replaceField","caseField","checked","updateQuery","onkeydown","runScopeHandlers","shiftKey","Break","DefaultSplit","ChangeDesc","sections","ins","posA","posB","individual","iterChanges","composeSets","mapSet","assoc","Simple","TrackDel","TrackBefore","TrackAfter","ChangeSet","_toB","resultSections","resultInserted","filteredSections","SectionIter","addSection","addInsert","filtered","parts","toJSON","lineSep","insText","insLen","json","forceJoin","setA","setB","mkSet","len2","sectionLen","insB","textBit","forward2","SelectionRange","level","which","fromJSON","normalized","bidiLevel","goal","checkSelection","docLength","nextID","compareInput","isStatic","default","sameArray","static","FacetProvider","deps","maybePrec","compute","computeN","dependencies","addresses","getter","idx","multi","depDoc","depSel","depAddrs","dep","addr","ensureAddr","newVal","oldVal","compareArray","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","oldAddr","address","dynAddr","getAddr","createF","updateF","compareF","facets","oldIdx","maybeIndex","Prec","PrecExtension","TaggedExtension","tagExtension","Configuration","replacements","dynamicSlots","staticValues","statusTemplate","oldState","fields","seen","tagsSeen","getOwnPropertySymbols","flatten","dynamicSlot","status","applying","allowMultipleSelections","lineSeparator","changeFilter","transactionFilter","transactionExtender","AnnotationType","StateEffectType","_doc","newLength","applyTransaction","ann","joinRanges","mergeTransaction","sequential","mapForA","mapForB","mapEffects","resolveTransactionInner","docSize","reconf","single","asArray","resolveTransaction","seq","extenders","extendTransaction","back","invertedDesc","filters","filterTransaction","addToHistory","nonASCIISingleCaseWordChar","wordChar","require","toText","result1","newChanges","newMapped","mapBy","extensions","configuration","staticFacet","asSingle","phrases","provider","wordChars","Space","hasWordChar","Word","Other","isExtendingChar","isRegionalIndicator","nextClusterBreak","surrogateLow","surrogateHigh","codePointAt","codePointSize","countBefore","prevClusterBreak","code0","code1","findColumn","Text","lineCache","cacheLine","lineInner","decompose","TextNode","iterA","RawTextCursor","iterB","offA","offB","strA","strB","eqContent","PartialTextCursor","LineCursor","iterLines","textLength","TextLeaf","lineCachePos","isLine","Line","sliceText","newLen","appendText","lineLengthTo","lineLengthFrom","lastLineLength","firstLineLength","lengthDiff","chunkLength","maxLength","minLength","chunked","currentLength","currentChunk","childLength","offsets","limit","LineContent","contextStart","strings","tooltipPlugin","inView","measureReq","readMeasure","writeMeasure","tooltips","showTooltip","tooltipViews","tp","createTooltip","views","tip","tooltipView","maybeMeasure","editor","innerHeight","measured","tView","strictSide","positioned","$tooltip","zIndex","HoverPlugin","setHover","lastMouseMove","hoverTimeout","mouseInside","checkHover","mouseenter","mouseleave","mousemove","lastMove","timeStamp","isOverRange","nodeType","isInTooltip","removeEventListener","createRange","fromDOM","domAtPos","setEnd","setStart","rects","getClientRects","hoverTooltip","hoverState","hideOnChange","nFrom","8","9","10","12","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","44","45","46","59","61","91","92","106","107","108","109","110","111","144","145","160","161","162","163","164","165","173","186","187","188","189","190","191","192","219","220","221","222","229","48","49","50","51","52","53","54","55","56","57","chrome","navigator","userAgent","safari","vendor","gecko","platform","ie","brokenModifierNames","nav","documentElement","ie_edge","ie_upto10","ie_11up","webkit","browser","ie_version","documentMode","gecko_version","chrome_version","ios","android","webkit_version","getSelection","hasSelection","anchorNode","clientRectsFor","tempRange","nodeValue","isEquivalentPosition","targetOff","scanFor","domIndex","previousSibling","maxOffset","childNodes","flattenRect","windowRect","win","DOMSelection","anchorOffset","focusNode","focusOffset","domSel","scratchRange","preventScrollSupported","focusPreventScroll","scrollLeft","ownerDocument","preventScroll","DOMPos","ContentView","dirty","editorView","posBefore","posAtStart","breakAfter","_side","track","reuseDOM","written","syncNodeInto","_dom","bias","fromI","fromStart","toI","toEnd","domBoundsAround","startDOM","endDOM","andParent","markParentsDirty","childList","cmView","markDirty","setParent","_rec","_event","ChildCursor","childCursor","findPos","none$1","InlineView","_other","TextView","textDOM","setDOM","createDOM","_from","_to","textCoords","MarkView","tagName","mergeInlineChildren","sliceInlineChildren","inlineDOMAtPos","coordsInChildren","WidgetView","customView","updateDOM","contentEditable","ignoreEvent","CompositionView","elts","toOff","fromOff","dLen","merge","become","replaceChildren","getSide","joinInlineInto","coordsAt","combineAttrs","attrsEq","keysA","keysB","updateAttrs","_widget","MarkDecoration","PointDecoration","getInclusive","LineDecoration","estimatedHeight","isReplace","WidgetRange","WidgetBefore","WidgetAfter","inclusiveStart","inclusiveEnd","inclusive","addRange","theme","strs","darkTheme","baseThemeID","expandThemeClasses","buildTheme","template","selector","$","outline_fallback","outline","$scroller","alignItems","overflowX","$content","flexGrow","caretColor","$line","$selectionLayer","contain","$selectionBackground","$cursorLayer","pointerEvents","animation","visibility","$cursor","borderLeftColor","$placeholder","$button","$textfield","LineClass","LineView","prevAttrs","takeDeco","transferDOM","setDeco","none$2","childPos","hack","cmIgnore","totalWidth","charWidth","docView","BlockWidgetView","_takeDeco","posAtEnd","ContentBuilder","curLine","breakAtStart","textOff","posCovered","getLine","take","wrapMarks","buildText","addWidget","NullWidget","addLineDeco","LTR","RTL","dec","LowTypes","ArabicTypes","BidiRE","BidiSpan","order","maybe","computeOrder","direction","trivialOrder","prevStrong","beforeL","rtl","movedOver","moveVisually","spanI","indexForward","nextIndex","nextSpan","wrappingWhiteSpace","HeightOracle","lineWrapping","heightSamples","lineLength","lineHeights","newHeight","h","knownHeights","MeasuredHeights","heights","BlockInfo","QueryType","HeightMap","oracle","oldDoc","me","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","_height","_value","blockAt","_force","more","setHeight","outdated","collapsed","widgetHeight","HeightMapGap","heightForLine","firstLine","lastLine","ByHeight","heightForGap","rightTop","rightOffset","subQuery","ByPos","forEachLine","rightStart","balanced","decomposeLeft","mergeGaps","decomposeRight","rebalance","around","covering","writtenTo","isCovered","heightRelevant","addBlock","blankContent","gap","enterLine","ensureLine","DecorationComparator","none$3","clickAddsSelectionRange","dragMovesSelection","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","exception","onerror","PluginFieldProvider","scrollMargins","nextPluginID","viewPlugin","handlers","pluginDecorations","PluginInstance","dummy","destroy","editorAttributes","contentAttributes","styleModule","ChangedRange","dI","rI","addToSet","ViewUpdate","changedRanges","hasFocus","inputState","notifiedFocused","LineGap","gA","gB","wrapping","LineGapWidget","vertical","ViewState","pixelViewport","paddingTop","paddingBottom","contentWidth","heightOracle","heightMap","scrollTo","printing","mustEnforceCursorAssoc","applyChanges","setDoc","getViewport","lineGaps","ensureLineGaps","lineGapDeco","draw","computeVisibleRanges","newDeco","contentChanges","heightChanges","extendWithRanges","comp","heightRelevantDecoChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLineGaps","mapLineGaps","repeated","getComputedStyle","scrollHeight","scrollWidth","clientWidth","parentRect","host","visiblePixelRange","dTop","dBottom","measureVisibleLineHeights","refresh","mustRefresh","measureTextSize","enforceCursorAssoc","Viewport","newTop","newBottom","gaps","viewFrom","viewTo","structure","lineStructure","findPosition","gapTo","gapFrom","gapSize","findFraction","ratio","same","editorTop","dist","counted","none$4","DocView","viewports","compositionDeco","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","updateInner","updateDeco","textNode","nearbyTextNode","cView","nearest","CompositionWidget","computeCompositionDeco","forceSelection","prevDeco","decoDiff","DecorationComparator$1","findChangedDeco","pointerSel","updateSelection","oldLength","updateChildren","observer","ignore","viewState","replaceRange","breakAtEnd","fromPointer","mayControlSelection","nextToUneditable","nextTo","collapse","cursorBidiLevel","removeAllRanges","modify","domView","rootView","localPosFromDOM","measure","visible","BlockGapWidget","computeBlockGapDeco","pluginField","mLeft","mRight","mTop","mBottom","margins","defaultView","bounding","body","moveX","moveY","scrollBy","scrollRectIntoView","MaxNodeHeight","remaining","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","halfLine","defaultLineHeight","bounced","blockAtHeight","elementFromPoint","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","posFromDOM","spans","bidiSpans","InputState","lastKeyCode","lastKeyTime","lastSelectionOrigin","lastSelectionTime","scrollHandlers","registeredEvents","customHandlers","compositionEndedAt","mouseSelection","eventBelongsToEditor","ignoreDuringComposition","mustFlushObserver","forceFlush","runCustomHandlers","ensureHandlers","origin","defaultPrevented","scroll","MouseSelection","startEvent","up","metaKey","ctrlKey","addsSelectionRange","dragMove","dragMovesSelection$1","dragging","rangeCount","getRangeAt","isInPrimarySelection","buttons","bubbles","brokenClipboardAPI","doPaste","byLine","lastLinewiseCopy","rangeForClick","linePos","groupAt","keydown","macCtrl","mustCapture","setSelectionOrigin","touchdown","touchmove","mousedown","makeStyle","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","getClickType","startRange","basicMouseSelection","startMouseSelection","insideY","inside","findPositionSide","dragstart","dataTransfer","setData","effectAllowed","dropPos","getData","del","paste","clipboardData","capturePaste","forceClearComposition","linewise","copiedRange","clearData","selectionEnd","selectionStart","captureCopy","blur","beforeprint","compositionstart","compositionupdate","compositionend","observeOptions","characterData","characterDataOldValue","useCharData","DOMObserver","onScrollChanged","ignoreSelection","delayedFlush","queue","scrollTargets","intersection","intersecting","parentCheck","MutationObserver","mutations","mut","removedNodes","oldValue","flushSoon","onCharData","prevValue","onSelectionChange","onScroll","IntersectionObserver","listenForScroll","intersectionRatio","createEvent","observe","disconnect","takeRecords","clearSelection","records","newSel","typeOver","record","readMutation","rec","ignoreMutation","curView","DOMReader","points","findPointBefore","readNode","nextView","isBlockElement","fromView","overrideDOMText","readRange","findPointIn","DOMPoint","dispatchKey","cancelable","down","KeyboardEvent","dispatchEvent","plugins","editorAttrs","contentAttrs","bidiCache","updateState","measureScheduled","measureRequests","_dispatch","bounds","selPoints","selectionPoints","reader","selectionFromPoints","preferredPos","preferredSide","minLen","findDiff","iHead","iAnchor","isCollapsed","selectionCollapsed","applyDOMChange","runScrollHandlers","mountStyles","resizeDebounce","handleResize","redrawn","CachedOrder","updatePlugins","styleModules","prevSpecs","newPlugins","cancelAnimationFrame","measuring","warn","BadMeasure","scrollPosIntoView","spellcheck","contenteditable","role","request","requestAnimationFrame","takeField","inst","readMeasured","ensureTop","lineAtHeight","initial","byGroup","includeWrap","coords","editorRect","lineView","startCoords","resolvedGoal","startY","extra","goalCol","otherLine","MaxBidiLine","entry","dark","given","querySelectorAll","lastDir","currentPlatform","modifiers","keymaps","handleKeyEvents","runHandlers","bindings","buildKeymap","storedPrefix","bound","isPrefix","checkPrefix","command","scopeObj","k","alt","ctrl","normalizeKeyName","commands","ourObj","binding","maps","keyName","isChar","fallthrough","runFor","baseName","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelectionPlugin","hideNativeSelection","Piece","fromClass","rangePieces","cursors","readPos","drawSel","selectionLayer","cursorLayer","setBlinkRate","animationDuration","confChanged","geometryChanged","animationName","ltr","contentRect","getBase","lineStyle","leftSide","paddingLeft","rightSide","visualStart","visualEnd","wrappedLine","drawForLine","piece","selectionClass","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","docLine","spanFrom","spanTo","measureRange","prim","measureCursor","themeSpec","primaryCursorClass","cursorClass","Specials","Names","0","7","11","8203","8204","8205","8206","8207","8232","8233","65279","65532","_supportsTabSize","supportsTabSize","styles","MozTabSize","UnicodeRegexpSupport","unicode","specialCharConfig","render","specialChars","addSpecialChars","replaceTabs","specialCharPlugin","tabStyle","decorationCache","recompute","confChange","getDecorationsFor","TabWidget","SpecialCharWidget","ph","placeHolder","custom","tab","Placeholder","wrap","__test","APG","Record","Variant","reference","product","coproduct","identity","dereference","projection","injection","tuple","CASE","path","getRandomValues","crypto","msCrypto","rnds8","rng","uuid","byteToHex","substr","keyMap","forEntries","object","getKeys","getKeyIndex","mapKeys","signalInvalidType","rootId","buf","rnds","TypeError","getID","BlankNode","freezeType","forType","includes","isTypeEqual","A","B","keyA","keyB","isTypeAssignable","unify","unifyComponents","unifyOptions","applyExpressions","S","expressions","slots","cases","applyCases","validateExpressions","getValues","instance","termType","validateMapping","M","T","fold","mapExpressions","delta","TI","SI","indices","imageValue","pullback","k1","k2","pullbackComponents","validateValue","forValue","leaf","_lezer","spec_identifier","__proto__","parseType","printSyntax","xsd","boolean","double","date","dateTime","base64Binary","rdf","decimal","dateTimeStamp","hexBinary","nil","langString","_blankNodeCounter","NamedNode","equals","DefaultGraph","Default","fromId","lastIndexOf","toId","Quad","subject","predicate","graph","namedNode","iri","blankNode","variable","languageOrDataType","defaultGraph","quad","SPO","POS","OSP","Store","quads","sizeCache","graphMap","ids","entities","blankNodeIndex","addQuads","subjects","predicates","objects","index0","key0","key1","key2","existed","index1","index2","delete","rotation","generateIndex1","value0","generateIndex2","value1","makeQuad","value2","entity0","entity1","entity2","name0","name1","name2","countInIndex1","graphIndex","newGraphIndex","args","getGraphIndex","o","addToIndex","addQuad","removeFromIndex","stream","removeQuad","removeMatches","graphId","getGraphId","graphs","getGraphIndices","generateIndex","getIds","countInIndex","loopBy2Keys","loopByKey1","loopByKey0","unique","suggestedName","nnClosingTagError","unexpectedCharError","quadClosingPeriodError","nnOpeningToken","nnOpeningTokenOffset","nnClosingPostfix","nnClosingPostfixOffset","bnOpeningPrefix","bnOpeningPrefixOffset","bnClosingToken","bnClosingTokenOffset","ltOpeningTokenOffset","ltReservedReplace","ltReservedReplaceFn","lgOpeningPrefixOffset","dtSplitPrefix","dtSplitPrefixOffset","rightBoundary","leftBoundary","namedNodeValue","substring","blankNodeValue","objEndIndex","literalValue","COUNT","for","SET","globalThis","StyleModule","processSelector","selectors","isAt","modules","StyleSet","adoptedSet","adoptedStyleSheets","CSSStyleSheet","sheet","styleTag","insertRule","getRules","iterators","arg","results","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","__esModule","enumerable","toStringTag","getElementById"],"mappings":"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","file":"index.min.js","sourcesContent":["import { basicSetup } from \"@codemirror/next/basic-setup\"\nimport {\n\tdefaultKeymap,\n\tindentMore,\n\tindentLess,\n} from \"@codemirror/next/commands\"\nimport { EditorView, keymap } from \"@codemirror/next/view\"\nimport { commentKeymap } from \"@codemirror/next/comment\"\n\nimport { Extension } from \"@codemirror/next/state\"\n\nimport { lineNumbers } from \"@codemirror/next/gutter\"\nimport { highlightSelectionMatches } from \"@codemirror/next/highlight-selection\"\nimport { defaultHighlightStyle } from \"@codemirror/next/highlight\"\n\nimport { schemaSyntax } from \"./syntax.js\"\n\nexport const readOnlyConfig: Extension[] = [\n\tEditorView.editable.of(false),\n\tlineNumbers(),\n\tdefaultHighlightStyle,\n\thighlightSelectionMatches(),\n\tschemaSyntax,\n]\n\nexport const editableConfig: Extension[] = [\n\tbasicSetup,\n\tschemaSyntax,\n\tkeymap([\n\t\t...defaultKeymap,\n\t\t...commentKeymap,\n\t\t{\n\t\t\tkey: \"Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentMore,\n\t\t},\n\t\t{\n\t\t\tkey: \"Shift-Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentLess,\n\t\t},\n\t]),\n]\n","import { APG } from \"@underlay/apg\"\n\nexport const errorUnit: APG.Unit = Object.freeze({ type: \"unit\" })\n","export * from \"@codemirror/next/state\"\nexport * from \"@codemirror/next/view\"\n\nexport * from \"./syntax.js\"\nexport * from \"./lint.js\"\nexport * from \"./config.js\"\nexport * from \"./error.js\"\n","import { EditorState, Extension } from \"@codemirror/next/state\"\nimport { Diagnostic, linter } from \"@codemirror/next/lint\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { syntaxTree } from \"@codemirror/next/language\"\nimport { SyntaxNode, TreeCursor } from \"lezer-tree\"\n\nimport { APG, ns } from \"@underlay/apg\"\n\nimport {\n\tdefaultTypes,\n\tdefaultNamespaces,\n\tLintError,\n\tnamespacePattern,\n\tParseState,\n\tparseURI,\n\turiPattern,\n} from \"@underlay/tasl-lezer\"\nimport { errorUnit } from \"./error.js\"\n\nexport interface UpdateProps {\n\terrors: number\n\tstate: EditorState\n\tschema: APG.Schema\n\tnamespaces: Record<string, string>\n}\n\nexport function lintView({\n\tstate,\n}: EditorView): UpdateProps & { diagnostics: Diagnostic[] } {\n\tconst cursor = syntaxTree(state).cursor()\n\n\tconst parseState: ParseState = {\n\t\tslice: ({ from, to }) => state.doc.sliceString(from, to),\n\t\tnamespaces: {},\n\t\treferences: [],\n\t\ttypes: { ...defaultTypes },\n\t\tschema: {},\n\t}\n\n\tconst diagnostics: Diagnostic[] = []\n\n\tif (cursor.name === \"Schema\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tdiagnostics.push({\n\t\t\tfrom: cursor.from,\n\t\t\tto: cursor.to,\n\t\t\tmessage: \"Syntax error: invalid document\",\n\t\t\tseverity: \"error\",\n\t\t})\n\t\treturn { errors: 1, state, schema: {}, namespaces: {}, diagnostics }\n\t}\n\n\tdo {\n\t\tif (cursor.type.isError) {\n\t\t} else if (cursor.type.name === \"Namespace\") {\n\t\t\tlet namespace = \"\"\n\n\t\t\tconst uri = cursor.node.getChild(\"Uri\")\n\t\t\tif (uri !== null) {\n\t\t\t\tnamespace = parseState.slice(uri)\n\t\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\t\tconst { from, to } = uri\n\t\t\t\t\tconst message = `Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\t\tconst { from, to } = uri\n\t\t\t\t\tconst message = \"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst prefix = parseState.slice(identifier)\n\t\t\t\tif (prefix in parseState.namespaces) {\n\t\t\t\t\tconst { from, to } = identifier\n\t\t\t\t\tconst message = `Duplicate namespace: ${prefix}`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tparseState.namespaces[prefix] = namespace\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Type\") {\n\t\t\tconst identifier = cursor.node.getChild(\"TypeName\")\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst type =\n\t\t\t\texpression === null\n\t\t\t\t\t? errorUnit\n\t\t\t\t\t: getType(parseState, diagnostics, expression)\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst name = parseState.slice(identifier)\n\t\t\t\tif (name in parseState.types) {\n\t\t\t\t\tconst { from, to } = identifier\n\t\t\t\t\tconst message = `Invalid type declaration: type ${name} has already been declared`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tparseState.types[name] = type\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Class\") {\n\t\t\tconst node = cursor.node.getChild(\"Uri\")\n\t\t\tif (node !== null) {\n\t\t\t\tconst uri = getURI(parseState, diagnostics, node)\n\t\t\t\tif (uri !== null) {\n\t\t\t\t\tif (uri in parseState.schema) {\n\t\t\t\t\t\tconst { from, to } = node\n\t\t\t\t\t\tconst message = `Invalid class declaration: class ${uri} has already been declared`\n\t\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\t\t\t\tparseState.schema[uri] =\n\t\t\t\t\t\t\texpression === null\n\t\t\t\t\t\t\t\t? errorUnit\n\t\t\t\t\t\t\t\t: getType(parseState, diagnostics, expression)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Edge\") {\n\t\t\tconst uris = cursor.node.getChildren(\"Uri\")\n\t\t\tconst names = uris.map((uri) => getURI(parseState, diagnostics, uri))\n\t\t\tif (uris.length === 3 && names.length === 3) {\n\t\t\t\tconst [sourceNode, labelNode, targetNode] = uris\n\t\t\t\tconst [source, label, target] = names\n\t\t\t\tif (label in parseState.schema) {\n\t\t\t\t\tconst { from, to } = labelNode\n\t\t\t\t\tconst message = `Invalid edge declaration: class ${label} has already been declared`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\n\t\t\t\tif (!(source in parseState.schema)) {\n\t\t\t\t\tconst { from, to } = sourceNode\n\t\t\t\t\tparseState.references.push({ from, to, key: source })\n\t\t\t\t}\n\n\t\t\t\tif (!(target in parseState.schema)) {\n\t\t\t\t\tconst { from, to } = targetNode\n\t\t\t\t\tparseState.references.push({ from, to, key: target })\n\t\t\t\t}\n\n\t\t\t\tconst components: Record<string, APG.Type> = {\n\t\t\t\t\t[ns.source]: { type: \"reference\", value: source },\n\t\t\t\t\t[ns.target]: { type: \"reference\", value: target },\n\t\t\t\t}\n\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\t\tif (expression !== null) {\n\t\t\t\t\tcomponents[ns.value] = getType(parseState, diagnostics, expression)\n\t\t\t\t}\n\n\t\t\t\tparseState.schema[label] = { type: \"product\", components }\n\t\t\t}\n\t\t} else if (cursor.type.name === \"List\") {\n\t\t\tconst node = cursor.node.getChild(\"Uri\")\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst head =\n\t\t\t\texpression === null\n\t\t\t\t\t? errorUnit\n\t\t\t\t\t: getType(parseState, diagnostics, expression)\n\n\t\t\tif (node !== null) {\n\t\t\t\tconst uri = getURI(parseState, diagnostics, node)\n\t\t\t\tif (uri in parseState.schema) {\n\t\t\t\t\tconst { from, to } = node\n\t\t\t\t\tconst message = `Invalid list declaration: class ${uri} has already been declared`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\n\t\t\t\tparseState.schema[uri] = {\n\t\t\t\t\ttype: \"coproduct\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t[ns.none]: { type: \"unit\" },\n\t\t\t\t\t\t[ns.some]: {\n\t\t\t\t\t\t\ttype: \"product\",\n\t\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\t\t[ns.head]: head,\n\t\t\t\t\t\t\t\t[ns.tail]: { type: \"reference\", value: uri },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treportChildErrors(diagnostics, cursor)\n\t} while (cursor.nextSibling())\n\n\tconst namespaces: [string, string][] = Object.entries(\n\t\tparseState.namespaces\n\t).filter(([_, base]) => base !== null) as [string, string][]\n\n\tfor (const { from, to, key } of parseState.references) {\n\t\tif (key in parseState.schema) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tconst message = `Reference error: class ${key} is not defined`\n\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t}\n\t}\n\n\tconst sorted = diagnostics.sort(({ from: a, to: c }, { from: b, to: d }) =>\n\t\ta < b ? -1 : b < a ? 1 : c < d ? -1 : d < c ? 1 : 0\n\t)\n\n\treturn {\n\t\terrors: sorted.length,\n\t\tstate: state,\n\t\tschema: parseState.schema,\n\t\tnamespaces: { ...defaultNamespaces, ...Object.fromEntries(namespaces) },\n\t\tdiagnostics: sorted,\n\t}\n}\n\nexport const makeSchemaLinter = (\n\tonChange?: (props: UpdateProps) => void\n): Extension =>\n\tlinter((view: EditorView) => {\n\t\tconst { diagnostics, ...props } = lintView(view)\n\t\tif (onChange !== undefined) {\n\t\t\tonChange(props)\n\t\t}\n\t\treturn diagnostics\n\t})\n\nfunction getURI(\n\tstate: ParseState,\n\tdiagnostics: Diagnostic[],\n\tnode: SyntaxNode\n): string {\n\ttry {\n\t\treturn parseURI(state, node)\n\t} catch (e) {\n\t\tif (e instanceof LintError) {\n\t\t\tconst { from, to, message, value } = e\n\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn value\n\t\t} else {\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\n// Variable | Optional | Reference | Unit | Iri | Literal | Product | Coproduct\nfunction getType(\n\tstate: ParseState,\n\tdiagnostics: Diagnostic[],\n\tnode: SyntaxNode\n): APG.Type {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.types) {\n\t\t\treturn state.types[value]\n\t\t} else {\n\t\t\tconst { from, to } = node\n\t\t\tconst message = `Type ${value} is not defined`\n\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn errorUnit\n\t\t}\n\t} else if (node.name === \"Optional\") {\n\t\tconst expression = node.getChild(\"Expression\")\n\t\tconst type =\n\t\t\texpression === null ? errorUnit : getType(state, diagnostics, expression)\n\t\treturn {\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: { [ns.none]: { type: \"unit\" }, [ns.some]: type },\n\t\t}\n\t} else if (node.name === \"Reference\") {\n\t\tconst uri = node.getChild(\"Uri\")\n\t\tif (uri === null) {\n\t\t\treturn errorUnit\n\t\t}\n\n\t\tconst key = getURI(state, diagnostics, uri)\n\t\tif (!(key in state.schema)) {\n\t\t\tconst { from, to } = uri\n\t\t\tstate.references.push({ from, to, key })\n\t\t}\n\n\t\treturn { type: \"reference\", value: key }\n\t} else if (node.name === \"Unit\") {\n\t\treturn { type: \"unit\" }\n\t} else if (node.name === \"Iri\") {\n\t\treturn { type: \"uri\" }\n\t} else if (node.name === \"Literal\") {\n\t\tconst uri = node.getChild(\"Uri\")\n\t\tif (uri === null) {\n\t\t\treturn errorUnit\n\t\t}\n\t\tconst datatype = getURI(state, diagnostics, uri)\n\t\treturn { type: \"literal\", datatype }\n\t} else if (node.name === \"Product\") {\n\t\tconst components: Record<string, APG.Type> = {}\n\t\tfor (const component of node.getChildren(\"Component\")) {\n\t\t\tconst uri = component.getChild(\"Uri\")\n\t\t\tif (uri === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, diagnostics, uri)\n\t\t\tif (key in components) {\n\t\t\t\tconst { from, to } = uri\n\t\t\t\tconst message = `Duplicate product component key`\n\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t}\n\n\t\t\tconst expression = component.getChild(\"Expression\")\n\t\t\tcomponents[key] =\n\t\t\t\texpression === null\n\t\t\t\t\t? errorUnit\n\t\t\t\t\t: getType(state, diagnostics, expression)\n\t\t}\n\n\t\treturn { type: \"product\", components }\n\t} else if (node.name === \"Coproduct\") {\n\t\tconst options: Record<string, APG.Type> = {}\n\t\tfor (const option of node.getChildren(\"Option\")) {\n\t\t\tconst uri = option.getChild(\"Uri\")\n\t\t\tif (uri === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, diagnostics, uri)\n\t\t\tif (key in options) {\n\t\t\t\tconst { from, to } = uri\n\t\t\t\tconst message = `Duplicate coproduct option key`\n\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t}\n\n\t\t\tconst expression = option.getChild(\"Expression\")\n\t\t\toptions[key] =\n\t\t\t\texpression === null\n\t\t\t\t\t? { type: \"unit\" }\n\t\t\t\t\t: getType(state, diagnostics, expression)\n\t\t}\n\n\t\treturn { type: \"coproduct\", options }\n\t} else {\n\t\treturn { type: \"unit\" }\n\t}\n}\n\nfunction reportChildErrors(diagnostics: Diagnostic[], cursor: TreeCursor) {\n\tif (cursor.type.isError) {\n\t\tconst { from, to } = cursor\n\t\tconst message = `Syntax error: unexpected or missing token (that's all we know)`\n\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t}\n\tif (cursor.firstChild()) {\n\t\tdo {\n\t\t\treportChildErrors(diagnostics, cursor)\n\t\t} while (cursor.nextSibling())\n\t\tcursor.parent()\n\t}\n}\n","import {\n\tcontinuedIndent,\n\tindentNodeProp,\n\tfoldNodeProp,\n\tLezerLanguage,\n} from \"@codemirror/next/language\"\n\nimport { styleTags, tags } from \"@codemirror/next/highlight\"\nimport { SyntaxNode } from \"lezer-tree\"\n\nimport { parser } from \"@underlay/tasl-lezer/grammar/index.js\"\n\nexport const schemaSyntax = LezerLanguage.define({\n\tparser: parser.configure({\n\t\tprops: [\n\t\t\tindentNodeProp.add({\n\t\t\t\tProduct: continuedIndent({ except: /^\\s*\\}/ }),\n\t\t\t\tCoproduct: continuedIndent({ except: /^\\s*\\]/ }),\n\t\t\t}),\n\t\t\tfoldNodeProp.add({\n\t\t\t\tProduct(subtree: SyntaxNode) {\n\t\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t\t},\n\t\t\t\tCoproduct(subtree: SyntaxNode) {\n\t\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t\t},\n\t\t\t}),\n\t\t\tstyleTags({\n\t\t\t\tComment: tags.comment,\n\t\t\t\tPrefix: tags.namespace,\n\t\t\t\tTypeName: tags.typeName,\n\t\t\t\tVariable: tags.typeName,\n\t\t\t\tUri: tags.name,\n\t\t\t\t\"Class/Uri\": tags.className,\n\t\t\t\t\"Edge/Uri\": tags.className,\n\t\t\t\tProp: tags.propertyName,\n\t\t\t\tIri: tags.string,\n\t\t\t\tUnit: tags.literal,\n\t\t\t\tLiteral: tags.string,\n\t\t\t\t\"Literal/Uri\": tags.string,\n\t\t\t\t\"Reference/Uri\": tags.className,\n\t\t\t\tPointer: tags.operator,\n\t\t\t\tOptional: tags.operator,\n\t\t\t\t\"{ }\": tags.bracket,\n\t\t\t\t\"[ ]\": tags.bracket,\n\t\t\t\t\"->\": tags.separator,\n\t\t\t\t\"<-\": tags.separator,\n\t\t\t\t\";\": tags.separator,\n\t\t\t\t\"Namespace/Uri\": tags.namespace,\n\t\t\t\tnamespace: tags.keyword,\n\t\t\t\ttype: tags.keyword,\n\t\t\t\tclass: tags.keyword,\n\t\t\t\tedge: tags.keyword,\n\t\t\t\tlist: tags.keyword,\n\t\t\t}),\n\t\t],\n\t}),\n\tlanguageData: {\n\t\tcloseBrackets: { brackets: [\"[\", \"{\", \"<\"] },\n\t\tindentOnInput: /^\\s*[\\}\\]]$/,\n\t\tcommentTokens: { line: \"#\" },\n\t},\n})\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar lezerTree = require('lezer-tree');\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack {\n    /// @internal\n    constructor(\n    /// A group of values that the stack will share with all\n    /// split instances\n    ///@internal\n    cx, \n    /// Holds state, pos, value stack pos (15 bits array index, 15 bits\n    /// buffer index) triplets for all but the top state\n    /// @internal\n    stack, \n    /// The current parse state @internal\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    reducePos, \n    /// The input position up to which this stack has parsed.\n    pos, \n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    bufferBase, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    parent) {\n        this.cx = cx;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.parent = parent;\n    }\n    /// @internal\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /// @internal\n    static start(cx, state, pos = 0) {\n        return new Stack(cx, [], state, pos, pos, 0, [], 0, null);\n    }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /// @internal\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /// @internal\n    reduce(action) {\n        let depth = action >> 19 /* ReduceDepthShift */, type = action & 65535 /* ValueMask */;\n        let { parser } = this.cx;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* StayFlag */ ? 6 : 0);\n        let start = this.stack[base - 2];\n        let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n    }\n    // Shift a value into the buffer\n    /// @internal\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Err */) { // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /// @internal\n    shift(action, next, nextEnd) {\n        if (action & 131072 /* GotoFlag */) {\n            this.pushState(action & 65535 /* ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* StayFlag */) == 0) { // Regular shift\n            let start = this.pos, nextState = action, { parser } = this.cx;\n            if (nextEnd > this.pos || next <= parser.maxNode) {\n                this.pos = nextEnd;\n                if (!parser.stateFlag(nextState, 1 /* Skipped */))\n                    this.reducePos = nextEnd;\n            }\n            this.pushState(nextState, start);\n            if (next <= parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            if (next <= this.cx.parser.maxNode)\n                this.buffer.push(next, this.pos, nextEnd, 4);\n            this.pos = nextEnd;\n        }\n    }\n    // Apply an action\n    /// @internal\n    apply(action, next, nextEnd) {\n        if (action & 65536 /* ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextEnd);\n    }\n    // Add a prebuilt node into the buffer. This may be a reused node or\n    // the result of running a nested parser.\n    /// @internal\n    useNode(value, next) {\n        let index = this.cx.reused.length - 1;\n        if (index < 0 || this.cx.reused[index] != value) {\n            this.cx.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size < 0 means this is a reused value */);\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /// @internal\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.cx, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /// @internal\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.cx.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd);\n        this.storeNode(0 /* Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 200 /* Token */;\n    }\n    /// Check if the given term would be able to be shifted (optionally\n    /// after some reductions) on this stack. This can be useful for\n    /// external tokenizers that want to make sure they only provide a\n    /// given token when it applies.\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.cx.parser.stateSlot(sim.top, 4 /* DefaultReduce */) || this.cx.parser.hasAction(sim.top, term);\n            if ((action & 65536 /* ReduceFlag */) == 0)\n                return true;\n            if (action == 0)\n                return false;\n            sim.reduce(action);\n        }\n    }\n    /// Find the start position of the rule that is currently being parsed.\n    get ruleStart() {\n        for (let state = this.state, base = this.stack.length;;) {\n            let force = this.cx.parser.stateSlot(state, 5 /* ForcedReduce */);\n            if (!(force & 65536 /* ReduceFlag */))\n                return 0;\n            base -= 3 * (force >> 19 /* ReduceDepthShift */);\n            if ((force & 65535 /* ValueMask */) < this.cx.parser.minRepeatTerm)\n                return this.stack[base + 1];\n            state = this.stack[base];\n        }\n    }\n    /// Find the start position of an instance of any of the given term\n    /// types, or return `null` when none of them are found.\n    ///\n    /// **Note:** this is only reliable when there is at least some\n    /// state that unambiguously matches the given rule on the stack.\n    /// I.e. if you have a grammar like this, where the difference\n    /// between `a` and `b` is only apparent at the third token:\n    ///\n    ///     a { b | c }\n    ///     b { \"x\" \"y\" \"x\" }\n    ///     c { \"x\" \"y\" \"z\" }\n    ///\n    /// Then a parse state after `\"x\"` will not reliably tell you that\n    /// `b` is on the stack. You _can_ pass `[b, c]` to reliably check\n    /// for either of those two rules (assuming that `a` isn't part of\n    /// some rule that includes other things starting with `\"x\"`).\n    ///\n    /// When `before` is given, this keeps scanning up the stack until\n    /// it finds a match that starts before that position.\n    startOf(types, before) {\n        let state = this.state, frame = this.stack.length, { parser } = this.cx;\n        for (;;) {\n            let force = parser.stateSlot(state, 5 /* ForcedReduce */);\n            let depth = force >> 19 /* ReduceDepthShift */, term = force & 65535 /* ValueMask */;\n            if (types.indexOf(term) > -1) {\n                let base = frame - (3 * (force >> 19 /* ReduceDepthShift */)), pos = this.stack[base + 1];\n                if (before == null || before > pos)\n                    return pos;\n            }\n            if (frame == 0)\n                return null;\n            if (depth == 0) {\n                frame -= 3;\n                state = this.stack[frame];\n            }\n            else {\n                frame -= 3 * (depth - 1);\n                state = parser.getGoto(this.stack[frame - 3], term, true);\n            }\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /// @internal\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.cx.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* MaxNext */ || this.stack.length >= 120 /* DampenInsertStackDepth */) {\n            let best = nextStates.filter(s => s != this.state && this.cx.parser.hasAction(s, next));\n            if (this.stack.length < 120 /* DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* MaxNext */ && i < nextStates.length; i++)\n                    if (best.indexOf(nextStates[i]) < 0)\n                        best.push(nextStates[i]);\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* MaxNext */; i++) {\n            if (nextStates[i] == this.state)\n                continue;\n            let stack = this.split();\n            stack.storeNode(0 /* Err */, stack.pos, stack.pos, 4, true);\n            stack.pushState(nextStates[i], this.pos);\n            stack.score -= 200 /* Token */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /// @internal\n    forceReduce() {\n        let reduce = this.cx.parser.stateSlot(this.state, 5 /* ForcedReduce */);\n        if ((reduce & 65536 /* ReduceFlag */) == 0)\n            return false;\n        if (!this.cx.parser.validAction(this.state, reduce)) {\n            this.storeNode(0 /* Err */, this.reducePos, this.reducePos, 4, true);\n            this.score -= 100 /* Reduce */;\n        }\n        this.reduce(reduce);\n        return true;\n    }\n    /// @internal\n    forceAll() {\n        while (!this.cx.parser.stateFlag(this.state, 2 /* Accepting */) && this.forceReduce()) { }\n        return this;\n    }\n    /// Check whether this state has no further actions (assumed to be a direct descendant of the\n    /// top state, since any other states must be able to continue\n    /// somehow). @internal\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.cx;\n        return parser.data[parser.stateSlot(this.state, 1 /* Actions */)] == 65535 /* End */ &&\n            !parser.stateSlot(this.state, 4 /* DefaultReduce */);\n    }\n    /// Restart the stack (put it back in its start state). Only safe\n    /// when this.stack.length == 3 (state is directly below the top\n    /// state). @internal\n    restart() {\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /// @internal\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /// Get the parser used by this stack.\n    get parser() { return this.cx.parser; }\n    /// Test whether a given dialect (by numeric ID, as exported from\n    /// the terms file) is enabled.\n    dialectEnabled(dialectID) { return this.cx.parser.dialect.flags[dialectID]; }\n}\nvar Recover;\n(function (Recover) {\n    Recover[Recover[\"Token\"] = 200] = \"Token\";\n    Recover[Recover[\"Reduce\"] = 100] = \"Reduce\";\n    Recover[Recover[\"MaxNext\"] = 4] = \"MaxNext\";\n    Recover[Recover[\"MaxInsertStackDepth\"] = 300] = \"MaxInsertStackDepth\";\n    Recover[Recover[\"DampenInsertStackDepth\"] = 120] = \"DampenInsertStackDepth\";\n})(Recover || (Recover = {}));\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(stack) {\n        this.stack = stack;\n        this.top = stack.state;\n        this.rest = stack.stack;\n        this.offset = this.rest.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* ValueMask */, depth = action >> 19 /* ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.rest == this.stack.stack)\n                this.rest = this.rest.slice();\n            this.rest.push(this.top, 0, 0);\n            this.offset += 3;\n        }\n        else {\n            this.offset -= (depth - 1) * 3;\n        }\n        let goto = this.stack.cx.parser.getGoto(this.rest[this.offset - 3], term, true);\n        this.top = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack) {\n        return new StackBufferCursor(stack, stack.bufferBase + stack.buffer.length, stack.buffer.length);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n/// Tokenizers write the tokens they read into instances of this class.\nclass Token {\n    constructor() {\n        /// The start of the token. This is set by the parser, and should not\n        /// be mutated by the tokenizer.\n        this.start = -1;\n        /// This starts at -1, and should be updated to a term id when a\n        /// matching token is found.\n        this.value = -1;\n        /// When setting `.value`, you should also set `.end` to the end\n        /// position of the token. (You'll usually want to use the `accept`\n        /// method.)\n        this.end = -1;\n    }\n    /// Accept a token, setting `value` and `end` to the given values.\n    accept(value, end) {\n        this.value = value;\n        this.end = end;\n    }\n}\n/// @internal\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, token, stack) { readToken(this.data, input, token, stack, this.id); }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// Exports that are used for `@external tokens` in the grammar should\n/// export an instance of this class.\nclass ExternalTokenizer {\n    /// Create a tokenizer. The first argument is the function that,\n    /// given an input stream and a token object,\n    /// [fills](#lezer.Token.accept) the token object if it recognizes a\n    /// token. `token.start` should be used as the start position to\n    /// scan from.\n    constructor(\n    /// @internal\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data, input, token, stack, group) {\n    let state = 0, groupMask = 1 << group, dialect = stack.cx.parser.dialect;\n    scan: for (let pos = token.start;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (token.value == -1 || token.value == term || stack.cx.parser.overrides(term, token.value))) {\n                    token.accept(term, pos);\n                    break;\n                }\n            }\n        let next = input.get(pos++);\n        // Do a binary search on the state's edges\n        for (let low = 0, high = data[state + 2]; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1];\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                continue scan;\n            }\n        }\n        break;\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* BigValCode */) {\n                value = 65535 /* BigVal */;\n                break;\n            }\n            if (next >= 92 /* Gap2 */)\n                next--;\n            if (next >= 34 /* Gap1 */)\n                next--;\n            let digit = next - 32 /* Start */;\n            if (digit >= 46 /* Base */) {\n                digit -= 46 /* Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\n// FIXME find some way to reduce recovery work done when the input\n// doesn't match the grammar at all.\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to <= pos : cursor.from >= pos) && !cursor.type.isError)\n                    return side < 0 ? cursor.to - 1 : cursor.from + 1;\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        this.fragments = fragments;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            else if (start == pos && start + next.length <= this.safeTo) {\n                return start == pos && start >= this.safeFrom ? next : null;\n            }\n            if (next instanceof lezerTree.TreeBuffer) {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n            else {\n                this.index[last]++;\n                if (start + next.length >= pos) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n        }\n    }\n}\nclass CachedToken extends Token {\n    constructor() {\n        super(...arguments);\n        this.extended = -1;\n        this.mask = 0;\n    }\n    clear(start) {\n        this.start = start;\n        this.value = this.extended = -1;\n    }\n}\nconst dummyToken = new Token;\nclass TokenCache {\n    constructor(parser) {\n        this.tokens = [];\n        this.mainToken = dummyToken;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack, input) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.cx, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* TokenizerMask */);\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask) {\n                this.updateCachedToken(token, tokenizer, stack, input);\n                token.mask = mask;\n            }\n            if (token.value != 0 /* Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (!main) {\n            main = dummyToken;\n            main.start = stack.pos;\n            if (stack.pos == input.length)\n                main.accept(stack.cx.parser.eofTerm, stack.pos);\n            else\n                main.accept(0 /* Err */, stack.pos + 1);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    updateCachedToken(token, tokenizer, stack, input) {\n        token.clear(stack.pos);\n        tokenizer.token(input, token, stack);\n        if (token.value > -1) {\n            let { parser } = stack.cx;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](input.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.cx.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else if (stack.pos == input.length) {\n            token.accept(stack.cx.parser.eofTerm, stack.pos);\n        }\n        else {\n            token.accept(0 /* Err */, stack.pos + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.cx, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */);; i += 3) {\n                if (data[i] == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Other */)\n                            index = this.putAction(pair(data, i + 1), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nvar Rec;\n(function (Rec) {\n    Rec[Rec[\"Distance\"] = 5] = \"Distance\";\n    Rec[Rec[\"MaxRemainingPerStep\"] = 3] = \"MaxRemainingPerStep\";\n    Rec[Rec[\"MinBufferLengthPrune\"] = 200] = \"MinBufferLengthPrune\";\n    Rec[Rec[\"ForceReduceLimit\"] = 10] = \"ForceReduceLimit\";\n})(Rec || (Rec = {}));\n/// A parse context can be used for step-by-step parsing. After\n/// creating it, you repeatedly call `.advance()` until it returns a\n/// tree to indicate it has reached the end of the parse.\nclass Parse {\n    constructor(parser, input, startPos, context) {\n        this.parser = parser;\n        this.input = input;\n        this.startPos = startPos;\n        this.context = context;\n        // The position to which the parse has advanced.\n        this.pos = 0;\n        this.recovering = 0;\n        this.nextStackID = 0x2654;\n        this.nested = null;\n        this.nestEnd = 0;\n        this.nestWrap = null;\n        this.reused = [];\n        this.tokens = new TokenCache(parser);\n        this.topTerm = parser.top[1];\n        this.stacks = [Stack.start(this, parser.top[0], this.startPos)];\n        let fragments = context === null || context === void 0 ? void 0 : context.fragments;\n        this.fragments = fragments && fragments.length ? new FragmentCursor(fragments) : null;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        if (this.nested) {\n            let result = this.nested.advance();\n            this.pos = this.nested.pos;\n            if (result) {\n                this.finishNested(this.stacks[0], result);\n                this.nested = null;\n            }\n            return null;\n        }\n        let stacks = this.stacks, pos = this.pos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        let maybeNest;\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], nest;\n            for (;;) {\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (nest = this.checkNest(stack)) {\n                    if (!maybeNest || maybeNest.stack.score < stack.score)\n                        maybeNest = nest;\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.mainToken;\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (maybeNest) {\n            this.startNested(maybeNest);\n            return null;\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished)\n                return this.stackToTree(finished);\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + this.parser.getName(this.tokens.mainToken.value));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished)\n                return this.stackToTree(finished.forceAll());\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 200 /* MinBufferLengthPrune */ && other.buffer.length > 200 /* MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n        }\n        this.pos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.pos)\n                this.pos = newStacks[i].pos;\n        return null;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { input, parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.fragments) {\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof lezerTree.Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof lezerTree.Tree)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* ValueMask */)})`);\n            return true;\n        }\n        let actions = this.tokens.getActions(stack, input);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            localStack.apply(action, term, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            let nest = this.checkNest(stack);\n            if (nest)\n                return nest;\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        let maybeNest;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done) {\n                    if (done !== true)\n                        maybeNest = done;\n                    continue;\n                }\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done) {\n                    if (done !== true)\n                        maybeNest = done;\n                    break;\n                }\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.input.length > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        if (finished)\n            return finished;\n        if (maybeNest)\n            for (let s of this.stacks)\n                if (s.score > maybeNest.stack.score) {\n                    maybeNest = undefined;\n                    break;\n                }\n        if (maybeNest)\n            this.startNested(maybeNest);\n        return null;\n    }\n    forceFinish() {\n        let stack = this.stacks[0].split();\n        if (this.nested)\n            this.finishNested(stack, this.nested.forceFinish());\n        return this.stackToTree(stack.forceAll());\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack, pos = stack.pos) {\n        return lezerTree.Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.startPos,\n            length: pos - this.startPos,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    checkNest(stack) {\n        let info = this.parser.findNested(stack.state);\n        if (!info)\n            return null;\n        let spec = info.value;\n        if (typeof spec == \"function\")\n            spec = spec(this.input, stack);\n        return spec ? { stack, info, spec } : null;\n    }\n    startNested(nest) {\n        let { stack, info, spec } = nest;\n        this.stacks = [stack];\n        this.nestEnd = this.scanForNestEnd(stack, info.end, spec.filterEnd);\n        this.nestWrap = typeof spec.wrapType == \"number\" ? this.parser.nodeSet.types[spec.wrapType] : spec.wrapType || null;\n        if (spec.startParse) {\n            this.nested = spec.startParse(this.input.clip(this.nestEnd), stack.pos, this.context);\n        }\n        else {\n            this.finishNested(stack);\n        }\n    }\n    scanForNestEnd(stack, endToken, filter) {\n        for (let pos = stack.pos; pos < this.input.length; pos++) {\n            dummyToken.start = pos;\n            dummyToken.value = -1;\n            endToken.token(this.input, dummyToken, stack);\n            if (dummyToken.value > -1 && (!filter || filter(this.input.read(pos, dummyToken.end))))\n                return pos;\n        }\n        return this.input.length;\n    }\n    finishNested(stack, tree) {\n        if (this.nestWrap)\n            tree = new lezerTree.Tree(this.nestWrap, tree ? [tree] : [], tree ? [0] : [], this.nestEnd - stack.pos);\n        else if (!tree)\n            tree = new lezerTree.Tree(lezerTree.NodeType.none, [], [], this.nestEnd - stack.pos);\n        let info = this.parser.findNested(stack.state);\n        stack.useNode(tree, this.parser.getGoto(stack.state, info.placeholder, true));\n        if (verbose)\n            console.log(this.stackID(stack) + ` (via unnest)`);\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\n/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nclass Parser {\n    /// @internal\n    constructor(spec) {\n        /// @internal\n        this.bufferLength = lezerTree.DefaultBufferLength;\n        /// @internal\n        this.strict = false;\n        this.nextStateCache = [];\n        this.cachedDialect = null;\n        if (spec.version != 13 /* Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${13 /* Version */})`);\n        let tokenArray = decodeArray(spec.tokenData);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.specialized = new Uint16Array(spec.specialized ? spec.specialized.length : 0);\n        this.specializers = [];\n        if (spec.specialized)\n            for (let i = 0; i < spec.specialized.length; i++) {\n                this.specialized[i] = spec.specialized[i].term;\n                this.specializers[i] = spec.specialized[i].get;\n            }\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        this.nodeSet = new lezerTree.NodeSet(nodeNames.map((name, i) => lezerTree.NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.nested = (spec.nested || []).map(([name, value, endToken, placeholder]) => {\n            return { name, value, end: new TokenGroup(decodeArray(endToken), 0), placeholder };\n        });\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        for (let i = 0, l = this.states.length / 6 /* Size */; i < l; i++)\n            this.nextStateCache[i] = null;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    /// Parse a given string or stream.\n    parse(input, startPos = 0, context = {}) {\n        if (typeof input == \"string\")\n            input = lezerTree.stringInput(input);\n        let cx = new Parse(this, input, startPos, context);\n        for (;;) {\n            let done = cx.advance();\n            if (done)\n                return done;\n        }\n    }\n    /// Start an incremental parse.\n    startParse(input, startPos = 0, context = {}) {\n        if (typeof input == \"string\")\n            input = lezerTree.stringInput(input);\n        return new Parse(this, input, startPos, context);\n    }\n    /// Get a goto table entry @internal\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /// Check if this state has an action for a given terminal @internal\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /// @internal\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* Size */) + slot];\n    }\n    /// @internal\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* Flags */) & flag) > 0;\n    }\n    /// @internal\n    findNested(state) {\n        let flags = this.stateSlot(state, 0 /* Flags */);\n        return flags & 4 /* StartNest */ ? this.nested[flags >> 10 /* NestShift */] : null;\n    }\n    /// @internal\n    validAction(state, action) {\n        if (action == this.stateSlot(state, 4 /* DefaultReduce */))\n            return true;\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    return false;\n            }\n            if (action == pair(this.data, i + 1))\n                return true;\n        }\n    }\n    /// Get the states that can follow this one through shift actions or\n    /// goto jumps. @internal\n    nextStates(state) {\n        let cached = this.nextStateCache[state];\n        if (cached)\n            return cached;\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* ReduceFlag */ >> 16)) == 0 && result.indexOf(this.data[i + 1]) < 0)\n                result.push(this.data[i + 1]);\n        }\n        let table = this.goto, max = table[0];\n        for (let term = 0; term < max; term++) {\n            for (let pos = table[term + 1];;) {\n                let groupTag = table[pos++], target = table[pos++];\n                for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                    if (table[pos] == state && result.indexOf(target) < 0)\n                        result.push(target);\n                if (groupTag & 1)\n                    break;\n            }\n        }\n        return this.nextStateCache[state] = result;\n    }\n    /// @internal\n    overrides(token, prev) {\n        let iPrev = findOffset(this.data, this.tokenPrecTable, prev);\n        return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev;\n    }\n    /// Configure the parser. Returns a new parser instance that has the\n    /// given settings modified. Settings not provided in `config` are\n    /// kept from the original parser.\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(Parser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.nested)\n            copy.nested = this.nested.map(obj => {\n                if (!Object.prototype.hasOwnProperty.call(config.nested, obj.name))\n                    return obj;\n                return { name: obj.name, value: config.nested[obj.name], end: obj.end, placeholder: obj.placeholder };\n            });\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /// Returns the name associated with a given term. This will only\n    /// work for all terms when the parser was generated with the\n    /// `--names` option. By default, only the names of tagged terms are\n    /// stored.\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /// The eof term id is always allocated directly after the node\n    /// types. @internal\n    get eofTerm() { return this.maxNode + 1; }\n    /// Tells you whether this grammar has any nested grammars.\n    get hasNested() { return this.nested.length > 0; }\n    /// @internal\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /// @internal\n    parseDialect(dialect) {\n        if (this.cachedDialect && this.cachedDialect.source == dialect)\n            return this.cachedDialect;\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return this.cachedDialect = new Dialect(dialect, flags, disabled);\n    }\n    /// (used by the output of the parser generator) @internal\n    static deserialize(spec) {\n        return new Parser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        if (stack.pos == stack.cx.input.length &&\n            stack.cx.parser.stateFlag(stack.state, 2 /* Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\n\nexports.NodeProp = lezerTree.NodeProp;\nexports.NodeSet = lezerTree.NodeSet;\nexports.NodeType = lezerTree.NodeType;\nexports.Tree = lezerTree.Tree;\nexports.TreeCursor = lezerTree.TreeCursor;\nexports.ExternalTokenizer = ExternalTokenizer;\nexports.Parser = Parser;\nexports.Stack = Stack;\nexports.Token = Token;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/// The default maximum length of a `TreeBuffer` node.\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nconst CachedNode = new WeakMap();\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type. You can optionally pass a\n    /// `deserialize` function.\n    constructor({ deserialize } = {}) {\n        this.id = nextPropID++;\n        this.deserialize = deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// Create a string-valued node prop whose deserialize function is\n    /// the identity function.\n    static string() { return new NodeProp({ deserialize: str => str }); }\n    /// Create a number-valued node prop whose deserialize function is\n    /// just `Number`.\n    static number() { return new NodeProp({ deserialize: Number }); }\n    /// Creates a boolean-valued node prop whose deserialize function\n    /// returns true for any input.\n    static flag() { return new NodeProp({ deserialize: () => true }); }\n    /// Store a value for this prop in the given object. This can be\n    /// useful when building up a prop object to pass to the\n    /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n    /// argument.\n    set(propObj, value) {\n        propObj[this.id] = value;\n        return propObj;\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#tree.NodeSet.extend) or\n    /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n    /// values for each node type in the set. Takes a [match\n    /// object](#tree.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* Top */ : 0) | (spec.skipped ? 2 /* Skipped */ : 0) |\n            (spec.error ? 4 /* Error */ : 0) | (spec.name == null ? 8 /* Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src)\n                    src[0].set(props, src[1]);\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#tree.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#tree.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.nodeSet) a node set, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method should be created with\n    /// [`NodeProp.add`](#tree.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    add[0].set(newProps, add[1]);\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. You usually want to go through\n    /// [`Tree.build`](#tree.Tree^build) instead.\n    constructor(type, \n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n    }\n    /// @internal\n    toString() {\n        let children = this.children.map(c => c.toString()).join();\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n    /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n    /// to the given position and side.\n    cursor(pos, side = 0) {\n        let scope = (pos != null && CachedNode.get(this)) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        if (pos != null) {\n            cursor.moveTo(pos, side);\n            CachedNode.set(this, cursor._tree);\n        }\n        return cursor;\n    }\n    /// Get a [tree cursor](#tree.TreeCursor) that, unlike regular\n    /// cursors, doesn't skip [anonymous](#tree.NodeType.isAnonymous)\n    /// nodes.\n    fullCursor() {\n        return new TreeCursor(this.topNode, true);\n    }\n    /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    resolve(pos, side = 0) {\n        return this.cursor(pos, side).node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, the given node\n    /// will not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        for (let c = this.cursor();;) {\n            let mustLeave = false;\n            if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to) !== false)) {\n                if (c.firstChild())\n                    continue;\n                if (!c.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(c.type, c.from, c.to);\n                mustLeave = c.type.isAnonymous;\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Balance the direct children of this tree.\n    balance(maxBufferLength = DefaultBufferLength) {\n        return this.children.length <= BalanceBranchFactor ? this\n            : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0, maxBufferLength, this.length);\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nclass TreeBuffer {\n    /// Create a tree buffer @internal\n    constructor(\n    /// @internal\n    buffer, \n    // The total length of the group of nodes in the buffer.\n    length, \n    /// @internal\n    set, type = NodeType.none) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n        this.type = type;\n    }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, after) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (after != -100000000 /* None */) {\n                let start = buffer[i + 1], end = buffer[i + 2];\n                if (dir > 0) {\n                    if (end > after)\n                        pick = i;\n                    if (end > after)\n                        break;\n                }\n                else {\n                    if (start < after)\n                        pick = i;\n                    if (end >= after)\n                        break;\n                }\n            }\n            else {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n}\nclass TreeNode {\n    constructor(node, from, index, _parent) {\n        this.node = node;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this.node.type; }\n    get name() { return this.node.type.name; }\n    get to() { return this.from + this.node.length; }\n    nextChild(i, dir, after, full = false) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (after != -100000000 /* None */ && (dir < 0 ? start >= after : start + next.length <= after))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    let index = next.findChild(0, next.buffer.length, dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - start);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if (full || (!next.type.isAnonymous || hasChild(next))) {\n                    let inner = new TreeNode(next, start, i, parent);\n                    return full || !inner.type.isAnonymous ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after);\n                }\n            }\n            if (full || !parent.type.isAnonymous)\n                return null;\n            i = parent.index + dir;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, -100000000 /* None */); }\n    get lastChild() { return this.nextChild(this.node.children.length - 1, -1, -100000000 /* None */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos); }\n    childBefore(pos) { return this.nextChild(this.node.children.length - 1, -1, pos); }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null;\n    }\n    get prevSibling() {\n        return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null;\n    }\n    get cursor() { return new TreeCursor(this); }\n    resolve(pos, side = 0) {\n        return this.cursor.moveTo(pos, side).node;\n    }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this.node.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor, result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    child(dir, after) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - this.context.start);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, -100000000 /* None */); }\n    get lastChild() { return this.child(-1, -100000000 /* None */); }\n    childAfter(pos) { return this.child(1, pos); }\n    childBefore(pos) { return this.child(-1, pos); }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, -100000000 /* None */));\n    }\n    get cursor() { return new TreeCursor(this); }\n    resolve(pos, side = 0) {\n        return this.cursor.moveTo(pos, side).node;\n    }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// @internal\n    constructor(node, full = false) {\n        this.full = full;\n        this.buffer = null;\n        this.stack = [];\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enter(dir, after) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, after, this.full));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - this.buffer.start);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enter(1, -100000000 /* None */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enter(-1, -100000000 /* None */); }\n    /// Move the cursor to the first child that starts at or after `pos`.\n    childAfter(pos) { return this.enter(1, pos); }\n    /// Move to the last child that ends at or before `pos`.\n    childBefore(pos) { return this.enter(-1, pos); }\n    /// Move the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode(this.full ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = this.full ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree._parent.nextChild(this._tree.index + dir, dir, -100000000 /* None */, this.full));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, -100000000 /* None */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, -100000000 /* None */, this.full)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n                let child = parent.node.children[i];\n                if (this.full || !child.type.isAnonymous || child instanceof TreeBuffer || hasChild(child))\n                    return false;\n            }\n        }\n        return true;\n    }\n    move(dir) {\n        if (this.enter(dir, -100000000 /* None */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty, its next sibling or the next sibling of\n    /// the first parent node that has one.\n    next() { return this.move(1); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by ist last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev() { return this.move(-1); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        for (;;) {\n            if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos))\n                break;\n            if (this.from == this.to ||\n                (side < 1 ? this.from >= pos : this.from > pos) ||\n                (side > -1 ? this.to <= pos : this.to < pos)) {\n                this.parent();\n                break;\n            }\n        }\n        return this;\n    }\n    /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#tree.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#tree.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree.node;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => !ch.type.isAnonymous || ch instanceof TreeBuffer || hasChild(ch));\n}\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\nconst BalanceBranchFactor = 8;\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, topID = 0, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        while (id == inRepeat) {\n            cursor.next();\n            ({ id, start, end, size } = cursor);\n        }\n        let startPos = start - parentStart;\n        if (size < 0) { // Reused node\n            children.push(reused[id]);\n            positions.push(startPos);\n            cursor.next();\n            return;\n        }\n        let type = types[id], node, buffer;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index, inRepeat);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet, inRepeat < 0 ? NodeType.none : types[inRepeat]);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            while (cursor.pos > endPos)\n                takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n                node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start);\n            else\n                node = new Tree(type, localChildren, localPositions, end - start);\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let nodeSize = fork.size, startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0)\n                    break scan;\n                if (fork.id >= minRepeatType)\n                    localSkipped += 4;\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index, inRepeat) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (id == inRepeat)\n            return index;\n        let startIndex = index;\n        if (size > 4) {\n            let endPos = cursor.pos - (size - 4);\n            while (cursor.pos > endPos)\n                index = copyToBuffer(bufferStart, buffer, index, inRepeat);\n        }\n        if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[topID], children.reverse(), positions.reverse(), length);\n}\nfunction balanceRange(outerType, innerType, children, positions, from, to, start, maxBufferLength, length) {\n    let localChildren = [], localPositions = [];\n    if (length <= maxBufferLength) {\n        for (let i = from; i < to; i++) {\n            localChildren.push(children[i]);\n            localPositions.push(positions[i] - start);\n        }\n    }\n    else {\n        let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor));\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i];\n            i++;\n            for (; i < to; i++) {\n                let nextEnd = positions[i] + children[i].length;\n                if (nextEnd - groupStart > maxChild)\n                    break;\n            }\n            if (i == groupFrom + 1) {\n                let only = children[groupFrom];\n                if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n                    for (let j = 0; j < only.children.length; j++) {\n                        localChildren.push(only.children[j]);\n                        localPositions.push(only.positions[j] + groupStart - start);\n                    }\n                    continue;\n                }\n                localChildren.push(only);\n            }\n            else if (i == groupFrom + 1) {\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart, maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart);\n                if (innerType != NodeType.none && !containsType(inner.children, innerType))\n                    inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length);\n                localChildren.push(inner);\n            }\n            localPositions.push(groupStart - start);\n        }\n    }\n    return new Tree(outerType, localChildren, localPositions, length);\n}\nfunction containsType(nodes, type) {\n    for (let elt of nodes)\n        if (elt.type == type)\n            return true;\n    return false;\n}\n/// Tree fragments are used during [incremental\n/// parsing](#lezer.ParseOptions.fragments) to track parts of old\n/// trees that can be reused in a new parse. An array of fragments is\n/// used to track regions of an old tree whose nodes might be reused\n/// in new parses. Use the static\n/// [`applyChanges`](#tree.TreeFragment^applyChanges) method to update\n/// fragments for document changes.\nclass TreeFragment {\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, open) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = open;\n    }\n    get openStart() { return (this.open & 1 /* Start */) > 0; }\n    get openEnd() { return (this.open & 2 /* End */) > 0; }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        let cI = 0, pos = 0, off = 0;\n        for (;;) {\n            let nextC = cI < changes.length ? changes[cI++] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null :\n                            new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, (cI > 0 ? 1 /* Start */ : 0) | (nextC ? 2 /* End */ : 0));\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the token at its\n    /// end is not included in [`safeTo`](#tree.TreeFragment.safeTo).\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, partial ? 2 /* End */ : 0)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n}\n// Creates an `Input` that is backed by a single, flat string.\nfunction stringInput(input) { return new StringInput(input); }\nclass StringInput {\n    constructor(string, length = string.length) {\n        this.string = string;\n        this.length = length;\n    }\n    get(pos) {\n        return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos);\n    }\n    lineAfter(pos) {\n        if (pos < 0)\n            return \"\";\n        let end = this.string.indexOf(\"\\n\", pos);\n        return this.string.slice(pos, end < 0 ? this.length : Math.min(end, this.length));\n    }\n    read(from, to) { return this.string.slice(from, Math.min(this.length, to)); }\n    clip(at) { return new StringInput(this.string, at); }\n}\n\nexports.DefaultBufferLength = DefaultBufferLength;\nexports.NodeProp = NodeProp;\nexports.NodeSet = NodeSet;\nexports.NodeType = NodeType;\nexports.Tree = Tree;\nexports.TreeBuffer = TreeBuffer;\nexports.TreeCursor = TreeCursor;\nexports.TreeFragment = TreeFragment;\nexports.stringInput = stringInput;\n//# sourceMappingURL=tree.cjs.map\n","import { Annotation, Facet, combineConfig, StateField, Transaction, StateEffect } from '@codemirror/next/state';\n\nconst fromHistory = Annotation.define();\n/// Transaction annotation that will prevent that annotation from\n/// being combined with other annotations in the undo history. Given\n/// `\"before\"`, it'll prevent merging with previous transactions. With\n/// `\"after\"`, subsequent transactions won't be combined with this\n/// one. With `\"full\"`, the transaction is isolated on both sides.\nconst isolateHistory = Annotation.define();\n/// This facet provides a way to register functions that, given a\n/// transaction, provide a set of effects that the history should\n/// store when inverting the transaction. This can be used to\n/// integrate some kinds of effects in the history, so that they can\n/// be undone (and redone again).\nconst invertedEffects = Facet.define();\nconst historyConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500\n        }, { minDepth: Math.max, newGroupDelay: Math.min });\n    }\n});\nconst historyField = StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr), from = fromHist.side;\n            let other = from == 0 /* Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* Done */ ? fromHist.rest : other, from == 0 /* Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return tr.changes.length ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    }\n});\n/// Create a history extension with the given configuration.\nfunction history(config = {}) {\n    // FIXME register beforeinput handler\n    return [\n        historyField,\n        historyConfig.of(config)\n    ];\n}\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        let historyState = state.field(historyField, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/// Undo a single group of history events. Returns false if no group\n/// was available.\nconst undo = cmd(0 /* Done */, false);\n/// Redo a group of history events. Returns false if no group was\n/// available.\nconst redo = cmd(1 /* Undone */, false);\n/// Undo a selection change.\nconst undoSelection = cmd(0 /* Done */, true);\n/// Redo a selection change.\nconst redoSelection = cmd(1 /* Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/// The amount of undoable change events available in a given state.\nconst undoDepth = depth(0 /* Done */);\n/// The amount of redoable change events available in a given state.\nconst redoDepth = depth(1 /* Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, newGroupDelay, maxLen) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes &&\n            time - this.prevTime < newGroupDelay &&\n            !lastEvent.selectionsAfter.length &&\n            lastEvent.changes.length && event.changes &&\n            isAdjacent(lastEvent.changes, event.changes)) {\n            done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, maxLen, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == \"keyboardselection\" && this.prevUserEvent == userEvent &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) })\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false\n            });\n        }\n    }\n}\nHistoryState.empty = new HistoryState(none, none);\n/// Default key bindings for the undo history.\n///\n/// - Mod-z: [`undo`](#history.undo).\n/// - Mod-y (Mod-Shift-z on macOS): [`redo`](#history.redo).\n/// - Mod-u: [`undoSelection`](#history.undoSelection).\n/// - Alt-u (Mod-Shift-u on macOS): [`redoSelection`](#history.redoSelection).\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nexport { history, historyKeymap, invertedEffects, isolateHistory, redo, redoDepth, redoSelection, undo, undoDepth, undoSelection };\n","import { StateEffect, StateField, Facet, combineConfig } from '@codemirror/next/state';\nimport { Decoration, EditorView, WidgetType, themeClass } from '@codemirror/next/view';\nimport { foldable } from '@codemirror/next/language';\nimport { gutter, GutterMarker } from '@codemirror/next/gutter';\n\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\nconst foldEffect = StateEffect.define({ map: mapRange });\nconst unfoldEffect = StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.visualLineAt(head));\n    }\n    return lines;\n}\nconst foldState = StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.primary;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: [EditorView.decorations]\n});\nfunction foldInside(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = ({ from, to });\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state) {\n    return state.field(foldState, false) ? undefined : { append: codeFolding() };\n}\n/// Fold the lines that are selected, if possible.\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: foldEffect.of(range),\n                reconfigure: maybeEnable(view.state) });\n            return true;\n        }\n    }\n    return false;\n};\n/// Unfold folded ranges on selected lines.\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = foldInside(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\n/// Fold all top-level foldable ranges.\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.visualLineAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.visualLineAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects, reconfigure: maybeEnable(view.state) });\n    return !!effects.length;\n};\n/// Unfold all folded code.\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n/// Default fold-related key bindings.\n///\n///  - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](#fold.foldCode).\n///  - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](#fold.unfoldCode).\n///  - Ctrl-Alt-[: [`foldAll`](#fold.foldAll).\n///  - Ctrl-Alt-]: [`unfoldAll`](#fold.unfoldAll).\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/// Create an extension that configures code folding.\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = Decoration.replace({ widget: new class extends WidgetType {\n        ignoreEvents() { return false; }\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM();\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = themeClass(\"foldPlaceholder\");\n            element.onclick = event => {\n                let line = view.visualLineAt(view.posAtDOM(event.target));\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\"\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/// Create an extension that registers a fold gutter, which shows a\n/// fold status indicator before lines which can be clicked to fold or\n/// unfold the line.\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    return [\n        gutter({\n            style: \"foldGutter\",\n            lineMarker(view, line) {\n                // FIXME optimize this. At least don't run it for updates that\n                // don't change anything relevant\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    return canUnfold;\n                if (foldable(view.state, line.from, line.to))\n                    return canFold;\n                return null;\n            },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: {\n                click: (view, line) => {\n                    let folded = foldInside(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme = EditorView.baseTheme({\n    $foldPlaceholder: {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \"$gutterElement.foldGutter\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\nexport { codeFolding, foldAll, foldCode, foldGutter, foldKeymap, unfoldAll, unfoldCode };\n","import { EditorView } from '@codemirror/next/view';\nimport { StateEffect, MapMode, StateField, EditorSelection, Transaction, CharCategory } from '@codemirror/next/state';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nimport { codePointSize, codePointAt, fromCodePoint } from '@codemirror/next/text';\nimport { syntaxTree } from '@codemirror/next/language';\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\nconst closeBracketEffect = StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst skipBracketEffect = StateEffect.define({\n    map(value, mapping) { return mapping.mapPos(value); }\n});\nconst closedBracket = new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.primary.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.primary.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects) {\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n            else if (effect.is(skipBracketEffect))\n                value = value.update({ filter: from => from != effect.value });\n        }\n        return value;\n    }\n});\n/// Extension to enable bracket-closing behavior. When a closeable\n/// bracket is typed, its closing bracket is immediately inserted\n/// after the cursor. When closing a bracket directly in front of that\n/// closing bracket, the cursor moves over the existing bracket.\nfunction closeBrackets() {\n    return [EditorView.inputHandler.of(handleInput), bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.primary;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = handleInsertion(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/// Command that implements deleting a pair of matching brackets when\n/// the cursor is between them.\nconst deleteBracketPair = ({ state, dispatch }) => {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length),\n                        annotations: Transaction.userEvent.of(\"delete\") };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/// Close-brackets related key bindings. Binds Backspace to\n/// [`deleteBracketPair`](#closebrackets.deleteBracketPair).\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/// Implements the extension's behavior on text insertion. @internal\nfunction handleInsertion(state, ch) {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (ch == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (ch == closed && closedBracketAt(state, state.selection.primary.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        annotations: Transaction.userEvent.of(\"input\")\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, moved = state.selection.ranges.map(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state.update({\n        selection: EditorSelection.create(moved, state.selection.primaryIndex),\n        scrollIntoView: true,\n        effects: state.selection.ranges.map(({ from }) => skipBracketEffect.of(from))\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos);\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),\n                    effects: skipBracketEffect.of(pos) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            let prev = state.sliceDoc(pos - 1, pos);\n            if (prev != token && state.charCategorizer(pos)(prev) != CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        annotations: Transaction.userEvent.of(\"input\")\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolve(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexport { closeBrackets, closeBracketsKeymap, deleteBracketPair, handleInsertion };\n","import { showTooltip, tooltips } from '@codemirror/next/tooltip';\nimport { Facet, combineConfig, StateEffect, StateField, Transaction, Text, EditorSelection, precedence } from '@codemirror/next/state';\nimport { syntaxTree, indentUnit } from '@codemirror/next/language';\nimport { EditorView, Direction, themeClass, ViewPlugin, logException, Decoration, WidgetType, keymap } from '@codemirror/next/view';\nimport { codePointAt, codePointSize, fromCodePoint } from '@codemirror/next/text';\n\n/// An instance of this is passed to completion source functions.\nclass CompletionContext {\n    /// Create a new completion context. (Mostly useful for testing\n    /// completion sources—in the editor, the extension will create\n    /// these for you.)\n    constructor(\n    /// The editor state that the completion happens in.\n    state, \n    /// The position at which the completion happens.\n    pos, \n    /// Indicates whether completion was activated explicitly, or\n    /// implicitly by typing. The usual way to respond to this is to\n    /// only return completions when either there is part of a\n    /// completable entity at the cursor, or explicit is true.\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /// @internal\n        this.abortListeners = [];\n    }\n    /// Get the extent, content, and (if there is a token) type of the\n    /// token before `this.pos`.\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolve(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /// Get the match of the given expression directly before the\n    /// cursor.\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /// Yields true when the query has been aborted. Can be useful in\n    /// asynchronous queries to avoid doing work that will be ignored.\n    get aborted() { return this.abortListeners == null; }\n    /// Allows you to register abort handlers, which will be called when\n    /// the query is\n    /// [aborted](#autocomplete.CompletionContext.aborted).\n    addEventListener(_type, listener) {\n        if (this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nclass Option {\n    constructor(completion, source, match) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n    }\n}\nfunction cur(state) { return state.selection.primary.head; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\nfunction applyCompletion(view, option) {\n    let apply = option.completion.apply || option.completion.label;\n    let result = option.source;\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length }\n        });\n    }\n    else {\n        apply(view, option.completion, result.from, result.to);\n    }\n}\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0);\n            return first == chars[0] ? [0, 0, codePointSize(first)]\n                : first == folded[0] ? [-200 /* CaseFold */, 0, codePointSize(first)] : null;\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [0, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        let preciseTo = 0;\n        let byWordTo = 0, byWordFolded = false;\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Lower */ : next >= 65 && next <= 90 ? 1 /* Upper */ : 0 /* NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Upper */ : ch != ch.toUpperCase() ? 2 /* Lower */ : 0 /* NonWord */);\n            if (type == 1 /* Upper */ || prevType == 0 /* NonWord */ && type != 0 /* NonWord */ &&\n                (this.chars[byWordTo] == next || (this.folded[byWordTo] == next && (byWordFolded = true))))\n                byWord[byWordTo++] = i;\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* CaseFold */, 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* NotStart */, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* CaseFold */ + -700 /* NotStart */, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0) + -700 /* NotStart */, byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* NotStart */ : 0) + -200 /* CaseFold */ + -1100 /* Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            maxRenderedOptions: 100\n        });\n    }\n});\n\nconst MaxInfoWidth = 300;\nconst baseTheme = EditorView.baseTheme({\n    \"$tooltip.autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            overflowY: \"auto\",\n            whiteSpace: \"nowrap\",\n            maxHeight: \"10em\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li\": {\n                cursor: \"pointer\",\n                padding: \"1px 1em 1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li[aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            }\n        }\n    },\n    \"$completionListIncompleteTop:before, $completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \"$tooltip.completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: MaxInfoWidth + \"px\",\n    },\n    \"$tooltip.completionInfo.left\": { right: \"100%\" },\n    \"$tooltip.completionInfo.right\": { left: \"100%\" },\n    \"$$light $snippetField\": { backgroundColor: \"#ddd\" },\n    \"$$dark $snippetField\": { backgroundColor: \"#333\" },\n    \"$snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    $completionMatchedText: {\n        textDecoration: \"underline\"\n    },\n    $completionDetail: {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    $completionIcon: {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\"\n    },\n    \"$completionIcon.function, $completionIcon.method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \"$completionIcon.class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \"$completionIcon.interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \"$completionIcon.variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \"$completionIcon.constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \"$completionIcon.type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \"$completionIcon.enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \"$completionIcon.property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \"$completionIcon.keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \"$completionIcon.namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \"$completionIcon.text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nfunction createListBox(options, id, range) {\n    const ul = document.createElement(\"ul\");\n    ul.id = id;\n    ul.setAttribute(\"role\", \"listbox\");\n    ul.setAttribute(\"aria-expanded\", \"true\");\n    for (let i = range.from; i < range.to; i++) {\n        let { completion, match } = options[i];\n        const li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        let icon = li.appendChild(document.createElement(\"div\"));\n        icon.className = themeClass(\"completionIcon\" + (completion.type ? \".\" + completion.type : \"\"));\n        icon.setAttribute(\"aria-hidden\", \"true\");\n        let labelElt = li.appendChild(document.createElement(\"span\"));\n        labelElt.className = themeClass(\"completionLabel\");\n        let { label, detail } = completion, off = 0;\n        for (let j = 1; j < match.length;) {\n            let from = match[j++], to = match[j++];\n            if (from > off)\n                labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n            let span = labelElt.appendChild(document.createElement(\"span\"));\n            span.appendChild(document.createTextNode(label.slice(from, to)));\n            span.className = themeClass(\"completionMatchedText\");\n            off = to;\n        }\n        if (off < label.length)\n            labelElt.appendChild(document.createTextNode(label.slice(off)));\n        if (detail) {\n            let detailElt = li.appendChild(document.createElement(\"span\"));\n            detailElt.className = themeClass(\"completionDetail\");\n            detailElt.textContent = detail;\n        }\n        li.setAttribute(\"role\", \"option\");\n    }\n    if (range.from)\n        ul.classList.add(themeClass(\"completionListIncompleteTop\"));\n    if (range.to < options.length)\n        ul.classList.add(themeClass(\"completionListIncompleteBottom\"));\n    return ul;\n}\nfunction createInfoDialog(option) {\n    let dom = document.createElement(\"div\");\n    dom.className = themeClass(\"tooltip.completionInfo\");\n    let { info } = option.completion;\n    if (typeof info == \"string\")\n        dom.textContent = info;\n    else\n        dom.appendChild(info(option.completion));\n    return dom;\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfo = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.positionInfo(pos),\n            key: this\n        };\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.list = this.dom.appendChild(createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfo);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        if (update.state.field(this.stateField) != update.prevState.field(this.stateField))\n            this.updateSel();\n    }\n    positioned() {\n        if (this.info)\n            this.view.requestMeasure(this.placeInfo);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfo);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let option = open.options[open.selected];\n            if (option.completion.info) {\n                this.info = this.dom.appendChild(createInfoDialog(option));\n                this.view.requestMeasure(this.placeInfo);\n            }\n        }\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel)\n            return null;\n        let rect = this.dom.getBoundingClientRect();\n        let top = sel.getBoundingClientRect().top - rect.top;\n        if (top < 0 || top > this.list.clientHeight - 10)\n            return null;\n        let left = this.view.textDirection == Direction.RTL;\n        let spaceLeft = rect.left, spaceRight = innerWidth - rect.right;\n        if (left && spaceLeft < Math.min(MaxInfoWidth, spaceRight))\n            left = false;\n        else if (!left && spaceRight < Math.min(MaxInfoWidth, spaceLeft))\n            left = true;\n        return { top, left };\n    }\n    positionInfo(pos) {\n        if (this.info && pos) {\n            this.info.style.top = pos.top + \"px\";\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-left\", pos.left);\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-right\", !pos.left);\n        }\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\nconst MaxOptions = 300;\nfunction sortOptions(active, state) {\n    let options = [];\n    for (let a of active)\n        if (a.hasResult()) {\n            let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n            for (let option of a.result.options)\n                if (match = matcher.match(option.label)) {\n                    if (option.boost != null)\n                        match[0] += option.boost;\n                    options.push(new Option(option, a, match));\n                }\n        }\n    options.sort(cmpOption);\n    return options.length > MaxOptions ? options.slice(0, MaxOptions) : options;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);\n    }\n    static build(active, state, id, prev) {\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return null;\n        let selected = 0;\n        if (prev) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length && !selected; i++) {\n                if (options[i].completion == selectedValue)\n                    selected = i;\n            }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), [{\n                pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n                style: \"autocomplete\",\n                create: completionTooltip(completionState)\n            }], prev ? prev.timestamp : Date.now(), selected);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, [Object.assign(Object.assign({}, this.tooltip[0]), { pos: changes.mapPos(this.tooltip[0].pos) })], this.timestamp, this.selected);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override || state.languageDataAt(\"autocomplete\", cur(state));\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) || new ActiveSource(source, 0 /* Inactive */, false);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open)\n            : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : none; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nfunction makeAttrs(id, selected) {\n    return {\n        \"aria-autocomplete\": \"list\",\n        \"aria-activedescendant\": id + \"-\" + selected,\n        \"aria-owns\": id\n    };\n}\nconst baseAttrs = { \"aria-autocomplete\": \"list\" }, none = [];\nfunction cmpOption(a, b) {\n    let dScore = b.match[0] - a.match[0];\n    if (dScore)\n        return dScore;\n    let lA = a.completion.label, lB = b.completion.label;\n    return lA < lB ? -1 : lA == lB ? 0 : 1;\n}\nclass ActiveSource {\n    constructor(source, state, explicit) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = tr.annotation(Transaction.userEvent), value = this;\n        if (event == \"input\" || event == \"delete\")\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* Inactive */)\n            value = new ActiveSource(value.source, 0 /* Inactive */, false);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* Pending */, effect.value);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* Inactive */, false);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(_tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this : new ActiveSource(this.source, 1 /* Pending */, false);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* Inactive */, false) : this;\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, result, from, to, span) {\n        super(source, 2 /* Result */, explicit);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n        this.span = span;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicit ? pos < from : pos <= from) || pos > to)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* Pending */ : 0 /* Inactive */, false);\n        if (this.span && (from == to || this.span.test(tr.state.sliceDoc(from, to))))\n            return new ActiveResult(this.source, this.explicit, this.result, from, to, this.span);\n        return new ActiveSource(this.source, 1 /* Pending */, this.explicit);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to)\n            ? new ActiveSource(this.source, 0 /* Inactive */, false)\n            : new ActiveResult(this.source, this.explicit, this.result, tr.changes.mapPos(this.from), tr.changes.mapPos(this.to, 1), this.span);\n    }\n    map(mapping) {\n        return new ActiveResult(this.source, this.explicit, this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1), this.span);\n    }\n}\nconst startCompletionEffect = StateEffect.define();\nconst closeCompletionEffect = StateEffect.define();\nconst setActiveEffect = StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.hasResult() && !mapping.empty ? s.map(mapping) : s); }\n});\nconst setSelectedEffect = StateEffect.define();\nconst completionState = StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: [\n        showTooltip.nFrom(state => state.tooltip),\n        EditorView.contentAttributes.from(state => state.attrs)\n    ]\n});\n\nconst CompletionInteractMargin = 75;\n/// Returns a command that moves the completion selection forward or\n/// backward by the given amount.\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = view.dom.querySelector(\".cm-tooltip-autocomplete\")))\n            step = Math.max(2, Math.floor(tooltip.offsetHeight / tooltip.firstChild.offsetHeight));\n        let selected = cState.open.selected + step * (forward ? 1 : -1), { length } = cState.open.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/// Accept the current completion.\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/// Explicitly start autocompletion.\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/// Close the currently active completion.\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(source, context) {\n        this.source = source;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.prevState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let event = tr.annotation(Transaction.userEvent);\n            return (tr.selection || tr.docChanged) && event != \"input\" && event != \"delete\";\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && query.time - Date.now() > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* Pending */ && !this.running.some(q => q.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* None */)\n            for (let tr of update.transactions) {\n                if (tr.annotation(Transaction.userEvent) == \"input\")\n                    this.composing = 2 /* Changed */;\n                else if (this.composing == 2 /* Changed */ && tr.selection)\n                    this.composing = 3 /* ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* Pending */ && !this.running.some(r => r.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit);\n        let pending = new RunningQuery(active.source, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.source, query.context.explicit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state), query.done.span ? ensureAnchor(query.done.span, true) : null);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.source);\n            if (current && current.state == 1 /* Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.source, 0 /* Inactive */, false);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        compositionstart() {\n            this.composing = 1 /* Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* ChangedAndMoved */)\n                this.view.dispatch({ effects: startCompletionEffect.of(false) });\n            this.composing = 0 /* None */;\n        }\n    } // See https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/949\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.slice(0, Math.min(100, lineObj.length)))[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3], found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (name ? fields[i].name == name : seq != null && fields[i].seq == seq)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name: name || null });\n                    found = i;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = Decoration.widget({ widget: new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = themeClass(\"snippetFieldPosition\");\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = Decoration.mark({ class: themeClass(\"snippetField\") });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = StateEffect.define();\nconst snippetState = StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: [EditorView.decorations.from(val => val ? val.deco : Decoration.none)]\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/// Convert a snippet template to a function that can apply it.\n/// Snippets are written using syntax like this:\n///\n///     \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n///\n/// Each `${}` placeholder (you may also use `#{}`) indicates a field\n/// that the user can fill in. Its name, if any, will be the default\n/// content for the field.\n///\n/// When the snippet is activated by calling the returned function,\n/// the code is inserted at the given position. Newlines in the\n/// template are indented by the indentation of the start line, plus\n/// one [indent unit](#language.indentUnit) per tab character after\n/// the newline.\n///\n/// On activation, (all instances of) the first field are selected.\n/// The user can move between fields with Tab and Shift-Tab as long as\n/// the fields are active. Moving to the last field or moving the\n/// cursor out of the current field deactivates the fields.\n///\n/// The order of fields defaults to textual order, but you can add\n/// numbers to placeholders (`${1}` or `${1:defaultText}`) to provide\n/// a custom order.\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, _completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = { changes: { from, to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            spec.effects = setActive.of(new ActiveSnippet(ranges, 0));\n            if (editor.state.field(snippetState, false) === undefined)\n                spec.reconfigure = { append: [snippetState, snippetKeymap, baseTheme] };\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\nconst snippetKeymap = precedence(keymap([\n    { key: \"Tab\", run: moveField(1), shift: moveField(-1) },\n    { key: \"Escape\", run: clearSnippet }\n]), \"override\");\n\n/// Returns an extension that enables autocompletion.\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        baseTheme,\n        tooltips(),\n        precedence(keymap([\n            { key: \"ArrowDown\", run: moveCompletionSelection(true) },\n            { key: \"ArrowUp\", run: moveCompletionSelection(false) },\n            { key: \"PageDown\", run: moveCompletionSelection(true, \"page\") },\n            { key: \"PageUp\", run: moveCompletionSelection(false, \"page\") },\n            { key: \"Enter\", run: acceptCompletion }\n        ]), \"override\")\n    ];\n}\n/// Basic keybindings for autocompletion.\n///\n///  - Ctrl-Space (Cmd-Space on macOS): [`startCompletion`](#autocomplete.startCompletion)\n///  - Escape: [`closeCompletion`](#autocomplete.closeCompletion)\nconst completionKeymap = [\n    { key: \"Mod-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion }\n];\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/// Given a a fixed array of options, return an autocompleter that\n/// compares those options to the current\n/// [token](#autocomplete.CompletionContext.tokenBefore) and returns\n/// the matching ones.\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [span, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, span } : null;\n    };\n}\n/// Wrap the given completion source so that it will not fire when the\n/// cursor is in a syntax node with one of the given names.\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolve(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n        return source(context);\n    };\n}\n/// Create a completion source from an array of snippet specs.\nfunction completeSnippets(snippets) {\n    return completeFromList(snippets.map(s => Object.assign({}, s, { apply: snippet(s.snippet) })));\n}\n/// Get the current completion status. When completions are available,\n/// this will return `\"active\"`. When completions are pending (in the\n/// process of being queried), this returns `\"pending\"`. Otherwise, it\n/// returns `null`.\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* Inactive */) ? \"active\" : null;\n}\n/// Returns the available completions as an array.\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options.map(o => o.completion) : [];\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, closeCompletion, completeFromList, completeSnippets, completionKeymap, completionStatus, currentCompletions, ifNotIn, moveCompletionSelection, snippet, startCompletion };\n","import { EditorSelection } from '@codemirror/next/state';\nimport { EditorView } from '@codemirror/next/view';\nimport { findColumn, countColumn } from '@codemirror/next/text';\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i), str = line.length > MaxOff ? line.slice(0, 2 * endCol) : line.slice();\n            let start = findColumn(str, 0, startCol, state.tabSize), end = findColumn(str, 0, endCol, state.tabSize);\n            if (!start.leftOver)\n                ranges.push(EditorSelection.range(line.from + start.offset, line.from + end.offset));\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (offset == null)\n        return null;\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.slice(0, offset - line.from), 0, view.state.tabSize);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.prevState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/// Create an extension that enables rectangular selections. By\n/// default, it will rect to left mouse drag with the alt key held\n/// down. When such a selection occurs, the text within the rectangle\n/// that was dragged over will be selected, as one selection\n/// [range](#state.SelectionRange) per line. You can pass a custom\n/// predicate function, which takes a `mousedown` event and returns\n/// true if it should be used for rectangular selection.\nfunction rectangularSelection(eventFilter) {\n    let filter = eventFilter || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexport { rectangularSelection };\n","import { getPanel, panels, showPanel } from '@codemirror/next/panel';\nimport { EditorSelection } from '@codemirror/next/state';\nimport { EditorView, themeClass } from '@codemirror/next/view';\n\nconst extTag = typeof Symbol == \"undefined\" ? \"__goto-line\" : Symbol(\"goto-line\");\nfunction createLineDialog(view) {\n    let dom = document.createElement(\"form\");\n    dom.innerHTML = `<label>${view.state.phrase(\"Go to line:\")} <input class=${themeClass(\"textfield\")} name=line></label>\n<button class=${themeClass(\"button\")} type=submit>${view.state.phrase(\"go\")}</button>`;\n    let input = dom.querySelector(\"input\");\n    function go() {\n        let n = parseInt(input.value, 10);\n        view.dispatch({\n            reconfigure: { [extTag]: [baseTheme] },\n            selection: !isNaN(n) && n > 0 && n <= view.state.doc.lines ? EditorSelection.cursor(view.state.doc.line(n).from) : undefined,\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    dom.addEventListener(\"keydown\", event => {\n        if (event.keyCode == 27) { // Escape\n            event.preventDefault();\n            view.dispatch({ reconfigure: { append: [baseTheme] } });\n            view.focus();\n        }\n        else if (event.keyCode == 13) { // Enter\n            event.preventDefault();\n            go();\n        }\n    });\n    dom.addEventListener(\"submit\", go);\n    return { dom, style: \"gotoLine\", pos: -10 };\n}\n/// Command that shows a dialog asking the user for a line number, and\n/// when a valid number is provided, moves the cursor to that line.\n///\n/// The dialog can be styled with the `panel.gotoLine` theme\n/// selector.\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        view.dispatch({ reconfigure: { append: [panels(), showPanel.of(createLineDialog), baseTheme] } });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n/// Keymap that binds Alt-g to [`gotoLine`](#goto-line.gotoLine).\nconst gotoLineKeymap = [\n    { key: \"Alt-g\", run: gotoLine }\n];\n\nexport { gotoLine, gotoLineKeymap };\n","import { highlightSpecialChars, drawSelection, keymap } from '@codemirror/next/view';\nexport { EditorView } from '@codemirror/next/view';\nimport { EditorState } from '@codemirror/next/state';\nexport { EditorState } from '@codemirror/next/state';\nimport { history, historyKeymap } from '@codemirror/next/history';\nimport { foldGutter, foldKeymap } from '@codemirror/next/fold';\nimport { indentOnInput } from '@codemirror/next/language';\nimport { lineNumbers } from '@codemirror/next/gutter';\nimport { defaultKeymap } from '@codemirror/next/commands';\nimport { bracketMatching } from '@codemirror/next/matchbrackets';\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/next/closebrackets';\nimport { searchKeymap } from '@codemirror/next/search';\nimport { autocompletion, completionKeymap } from '@codemirror/next/autocomplete';\nimport { commentKeymap } from '@codemirror/next/comment';\nimport { rectangularSelection } from '@codemirror/next/rectangular-selection';\nimport { gotoLineKeymap } from '@codemirror/next/goto-line';\nimport { highlightActiveLine, highlightSelectionMatches } from '@codemirror/next/highlight-selection';\nimport { defaultHighlightStyle } from '@codemirror/next/highlight';\nimport { lintKeymap } from '@codemirror/next/lint';\n\n/// This is an extension value that just pulls together a whole lot of\n/// extensions that you might want in a basic editor. It is meant as a\n/// convenient helper to quickly set up CodeMirror without installing\n/// and importing a lot of packages.\n///\n/// Specifically, it includes...\n///\n///  - [the default command bindings](#commands.defaultKeymap)\n///  - [line numbers](#gutter.lineNumbers)\n///  - [special character highlighting](#view.highlightSpecialChars)\n///  - [the undo history](#history.history)\n///  - [a fold gutter](#fold.foldGutter)\n///  - [custom selection drawing](#view.drawSelection)\n///  - [multiple selections](#state.EditorState^allowMultipleSelections)\n///  - [reindentation on input](#language.indentOnInput)\n///  - [the default highlight style](#highlight.defaultHighlightStyle)\n///  - [bracket matching](#matchbrackets.bracketMatching)\n///  - [bracket closing](#closebrackets.closeBrackets)\n///  - [autocompletion](#autocomplete.autocompletion)\n///  - [rectangular selection](#rectangular-selection.rectangularSelection)\n///  - [active line highlighting](#highlight-selection.highlightActiveLine)\n///  - [selection match highlighting](#highlight-selection.highlightSelectionMatches)\n///  - [search](#search.searchKeymap)\n///  - [go to line](#goto-line.gotoLineKeymap)\n///  - [commenting](#comment.commentKeymap)\n///  - [linting](#lint.lintKeymap)\n///\n/// (You'll probably want to add some language package to your setup\n/// too.)\n///\n/// This package does not allow customization. The idea is that, once\n/// you decide you want to configure your editor more precisely, you\n/// take this package's source (which is just a bunch of imports and\n/// an array literal), copy it into your own code, and adjust it as\n/// desired.\nconst basicSetup = [\n    lineNumbers(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    defaultHighlightStyle,\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...commentKeymap,\n        ...gotoLineKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n];\n\nexport { basicSetup };\n","import { Transaction, EditorSelection, CharCategory } from '@codemirror/next/state';\nimport { Text, countColumn, codePointSize, codePointAt } from '@codemirror/next/text';\nimport { Direction } from '@codemirror/next/view';\nimport { matchBrackets } from '@codemirror/next/matchbrackets';\nimport { IndentContext, getIndentation, indentString, indentUnit, getIndentUnit, syntaxTree } from '@codemirror/next/language';\nimport { NodeProp } from 'lezer-tree';\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.primaryIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, annotations: Transaction.userEvent.of(\"keyboardselection\") });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one character to the left (which is backward in\n/// left-to-right text, forward in right-to-left text).\nconst cursorCharLeft = view => cursorByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection one character to the right.\nconst cursorCharRight = view => cursorByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection one character forward.\nconst cursorCharForward = view => cursorByChar(view, true);\n/// Move the selection one character backward.\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection across one group of word or non-word (but also\n/// non-space) characters.\nconst cursorGroupLeft = view => cursorByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection one group to the right.\nconst cursorGroupRight = view => cursorByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection one group forward.\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/// Move the selection one group backward.\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolve(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/// Move the cursor over the next syntactic element to the left.\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the cursor over the next syntactic element to the right.\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one line up.\nconst cursorLineUp = view => cursorByLine(view, false);\n/// Move the selection one line down.\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction cursorByPage(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward, view.dom.clientHeight) : rangeEnd(range, forward));\n}\n/// Move the selection one page up.\nconst cursorPageUp = view => cursorByPage(view, false);\n/// Move the selection one page down.\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.visualLineAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head > line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/// Move the selection to the next line wrap point, or to the end of\n/// the line if there isn't one left on this line.\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection to previous line wrap point, or failing that to\n/// the start of the line.\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection to the start of the line.\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from, 1));\n/// Move the selection to the end of the line.\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/// Move the selection to the bracket matching the one it is currently\n/// on, if any.\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/// Extend the selection to the bracket matching the one the selection\n/// head is currently on, if any.\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/// Move the selection head one character to the left, while leaving\n/// the anchor in place.\nconst selectCharLeft = view => selectByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection head one character to the right.\nconst selectCharRight = view => selectByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection head one character forward.\nconst selectCharForward = view => selectByChar(view, true);\n/// Move the selection head one character backward.\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/// Move the selection head one [group](#commands.cursorGroupLeft) to\n/// the left.\nconst selectGroupLeft = view => selectByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection head one group to the right.\nconst selectGroupRight = view => selectByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection head one group forward.\nconst selectGroupForward = view => selectByGroup(view, true);\n/// Move the selection head one group backward.\nconst selectGroupBackward = view => selectByGroup(view, false);\n/// Move the selection head over the next syntactic element to the left.\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the selection head over the next syntactic element to the right.\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/// Move the selection head one line up.\nconst selectLineUp = view => selectByLine(view, false);\n/// Move the selection head one line down.\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, view.dom.clientHeight));\n}\n/// Move the selection head one page up.\nconst selectPageUp = view => selectByPage(view, false);\n/// Move the selection head one page down.\nconst selectPageDown = view => selectByPage(view, true);\n/// Move the selection head to the next line boundary.\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection head to the previous line boundary.\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection head to the start of the line.\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from));\n/// Move the selection head to the end of the line.\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to));\n/// Move the selection to the start of the document.\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/// Move the selection to the end of the document.\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/// Move the selection head to the start of the document.\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: 0 }));\n    return true;\n};\n/// Move the selection head to the end of the document.\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: state.doc.length }));\n    return true;\n};\n/// Select the entire document.\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Expand the selection to cover entire lines.\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: new EditorSelection(ranges), annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Select the next syntactic construct that is larger than the\n/// selection. Note that this will only work insofar as the language\n/// [provider](#language.language) you use builds up a full\n/// syntax tree.\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolve(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/// Simplify the current selection. When multiple ranges are selected,\n/// reduce it to its primary range. Otherwise, if the selection is\n/// non-empty, convert it to a cursor selection.\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = new EditorSelection([cur.primary]);\n    else if (!cur.primary.empty)\n        selection = new EditorSelection([EditorSelection.cursor(cur.primary.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(view, by) {\n    let { state } = view, changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"delete\") });\n    return true;\n}\nconst deleteByChar = (view, forward, codePoint) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), before;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, 0, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        return pos;\n    }\n    let target;\n    if (codePoint) {\n        let next = line.slice(pos - line.from + (forward ? 0 : -2), pos - line.from + (forward ? 2 : 0));\n        let size = next ? codePointSize(codePointAt(next, 0)) : 1;\n        target = forward ? Math.min(state.doc.length, pos + size) : Math.max(0, pos - size);\n    }\n    else {\n        target = line.findClusterBreak(pos - line.from, forward) + line.from;\n    }\n    if (target == pos && line.number != (forward ? state.doc.lines : 1))\n        target += forward ? 1 : -1;\n    return target;\n});\n/// Delete the selection, or, for cursor selections, the code point\n/// before the cursor.\nconst deleteCodePointBackward = view => deleteByChar(view, false, true);\n/// Delete the selection, or, for cursor selections, the code point\n/// after the cursor.\nconst deleteCodePointForward = view => deleteByChar(view, true, true);\n/// Delete the selection, or, for cursor selections, the character\n/// before the cursor.\nconst deleteCharBackward = view => deleteByChar(view, false, false);\n/// Delete the selection or the character after the cursor.\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (view, forward) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        let next, nextChar;\n        if (pos == (forward ? line.to : line.from)) {\n            if (line.number == (forward ? state.doc.lines : 1))\n                break;\n            line = state.doc.line(line.number + (forward ? 1 : -1));\n            next = forward ? line.from : line.to;\n            nextChar = \"\\n\";\n        }\n        else {\n            next = line.findClusterBreak(pos - line.from, forward) + line.from;\n            nextChar = line.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        }\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextCat != CharCategory.Space)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/// Delete the selection or backward until the end of the next\n/// [group](#view.EditorView.moveByGroup).\nconst deleteGroupBackward = view => deleteByGroup(view, false);\n/// Delete the selection or forward until the end of the next group.\nconst deleteGroupForward = view => deleteByGroup(view, true);\n/// Delete the selection, or, if it is a cursor selection, delete to\n/// the end of the line. If the cursor is directly at the end of the\n/// line, delete the line break after it.\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.visualLineAt(pos).to;\n    if (pos < lineEnd)\n        return lineEnd;\n    return Math.max(view.state.doc.length, pos + 1);\n});\n/// Delete all whitespace directly before a line end from the\n/// document.\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes }));\n    return true;\n};\n/// Replace each selection range with a line break, leaving the cursor\n/// on the line before the break.\nconst splitLine = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") }));\n    return true;\n};\n/// Flip the characters before and after the cursor(s).\nconst transposeChars = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : line.findClusterBreak(pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : line.findClusterBreak(pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (upto == startLine.number)\n            blocks[blocks.length - 1].to = endLine.to;\n        else\n            blocks.push({ from: startLine.from, to: endLine.to });\n        upto = endLine.number;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        if (forward)\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.slice() + state.lineBreak });\n        else\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.slice() });\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Move the selected lines up one line.\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/// Move the selected lines down one line.\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Create a copy of the selected lines. Keep the selection in the top copy.\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/// Create a copy of the selected lines. Keep the selection in the bottom copy.\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/// Delete selected lines.\nconst deleteLine = view => {\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true });\n    return true;\n};\n/// Replace the selection with a newline.\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolve(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/// Replace the selection with a newline and indent the newly created\n/// line(s). If the current line consists only of whitespace, this\n/// will also delete that whitespace. When the cursor is between\n/// matching brackets, an additional newline will be inserted after\n/// the cursor.\nconst insertNewlineAndIndent = ({ state, dispatch }) => {\n    let changes = state.changeByRange(({ from, to }) => {\n        let explode = from == to && isBetweenBrackets(state, from);\n        let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n        let indent = getIndentation(cx, from);\n        if (indent == null)\n            indent = /^\\s*/.exec(state.doc.lineAt(from).slice(0, 50))[0].length;\n        let line = state.doc.lineAt(from);\n        while (to < line.to && /\\s/.test(line.slice(to - line.from, to + 1 - line.from)))\n            to++;\n        if (explode)\n            ({ from, to } = explode);\n        else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.slice(0, from)))\n            from = line.from;\n        let insert = [\"\", indentString(state, indent)];\n        if (explode)\n            insert.push(indentString(state, cx.lineIndent(line)));\n        return { changes: { from, to, insert: Text.of(insert) },\n            range: EditorSelection.cursor(from + 1 + indent) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let line = state.doc.lineAt(range.from);;) {\n            if (line.number > atLine) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            if (range.to <= line.to)\n                break;\n            line = state.doc.lineAt(line.to + 1);\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/// Auto-indent the selected lines. This uses the [indentation service\n/// facet](#language.indentService) as source for auto-indent\n/// information.\nconst indentSelection = ({ state, dispatch }) => {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, 200)))[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes));\n    return true;\n};\n/// Add a [unit](#language.indentUnit) of indentation to all selected\n/// lines.\nconst indentMore = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    })));\n    return true;\n};\n/// Remove a [unit](#language.indentUnit) of indentation from all\n/// selected lines.\nconst indentLess = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let lineStart = line.slice(0, Math.min(line.length, 200));\n        let space = /^\\s*/.exec(lineStart)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, 0, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    })));\n    return true;\n};\n/// Array of key bindings containing the Emacs-style bindings that are\n/// available on macOS by default.\n///\n///  - Ctrl-b: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - Ctrl-f: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-p: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - Ctrl-n: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Ctrl-a: [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Ctrl-e: [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - Ctrl-d: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-h: [`deleteCharBackward`](#commands.deleteCharBackward)\n///  - Ctrl-k: [`deleteToLineEnd`](#commands.deleteToLineEnd)\n///  - Alt-d: [`deleteGroupForward`](#commands.deleteGroupForward)\n///  - Ctrl-Alt-h: [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-o: [`splitLine`](#commands.splitLine)\n///  - Ctrl-t: [`transposeChars`](#commands.transposeChars)\n///  - Alt-f: [`cursorGroupForward`](#commands.cursorGroupForward) ([`selectGroupForward`](#commands.selectGroupForward) with Shift)\n///  - Alt-b: [`cursorGroupBackward`](#commands.cursorGroupBackward) ([`selectGroupBackward`](#commands.selectGroupBackward) with Shift)\n///  - Alt-<: [`cursorDocStart`](#commands.cursorDocStart)\n///  - Alt->: [`cursorDocEnd`](#commands.cursorDocEnd)\n///  - Ctrl-v: [`cursorPageDown`](#commands.cursorPageDown)\n///  - Alt-v: [`cursorPageUp`](#commands.cursorPageUp)\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Alt-d\", run: deleteGroupForward },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Alt-f\", run: cursorGroupForward, shift: selectGroupForward },\n    { key: \"Alt-b\", run: cursorGroupBackward, shift: selectGroupBackward },\n    { key: \"Alt-<\", run: cursorDocStart },\n    { key: \"Alt->\", run: cursorDocEnd },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n    { key: \"Alt-v\", run: cursorPageUp },\n];\n/// An array of key bindings closely sticking to platform-standard or\n/// widely used bindings. (This includes the bindings from\n/// [`emacsStyleKeymap`](#commands.emacsStyleKeymap), with their `key`\n/// property changed to `mac`.)\n///\n///  - ArrowLeft: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - ArrowRight: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](#commands.cursorGroupLeft) ([`selectGroupLeft`](#commands.selectGroupLeft) with Shift)\n///  - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](#commands.cursorGroupRight) ([`selectGroupRight`](#commands.selectGroupRight) with Shift)\n///  - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - ArrowUp: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - ArrowDown: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Cmd-ArrowUp (on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - PageUp: [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - PageDown: [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - Home: [`cursorLineBoundaryBackward`](#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](#commands.selectLineBoundaryBackward) with Shift)\n///  - End: [`cursorLineBoundaryForward`](#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](#commands.selectLineBoundaryForward) with Shift)\n///  - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Enter: [`insertNewlineAndIndent`](#commands.insertNewlineAndIndent)\n///  - Ctrl-a (Cmd-a on macOS): [`selectAll`](#commands.selectAll)\n///  - Backspace: [`deleteCodePointBackward`](#commands.deleteCodePointBackward)\n///  - Delete: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](#commands.deleteGroupForward)\nconst standardKeymap = [\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCodePointBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n].concat(emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/// The default keymap. Includes all bindings from\n/// [`standardKeymap`](#commands.standardKeymap) plus the following:\n///\n/// - Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](#commands.selectSyntaxLeft) with Shift)\n/// - Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](#commands.cursorSyntaxRight) ([`selectSyntaxRight`](#commands.selectSyntaxRight) with Shift)\n/// - Alt-ArrowUp: [`moveLineUp`](#commands.moveLineUp)\n/// - Alt-ArrowDown: [`moveLineDown`](#commands.moveLineDown)\n/// - Shift-Alt-ArrowUp: [`copyLineUp`](#commands.copyLineUp)\n/// - Shift-Alt-ArrowDown: [`copyLineDown`](#commands.copyLineDown)\n/// - Escape: [`simplifySelection`](#commands.simplifySelection)\n/// - Ctrl-l (Cmd-l on macOS): [`selectLine`](#commands.selectLine)\n/// - Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](#commands.selectParentSyntax)\n/// - Ctrl-[ (Cmd-[ on macOS): [`indentLess`](#commands.indentLess)\n/// - Ctrl-] (Cmd-] on macOS): [`indentMore`](#commands.indentMore)\n/// - Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](#commands.indentSelection)\n/// - Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](#commands.deleteLine)\n/// - Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](#commands.cursorMatchingBracket)\nconst defaultKeymap = [\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket }\n].concat(standardKeymap);\n\nexport { copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteCodePointBackward, deleteCodePointForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteTrailingWhitespace, emacsStyleKeymap, indentLess, indentMore, indentSelection, insertNewline, insertNewlineAndIndent, moveLineDown, moveLineUp, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, transposeChars };\n","import { EditorSelection } from '@codemirror/next/state';\n\n/// Comments or uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst toggleLineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineUncomment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Comments or uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst toggleBlockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockUncomment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Default key bindings for this package.\n///\n///  - Ctrl-/ (Cmd-/ on macOS): [\\`toggleLineComment\\`](#comment.toggleLineComment).\n///  - Shift-Alt-a: [\\`toggleBlockComment\\`](#comment.toggleBlockComment).\nconst commentKeymap = [\n    { key: \"Mod-/\", run: toggleLineComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n];\nfunction dispatch(cmd, target) {\n    const tr = cmd(target.state);\n    if (!tr)\n        return false;\n    target.dispatch(tr);\n    return true;\n}\nvar CommentOption;\n(function (CommentOption) {\n    CommentOption[CommentOption[\"Toggle\"] = 0] = \"Toggle\";\n    CommentOption[CommentOption[\"OnlyComment\"] = 1] = \"OnlyComment\";\n    CommentOption[CommentOption[\"OnlyUncomment\"] = 2] = \"OnlyUncomment\";\n})(CommentOption || (CommentOption = {}));\nfunction getConfig(state, pos = state.selection.primary.head) {\n    return state.languageDataAt(\"commentTokens\", pos)[0] || {};\n}\nconst toggleBlockCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.block ? new BlockCommenter(config.block.open, config.block.close).toggle(option, state) : null;\n};\nconst toggleLineCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.line ? new LineCommenter(config.line).toggle(option, state) : null;\n};\n// This class performs toggle, comment and uncomment\n// of block comments in languages that support them.\n// The `open` and `close` arguments refer to the open and close\n// tokens of which this `BlockCommenter` is made up.\nclass BlockCommenter {\n    constructor(open, close, margin = \" \") {\n        this.open = open;\n        this.close = close;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const selectionCommented = this.isSelectionCommented(state);\n        if (selectionCommented !== null) {\n            if (option !== CommentOption.OnlyComment) {\n                return state.update({\n                    changes: selectionCommented.map(({ open, close }) => [\n                        { from: open.pos - this.open.length, to: open.pos + open.margin },\n                        { from: close.pos - close.margin, to: close.pos + this.close.length }\n                    ])\n                });\n            }\n        }\n        else {\n            if (option !== CommentOption.OnlyUncomment) {\n                return state.update(state.changeByRange(range => {\n                    const shift = (this.open + this.margin).length;\n                    return {\n                        changes: [{ from: range.from, insert: this.open + this.margin },\n                            { from: range.to, insert: this.margin + this.close }],\n                        range: EditorSelection.range(range.anchor + shift, range.head + shift)\n                    };\n                }));\n            }\n        }\n        return null;\n    }\n    /// Determines whether all selection ranges in `state` are block-commented.\n    isSelectionCommented(state) {\n        let result = [];\n        for (const range of state.selection.ranges) {\n            const x = this.isRangeCommented(state, range);\n            if (x === null)\n                return null;\n            result.push(x);\n        }\n        return result;\n    }\n    /// Determines if the `range` is block-commented in the given `state`.\n    /// The `range` must be a valid range in `state`.\n    isRangeCommented(state, range) {\n        let textBefore = state.sliceDoc(range.from - SearchMargin, range.from);\n        let textAfter = state.sliceDoc(range.to, range.to + SearchMargin);\n        let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n        let beforeOff = textBefore.length - spaceBefore;\n        if (textBefore.slice(beforeOff - this.open.length, beforeOff) == this.open &&\n            textAfter.slice(spaceAfter, spaceAfter + this.close.length) == this.close) {\n            return { open: { pos: range.from - spaceBefore, margin: spaceBefore && 1 },\n                close: { pos: range.to + spaceAfter, margin: spaceAfter && 1 } };\n        }\n        let startText, endText;\n        if (range.to - range.from <= 2 * SearchMargin) {\n            startText = endText = state.sliceDoc(range.from, range.to);\n        }\n        else {\n            startText = state.sliceDoc(range.from, range.from + SearchMargin);\n            endText = state.sliceDoc(range.to - SearchMargin, range.to);\n        }\n        let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n        let endOff = endText.length - endSpace - this.close.length;\n        if (startText.slice(startSpace, startSpace + this.open.length) == this.open &&\n            endText.slice(endOff, endOff + this.close.length) == this.close) {\n            return { open: { pos: range.from + startSpace + this.open.length,\n                    margin: /\\s/.test(startText.charAt(startSpace + this.open.length)) ? 1 : 0 },\n                close: { pos: range.to - endSpace - this.close.length,\n                    margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n        }\n        return null;\n    }\n}\nconst SearchMargin = 50;\n// This class performs toggle, comment and uncomment\n// of line comments in languages that support them.\n// The `lineCommentToken` argument refer to the token of\n// which this `LineCommenter` is made up.\nclass LineCommenter {\n    constructor(lineCommentToken, margin = \" \") {\n        this.lineCommentToken = lineCommentToken;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const linesAcrossSelection = [];\n        const linesAcrossRange = {};\n        for (let i = 0; i < state.selection.ranges.length; i++) {\n            const lines = getLinesInRange(state.doc, state.selection.ranges[i]);\n            linesAcrossSelection.push(...lines);\n            linesAcrossRange[i] = lines;\n        }\n        const column = this.isRangeCommented(state, linesAcrossSelection);\n        if (column.isRangeLineSkipped) {\n            if (option != CommentOption.OnlyComment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length > 1 && column.isLineSkipped[line.number])\n                            continue;\n                        const pos = line.from + column.minCol;\n                        const posAfter = column.minCol + this.lineCommentToken.length;\n                        const marginLen = line.slice(posAfter, posAfter + 1) == \" \" ? 1 : 0;\n                        changes.push({ from: pos, to: pos + this.lineCommentToken.length + marginLen });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        else {\n            if (option != CommentOption.OnlyUncomment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length <= 1 || !column.isLineSkipped[line.number])\n                            changes.push({ from: line.from + column.minCol, insert: this.lineCommentToken + this.margin });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        return null;\n    }\n    isRangeCommented(_state, lines) {\n        let minCol = Infinity;\n        let isRangeLineDiscarded = true;\n        const isLineSkipped = [];\n        for (const line of lines) {\n            const str = line.slice(0, Math.min(line.length, SearchMargin));\n            const col = /^\\s*/.exec(str)[0].length;\n            if ((lines.length == 1 || col < str.length) && col < minCol) {\n                minCol = col;\n            }\n            if (isRangeLineDiscarded && (lines.length == 1 || col < str.length) &&\n                str.slice(col, col + this.lineCommentToken.length) != this.lineCommentToken) {\n                isRangeLineDiscarded = false;\n            }\n            isLineSkipped[line.number] = col == str.length;\n        }\n        return { minCol: minCol, isRangeLineSkipped: isRangeLineDiscarded, isLineSkipped: isLineSkipped };\n    }\n}\n// Computes the lines spanned by `range`.\n/// @internal\nfunction getLinesInRange(doc, range) {\n    let line = doc.lineAt(range.from);\n    const lines = [];\n    while (line.from + line.length < range.to ||\n        (line.from <= range.to && range.to <= line.to)) {\n        lines.push(line);\n        if (line.number + 1 <= doc.lines) {\n            line = doc.line(line.number + 1);\n        }\n        else {\n            break;\n        }\n    }\n    return lines;\n}\n\nexport { blockComment, blockUncomment, commentKeymap, lineComment, lineUncomment, toggleBlockComment, toggleLineComment };\n","import { EditorView, ViewPlugin, themeClass, BlockType, PluginField, Direction } from '@codemirror/next/view';\nimport { RangeValue, Range, RangeSet } from '@codemirror/next/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/next/state';\n\n/// A gutter marker represents a bit of information attached to a line\n/// in a specific gutter. Your own custom markers have to extend this\n/// class.\nclass GutterMarker extends RangeValue {\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// Render the DOM node for this marker, if any.\n    toDOM(_view) { return null; }\n    /// Create a range that places this marker at the given position.\n    at(pos) { return new Range(pos, pos, this); }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nconst defaults = {\n    style: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = Facet.define();\n/// Define an editor gutter.\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = EditorView.baseTheme({\n    $gutters: {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0\n    },\n    \"$$light $gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"$$dark $gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    $gutter: {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        height: \"100%\",\n        overflow: \"hidden\"\n    },\n    $gutterElement: {\n        boxSizing: \"border-box\"\n    },\n    \"$gutterElement.lineNumber\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    }\n});\nconst unfixGutters = Facet.define({\n    combine: values => values.some(x => x)\n});\n/// The gutter-drawing plugin is automatically enabled when you add a\n/// gutter, but you can use this function to explicitly configure it.\n///\n/// Unless `fixed` is explicitly set to `false`, the gutters are\n/// fixed, meaning they don't scroll along with the content\n/// horizontally.\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutters\");\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (!this.updateGutters(update))\n            return;\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport));\n        this.view.viewportLines(line => {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                return;\n            for (let cx of contexts)\n                cx.line(this.view, text);\n        }, 0);\n        for (let cx of contexts)\n            cx.finish();\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (update.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n    }\n    updateGutters(update) {\n        let prev = update.prevState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged;\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters)\n                g.dom.remove();\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        this.dom.remove();\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nclass UpdateContext {\n    constructor(gutter, viewport) {\n        this.gutter = gutter;\n        this.localMarkers = [];\n        this.i = 0;\n        this.height = 0;\n        this.cursor = RangeSet.iter(Array.isArray(gutter.markers) ? gutter.markers : [gutter.markers], viewport.from);\n    }\n    line(view, line) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        while (this.cursor.value && this.cursor.from <= line.from) {\n            if (this.cursor.from == line.from)\n                this.localMarkers.push(this.cursor.value);\n            this.cursor.next();\n        }\n        let forLine = this.gutter.config.lineMarker(view, line, this.localMarkers);\n        if (forLine)\n            this.localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (this.localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, this.localMarkers, gutter.elementClass);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            let markers = this.localMarkers, elt = gutter.elements[this.i];\n            if (sameMarkers(markers, elt.markers)) {\n                markers = elt.markers;\n                this.localMarkers.length = 0;\n            }\n            elt.update(view, line.height, above, markers, gutter.elementClass);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i)\n            gutter.dom.removeChild(gutter.elements.pop().dom);\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutter\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        this.elementClass = themeClass(\"gutterElement\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.visualLineAtHeight(event.clientY, view.contentDOM.getBoundingClientRect().top);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = config.markers(view.state);\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)], this.elementClass);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = this.config.markers(update.state);\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated], this.elementClass);\n        }\n        return this.markers != prevMarkers;\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers, eltClass) {\n        this.height = -1;\n        this.above = 0;\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers, eltClass);\n    }\n    update(view, height, above, markers, cssClass) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (this.markers != markers) {\n            this.markers = markers;\n            for (let ch; ch = this.dom.lastChild;)\n                ch.remove();\n            let cls = cssClass;\n            for (let m of markers) {\n                let dom = m.toDOM(view);\n                if (dom)\n                    this.dom.appendChild(dom);\n                let c = m.elementClass;\n                if (c)\n                    cls += \" \" + c;\n            }\n            this.dom.className = cls;\n        }\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/// Facet used to provide markers to the line number gutter.\nconst lineNumberMarkers = Facet.define();\nconst lineNumberConfig = Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM(view) {\n        let config = view.state.facet(lineNumberConfig);\n        return document.createTextNode(config.formatNumber(this.number));\n    }\n}\nconst lineNumberGutter = gutter({\n    style: \"lineNumber\",\n    markers(state) { return state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.length)\n            return null;\n        // FIXME try to make the line number queries cheaper?\n        return new NumberMarker(view.state.doc.lineAt(line.from).number);\n    },\n    initialSpacer(view) {\n        return new NumberMarker(maxLineNumber(view.state.doc.lines));\n    },\n    updateSpacer(spacer, update) {\n        let max = maxLineNumber(update.view.state.doc.lines);\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    }\n});\n/// Create a line number gutter extension. The order in which the\n/// gutters appear is determined by their extension priority.\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\n\nexport { GutterMarker, gutter, gutters, lineNumberMarkers, lineNumbers };\n","import { Decoration, themeClass, ViewPlugin, EditorView } from '@codemirror/next/view';\nimport { Facet, combineConfig, CharCategory } from '@codemirror/next/state';\nimport { SearchCursor } from '@codemirror/next/search';\n\n/// Mark lines that have a cursor on them with the \\`$activeLine\\`\n/// theme class.\nfunction highlightActiveLine() {\n    return [defaultTheme, activeLineHighlighter];\n}\nconst lineDeco = Decoration.line({ attributes: { class: themeClass(\"activeLine\") } });\nconst activeLineHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                continue;\n            let line = view.visualLineAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/// This extension highlights text that matches the selection. It uses\n/// the `$selectionMatch` theme class for the highlighting. When\n/// `highlightWordAroundCursor` is enabled, the word at the cursor\n/// itself will be highlighted with `selectionMatch.main`.\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nfunction wordAt(doc, pos, check) {\n    let line = doc.lineAt(pos);\n    let from = pos - line.from, to = pos - line.from;\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (check(line.slice(prev, from)) != CharCategory.Word)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (check(line.slice(to, next)) != CharCategory.Word)\n            break;\n        to = next;\n    }\n    return from == to ? null : line.slice(from, to);\n}\nconst matchDeco = Decoration.mark({ class: themeClass(\"selectionMatch\") });\nconst mainMatchDeco = Decoration.mark({ class: themeClass(\"selectionMatch.main\") });\nconst matchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.primary, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = wordAt(state.doc, range.head, check);\n            if (!query)\n                return Decoration.none;\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            query = state.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return Decoration.none;\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n                    (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = EditorView.baseTheme({\n    \"$$light $activeLine\": { backgroundColor: \"#f3f9ff\" },\n    \"$$dark $activeLine\": { backgroundColor: \"#223039\" },\n    \"$selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \"$searchMatch $selectionMatch\": { backgroundColor: \"transparent\" }\n});\n\nexport { highlightActiveLine, highlightSelectionMatches };\n","import { NodeProp } from 'lezer-tree';\nimport { StyleModule } from 'style-mod';\nimport { EditorView, ViewPlugin, Decoration } from '@codemirror/next/view';\nimport { Facet, precedence } from '@codemirror/next/state';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nlet nextTagID = 0;\n/// Highlighting tags are markers that denote a highlighting category.\n/// They are [associated](#highlight.styleTags) with parts of a syntax\n/// tree by a language mode, and then mapped to an actual CSS style by\n/// a [highlight style](#highlight.highlightStyle).\n///\n/// CodeMirror uses a mostly-closed set of tags for generic\n/// highlighters, so that the list of things that a theme must style\n/// is clear and bounded (as opposed to traditional open string-based\n/// systems, which make it hard for highlighting themes to cover all\n/// the tokens produced by the various languages).\n///\n/// It _is_ possible to [define](#highlight.Tag^define) your own\n/// highlighting tags for system-internal use (where you control both\n/// the language package and the highlighter), but such tags will not\n/// be picked up by other highlighters (though you can derive them\n/// from standard tags to allow the highlighters to fall back to\n/// those).\nclass Tag {\n    /// @internal\n    constructor(\n    /// The set of tags that match this tag, starting with this one\n    /// itself, sorted in order of decreasing specificity. @internal\n    set, \n    /// The base unmodified tag that this one is based on, if it's\n    /// modified @internal\n    base, \n    /// The modifiers applied to this.base @internal\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /// @internal\n        this.id = nextTagID++;\n    }\n    /// Define a new tag. If `parent` is given, the tag is treated as a\n    /// sub-tag of that parent, and [highlight\n    /// styles](#highlight.highlightStyle) that don't mention this tag\n    /// will try to fall back to the parent tag (or grandparent tag,\n    /// etc).\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /// Define a tag _modifier_, which is a function that, given a tag,\n    /// will return a tag that is a subtag of the original. Applying the\n    /// same modifier to a twice tag will return the same value (`m1(t1)\n    /// == m1(t1)`) and applying multiple modifiers will, regardless or\n    /// order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    ///\n    /// When multiple modifiers are applied to a given base tag, each\n    /// smaller set of modifiers is registered as a parent, so that for\n    /// example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    /// `m1(m3(t1)`, and so on.\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = permute(mods);\n        for (let parent of base.set)\n            for (let config of configs)\n                set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction permute(array) {\n    let result = [array];\n    for (let i = 0; i < array.length; i++) {\n        for (let a of permute(array.slice(0, i).concat(array.slice(i + 1))))\n            result.push(a);\n    }\n    return result;\n}\n/// This function is used to add a set of tags to a language syntax\n/// via\n/// [`Parser.configure`](https://lezer.codemirror.net/docs/ref#lezer.Parser.configure).\n///\n/// The argument object maps node selectors to [highlighting\n/// tags](#highlight.Tag) or arrays of tags.\n///\n/// Node selectors may hold one or more (space-separated) node paths.\n/// Such a path can be a [node\n/// name](https://lezer.codemirror.net/docs/ref#tree.NodeType.name),\n/// or multiple node names (or `*` wildcards) separated by slash\n/// characters, as in `\"Block/Declaration/VariableName\"`. Such a path\n/// matches the final node but only if its direct parent nodes are the\n/// other nodes mentioned. A `*` in such a path matches any parent,\n/// but only a single level—wildcards that match multiple parents\n/// aren't supported, both for efficiency reasons and because Lezer\n/// trees make it rather hard to reason about what they would match.)\n///\n/// A path can be ended with `/...` to indicate that the tag assigned\n/// to the node should also apply to all parent nodes, even if they\n/// match their own style (by default, only the innermost style is\n/// used).\n///\n/// When a path ends in `!`, as in `Attribute!`, no further matching\n/// happens for the node's child nodes, and the entire node gets the\n/// given style.\n///\n/// In this notation, node names that contain `/`, `!`, `*`, or `...`\n/// must be quoted as JSON strings.\n///\n/// For example:\n///\n/// ```javascript\n/// parser.withProps(\n///   styleTags({\n///     // Style Number and BigNumber nodes\n///     \"Number BigNumber\": tags.number,\n///     // Style Escape nodes whose parent is String\n///     \"String/Escape\": tags.escape,\n///     // Style anything inside Attributes nodes\n///     \"Attributes!\": tags.meta,\n///     // Add a style to all content inside Italic nodes\n///     \"Italic/...\": tags.emphasis,\n///     // Style InvalidString nodes as both `string` and `invalid`\n///     \"InvalidString\": tags.string + tags.invalid,\n///     // Style the node named \"/\" as punctuation\n///     '\"/\"': tags.punctuation\n///   })\n/// )\n/// ```\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? null : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nconst highlightStyleProp = Facet.define({\n    combine(stylings) { return stylings.length ? stylings[0] : null; }\n});\n/// Create a highlighter style that associates the given styles to the\n/// given tags. The spec's property names must be\n/// [tags](#highlight.Tag) or lists of tags (which can be concatenated\n/// with `+`). The values should be\n/// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n/// style objects that define the CSS for that tag.\n///\n/// The CSS rules created for a highlighter will be emitted in the\n/// order of the spec's properties. That means that for elements that\n/// have multiple tags associated with them, styles defined further\n/// down in the list will have a higher CSS precedence than styles\n/// defined earlier.\nfunction highlightStyle(...specs) {\n    let styling = new Styling(specs);\n    return [\n        highlightStyleProp.of(styling),\n        EditorView.styleModule.of(styling.module)\n    ];\n}\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nclass Styling {\n    constructor(spec) {\n        this.map = Object.create(null);\n        let modSpec = Object.create(null);\n        for (let style of spec) {\n            let cls = StyleModule.newName();\n            modSpec[\".\" + cls] = Object.assign({}, style, { tag: null });\n            let tags = style.tag;\n            if (!Array.isArray(tags))\n                tags = [tags];\n            for (let tag of tags)\n                this.map[tag.id] = cls;\n        }\n        this.module = new StyleModule(modSpec);\n    }\n    match(tag) {\n        for (let t of tag.set) {\n            let match = this.map[t.id];\n            if (match) {\n                if (t != tag)\n                    this.map[tag.id] = match;\n                return match;\n            }\n        }\n        return this.map[tag.id] = null;\n    }\n}\n/// Returns an extension that installs a highlighter that uses the\n/// tree produced by the given language, along with the current\n/// [highlight style](#highlight.highlightStyle), to style the\n/// document. If no highlight style is active, this plugin won't do\n/// any highlighting.\nfunction treeHighlighter(language) {\n    return precedence(ViewPlugin.define(view => new TreeHighlighter(view, language), {\n        decorations: v => v.decorations\n    }), \"fallback\");\n}\nclass TreeHighlighter {\n    constructor(view, language) {\n        this.language = language;\n        // Reused stacks for buildDeco\n        this.nodeStack = [\"\"];\n        this.classStack = [\"\"];\n        this.inheritStack = [\"\"];\n        this.markCache = Object.create(null);\n        this.tree = language.getTree(view.state);\n        this.decorations = this.buildDeco(view);\n    }\n    update(update) {\n        if (this.language.getTree(update.state).length < update.view.viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else {\n            let tree = this.language.getTree(update.state);\n            if (tree != this.tree || update.viewportChanged) {\n                this.tree = tree;\n                this.decorations = this.buildDeco(update.view);\n            }\n        }\n    }\n    buildDeco(view) {\n        const style = view.state.facet(highlightStyleProp);\n        if (!style)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        let start, curClass, depth;\n        let flush = (pos, style) => {\n            if (pos > start && style) {\n                let mark = this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style }));\n                builder.add(start, pos, mark);\n            }\n            start = pos;\n        };\n        let { nodeStack, classStack, inheritStack } = this;\n        for (let { from, to } of view.visibleRanges) {\n            curClass = \"\";\n            depth = 0;\n            start = from;\n            this.tree.iterate({\n                from, to,\n                enter: (type, start) => {\n                    depth++;\n                    let inheritedClass = inheritStack[depth - 1];\n                    let cls = inheritedClass;\n                    let rule = type.prop(ruleNodeProp), opaque = false;\n                    while (rule) {\n                        if (!rule.context || matchContext(rule.context, nodeStack, depth)) {\n                            for (let tag of rule.tags) {\n                                let st = style.match(tag);\n                                if (st) {\n                                    if (cls)\n                                        cls += \" \";\n                                    cls += st;\n                                    if (rule.mode == 1 /* Inherit */)\n                                        inheritedClass = cls;\n                                    else if (rule.mode == 0 /* Opaque */)\n                                        opaque = true;\n                                }\n                            }\n                            break;\n                        }\n                        rule = rule.next;\n                    }\n                    if (cls != curClass) {\n                        flush(start, curClass);\n                        curClass = cls;\n                    }\n                    if (opaque) {\n                        depth--;\n                        return false;\n                    }\n                    classStack[depth] = cls;\n                    inheritStack[depth] = inheritedClass;\n                    nodeStack[depth] = type.name;\n                    return undefined;\n                },\n                leave: (_t, _s, end) => {\n                    depth--;\n                    let backTo = classStack[depth];\n                    if (backTo != curClass) {\n                        flush(Math.min(to, end), curClass);\n                        curClass = backTo;\n                    }\n                }\n            });\n        }\n        return builder.finish();\n    }\n}\nfunction matchContext(context, stack, depth) {\n    if (context.length > depth - 1)\n        return false;\n    for (let d = depth - 1, i = context.length - 1; i >= 0; i--, d--) {\n        let check = context[i];\n        if (check && check != stack[d])\n            return false;\n    }\n    return true;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/// The default set of highlighting [tags](#highlight.Tag^define) used\n/// by regular language packages and themes.\n///\n/// This collection is heavily biasted towards programming language,\n/// and necessarily incomplete. A full ontology of syntactic\n/// constructs would fill a stack of books, and be impractical to\n/// write themes for. So try to make do with this set, possibly\n/// encoding more information with flags. If all else fails, [open an\n/// issue](https://github.com/codemirror/codemirror.next) to propose a\n/// new type, or [define](#highlight.Tag^define) a custom tag for your\n/// use case.\n///\n/// Note that it is not obligatory to always attach the most specific\n/// tag possible to an element—if your grammar can't easily\n/// distinguish a certain type of element, it is okay to style it as\n/// its more general variant.\n/// \n/// For tags that extend some parent tag, the documentation links to\n/// the parent.\nconst tags = {\n    /// A comment.\n    comment,\n    /// A line [comment](#highlight.tags.comment).\n    lineComment: t(comment),\n    /// A block [comment](#highlight.tags.comment).\n    blockComment: t(comment),\n    /// A documentation [comment](#highlight.tags.comment).\n    docComment: t(comment),\n    /// Any kind of identifier.\n    name,\n    /// The [name](#highlight.tags.name) of a variable.\n    variableName: t(name),\n    /// A type or tag [name](#highlight.tags.name).\n    typeName: t(name),\n    /// A property, field, or attribute [name](#highlight.tags.name).\n    propertyName: t(name),\n    /// The [name](#highlight.tags.name) of a class.\n    className: t(name),\n    /// A label [name](#highlight.tags.name).\n    labelName: t(name),\n    /// A namespace [name](#highlight.tags.name).\n    namespace: t(name),\n    /// The [name](#highlight.tags.name) of a macro.\n    macroName: t(name),\n    /// A literal value.\n    literal,\n    /// A string [literal](#highlight.tags.literal).\n    string,\n    /// A documentation [string](#highlight.tags.string).\n    docString: t(string),\n    /// A character literal (subtag of [string](#highlight.tags.string)).\n    character: t(string),\n    /// A number [literal](#highlight.tags.literal).\n    number,\n    /// An integer [number](#highlight.tags.number) literal.\n    integer: t(number),\n    /// A floating-point [number](#highlight.tags.number) literal.\n    float: t(number),\n    /// A boolean [literal](#highlight.tags.literal).\n    bool: t(literal),\n    /// Regular expression [literal](#highlight.tags.literal).\n    regexp: t(literal),\n    /// An escape [literal](#highlight.tags.literal), for example a\n    /// backslash escape in a string.\n    escape: t(literal),\n    /// A color [literal](#highlight.tags.literal).\n    color: t(literal),\n    /// A URL [literal](#highlight.tags.literal).\n    url: t(literal),\n    /// A language keyword.\n    keyword,\n    /// The [keyword](#highlight.tags.keyword) for the self or this\n    /// object.\n    self: t(keyword),\n    /// The [keyword](#highlight.tags.keyword) for null.\n    null: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    atom: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that represents a unit.\n    unit: t(keyword),\n    /// A modifier [keyword](#highlight.tags.keyword).\n    modifier: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that acts as an operator.\n    operatorKeyword: t(keyword),\n    /// A control-flow related [keyword](#highlight.tags.keyword).\n    controlKeyword: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that defines something.\n    definitionKeyword: t(keyword),\n    /// An operator.\n    operator,\n    /// An [operator](#highlight.tags.operator) that defines something.\n    derefOperator: t(operator),\n    /// Arithmetic-related [operator](#highlight.tags.operator).\n    arithmeticOperator: t(operator),\n    /// Logical [operator](#highlight.tags.operator).\n    logicOperator: t(operator),\n    /// Bit [operator](#highlight.tags.operator).\n    bitwiseOperator: t(operator),\n    /// Comparison [operator](#highlight.tags.operator).\n    compareOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that updates its operand.\n    updateOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that defines something.\n    definitionOperator: t(operator),\n    /// Type-related [operator](#highlight.tags.operator).\n    typeOperator: t(operator),\n    /// Control-flow [operator](#highlight.tags.operator).\n    controlOperator: t(operator),\n    /// Program or markup punctuation.\n    punctuation,\n    /// [Punctuation](#highlight.tags.punctuation) that separates\n    /// things.\n    separator: t(punctuation),\n    /// Bracket-style [punctuation](#highlight.tags.punctuation).\n    bracket,\n    /// Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    /// tokens).\n    angleBracket: t(bracket),\n    /// Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    /// tokens).\n    squareBracket: t(bracket),\n    /// Parentheses (usually `(` and `)` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket)).\n    paren: t(bracket),\n    /// Braces (usually `{` and `}` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket)).\n    brace: t(bracket),\n    /// Content, for example plain text in XML or markup documents.\n    content,\n    /// [Content](#highlight.tags.content) that represents a heading.\n    heading,\n    /// A level 1 [heading](#highlight.tags.heading).\n    heading1: t(heading),\n    /// A level 2 [heading](#highlight.tags.heading).\n    heading2: t(heading),\n    /// A level 3 [heading](#highlight.tags.heading).\n    heading3: t(heading),\n    /// A level 4 [heading](#highlight.tags.heading).\n    heading4: t(heading),\n    /// A level 5 [heading](#highlight.tags.heading).\n    heading5: t(heading),\n    /// A level 6 [heading](#highlight.tags.heading).\n    heading6: t(heading),\n    /// [Content](#highlight.tags.content) that represents a list or\n    /// list marker.\n    list: t(content),\n    /// [Content](#highlight.tags.content) that represents a quote.\n    quote: t(content),\n    /// [Content](#highlight.tags.content) that is emphasized.\n    emphasis: t(content),\n    /// [Content](#highlight.tags.content) that is styled strong.\n    strong: t(content),\n    /// [Content](#highlight.tags.content) that is part of a link.\n    link: t(content),\n    /// [Content](#highlight.tags.content) that is styled as code or\n    /// monospace.\n    monospace: t(content),\n    /// Inserted content in a change-tracking format.\n    inserted: t(),\n    /// Deleted content.\n    deleted: t(),\n    /// Changed content.\n    changed: t(),\n    /// An invalid or unsyntactic element.\n    invalid: t(),\n    /// Metadata or meta-instruction.\n    meta,\n    /// [Metadata](#highlight.tags.meta) that applies to the entire\n    /// document.\n    documentMeta: t(meta),\n    /// [Metadata](#highlight.tags.meta) that annotates or adds\n    /// attributes to a given syntactic element.\n    annotation: t(meta),\n    /// Processing instruction or preprocessor directive. Subtag of\n    /// [meta](#highlight.tags.meta)).\n    processingInstruction: t(meta),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    /// given element is being defined. Expected to be used with the\n    /// various [name](#highlight.tags.name) tags.\n    definition: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that\n    /// something is constant. Mostly expected to be used with\n    /// [variable names](#highlight.tags.variableName).\n    constant: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) used to indicate that a\n    /// [variable name](#highlight.tags.variableName) is being called or\n    /// being defined as a function.\n    function: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    /// [names](#highlight.tags.name) to indicate that they belong to\n    /// the standard environment.\n    standard: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    /// [names](#highlight.tags.name) is local to some scope.\n    local: Tag.defineModifier(),\n    /// A generic variant [modifier](#highlight.Tag^defineModifier) that\n    /// can be used to tag language-specific alternative variants of\n    /// some common tag. It is recommended for themes to define special\n    /// forms of at least the [string](#highlight.tags.string) and\n    /// [variable name](#highlight.tags.variableName) tags, since those\n    /// come up a lot.\n    special: Tag.defineModifier()\n};\n/// A default highlight style (works well with light themes).\nconst defaultHighlightStyle = precedence(highlightStyle({ tag: tags.deleted,\n    textDecoration: \"line-through\" }, { tag: [tags.inserted, tags.link],\n    textDecoration: \"underline\" }, { tag: tags.heading,\n    textDecoration: \"underline\",\n    fontWeight: \"bold\" }, { tag: tags.emphasis,\n    fontStyle: \"italic\" }, { tag: tags.strong,\n    fontWeight: \"bold\" }, { tag: tags.keyword,\n    color: \"#708\" }, { tag: [tags.atom, tags.bool, tags.url],\n    color: \"#219\" }, { tag: tags.number,\n    color: \"#164\" }, { tag: tags.string,\n    color: \"#a11\" }, { tag: [tags.regexp, tags.escape, tags.special(tags.string)],\n    color: \"#e40\" }, { tag: tags.definition(tags.variableName),\n    color: \"#00f\" }, { tag: tags.typeName,\n    color: \"#085\" }, { tag: tags.className,\n    color: \"#167\" }, { tag: tags.special(tags.variableName),\n    color: \"#256\" }, { tag: tags.definition(tags.propertyName),\n    color: \"#00c\" }, { tag: tags.comment,\n    color: \"#940\" }, { tag: tags.meta,\n    color: \"#555\" }, { tag: tags.invalid,\n    color: \"#f00\" }), \"fallback\");\n\nexport { Tag, defaultHighlightStyle, highlightStyle, styleTags, tags, treeHighlighter };\n","import { NodeProp, Tree, TreeFragment } from 'lezer-tree';\nimport { Facet, EditorState, StateEffect, StateField, Transaction } from '@codemirror/next/state';\nimport { ViewPlugin } from '@codemirror/next/view';\nimport { treeHighlighter } from '@codemirror/next/highlight';\nimport { countColumn } from '@codemirror/next/text';\n\n/// The facet used to associate a language with an editor state.\nconst language = Facet.define();\n/// Node prop stored on a grammar's top node to indicate the facet used\n/// to store language data related to that language.\nconst languageDataProp = new NodeProp();\n/// Helper function to define a facet (to be added to the top syntax\n/// node(s) for a language via\n/// [`languageDataProp`](#language.languageDataProp)), that will be\n/// used to associate language data with the language. You\n/// probably only need this when subclassing\n/// [`Language`](#language.Language).\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/// A language object manages parsing and per-language\n/// [metadata](#state.EditorState.languageDataAt). Parse data is\n/// managed as a [Lezer](https://lezer.codemirror.net) tree. You'll\n/// want to subclass this class for custom parsers, or use the\n/// [`LezerLanguage`](#language.LezerLanguage) or\n/// [`StreamLanguage`](#stream-parser.StreamLanguage) abstractions for\n/// [Lezer](https://lezer.codemirror.net/) or stream parsers.\nclass Language {\n    constructor(\n    /// The [language data](#state.EditorState.languageDataAt) data\n    /// facet used for this language.\n    data, parser, extraExtensions = []) {\n        this.data = data;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        let setState = StateEffect.define();\n        this.parser = parser;\n        this.field = StateField.define({\n            create(state) {\n                let parseState = new EditorParseContext(parser, state, [], Tree.empty, { from: 0, to: state.doc.length }, []);\n                if (!parseState.work(25 /* Apply */))\n                    parseState.takeTree();\n                return new LanguageState(parseState);\n            },\n            update(value, tr) {\n                for (let e of tr.effects)\n                    if (e.is(setState))\n                        return e.value;\n                return value.apply(tr);\n            }\n        });\n        this.extension = [\n            language.of(this),\n            this.field,\n            ViewPlugin.define(view => new ParseWorker(view, this.field, setState)),\n            treeHighlighter(this),\n            EditorState.languageData.of((state, pos) => state.facet(this.languageDataFacetAt(state, pos)))\n        ].concat(extraExtensions);\n    }\n    /// Retrieve the parser tree for a given state.\n    getTree(state) {\n        return state.field(this.field).tree;\n    }\n    /// Try to get a parse tree that spans at least up to `upto`. The\n    /// method will do at most `timeout` milliseconds of work to parse\n    /// up to that point if the tree isn't already available.\n    ensureTree(state, upto, timeout = 100) {\n        let parse = state.field(this.field).context;\n        return parse.tree.length >= upto || parse.work(timeout, upto) ? parse.tree : null;\n    }\n    /// @internal\n    languageDataFacetAt(state, pos) {\n        let tree = this.getTree(state);\n        let target = tree.resolve(pos, -1);\n        while (target) {\n            let facet = target.type.prop(languageDataProp);\n            if (facet)\n                return facet;\n            target = target.parent;\n        }\n        return this.data;\n    }\n}\n/// A subclass of `Language` for use with\n/// [Lezer](https://lezer.codemirror.net/docs/ref#lezer.Parser)\n/// parsers.\nclass LezerLanguage extends Language {\n    constructor(data, parser) {\n        super(data, parser);\n        this.parser = parser;\n    }\n    /// Define a language from a parser.\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LezerLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }));\n    }\n    /// Create a new instance of this language with a reconfigured\n    /// version of its parser.\n    configure(options) {\n        return new LezerLanguage(this.data, this.parser.configure(options));\n    }\n    languageDataFacetAt(state, pos) {\n        return this.parser.hasNested ? super.languageDataFacetAt(state, pos) : this.data;\n    }\n}\n/// Get the syntax tree for a state, which is the current (possibly\n/// incomplete) parse tree of the [language](#language.Language) with\n/// the highest precedence, or the empty tree if there is no language\n/// available.\nfunction syntaxTree(state) {\n    let lang = state.facet(language);\n    return lang.length ? lang[0].getTree(state) : Tree.empty;\n}\n// Lezer-style Input object for a Text document.\nclass DocInput {\n    constructor(doc, length = doc.length) {\n        this.doc = doc;\n        this.length = length;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.prevString = \"\";\n        this.cursor = doc.iter();\n    }\n    syncTo(pos) {\n        if (pos < this.cursorPos) { // Reset the cursor if we have to go back\n            this.cursor = this.doc.iter();\n            this.cursorPos = 0;\n        }\n        this.prevString = pos == this.cursorPos ? this.string : \"\";\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    get(pos) {\n        if (pos >= this.length)\n            return -1;\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos) {\n            if (pos < stringStart && pos >= stringStart - this.prevString.length)\n                return this.prevString.charCodeAt(pos - (stringStart - this.prevString.length));\n            stringStart = this.syncTo(pos);\n        }\n        return this.string.charCodeAt(pos - stringStart);\n    }\n    lineAfter(pos) {\n        if (pos >= this.length || pos < 0)\n            return \"\";\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos)\n            stringStart = this.syncTo(pos);\n        let off = pos - stringStart, result = \"\";\n        while (!this.cursor.lineBreak) {\n            result += off ? this.string.slice(off) : this.string;\n            if (this.cursorPos >= this.length) {\n                if (this.cursorPos > this.length)\n                    result = result.slice(0, result.length - (this.cursorPos - this.length));\n                break;\n            }\n            this.syncTo(this.cursorPos);\n            off = 0;\n        }\n        return result;\n    }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n    clip(at) {\n        return new DocInput(this.doc, at);\n    }\n}\n/// A parse context provided to parsers working on the editor content.\nclass EditorParseContext {\n    /// @internal\n    constructor(parser, \n    /// The current editor state.\n    state, \n    /// Tree fragments that can be reused by new parses.\n    fragments = [], \n    /// @internal\n    tree, \n    /// The current editor viewport, or some approximation thereof.\n    /// Intended to be used for opportunistically avoiding work (in\n    /// which case\n    /// [`skipUntilInView`](#language.EditorParseContext.skipUntilInView)\n    /// should be called to make sure the parser is restarted when the\n    /// skipped region becomes visible).\n    viewport, \n    /// @internal\n    skipped) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.parse = null;\n        /// @internal\n        this.skippedUntil = [];\n    }\n    /// @internal\n    // FIXME do something with badness again\n    work(time, upto) {\n        if (this.tree != Tree.empty && (upto == null ? this.tree.length == this.state.doc.length : this.tree.length >= upto))\n            return true;\n        if (!this.parse)\n            this.parse = this.parser.startParse(new DocInput(this.state.doc), 0, this);\n        let endTime = Date.now() + time;\n        for (;;) {\n            let done = this.parse.advance();\n            if (done) {\n                this.fragments = TreeFragment.addTree(done);\n                this.parse = null;\n                this.tree = done;\n                return true;\n            }\n            else if (upto != null && this.parse.pos >= upto) {\n                this.takeTree();\n                return true;\n            }\n            if (Date.now() > endTime)\n                return false;\n        }\n    }\n    /// @internal\n    takeTree() {\n        if (this.parse && this.parse.pos > this.tree.length) {\n            this.tree = this.parse.forceFinish();\n            this.fragments = TreeFragment.addTree(this.tree, this.fragments, true);\n        }\n    }\n    /// @internal\n    changes(changes, newState) {\n        let { fragments, tree, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new EditorParseContext(this.parser, newState, fragments, tree, viewport, skipped);\n    }\n    /// @internal\n    updateViewport(viewport) {\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.cutFragments(from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        return this.skipped.length < startLen;\n    }\n    /// @internal\n    cutFragments(from, to) {\n        this.fragments = TreeFragment.applyChanges(this.fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n    }\n    /// @internal\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    skipUntil(from, to, until) {\n        this.skippedUntil.push({ from, to, until });\n    }\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged)\n            return this;\n        let newState = this.context.changes(tr.changes, tr.state);\n        newState.work(25 /* Apply */);\n        return new LanguageState(newState);\n    }\n}\nlet requestIdle = typeof window != \"undefined\" && window.requestIdleCallback ||\n    ((callback, { timeout }) => setTimeout(callback, timeout));\nlet cancelIdle = typeof window != \"undefined\" && window.cancelIdleCallback || clearTimeout;\n// FIXME figure out some way to back off from full re-parses when the\n// document is large—you could waste a lot of battery re-parsing a\n// multi-megabyte document every time you insert a backtick, even if\n// it happens in the background.\nclass ParseWorker {\n    constructor(view, field, setState) {\n        this.view = view;\n        this.field = field;\n        this.setState = setState;\n        this.working = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        if (update.docChanged)\n            this.scheduleWork();\n        let cx = this.view.state.field(this.field).context;\n        if (update.viewportChanged && cx.updateViewport(update.view.viewport)) {\n            cx.reset();\n            this.scheduleWork();\n        }\n        this.takeSkipped(cx);\n    }\n    scheduleWork() {\n        if (this.working > -1)\n            return;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.tree.length >= state.doc.length)\n            return;\n        this.working = requestIdle(this.work, { timeout: 200 /* Pause */ });\n    }\n    work(deadline) {\n        this.working = -1;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.tree.length >= state.doc.length)\n            return;\n        field.context.work(deadline ? Math.max(25 /* MinSlice */, deadline.timeRemaining()) : 100 /* Slice */);\n        if (field.context.tree.length >= state.doc.length) {\n            this.view.dispatch({ effects: this.setState.of(new LanguageState(field.context)) });\n            this.takeSkipped(field.context);\n        }\n        else {\n            this.scheduleWork();\n        }\n    }\n    takeSkipped(context) {\n        while (context.skippedUntil.length) {\n            let { from, to, until } = context.skippedUntil.pop();\n            until.then(() => {\n                let field = this.view.state.field(this.field, false);\n                if (field && field.context == context) {\n                    context.cutFragments(from, to);\n                    context.reset();\n                    this.scheduleWork();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.working >= 0)\n            cancelIdle(this.working);\n    }\n}\n\n/// Facet that defines a way to provide a function that computes the\n/// appropriate indentation depth at the start of a given line, or\n/// `null` to indicate no appropriate indentation could be determined.\nconst indentService = Facet.define();\n/// Facet for overriding the unit by which indentation happens.\n/// Should be a string consisting either entirely of spaces or\n/// entirely of tabs. When not set, this defaults to 2 spaces.\nconst indentUnit = Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        if (!/^(?: +|\\t+)$/.test(values[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return values[0];\n    }\n});\n/// Return the _column width_ of an indent unit in the state.\n/// Determined by the [`indentUnit`](#language.indentUnit)\n/// facet, and [`tabSize`](#state.EditorState^tabSize) when that\n/// contains tabs.\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/// Create an indentation string that covers columns 0 to `cols`.\n/// Will use tabs for as much of the columns as possible when the\n/// [`indentUnit`](#language.indentUnit) facet contains\n/// tabs.\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize;\n    if (state.facet(indentUnit).charCodeAt(0) == 9)\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n    for (let i = 0; i < cols; i++)\n        result += \" \";\n    return result;\n}\n/// Get the indentation at the given position. Will first consult any\n/// [indent services](#language.indentService) that are registered,\n/// and if none of those return an indentation, this will check the\n/// syntax tree for the [indent node prop](#language.indentNodeProp)\n/// and use that if found. Returns a number when an indentation could\n/// be determined, and null otherwise.\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result != null)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/// Indentation contexts are used when calling [indentation\n/// services](#language.indentService). They provide helper utilities\n/// useful in indentation logic, and can selectively override the\n/// indentation reported for some lines.\nclass IndentContext {\n    /// Create an indent context.\n    constructor(\n    /// The editor state.\n    state, \n    /// @internal\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /// Get the text directly after `pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    textAfterPos(pos) {\n        var _a, _b;\n        let sim = (_a = this.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n        if (pos == sim && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak))\n            return \"\";\n        return this.state.sliceDoc(pos, Math.min(pos + 100, sim != null && sim > pos ? sim : 1e9, this.state.doc.lineAt(pos).to));\n    }\n    /// find the column position (taking tabs into account) of the given\n    /// position in the given string.\n    countColumn(line, pos) {\n        return countColumn(pos < 0 ? line : line.slice(0, pos), 0, this.state.tabSize);\n    }\n    /// Find the indentation column of the given document line.\n    lineIndent(line) {\n        var _a;\n        let override = (_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation;\n        if (override) {\n            let overriden = override(line.from);\n            if (overriden > -1)\n                return overriden;\n        }\n        let text = line.slice(0, Math.min(100, line.length));\n        return this.countColumn(text, text.search(/\\S/));\n    }\n    /// Find the column for the given position.\n    column(pos) {\n        var _a;\n        let line = this.state.doc.lineAt(pos), text = line.slice(0, pos - line.from);\n        let result = this.countColumn(text, pos - line.from);\n        let override = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation) ? this.options.overrideIndentation(line.from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S/));\n        return result;\n    }\n}\n/// A syntax tree node prop used to associate indentation strategies\n/// with node types. Such a strategy is a function from an indentation\n/// context to a column number or null, where null indicates that no\n/// definitive indentation can be determined.\nconst indentNodeProp = new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let tree = ast.resolve(pos);\n    // Enter previous nodes that end in empty error terms, which means\n    // they were broken off by error recovery, so that indentation\n    // works even if the constructs haven't been finished.\n    for (let scan = tree, scanPos = pos;;) {\n        let last = scan.childBefore(scanPos);\n        if (!last)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            tree = scan;\n            scanPos = last.from;\n        }\n        else {\n            scan = last;\n            scanPos = scan.to + 1;\n        }\n    }\n    for (; tree; tree = tree.parent) {\n        let strategy = indentStrategy(tree);\n        if (strategy)\n            return strategy(new TreeIndentContext(cx, pos, tree));\n    }\n    return null;\n}\nfunction ignoreClosed(cx) {\n    var _a, _b;\n    return cx.pos == ((_a = cx.options) === null || _a === void 0 ? void 0 : _a.simulateBreak) && ((_b = cx.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak);\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/// Objects of this type provide context information and helper\n/// methods to indentation functions.\nclass TreeIndentContext extends IndentContext {\n    /// @internal\n    constructor(base, \n    /// The position at which indentation is being computed.\n    pos, \n    /// The syntax tree node for which the indentation strategy is\n    /// registered.\n    node) {\n        super(base.state, base.options);\n        this.pos = pos;\n        this.node = node;\n    }\n    /// Get the text directly after `this.pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /// Get the indentation at the reference line for `this.node`, which\n    /// is the line on which it starts, unless there is a node that is\n    /// _not_ a parent of this node covering the start of that line. If\n    /// so, the line at the start of that node is tried, again skipping\n    /// on if it is covered by another such node.\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    var _a;\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = (_a = context.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/// An indentation strategy for delimited (usually bracketed) nodes.\n/// Will, by default, indent one unit more than the parent's base\n/// indent unless the line starts with a closing token. When `align`\n/// is true and there are non-skipped nodes on the node's opening\n/// line, the content of the node will be aligned with the end of the\n/// opening node, like this:\n///\n///     foo(bar,\n///         baz)\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/// An indentation strategy that aligns a node content to its base\n/// indentation.\nconst flatIndent = (context) => context.baseIndent;\n/// Creates an indentation strategy that, by default, indents\n/// continued lines one unit more than the node's base indentation.\n/// You can provide `except` to prevent indentation of lines that\n/// match a pattern (for example `/^else\\b/` in `if`/`else`\n/// constructs), and you can change the amount of units used with the\n/// `units` option.\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/// Enables reindentation on input. When a language defines an\n/// `indentOnInput` field in its [language\n/// data](#state.EditorState.languageDataAt), which must hold a regular\n/// expression, the line at the cursor will be reindented whenever new\n/// text is typed and the input from the start of the line up to the\n/// cursor matches that regexp.\n///\n/// To avoid unneccesary reindents, it is recommended to start the\n/// regexp with `^` (usually followed by `\\s*`), and end it with `$`.\n/// For example, `/^\\s*\\}$` will reindent when a closing brace is\n/// added at the start of a line.\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || tr.annotation(Transaction.userEvent) != \"input\")\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.primary.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.primary, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, DontIndentBeyond)))[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes }] : tr;\n    });\n}\n\n/// A facet that registers a code folding service. When called with\n/// the extent of a line, such a function should return a range\n/// object when a foldable that starts on that line (but continues\n/// beyond it), if one can be found.\nconst foldService = Facet.define();\n/// This node prop is used to associate folding information with node\n/// types. Given a syntax node, it should check whether that tree is\n/// foldable and return the range that can be collapsed when it is.\nconst foldNodeProp = new NodeProp();\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length == 0)\n        return null;\n    let inner = tree.resolve(end);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\n/// Check whether the given line is foldable. First asks any fold\n/// services registered through\n/// [`foldService`](#language.foldService), and if none of them return\n/// a result, tries to query the [fold node\n/// prop](#language.foldNodeProp) of syntax nodes that cover the end\n/// of the line.\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\n\nexport { EditorParseContext, IndentContext, Language, LezerLanguage, TreeIndentContext, continuedIndent, defineLanguageFacet, delimitedIndent, flatIndent, foldNodeProp, foldService, foldable, getIndentUnit, getIndentation, indentNodeProp, indentOnInput, indentService, indentString, indentUnit, language, languageDataProp, syntaxTree };\n","import { EditorView, Decoration, themeClass, ViewPlugin, logException, WidgetType } from '@codemirror/next/view';\nimport { StateEffect, StateField } from '@codemirror/next/state';\nimport { hoverTooltip } from '@codemirror/next/tooltip';\nimport { panels, showPanel, getPanel } from '@codemirror/next/panel';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, diagnostics.length, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state) {\n    return state.field(lintState, false) ? undefined : { append: [\n            lintState,\n            EditorView.decorations.compute([lintState], state => {\n                let { selected, panel } = state.field(lintState);\n                return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                    activeMark.range(selected.from, selected.to)\n                ]);\n            }),\n            panels(),\n            hoverTooltip(lintTooltip),\n            baseTheme\n        ] };\n}\n/// State effect that is used to update the current set of\n/// diagnostics.\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: setDiagnosticsEffect.of(diagnostics),\n        reconfigure: maybeEnableLint(state)\n    };\n}\nconst setDiagnosticsEffect = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst movePanelSelection = StateEffect.define();\nconst lintState = StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let ranges = Decoration.set(effect.value.map((d) => {\n                    return d.from < d.to\n                        ? Decoration.mark({\n                            attributes: { class: themeClass(\"lintRange.\" + d.severity) },\n                            diagnostic: d\n                        }).range(d.from, d.to)\n                        : Decoration.widget({\n                            widget: new DiagnosticWidget(d),\n                            diagnostic: d\n                        }).range(d.from);\n                }));\n                value = new LintState(ranges, value.panel, findDiagnostic(ranges));\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel ? [s.panel] : []),\n        EditorView.decorations.from(s => s.diagnostics)]\n});\nconst activeMark = Decoration.mark({ class: themeClass(\"lintRange.active\") });\nfunction lintTooltip(view, check) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(0, view.state.doc.length, (start, end, { spec }) => {\n        if (check(start, end)) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(start, stackStart);\n            stackEnd = Math.max(end, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        style: \"lint\",\n        create() {\n            let dom = document.createElement(\"ul\");\n            for (let d of found)\n                dom.appendChild(renderDiagnostic(view, d));\n            return { dom };\n        }\n    };\n}\n/// Command to open and focus the lint panel.\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: maybeEnableLint(view.state) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/// Command to close the lint panel, when open.\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Move the selection to the next diagnostic.\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.primary, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/// A set of default key bindings for the lint functionality.\n///\n/// - Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](#lint.openLintPanel)\n/// - F8: [\\`nextDiagnostic\\`](#lint.nextDiagnostic)\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst LintDelay = 500;\n/// Given a diagnostic source, this function returns an extension that\n/// enables linting with that source. It will be called whenever the\n/// editor is idle (after its content changed).\nfunction linter(source) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.lintTime = Date.now() + LintDelay;\n            this.set = true;\n            this.run = this.run.bind(this);\n            setTimeout(this.run, LintDelay);\n        }\n        run() {\n            let now = Date.now();\n            if (now < this.lintTime - 10) {\n                setTimeout(this.run, this.lintTime - now);\n            }\n            else {\n                this.set = false;\n                let { state } = this.view;\n                Promise.resolve(source(this.view)).then(annotations => {\n                    var _a, _b;\n                    if (this.view.state.doc == state.doc &&\n                        (annotations.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations));\n                }, error => { logException(this.view.state, error); });\n            }\n        }\n        update(update) {\n            if (update.docChanged) {\n                this.lintTime = Date.now() + LintDelay;\n                if (!this.set) {\n                    this.set = true;\n                    setTimeout(this.run, LintDelay);\n                }\n            }\n        }\n    });\n}\nfunction renderDiagnostic(view, diagnostic) {\n    let dom = document.createElement(\"li\");\n    dom.textContent = diagnostic.message;\n    dom.className = themeClass(\"diagnostic.\" + diagnostic.severity);\n    if (diagnostic.actions)\n        for (let action of diagnostic.actions) {\n            let button = dom.appendChild(document.createElement(\"button\"));\n            button.className = themeClass(\"diagnosticAction\");\n            button.textContent = action.name;\n            button.onclick = button.onmousedown = e => {\n                e.preventDefault();\n                let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n                if (found)\n                    action.apply(view, found.from, found.to);\n            };\n        }\n    // FIXME render source?\n    return dom;\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        let elt = document.createElement(\"span\");\n        elt.className = themeClass(\"lintPoint.\" + this.diagnostic.severity);\n        return elt;\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic);\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        this.dom = document.createElement(\"div\");\n        this.list = this.dom.appendChild(document.createElement(\"ul\"));\n        this.list.tabIndex = 0;\n        this.list.setAttribute(\"role\", \"listbox\");\n        this.list.setAttribute(\"aria-label\", this.view.state.phrase(\"Diagnostics\"));\n        this.list.addEventListener(\"keydown\", event => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38) { // ArrowUp\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40) { // ArrowDown\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                event.preventDefault();\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                event.preventDefault();\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) {\n                event.preventDefault();\n                this.view.focus();\n            } // FIXME PageDown/PageUp\n        });\n        this.list.addEventListener(\"click\", event => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        });\n        let close = this.dom.appendChild(document.createElement(\"button\"));\n        close.setAttribute(\"name\", \"close\");\n        close.setAttribute(\"aria-label\", this.view.state.phrase(\"close\"));\n        close.textContent = \"×\";\n        close.addEventListener(\"click\", () => closeLintPanel(this.view));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (!this.items.length) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n        if (!this.list.firstChild)\n            this.list.appendChild(renderDiagnostic(this.view, {\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n    }\n    moveSelection(selectedIndex) {\n        // FIXME make actions accessible\n        if (this.items.length == 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    get style() { return \"lint\"; }\n    static open(view) { return new LintPanel(view); }\n}\nfunction underline(color) {\n    if (typeof btoa != \"function\")\n        return \"none\";\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"3\">\n    <path d=\"m0 3 l2 -2 l1 0 l2 2 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>\n  </svg>`;\n    return `url('data:image/svg+xml;base64,${btoa(svg)}')`;\n}\nconst baseTheme = EditorView.baseTheme({\n    $diagnostic: {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\"\n    },\n    \"$diagnostic.error\": { borderLeft: \"5px solid #d11\" },\n    \"$diagnostic.warning\": { borderLeft: \"5px solid orange\" },\n    \"$diagnostic.info\": { borderLeft: \"5px solid #999\" },\n    $diagnosticAction: {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    $lintRange: {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\"\n    },\n    \"$lintRange.error\": { backgroundImage: underline(\"#d11\") },\n    \"$lintRange.warning\": { backgroundImage: underline(\"orange\") },\n    \"$lintRange.info\": { backgroundImage: underline(\"#999\") },\n    \"$lintRange.active\": { backgroundColor: \"#ffdd9980\" },\n    $lintPoint: {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \"$lintPoint.warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \"$lintPoint.info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \"$panel.lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\"\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    },\n    \"$tooltip.lint\": {\n        padding: 0,\n        margin: 0\n    }\n});\n\nexport { closeLintPanel, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics };\n","import { Facet, combineConfig, StateField } from '@codemirror/next/state';\nimport { syntaxTree } from '@codemirror/next/language';\nimport { EditorView, Decoration, themeClass } from '@codemirror/next/view';\nimport { NodeProp } from 'lezer-tree';\n\nconst baseTheme = EditorView.baseTheme({\n    $matchingBracket: { color: \"#0b0\" },\n    $nonmatchingBracket: { color: \"#a22\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist\n        });\n    }\n});\nconst matchingMark = Decoration.mark({ class: themeClass(\"matchingBracket\") }), nonmatchingMark = Decoration.mark({ class: themeClass(\"nonmatchingBracket\") });\nconst bracketMatchingState = StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (!match)\n                continue;\n            let mark = match.matched ? matchingMark : nonmatchingMark;\n            decorations.push(mark.range(match.start.from, match.start.to));\n            if (match.end)\n                decorations.push(mark.range(match.end.from, match.end.to));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: [EditorView.decorations]\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/// Create an extension that enables bracket matching. Whenever the\n/// cursor is next to a bracket, that bracket and the one it matches\n/// are highlighted. Or, when no matching bracket is found, another\n/// highlighting style is used to indicate this.\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\n/// Find the matching bracket for the token at `pos`, scanning\n/// direction `dir`. Only the `brackets` and `maxScanDistance`\n/// properties are used from `config`, if given. Returns null if no\n/// bracket was found at `pos`, or a match result otherwise.\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), sub = tree.resolve(pos, dir), matches;\n    if (matches = matchingNodes(sub.type, dir, brackets))\n        return matchMarkedBrackets(state, pos, dir, sub, matches, brackets);\n    else\n        return matchPlainBrackets(state, pos, dir, tree, sub.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {\n    let parent = token.parent, firstToken = { from: token.from, to: token.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor;\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1) {\n                    return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    depth--;\n                    if (depth == 0)\n                        return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: false };\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolve(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\nexport { bracketMatching, matchBrackets };\n","import { ViewPlugin, themeClass, PluginField, EditorView } from '@codemirror/next/view';\nimport { Facet } from '@codemirror/next/state';\n\nconst panelConfig = Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/// Enables the panel-managing extension.\nfunction panels(config) {\n    let ext = [panelPlugin, baseTheme];\n    if (config)\n        ext.push(panelConfig.of(config));\n    return ext;\n}\n/// Opening a panel is done by providing an object describing the\n/// panel through this facet.\nconst showPanel = Facet.define();\n/// Get the active panel created by the given constructor, if any.\n/// This can be useful when you need access to your panels' DOM\n/// structure.\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = view.state.facet(showPanel).indexOf(panel);\n    return plugin && index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.specs = view.state.facet(showPanel);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.className += \" \" + panelClass(p);\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let specs = update.state.facet(showPanel);\n        if (specs != this.specs) {\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.className += \" \" + panelClass(p);\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nfunction panelClass(panel) {\n    return themeClass(panel.style ? `panel.${panel.style}` : \"panel\");\n}\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = themeClass(this.top ? \"panels.top\" : \"panels.bottom\");\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - this.view.scrollDOM.getBoundingClientRect().top\n                : this.view.scrollDOM.getBoundingClientRect().bottom - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = EditorView.baseTheme({\n    $panels: {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"$$light $panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"$$light $panels.top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"$$light $panels.bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"$$dark $panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n\nexport { getPanel, panels, showPanel };\n","import { MapMode } from '@codemirror/next/state';\n\n/// Each range is associated with a value, which must inherit from\n/// this class.\nclass RangeValue {\n    /// Compare this value with another value. The default\n    /// implementation compares by identity.\n    eq(other) { return this == other; }\n    /// Create a [range](#rangeset.Range) with this value.\n    range(from, to = from) { return new Range(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/// A range associates a value with a range of positions.\nclass Range {\n    /// @internal\n    constructor(\n    /// The range's start position.\n    from, \n    /// Its end position.\n    to, \n    /// The value associated with this range.\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\n// The maximum amount of ranges to store in a single chunk\nconst ChunkSize = 250, \n// Chunks with points of this size are never skipped during\n// compare, since moving past those points is likely to speed\n// up, rather than slow down, the comparison.\nBigPointSize = 500, \n// A large (fixnum) value to use for max/min values.\nFar = 1e9;\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // With side == -1, return the first index where to >= pos. When\n    // side == 1, the first index where from > pos.\n    findIndex(pos, end, side = end * Far, startAt = 0) {\n        if (pos <= 0)\n            return startAt;\n        let arr = end < 0 ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end < 0 ? this.value[mid].startSide : this.value[mid].endSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1), e = this.findIndex(to, 1, undefined, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/// A range set stores a collection of [ranges](#rangeset.Range) in a\n/// way that makes them efficient to [map](#rangeset.RangeSet.map) and\n/// [update](#rangeset.RangeSet.update). This is an immutable data\n/// structure.\nclass RangeSet {\n    /// @internal\n    constructor(\n    /// @internal\n    chunkPos, \n    /// @internal\n    chunk, \n    /// @internal\n    nextLayer = RangeSet.empty, \n    /// @internal\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /// @internal\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /// @internal\n    get size() {\n        if (this == RangeSet.empty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /// @internal\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /// Update the range set, optionally adding new ranges or filtering\n    /// out existing ones.\n    update(updateSpec) {\n        let { add = [], sort = false, filter, filterFrom = 0, filterTo = this.length } = updateSpec;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add.slice().sort(cmpRange);\n        if (this == RangeSet.empty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(new Range(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer == RangeSet.empty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /// Map this range set through a set of changes, return the new set.\n    map(changes) {\n        if (changes.length == 0 || this == RangeSet.empty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next, maxPoint);\n    }\n    /// Iterate over the ranges that touch the region `from` to `to`,\n    /// calling `f` for each. There is no guarantee that the ranges will\n    /// be reported in any order. When the callback returns `false`,\n    /// iteration stops.\n    between(from, to, f) {\n        if (this == RangeSet.empty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /// Iterate over the ranges in this set, in order, including all\n    /// ranges that end at or after `from`.\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /// Iterate over the given sets, starting from `from`.\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /// Iterate over two groups of sets, calling methods on `comparator`\n    /// to notify it of possible differences. `textDiff` indicates how\n    /// the underlying data changed between these ranges, and is needed\n    /// to synchronize the iteration. `from` and `to` are coordinates in\n    /// the _new_ space, after these changes.\n    static compare(oldSets, newSets, textDiff, comparator) {\n        var _a;\n        let minPoint = (_a = comparator.minPointSize) !== null && _a !== void 0 ? _a : -1;\n        let a = oldSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && newSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let b = newSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && oldSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, minPoint);\n        let sideB = new SpanCursor(b, sharedChunks, minPoint);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /// Iterate over a group of range sets at the same time, notifying\n    /// the iterator about the ranges covering every given piece of\n    /// content. Returns the open count (see\n    /// [`SpanIterator.span`](#rangeset.SpanIterator.span)) at the end\n    /// of the iteration.\n    static spans(sets, from, to, iterator) {\n        var _a;\n        let cursor = new SpanCursor(sets, null, (_a = iterator.minPointSize) !== null && _a !== void 0 ? _a : -1).goto(from), pos = from;\n        let open = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open);\n                open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, open);\n                open = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                break;\n            pos = cursor.to;\n            cursor.next();\n        }\n        return open;\n    }\n    /// Create a range set for the given range or array of ranges. By\n    /// default, this expects the ranges to be _sorted_ (by start\n    /// position and, if two start at the same position,\n    /// `value.startSide`). You can pass `true` as second argument to\n    /// cause the method to sort them.\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? ranges.slice().sort(cmpRange) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/// The empty set of ranges.\nRangeSet.empty = new RangeSet([], [], null, -1);\nRangeSet.empty.nextLayer = RangeSet.empty;\n/// A range set builder is a data structure that helps build up a\n/// [range set](#rangeset.RangeSet) directly, without first allocating\n/// an array of [`Range`](#rangeset.Range) objects.\nclass RangeSetBuilder {\n    /// Create an empty builder.\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -Far;\n        this.lastTo = -Far;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /// Add a range. Ranges should be added in sorted (by `from` and\n    /// `value.startSide`) order.\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /// @internal\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == ChunkSize)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /// @internal\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /// Finish the range set. Returns the new set. The builder can't be\n    /// used anymore after this has been called.\n    finish() { return this.finishInner(RangeSet.empty); }\n    /// @internal\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = new RangeSet(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint < BigPointSize)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (inA.get(set.chunk[i]) == set.chunkPos[i])\n                shared.add(set.chunk[i]);\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -Far) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        let rangeIndex = this.chunkIndex == this.layer.chunk.length ? 0\n            : this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], -1, side);\n        if (!forward || this.rangeIndex < rangeIndex)\n            this.rangeIndex = rangeIndex;\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = Far;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                if (++this.rangeIndex == chunk.value.length) {\n                    this.chunkIndex++;\n                    if (this.skip) {\n                        while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                            this.chunkIndex++;\n                    }\n                    this.rangeIndex = 0;\n                }\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; cur != RangeSet.empty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -Far) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = Far;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -Far;\n        this.endSide = 0;\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -Far) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = Far;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    if (this.cursor.from < from)\n                        trackExtra = 1;\n                    this.cursor.next();\n                    if (this.to > from)\n                        this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            let openStart = 0;\n            while (openStart < trackOpen.length && trackOpen[openStart] < from)\n                openStart++;\n            this.openStart = openStart + trackExtra;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = 0; i < this.active.length; i++) {\n            if (this.activeRank[i] > this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide > this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active;\n    }\n    openEnd(to) {\n        let open = 0;\n        while (open < this.activeTo.length && this.activeTo[open] > to)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = Far;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\nexport { Range, RangeSet, RangeSetBuilder, RangeValue };\n","import { Decoration, themeClass, ViewPlugin, EditorView, runScopeHandlers } from '@codemirror/next/view';\nimport { StateEffect, StateField, EditorSelection, precedence } from '@codemirror/next/state';\nimport { showPanel, getPanel, panels } from '@codemirror/next/panel';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\" ? x => x.normalize(\"NFKD\") : x => x;\n/// A search cursor provides an iterator over text matches in a\n/// document.\nclass SearchCursor {\n    /// Create a text cursor. The query is the search string, `from` to\n    /// `to` provides the region to search.\n    ///\n    /// When `normalize` is given, it will be called, on both the query\n    /// string and the content it is matched against, before comparing.\n    /// You can, for example, create a case-insensitive search by\n    /// passing `s => s.toLowerCase()`.\n    ///\n    /// Text is always normalized with\n    /// [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    /// (when supported).\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /// The current match (only holds a meaningful value after\n        /// [`next`](#search.SearchCursor.next) has been called and when\n        /// `done` is false).\n        this.value = { from: 0, to: 0 };\n        /// Whether the end of the iterated region has been reached.\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return this.buffer.charCodeAt(this.bufferPos);\n    }\n    /// Look for the next match. Updates the iterator's\n    /// [`value`](#search.SearchCursor.value) and\n    /// [`done`](#search.SearchCursor.done) properties. Should be called\n    /// at least once before using the cursor.\n    next() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = String.fromCharCode(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos++;\n            for (;;) {\n                let peek = this.peek();\n                if (peek < 0xDC00 || peek >= 0xE000)\n                    break;\n                this.bufferPos++;\n                str += String.fromCharCode(peek);\n            }\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\n\nclass Query {\n    constructor(search, replace, caseInsensitive) {\n        this.search = search;\n        this.replace = replace;\n        this.caseInsensitive = caseInsensitive;\n    }\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace && this.caseInsensitive == other.caseInsensitive;\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.search, from, to, this.caseInsensitive ? x => x.toLowerCase() : undefined);\n    }\n    get valid() { return !!this.search; }\n}\nconst setQuery = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst searchState = StateField.define({\n    create() {\n        return new SearchState(new Query(\"\", \"\", false), []);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setQuery))\n                value = new SearchState(effect.value, value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? [createSearchPanel] : []);\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel)]\n});\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = Decoration.mark({ class: themeClass(\"searchMatch\") }), selectedMatchMark = Decoration.mark({ class: themeClass(\"searchMatch.selected\") });\nconst searchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.prevState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel.length || !query.valid)\n            return Decoration.none;\n        let state = this.view.state, viewport = this.view.viewport;\n        let cursor = query.cursor(state.doc, Math.max(0, viewport.from - query.search.length), Math.min(viewport.to + query.search.length, state.doc.length));\n        let builder = new RangeSetBuilder();\n        while (!cursor.next().done) {\n            let { from, to } = cursor.value;\n            let selected = state.selection.ranges.some(r => r.from == from && r.to == to);\n            builder.add(from, to, selected ? selectedMatchMark : matchMark);\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\nfunction findNextMatch(doc, from, query) {\n    let cursor = query.cursor(doc, from).next();\n    if (cursor.done) {\n        cursor = query.cursor(doc, 0, from + query.search.length - 1).next();\n        if (cursor.done)\n            return null;\n    }\n    return cursor.value;\n}\n/// Open the search panel if it isn't already open, and move the\n/// selection to the first match after the current primary selection.\n/// Will wrap around to the start of the document when it reaches the\n/// end.\nconst findNext = searchCommand((view, state) => {\n    let { from, to } = view.state.selection.primary;\n    let next = findNextMatch(view.state.doc, view.state.selection.primary.from + 1, state.query);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\nconst FindPrevChunkSize = 10000;\n// Searching in reverse is, rather than implementing inverted search\n// cursor, done by scanning chunk after chunk forward.\nfunction findPrevInRange(query, doc, from, to) {\n    for (let pos = to;;) {\n        let start = Math.max(from, pos - FindPrevChunkSize - query.search.length);\n        let cursor = query.cursor(doc, start, pos), range = null;\n        while (!cursor.next().done)\n            range = cursor.value;\n        if (range)\n            return range;\n        if (start == from)\n            return null;\n        pos -= FindPrevChunkSize;\n    }\n}\n/// Move the selection to the previous instance of the search query,\n/// before the current primary selection. Will wrap past the start\n/// of the document to start searching at the end again.\nconst findPrevious = searchCommand((view, { query }) => {\n    let { state } = view;\n    let range = findPrevInRange(query, state.doc, 0, state.selection.primary.to - 1) ||\n        findPrevInRange(query, state.doc, state.selection.primary.from + 1, state.doc.length);\n    if (!range)\n        return false;\n    view.dispatch({ selection: { anchor: range.from, head: range.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\n/// Select all instances of the search query.\nconst selectMatches = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), ranges = [];\n    while (!cursor.next().done)\n        ranges.push(EditorSelection.range(cursor.value.from, cursor.value.to));\n    if (!ranges.length)\n        return false;\n    view.dispatch({ selection: EditorSelection.create(ranges) });\n    return true;\n});\n/// Select all instances of the currently selected text.\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.primary.empty)\n        return false;\n    let { from, to } = sel.primary;\n    let ranges = [], primary = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            primary = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({ selection: new EditorSelection(ranges, primary) }));\n    return true;\n};\n/// Replace the current match of the search query.\nconst replaceNext = searchCommand((view, { query }) => {\n    let { state } = view, next = findNextMatch(state.doc, state.selection.primary.from, query);\n    if (!next)\n        return false;\n    let { from, to } = state.selection.primary, changes = [], selection;\n    if (next.from == from && next.to == to) {\n        changes.push({ from: next.from, to: next.to, insert: query.replace });\n        next = findNextMatch(state.doc, next.to, query);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - query.replace.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({ changes, selection, scrollIntoView: !!selection });\n    if (next)\n        maybeAnnounceMatch(view);\n    return true;\n});\n/// Replace all instances of the search query with the given\n/// replacement.\nconst replaceAll = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), changes = [];\n    while (!cursor.next().done) {\n        let { from, to } = cursor.value;\n        changes.push({ from, to, insert: query.replace });\n    }\n    if (!changes.length)\n        return false;\n    view.dispatch({ changes });\n    return true;\n});\nfunction createSearchPanel(view) {\n    let { query } = view.state.field(searchState);\n    return {\n        dom: buildPanel({\n            view,\n            query,\n            updateQuery(q) {\n                if (!query.eq(q)) {\n                    query = q;\n                    view.dispatch({ effects: setQuery.of(query) });\n                }\n            }\n        }),\n        mount() {\n            this.dom.querySelector(\"[name=search]\").select();\n        },\n        pos: 80,\n        style: \"search\"\n    };\n}\n/// Make sure the search panel is open and focused.\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel.length) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        panel.dom.querySelector(\"[name=search]\").focus();\n    }\n    else {\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: state ? undefined : { append: searchExtensions } });\n    }\n    return true;\n};\n/// Close the search panel.\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel.length)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Default search-related key bindings.\n///\n///  * Mod-f: [`openSearchPanel`](#search.openSearchPanel)\n///  * F3, Mod-g: [`findNext`](#search.findNext)\n///  * Shift-F3, Shift-Mod-g: [`findPrevious`](#search.findPrevious)\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches }\n];\nfunction elt(name, props = null, children = []) {\n    let e = document.createElement(name);\n    if (props)\n        for (let prop in props) {\n            let value = props[prop];\n            if (typeof value == \"string\")\n                e.setAttribute(prop, value);\n            else\n                e[prop] = value;\n        }\n    for (let child of children)\n        e.appendChild(typeof child == \"string\" ? document.createTextNode(child) : child);\n    return e;\n}\n// FIXME sync when search state changes independently\nfunction buildPanel(conf) {\n    function p(phrase) { return conf.view.state.phrase(phrase); }\n    let searchField = elt(\"input\", {\n        value: conf.query.search,\n        placeholder: p(\"Find\"),\n        \"aria-label\": p(\"Find\"),\n        class: themeClass(\"textfield\"),\n        name: \"search\",\n        onchange: update,\n        onkeyup: update\n    });\n    let replaceField = elt(\"input\", {\n        value: conf.query.replace,\n        placeholder: p(\"Replace\"),\n        \"aria-label\": p(\"Replace\"),\n        class: themeClass(\"textfield\"),\n        name: \"replace\",\n        onchange: update,\n        onkeyup: update\n    });\n    let caseField = elt(\"input\", {\n        type: \"checkbox\",\n        name: \"case\",\n        checked: !conf.query.caseInsensitive,\n        onchange: update\n    });\n    function update() {\n        conf.updateQuery(new Query(searchField.value, replaceField.value, !caseField.checked));\n    }\n    function keydown(e) {\n        if (runScopeHandlers(conf.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(conf.view);\n        }\n        else if (e.keyCode == 13 && e.target == replaceField) {\n            e.preventDefault();\n            replaceNext(conf.view);\n        }\n    }\n    function button(name, onclick, content) {\n        return elt(\"button\", { class: themeClass(\"button\"), name, onclick }, content);\n    }\n    let panel = elt(\"div\", { onkeydown: keydown }, [\n        searchField,\n        button(\"next\", () => findNext(conf.view), [p(\"next\")]),\n        button(\"prev\", () => findPrevious(conf.view), [p(\"previous\")]),\n        button(\"select\", () => selectMatches(conf.view), [p(\"all\")]),\n        elt(\"label\", null, [caseField, \"match case\"]),\n        elt(\"br\"),\n        replaceField,\n        button(\"replace\", () => replaceNext(conf.view), [p(\"replace\")]),\n        button(\"replaceAll\", () => replaceAll(conf.view), [p(\"replace all\")]),\n        elt(\"button\", { name: \"close\", onclick: () => closeSearchPanel(conf.view), \"aria-label\": p(\"close\") }, [\"×\"]),\n        elt(\"div\", { style: \"position: absolute; top: -10000px\", \"aria-live\": \"polite\" })\n    ]);\n    return panel;\n}\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\n// FIXME this is a kludge\nfunction maybeAnnounceMatch(view) {\n    let { from, to } = view.state.selection.primary;\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    let panel = getPanel(view, createSearchPanel);\n    if (!panel || !panel.dom.contains(view.root.activeElement))\n        return;\n    let live = panel.dom.querySelector(\"div[aria-live]\");\n    live.textContent = view.state.phrase(\"current match\") + \". \" + text;\n}\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button\": {\n            margin: \".2em .5em .2em 0\"\n        },\n        \"& label\": {\n            fontSize: \"80%\"\n        }\n    },\n    \"$$light $searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"$$dark $searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"$$light $searchMatch.selected\": { backgroundColor: \"#ff6a0054\" },\n    \"$$dark $searchMatch.selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    precedence(searchHighlighter, \"override\"),\n    panels(),\n    baseTheme\n];\n\nexport { SearchCursor, closeSearchPanel, findNext, findPrevious, openSearchPanel, replaceAll, replaceNext, searchKeymap, selectMatches, selectSelectionMatches };\n","import { Text } from '@codemirror/next/text';\nexport { Text } from '@codemirror/next/text';\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/// Distinguishes different ways in which positions can be mapped.\nvar MapMode;\n(function (MapMode) {\n    /// Map a position to a valid new position, even when its context\n    /// was deleted.\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /// Return null if deletion happens across the position.\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /// Return null if the character _before_ the position is deleted.\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /// Return null if the character _after_ the position is deleted.\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\n})(MapMode || (MapMode = {}));\n/// A change description is a variant of [change set](#state.ChangeSet)\n/// that doesn't store the inserted text. As such, it can't be\n/// applied, but is cheaper to store and manipulate.\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /// @internal\n    constructor(\n    /// @internal\n    sections) {\n        this.sections = sections;\n    }\n    /// The length of the document before the change.\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /// The length of the document after the change.\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /// False when there are actual changes in this set.\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /// Iterate over the unchanged parts left by these changes.\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /// Iterate over the ranges changed by these changes. (See\n    /// [`ChangeSet.iterChanges`](#state.ChangeSet.iterChanges) for a\n    /// variant that also provides you with the inserted text.)\n    ///\n    /// When `individual` is true, adjacent changes (which are kept\n    /// separate for [position mapping](#state.ChangeDesc.mapPos)) are\n    /// reported separately.\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a description of the inverted form of these changes.\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /// Compute the combined effect of applying another set of changes\n    /// after this one. The length of the document after this set should\n    /// match the length before `other`.\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /// Map this description, which should start with the same document\n    /// as `other`, over another set of changes, so that it can be\n    /// applied after it.\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /// Check whether these changes touch a given range. When one of the\n    /// changes entirely covers the range, the string `\"cover\"` is\n    /// returned.\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /// @internal\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n}\n/// A change set represents a group of modifications to a document. It\n/// stores the document length, and can only be applied to documents\n/// with exactly that length.\nclass ChangeSet extends ChangeDesc {\n    /// @internal\n    constructor(sections, \n    /// @internal\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /// Apply the changes to a document, returning the modified\n    /// document.\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    /// Map this set, which should start with the same document as\n    /// `other`, over another set of changes, so that it can be applied\n    /// after it. When `before` is true, map as if the changes in\n    /// `other` happened before the ones in `this`.\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /// Given the document as it existed _before_ the changes, return a\n    /// change set that represents the inverse of this set, which could\n    /// be used to go from the document created by the changes back to\n    /// the document as it existed before the changes.\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /// Combine two subsequent change sets into a single set. `other`\n    /// must start in the document produced by `this`. If `this` goes\n    /// `docA` → `docB` and `other` represents `docB` → `docC`, the\n    /// returned value will represent the change `docA` → `docC`.\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /// Given another change set starting in the same document, maps this\n    /// change set over the other, producing a new change set that can be\n    /// applied to the document produced by applying `other`. When\n    /// `before` is `true`, order changes as if `this` comes before\n    /// `other`, otherwise (the default) treat `other` as coming first.\n    ///\n    /// Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    /// `B.compose(A.map(B, true))` will produce the same document. This\n    /// provides a basic form of [operational\n    /// transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    /// and can be used for collaborative editing.\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /// Iterate over the changed ranges in the document, calling `f` for\n    /// each.\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a [change description](#state.ChangeDesc) for this change\n    /// set.\n    get desc() { return new ChangeDesc(this.sections); }\n    /// @internal\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: new ChangeDesc(filteredSections) };\n    }\n    /// Serialize this change set to a JSON-representable value.\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len, this.inserted[i >> 1].toJSON()]);\n        }\n        return parts;\n    }\n    /// Create a change set for the given changes, for a document of the\n    /// given length, using `lineSep` as line separator.\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /// Create an empty changeset of the given length.\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /// Create a changeset from its JSON representation (as produced by\n    /// [`toJSON`](#state.ChangeSet.toJSON).\n    static fromJSON(json) {\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part[1]);\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let posA = 0, posB = 0;;) {\n        if (a.ins == -1) {\n            posA += a.len;\n            a.next();\n        }\n        else if (b.ins == -1 && posB < posA) {\n            let skip = Math.min(b.len, posA - posB);\n            b.forward(skip);\n            addSection(sections, skip, -1);\n            posB += skip;\n        }\n        else if (b.ins >= 0 && (a.done || posB < posA || posB == posA && (b.len < a.len || b.len == a.len && !before))) {\n            addSection(sections, b.ins, -1);\n            while (posA > posB && !a.done && posA + a.len < posB + b.len) {\n                posA += a.len;\n                a.next();\n            }\n            posB += b.len;\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            let len = 0, end = posA + a.len;\n            for (;;) {\n                if (b.ins >= 0 && posB > posA && posB + b.len < end) {\n                    len += b.ins;\n                    posB += b.len;\n                    b.next();\n                }\n                else if (b.ins == -1 && posB < end) {\n                    let skip = Math.min(b.len, end - posB);\n                    len += skip;\n                    b.forward(skip);\n                    posB += skip;\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, a.ins);\n            if (insert)\n                addInsert(insert, sections, a.text);\n            posA = end;\n            a.next();\n        }\n        else if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/// A single selection range. When\n/// [`allowMultipleSelections`](#state.EditorState^allowMultipleSelections)\n/// is enabled, a [selection](#state.EditorSelection) may hold\n/// multiple ranges. By default, selections hold exactly one range.\nclass SelectionRange {\n    // @internal\n    constructor(\n    /// The lower side of the range.\n    from, \n    /// The upper side of the range.\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /// The anchor of the range—the side that doesn't move when you\n    /// extend it.\n    get anchor() { return this.flags & 16 /* Inverted */ ? this.to : this.from; }\n    /// The head of the range, which is moved when the range is\n    /// [extended](#state.SelectionRange.extend).\n    get head() { return this.flags & 16 /* Inverted */ ? this.from : this.to; }\n    /// True when `anchor` and `head` are at the same position.\n    get empty() { return this.from == this.to; }\n    /// If this is a cursor that is explicitly associated with the\n    /// character on one of its sides, this returns the side. -1 means\n    /// the character before its position, 1 the character after, and 0\n    /// means no association.\n    get assoc() { return this.flags & 4 /* AssocBefore */ ? -1 : this.flags & 8 /* AssocAfter */ ? 1 : 0; }\n    /// The bidirectional text level associated with this cursor.\n    get bidiLevel() {\n        let level = this.flags & 3 /* BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    get goalColumn() {\n        let value = this.flags >> 5 /* GoalColumnOffset */;\n        return value == 33554431 /* NoGoalColumn */ ? undefined : value;\n    }\n    /// Map this range through a mapping.\n    map(mapping) {\n        let from = mapping.mapPos(this.from), to = mapping.mapPos(this.to);\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /// Extend this range to cover at least `from` to `to`.\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /// Compare this range to another range.\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /// Return a JSON-serializable object representing the range.\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /// Convert a JSON representation of a range to a `SelectionRange`\n    /// instance.\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n}\n/// An editor selection holds one or more selection ranges.\nclass EditorSelection {\n    /// @internal\n    constructor(\n    /// The ranges in the selection, sorted by position. Ranges cannot\n    /// overlap (but they may touch, if they aren't empty).\n    ranges, \n    /// The index of the _primary_ range in the selection (which is\n    /// usually the range that was added last).\n    primaryIndex = 0) {\n        this.ranges = ranges;\n        this.primaryIndex = primaryIndex;\n    }\n    /// Map a selection through a mapping. Mostly used to adjust the\n    /// selection position for changes.\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(mapping)), this.primaryIndex);\n    }\n    /// Compare this selection to another selection.\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.primaryIndex != other.primaryIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /// Get the primary selection range. Usually, you should make sure\n    /// your code applies to _all_ ranges, by using methods like\n    /// [`changeByRange`](#state.EditorState.changeByRange).\n    get primary() { return this.ranges[this.primaryIndex]; }\n    /// Make sure the selection only has one range. Returns a selection\n    /// holding only the primary range from this selection.\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.primary]);\n    }\n    /// Extend this selection with an extra range.\n    addRange(range, primary = true) {\n        return EditorSelection.create([range].concat(this.ranges), primary ? 0 : this.primaryIndex + 1);\n    }\n    /// Replace a given range with another range, and then normalize the\n    /// selection to merge and sort ranges if necessary.\n    replaceRange(range, which = this.primaryIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.primaryIndex);\n    }\n    /// Convert this selection to an object that can be serialized to\n    /// JSON.\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), primaryIndex: this.primaryIndex };\n    }\n    /// Create a selection from a JSON representation.\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.primaryIndex != \"number\" || json.primaryIndex >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.primaryIndex);\n    }\n    /// Create a selection holding a single range.\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /// Sort and merge the given set of ranges, creating a valid\n    /// selection.\n    static create(ranges, primaryIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return normalized(ranges.slice(), primaryIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, primaryIndex);\n    }\n    /// Create a cursor selection range at the given position. You can\n    /// probably ignore [association](#state.SelectionRange.assoc) and\n    /// [bidi level](#state.SelectionRange.bidiLevel) in most\n    /// situations.\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return new SelectionRange(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* AssocBefore */ : 8 /* AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */));\n    }\n    /// Create a selection range.\n    static range(anchor, head, goalColumn) {\n        let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */;\n        return head < anchor ? new SelectionRange(head, anchor, 16 /* Inverted */ | goal) : new SelectionRange(anchor, head, goal);\n    }\n}\nfunction normalized(ranges, primaryIndex = 0) {\n    let primary = ranges[primaryIndex];\n    ranges.sort((a, b) => a.from - b.from);\n    primaryIndex = ranges.indexOf(primary);\n    for (let i = 1; i < ranges.length; i++) {\n        let range = ranges[i], prev = ranges[i - 1];\n        if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n            let from = prev.from, to = Math.max(range.to, prev.to);\n            if (i <= primaryIndex)\n                primaryIndex--;\n            ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n        }\n    }\n    return new EditorSelection(ranges, primaryIndex);\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/// A facet is a value that is assicated with a state and can be\n/// influenced by any number of extensions. Extensions can provide\n/// input values for the facet, and the facet combines those into an\n/// output value.\n///\n/// Examples of facets are the theme styles associated with an editor\n/// (which are all stored) or the tab size (which is reduced to a\n/// single value, using the input with the hightest precedence).\nclass Facet {\n    constructor(\n    /// @internal\n    combine, \n    /// @internal\n    compareInput, \n    /// @internal\n    compare, isStatic) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /// @internal\n        this.id = nextID++;\n        this.default = combine([]);\n    }\n    /// Define a new facet.\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static);\n    }\n    /// Returns an extension that adds the given value for this facet.\n    of(value) {\n        return new FacetProvider([], this, 0 /* Static */, value);\n    }\n    /// Create an extension that computes a value for the facet from a\n    /// state. You must take care to declare the parts of the state that\n    /// this value depends on, since your function is only called again\n    /// for a new state when one of those parts changed.\n    ///\n    /// In most cases, you'll want to use the\n    /// [`provide`](#state.StateField^define^config.provide) option when\n    /// defining a field instead.\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Single */, get);\n    }\n    /// Create an extension that computes zero or more values for this\n    /// facet from a state.\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Multi */, get);\n    }\n    /// Helper method for registering a facet source with a state field\n    /// via its [`provide`](#state.StateField^define^config.provide) option.\n    /// Returns a value that can be passed to that option to make the\n    /// field automatically provide a value for this facet.\n    from(get, prec) {\n        return field => maybePrec(prec, this.compute([field], state => get(state.field(field))));\n    }\n    /// Helper for [providing](#state.StateField^define^config.provide)\n    /// a dynamic number of values for this facet from a state field.\n    nFrom(get, prec) {\n        return field => maybePrec(prec, this.computeN([field], state => get(state.field(field))));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let idx = addresses[this.id] >> 1, multi = this.type == 2 /* Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return (state, tr) => {\n            if (!tr || tr.reconfigure) {\n                state.values[idx] = getter(state);\n                return 1 /* Changed */;\n            }\n            else {\n                let depChanged = (depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) ||\n                    depAddrs.some(addr => (ensureAddr(state, addr) & 1 /* Changed */) > 0);\n                if (!depChanged)\n                    return 0;\n                let newVal = getter(state), oldVal = tr.startState.values[idx];\n                if (multi ? compareArray(newVal, oldVal, compare) : compare(newVal, oldVal))\n                    return 0;\n                state.values[idx] = newVal;\n                return 1 /* Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    return (state, tr) => {\n        let oldAddr = !tr ? null : tr.reconfigure ? tr.startState.config.address[facet.id] : idx << 1;\n        let changed = oldAddr == null;\n        for (let dynAddr of dynamic) {\n            if (ensureAddr(state, dynAddr) & 1 /* Changed */)\n                changed = true;\n        }\n        if (!changed)\n            return 0;\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        let newVal = facet.combine(values);\n        if (oldAddr != null && facet.compare(newVal, getAddr(tr.startState, oldAddr)))\n            return 0;\n        state.values[idx] = newVal;\n        return 1 /* Changed */;\n    };\n}\nfunction maybeIndex(state, id) {\n    let found = state.config.address[id];\n    return found == null ? null : found >> 1;\n}\n/// Fields can store additional information in an editor state, and\n/// keep it in sync with the rest of the state.\nclass StateField {\n    constructor(\n    /// @internal\n    id, createF, updateF, compareF, \n    /// @internal\n    facets) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.facets = facets;\n    }\n    /// Define a state field.\n    static define(config) {\n        let facets = [];\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), facets);\n        if (config.provide)\n            for (let p of config.provide) {\n                if (p instanceof Facet)\n                    facets.push(p.compute([field], state => state.field(field)));\n                else\n                    facets.push(p(field));\n            }\n        return field;\n    }\n    /// @internal\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return (state, tr) => {\n            if (!tr) {\n                state.values[idx] = this.createF(state);\n                return 1 /* Changed */;\n            }\n            let oldVal, changed = 0;\n            if (tr.reconfigure) {\n                let oldIdx = maybeIndex(tr.startState, this.id);\n                oldVal = oldIdx == null ? this.createF(tr.startState) : tr.startState.values[oldIdx];\n                changed = 1 /* Changed */;\n            }\n            else {\n                oldVal = tr.startState.values[idx];\n            }\n            let value = this.updateF(oldVal, tr);\n            if (!changed && !this.compareF(oldVal, value))\n                changed = 1 /* Changed */;\n            if (changed)\n                state.values[idx] = value;\n            return changed;\n        };\n    }\n}\nconst Prec = { fallback: 3, default: 2, extend: 1, override: 0 };\n/// By default extensions are registered in the order they are found\n/// the flattened form of nested array that was provided. Individual\n/// extension values can be assigned a precedence to override this.\n/// Extensions that do not have a precedence set get the precedence of\n/// the nearest parent with a precedence, or\n/// [`\"default\"`](#state.Precedence) if there is no such parent. The\n/// final ordering of extensions is determined by first sorting by\n/// precedence and then by order within each precedence.\nfunction precedence(extension, value) {\n    if (!Prec.hasOwnProperty(value))\n        throw new RangeError(`Invalid precedence: ${value}`);\n    return new PrecExtension(extension, Prec[value]);\n}\nfunction maybePrec(prec, ext) {\n    return prec ? precedence(ext, prec) : ext;\n}\nclass PrecExtension {\n    constructor(e, prec) {\n        this.e = e;\n        this.prec = prec;\n    }\n}\nclass TaggedExtension {\n    constructor(tag, extension) {\n        this.tag = tag;\n        this.extension = extension;\n    }\n}\n/// Tagged extensions can be used to make a configuration dynamic.\n/// Tagging an extension allows you to later\n/// [replace](#state.TransactionSpec.reconfigure) it with\n/// another extension. A given tag may only occur once within a given\n/// configuration.\nfunction tagExtension(tag, extension) {\n    return new TaggedExtension(tag, extension);\n}\nclass Configuration {\n    constructor(source, replacements, dynamicSlots, address, staticValues) {\n        this.source = source;\n        this.replacements = replacements;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* Uninitialized */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(extension, replacements = Object.create(null), oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        for (let ext of flatten(extension, replacements)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            if (providers.every(p => p.type == 0 /* Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                let value = facet.combine(providers.map(p => p.value));\n                let oldAddr = oldState ? oldState.config.address[facet.id] : null;\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (facet.compare(value, oldVal))\n                        value = oldVal;\n                }\n                staticValues.push(value);\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        return new Configuration(extension, replacements, dynamicSlots.map(f => f(address)), address, staticValues);\n    }\n}\nfunction allKeys(obj) {\n    return (Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(obj) : []).concat(Object.keys(obj));\n}\nfunction flatten(extension, replacements) {\n    let result = [[], [], [], []];\n    let seen = new Map();\n    let tagsSeen = Object.create(null);\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known >= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof TaggedExtension) {\n            if (ext.tag in tagsSeen)\n                throw new RangeError(`Duplicate use of tag '${String(ext.tag)}' in extensions`);\n            tagsSeen[ext.tag] = true;\n            inner(replacements[ext.tag] || ext.extension, prec);\n        }\n        else if (ext.extension) {\n            inner(ext.extension, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.e, ext.prec);\n        }\n        else {\n            result[prec].push(ext);\n            if (ext instanceof StateField)\n                inner(ext.facets, prec);\n        }\n    }\n    inner(extension, Prec.default);\n    for (let key of allKeys(replacements))\n        if (!(key in tagsSeen) && key != \"full\" && replacements[key]) {\n            tagsSeen[key] = true;\n            inner(replacements[key], Prec.default);\n        }\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* Computed */)\n        return status;\n    state.status[idx] = 4 /* Computing */;\n    let changed = state.config.dynamicSlots[idx](state, state.applying);\n    return state.status[idx] = 2 /* Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = Facet.define();\nconst allowMultipleSelections = Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = Facet.define();\nconst transactionFilter = Facet.define();\nconst transactionExtender = Facet.define();\n\n/// Annotations are tagged values that are used to add metadata to\n/// transactions in an extensible way. They should be used to model\n/// things that effect the entire transaction (such as its [time\n/// stamp](#state.Transaction^time) or information about its\n/// [origin](#state.Transaction^userEvent)). For effects that happen\n/// _alongside_ the other changes made by the transaction, [state\n/// effects](#state.StateEffect) are more appropriate.\nclass Annotation {\n    /// @internal\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Define a new type of annotation.\n    static define() { return new AnnotationType(); }\n}\n/// Marker that identifies a type of [annotation](#state.Annotation).\nclass AnnotationType {\n    of(value) { return new Annotation(this, value); }\n}\n/// State effects can be used to represent additional effects\n/// associated with a [transaction](#state.Transaction.effects). They\n/// are often useful to model changes to custom [state\n/// fields](#state.StateField), when those changes aren't implicit in\n/// document or selection changes.\nclass StateEffect {\n    /// @internal\n    constructor(\n    /// @internal\n    type, \n    /// The value of this effect.\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Map this effect through a position mapping. Will return\n    /// `undefined` when that ends up deleting the effect.\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /// Tells you whether this effect object is of a given\n    /// [type](#state.StateEffectType).\n    is(type) { return this.type == type; }\n    /// Define a new effect type. The type parameter indicates the type\n    /// of values that his effect holds.\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /// Map an array of effects through a change set.\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/// Representation of a type of state effect. Defined with\n/// [`StateEffect.define`](#state.StateEffect^define).\nclass StateEffectType {\n    /// @internal\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /// @internal\n    map) {\n        this.map = map;\n    }\n    /// Create a [state effect](#state.StateEffect) instance of this\n    /// type.\n    of(value) { return new StateEffect(this, value); }\n}\n/// Changes to the editor state are grouped into transactions.\n/// Typically, a user action creates a single transaction, which may\n/// contain any number of document changes, may change the selection,\n/// or have other effects. Create a transaction by calling\n/// [`EditorState.update`](#state.EditorState.update).\nclass Transaction {\n    /// @internal\n    constructor(\n    /// The state from which the transaction starts.\n    startState, \n    /// The document changes made by this transaction.\n    changes, \n    /// The selection set by this transaction, or undefined if it\n    /// doesn't explicitly set a selection.\n    selection, \n    /// The effects added to the transaction.\n    effects, \n    /// @internal\n    annotations, \n    /// Holds an object when this transaction\n    /// [reconfigures](#state.ReconfigurationSpec) the state.\n    reconfigure, \n    /// Whether the selection should be scrolled into view after this\n    /// transaction is dispatched.\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.reconfigure = reconfigure;\n        this.scrollIntoView = scrollIntoView;\n        /// @internal\n        this._doc = null;\n        /// @internal\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /// The new document produced by the transaction. (Mostly exposed so\n    /// that [transaction filters](#state.EditorState^transactionFilter)\n    /// can look at the new document without forcing an entire new state\n    /// to be computed by accessing\n    /// [`.state`](#state.Transaction.state).\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /// The new selection produced by the transaction. If\n    /// [`this.selection`](#state.Transaction.selection) is undefined,\n    /// this will [map](#state.EditorSelection.map) the start state's\n    /// current selection through the changes made by the transaction.\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /// The new state created by the transaction.\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /// Get the value of the given annotation type, if any.\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /// Indicates whether the transaction changed the document.\n    get docChanged() { return !this.changes.empty; }\n}\n/// Annotation used to store transaction timestamps.\nTransaction.time = Annotation.define();\n/// Annotation used to associate a transaction with a user interface\n/// event. The view will set this to...\n///\n///  - `\"input\"` when the user types text\n///  - `\"delete\"` when the user deletes the selection or text near the selection\n///  - `\"keyboardselection\"` when moving the selection via the keyboard\n///  - `\"pointerselection\"` when moving the selection through the pointing device\n///  - `\"paste\"` when pasting content\n///  - `\"cut\"` when cutting\n///  - `\"drop\"` when content is inserted via drag-and-drop\nTransaction.userEvent = Annotation.define();\n/// Annotation indicating whether a transaction should be added to\n/// the undo history or not.\nTransaction.addToHistory = Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView,\n        reconfigure: !b.reconfigure ? a.reconfigure : b.reconfigure.full || !a.reconfigure ? b.reconfigure\n            : Object.assign({}, a.reconfigure, b.reconfigure)\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let reconf = spec.reconfigure;\n    if (reconf && reconf.append) {\n        reconf = Object.assign({}, reconf);\n        let tag = typeof Symbol == \"undefined\" ? \"__append\" + Math.floor(Math.random() * 0xffffffff) : Symbol(\"appendConf\");\n        reconf[tag] = reconf.append;\n        reconf.append = undefined;\n    }\n    let sel = spec.selection;\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations: asArray(spec.annotations),\n        scrollIntoView: !!spec.scrollIntoView,\n        reconfigure: reconf\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = new Transaction(state, s.changes, s.selection, s.effects, s.annotations, s.reconfigure, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.invertedDesc;\n        }\n        tr = new Transaction(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.reconfigure, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(tr, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : new Transaction(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.reconfigure, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/// This is used to [categorize](#state.EditorState.charCategorizer)\n/// characters into three categories—word characters, whitespace, and\n/// anything else. It is used do things like selecting by word.\nvar CharCategory;\n(function (CharCategory) {\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\n})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/// The editor state class is a persistent (immutable) data structure.\n/// To update a state, you [create](#state.EditorState.update) a\n/// [transaction](#state.Transaction), which produces a _new_ state\n/// instance, without modifying the original object.\n///\n/// As such, _never_ mutate properties of a state directly. That'll\n/// just break things.\nclass EditorState {\n    /// @internal\n    constructor(\n    /// @internal\n    config, \n    /// The current document.\n    doc, \n    /// The current selection.\n    selection, tr = null) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        /// @internal\n        this.applying = null;\n        this.status = config.statusTemplate.slice();\n        if (tr && !tr.reconfigure) {\n            this.values = tr.startState.values.slice();\n        }\n        else {\n            this.values = config.dynamicSlots.map(_ => null);\n            // Copy over old values for shared facets/fields if this is a reconfigure\n            if (tr)\n                for (let id in config.address) {\n                    let cur = config.address[id], prev = tr.startState.config.address[id];\n                    if (prev != null && (cur & 1) == 0)\n                        this.values[cur >> 1] = getAddr(tr.startState, prev);\n                }\n        }\n        this.applying = tr;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.applying = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Create a [transaction](#state.Transaction) that updates this\n    /// state. Any number of [transaction specs](#state.TransactionSpec)\n    /// can be passed. The [changes](#state.TransactionSpec.changes) (if\n    /// any) of each spec are assumed to start in the _current_ document\n    /// (not the document produced by previous specs), and its\n    /// [selection](#state.TransactionSpec.selection) and\n    /// [effects](#state.TransactionSpec.effects) are assumed to refer\n    /// to the document created by its _own_ changes. The resulting\n    /// transaction contains the combined effect of all the different\n    /// specs. For things like\n    /// [selection](#state.TransactionSpec.selection) or\n    /// [reconfiguration](#state.TransactionSpec.reconfigure), later\n    /// specs take precedence over earlier ones.\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /// @internal\n    applyTransaction(tr) {\n        let conf = this.config;\n        if (tr.reconfigure)\n            conf = Configuration.resolve(tr.reconfigure.full || conf.source, Object.assign(conf.replacements, tr.reconfigure, { full: undefined }), this);\n        new EditorState(conf, tr.newDoc, tr.newSelection, tr);\n    }\n    /// Create a [transaction spec](#state.TransactionSpec) that\n    /// replaces every selection range with the given content.\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /// Create a set of changes and a new selection by running the given\n    /// function for each range in the active selection. The function\n    /// can return an optional set of changes (in the coordinate space\n    /// of the start document), plus an updated range (in the coordinate\n    /// space of the document produced by the call's own changes). This\n    /// method will merge all the changes and ranges into a single\n    /// changeset and selection, and return it as a [transaction\n    /// spec](#state.TransactionSpec), which can be passed to\n    /// [`update`](#state.EditorState.update).\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.primaryIndex),\n            effects\n        };\n    }\n    /// Create a [change set](#state.ChangeSet) from the given change\n    /// description, taking the state's document length and line\n    /// separator into account.\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /// Using the state's [line\n    /// separator](#state.EditorState^lineSeparator), create a\n    /// [`Text`](#text.Text) instance from the given string.\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /// Return the given range of the document as a string.\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /// Get the value of a state [facet](#state.Facet).\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Convert this state to a JSON-serializable object.\n    toJSON() {\n        // FIXME plugin state serialization\n        return {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n    }\n    /// Deserialize a state from its JSON representation.\n    static fromJSON(json, config = {}) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions\n        });\n    }\n    /// Create a new state. You'll usually only need this when\n    /// initializing an editor—updated states are created by applying\n    /// transactions.\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || []);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection);\n    }\n    /// The size (in columns) of a tab in the document, determined by\n    /// the [`tabSize`](#state.EditorState^tabSize) facet.\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /// Get the proper [line-break](#state.EditorState^lineSeparator)\n    /// string for this state.\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /// Look up a translation for the given phrase (via the\n    /// [`phrases`](#state.EditorState^phrases) facet), or return the\n    /// original string if no translation is found.\n    phrase(phrase) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase))\n                return map[phrase];\n        return phrase;\n    }\n    /// Find the values for a given language data field, provided by the\n    /// the [`languageData`](#state.EditorState^languageData) facet.\n    languageDataAt(name, pos) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /// Return a function that can categorize strings (expected to\n    /// represent a single [grapheme cluster](#text.nextClusterBreak))\n    /// into one of:\n    ///\n    ///  - Word (contains an alphanumeric character or a character\n    ///    explicitly listed in the local language's `\"wordChars\"`\n    ///    language data, which should be a string)\n    ///  - Space (contains only whitespace)\n    ///  - Other (anything else)\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n}\n/// A facet that, when enabled, causes the editor to allow multiple\n/// ranges to be selected. Be careful though, because by default the\n/// editor relies on the native DOM selection, which cannot handle\n/// multiple selections. An extension like\n/// [`drawSelection`](#view.drawSelection) can be used to make\n/// secondary selections visible to the user.\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/// Configures the tab size to use in this state. The first\n/// (highest-precedence) value of the facet is used. If no value is\n/// given, this defaults to 4.\nEditorState.tabSize = Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/// The line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\n/// and `\"\\r\"` is treated as a separator when splitting lines, and\n/// lines are joined with `\"\\n\"`.\n///\n/// When you configure a value here, only that precise separator\n/// will be used, allowing you to round-trip documents through the\n/// editor without normalizing line separators.\nEditorState.lineSeparator = lineSeparator;\n/// Registers translation phrases. The\n/// [`phrase`](#state.EditorState.phrase) method will look through\n/// all objects registered with this facet to find translations for\n/// its argument.\nEditorState.phrases = Facet.define();\n/// A facet used to register [language\n/// data](#state.EditorState.languageDataAt) providers.\nEditorState.languageData = languageData;\n/// Facet used to register change filters, which are called for each\n/// transaction (unless explicitly\n/// [disabled](#state.TransactionSpec.filter)), and can suppress\n/// part of the transaction's changes.\n///\n/// Such a function can return `true` to indicate that it doesn't\n/// want to do anything, `false` to completely stop the changes in\n/// the transaction, or a set of ranges in which changes should be\n/// suppressed. Such ranges are represented as an array of numbers,\n/// with each pair of two number indicating the start and end of a\n/// range. So for example `[10, 20, 100, 110]` suppresses changes\n/// between 10 and 20, and between 100 and 110.\nEditorState.changeFilter = changeFilter;\n/// Facet used to register a hook that gets a chance to update or\n/// replace transaction specs before they are applied. This will\n/// only be applied for transactions that don't have\n/// [`filter`](#state.TransactionSpec.filter) set to `false`. You\n/// can either return a single (possibly the input transaction), or\n/// an array of specs (which will be combined in the same way as the\n/// arguments to [`EditorState.update`](#state.EditorState.update)).\n///\n/// When possible, it is recommended to avoid accessing\n/// [`Transaction.state`](#state.Transaction.state) in a filter,\n/// since it will force creation of a state that will then be\n/// discarded again, if the transaction is actually filtered.\n///\n/// (This functionality should be used with care. Indiscriminately\n/// modifying transaction is likely to break something or degrade\n/// the user experience.)\nEditorState.transactionFilter = transactionFilter;\n/// This is a more limited form of\n/// [`transactionFilter`](#state.EditorState^transactionFilter),\n/// which can only add\n/// [annotations](#state.TransactionSpec.annotations),\n/// [effects](#state.TransactionSpec.effects), and\n/// [configuration](#state.TransactionSpec.reconfigure) info. _But_,\n/// this type of filter runs even the transaction has disabled\n/// regular [filtering](#state.TransactionSpec.filter), making it\n/// suitable for effects that don't need to touch the changes or\n/// selection, but do want to process every transaction.\n///\n/// Extenders run _after_ filters, when both are applied.\nEditorState.transactionExtender = transactionExtender;\n\n/// Utility function for combining behaviors to fill in a config\n/// object from an array of provided configs. Will, by default, error\n/// when a field gets two values that aren't ===-equal, but you can\n/// provide combine functions per field to do something else.\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, EditorSelection, EditorState, Facet, MapMode, SelectionRange, StateEffect, StateEffectType, StateField, Transaction, combineConfig, precedence, tagExtension };\n","// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = \"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/// Returns a grapheme cluster end _after_ (not equal to) `pos`, if\n/// possible. Moves across surrogate pairs, extending characters,\n/// characters joined with zero-width joiners, and flag emoji.\nfunction nextClusterBreak(str, pos) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\n/// Returns a grapheme cluster end _before_ `pos`, if possible.\nfunction prevClusterBreak(str, pos) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/// Find the code point at the given position in a string (as in the\n/// [`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\n/// string method).\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/// Given a Unicode codepoint, return the JavaScript string that\n/// respresents it (as in\n/// [`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint).\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/// The first character that takes up two positions in a JavaScript\n/// string. It is often useful to compare with this after calling\n/// `codePointAt`, to figure out whether your character takes up 1 or\n/// 2 index positions.\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\n/// Count the column position at the given offset into the string,\n/// taking extending characters and tab size into account.\nfunction countColumn(string, n, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = nextClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/// Find the offset that corresponds to the given column position in a\n/// string, taking extending characters and tab size into account.\nfunction findColumn(string, n, col, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (n >= col)\n            return { offset: i, leftOver: 0 };\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = nextClusterBreak(string, i);\n    }\n    return { offset: string.length, leftOver: col - n };\n}\n\n/// The document tree type.\nclass Text {\n    /// @internal\n    constructor() { }\n    /// Get the line description around the given position.\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.from <= pos && line.to >= pos)\n                return line;\n        }\n        return cacheLine(this.lineInner(pos, false, 1, 0).finish(this));\n    }\n    /// Get the description for the given (1-based) line number.\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.number == n)\n                return line;\n        }\n        return cacheLine(this.lineInner(n, true, 1, 0).finish(this));\n    }\n    /// Replace a range of the text with the given lines. `text` should\n    /// have a length of at least one.\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts);\n        parts.push(text);\n        this.decompose(to, this.length, parts);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /// Append another document to this one.\n    append(text) {\n        return this.length == 0 ? text : text.length == 0 ? this : TextNode.from([this, text], this.length + text.length);\n    }\n    /// Retrieve the text between the given points.\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts);\n        return TextNode.from(parts, to - from);\n    }\n    /// Test whether this text is equal to another instance.\n    eq(other) { return this == other || eqContent(this, other); }\n    /// Iterate over the text. When `dir` is `-1`, iteration happens\n    /// from end to start. This will return lines and the breaks between\n    /// them as separate strings, and for long lines, might split lines\n    /// themselves into multiple chunks as well.\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /// Iterate over a range of the text. When `from` > `to`, the\n    /// iterator will run in reverse.\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /// Iterate over lines in the text, starting at position (_not_ line\n    /// number) `from`. An iterator returned by this combines all text\n    /// on a line into a single string (which may be expensive for very\n    /// long lines), and skips line breaks (its\n    /// [`lineBreak`](#text.TextIterator.lineBreak) property is always\n    /// false).\n    iterLines(from = 0) { return new LineCursor(this, from); }\n    /// @internal\n    toString() { return this.sliceString(0); }\n    /// Convert the document to an array of lines (which can be\n    /// deserialized again via [`Text.of`](#text.Text^of).\n    toJSON() {\n        let lines = [];\n        for (let iter = this.iterLines(); !iter.next().done;)\n            lines.push(iter.value);\n        return lines;\n    }\n    /// Create a `Text` instance for the given array of lines.\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0] && Text.empty)\n            return Text.empty;\n        let length = textLength(text);\n        return length < 1024 /* MaxLeaf */ ? new TextLeaf(text, length) : TextNode.from(TextLeaf.split(text, []), length);\n    }\n}\nif (typeof Symbol != \"undefined\")\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\nlet lineCache = [], lineCachePos = -1, lineCacheSize = 10;\nfunction cacheLine(line) {\n    return lineCache[lineCachePos = (lineCachePos + 1) % lineCacheSize] = line;\n}\n// Leaves store an array of strings. There are always line breaks\n// between these strings (though not between adjacent Text nodes).\n// These are limited in length, so that bigger documents are\n// constructed as a tree structure. Long lines will be broken into a\n// number of single-line leaves.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target) {\n        target.push(new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from)));\n    }\n    lastLineLength() { return this.text[this.text.length - 1].length; }\n    firstLineLength() { return this.text[0].length; }\n    replace(from, to, text) {\n        let newLen = this.length + text.length - (to - from);\n        if (newLen >= 1024 /* MaxLeaf */ || !(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        return new TextLeaf(appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        target[target.length - 1] += this.text[0];\n        for (let i = 1; i < this.text.length; i++)\n            target.push(this.text[i]);\n    }\n    static split(text, target) {\n        let part = [], length = -1;\n        for (let line of text) {\n            for (;;) {\n                let newLength = length + line.length + 1;\n                if (newLength < 512 /* BaseLeaf */) {\n                    length = newLength;\n                    part.push(line);\n                    break;\n                }\n                let cut = 512 /* BaseLeaf */ - length - 1, after = line.charCodeAt(cut);\n                if (after >= 0xdc00 && after < 0xe000)\n                    cut++;\n                part.push(line.slice(0, cut));\n                target.push(new TextLeaf(part, 512 /* BaseLeaf */));\n                line = line.slice(cut);\n                length = -1;\n                part = [];\n            }\n        }\n        if (length != -1)\n            target.push(new TextLeaf(part, length));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance itself on\n// changes.\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 1;\n        for (let child of children)\n            this.lines += child.lines - 1;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target) {\n                let inner = child.lineInner(target, isLine, line, offset), add;\n                if (inner.from == offset && (add = this.lineLengthTo(i))) {\n                    inner.from -= add;\n                    inner.content = null;\n                }\n                if (inner.to == end && (add = this.lineLengthFrom(i + 1))) {\n                    inner.to += add;\n                    inner.content = null;\n                }\n                return inner;\n            }\n            offset = end;\n            line = endLine;\n        }\n    }\n    decompose(from, to, target) {\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                if (pos >= from && end <= to)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target);\n            }\n            pos = end;\n        }\n    }\n    lineLengthTo(to) {\n        let length = 0;\n        for (let i = to - 1; i >= 0; i--) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.lastLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    lastLineLength() { return this.lineLengthTo(this.children.length); }\n    lineLengthFrom(from) {\n        let length = 0;\n        for (let i = from; i < this.children.length; i++) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.firstLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    firstLineLength() { return this.lineLengthFrom(0); }\n    replace(from, to, text) {\n        // Looks like a small change, try to optimize\n        if (text.length < 512 /* BaseLeaf */ && to - from < 512 /* BaseLeaf */) {\n            let lengthDiff = text.length - (to - from);\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end &&\n                    child.length + lengthDiff < (this.length + lengthDiff) >> (3 /* BranchShift */ - 1) &&\n                    child.length + lengthDiff > 0) {\n                    let copy = this.children.slice();\n                    copy[i] = child.replace(from - pos, to - pos, text);\n                    return new TextNode(copy, this.length + lengthDiff);\n                }\n                pos = end;\n            }\n        }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                let part = child.sliceString(from - pos, to - pos, lineSep);\n                if (from >= pos && to <= end)\n                    return part;\n                result += part;\n            }\n            pos = end;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    static from(children, length) {\n        if (!children.every(ch => ch instanceof Text))\n            throw new Error(\"NOP\");\n        if (length < 1024 /* MaxLeaf */) {\n            let text = [\"\"];\n            for (let child of children)\n                child.flatten(text);\n            return new TextLeaf(text, length);\n        }\n        let chunkLength = Math.max(512 /* BaseLeaf */, length >> 3 /* BranchShift */), maxLength = chunkLength << 1, minLength = chunkLength >> 1;\n        let chunked = [], currentLength = 0, currentChunk = [];\n        function add(child) {\n            let childLength = child.length, last;\n            if (!childLength)\n                return;\n            if (childLength > maxLength && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (childLength > minLength && (currentLength > minLength || currentLength == 0)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLength > 0 &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.length + last.length <= 512 /* BaseLeaf */) {\n                currentLength += childLength;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(appendText(child.text, last.text.slice()), child.length + last.length);\n            }\n            else {\n                if (currentLength + childLength > chunkLength)\n                    flush();\n                currentLength += childLength;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLength == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLength));\n            currentLength = 0;\n            currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = Text.of([\"\"]);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nfunction eqContent(a, b) {\n    if (a.length != b.length || a.lines != b.lines)\n        return false;\n    let iterA = new RawTextCursor(a), iterB = new RawTextCursor(b);\n    for (let offA = 0, offB = 0;;) {\n        if (iterA.lineBreak != iterB.lineBreak || iterA.done != iterB.done) {\n            return false;\n        }\n        else if (iterA.done) {\n            return true;\n        }\n        else if (iterA.lineBreak) {\n            iterA.next();\n            iterB.next();\n            offA = offB = 0;\n        }\n        else {\n            let strA = iterA.value.slice(offA), strB = iterB.value.slice(offB);\n            if (strA.length == strB.length) {\n                if (strA != strB)\n                    return false;\n                iterA.next();\n                iterB.next();\n                offA = offB = 0;\n            }\n            else if (strA.length > strB.length) {\n                if (strA.slice(0, strB.length) != strB)\n                    return false;\n                offA += strB.length;\n                iterB.next();\n                offB = 0;\n            }\n            else {\n                if (strB.slice(0, strA.length) != strA)\n                    return false;\n                offB += strA.length;\n                iterA.next();\n                offA = 0;\n            }\n        }\n    }\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 0 : text instanceof TextLeaf ? text.text.length : text.children.length];\n    }\n    next(skip = 0) {\n        for (;;) {\n            let last = this.nodes.length - 1;\n            if (last < 0) {\n                this.done = true;\n                this.value = \"\";\n                this.lineBreak = false;\n                return this;\n            }\n            let top = this.nodes[last];\n            let offset = this.offsets[last];\n            if (top instanceof TextLeaf) {\n                // Internal offset with lineBreak == false means we have to\n                // count the line break at this position\n                if (offset != (this.dir > 0 ? 0 : top.text.length) && !this.lineBreak) {\n                    this.lineBreak = true;\n                    if (skip == 0) {\n                        this.value = \"\\n\";\n                        return this;\n                    }\n                    skip--;\n                    continue;\n                }\n                // Otherwise, move to the next string\n                let next = top.text[offset - (this.dir < 0 ? 1 : 0)];\n                this.offsets[last] = (offset += this.dir);\n                if (offset == (this.dir > 0 ? top.text.length : 0)) {\n                    this.nodes.pop();\n                    this.offsets.pop();\n                }\n                this.lineBreak = false;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : this.dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else if (offset == (this.dir > 0 ? top.children.length : 0)) {\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else {\n                let next = top.children[this.dir > 0 ? offset : offset - 1], len = next.length;\n                this.offsets[last] = offset + this.dir;\n                if (skip > len) {\n                    skip -= len;\n                }\n                else {\n                    this.nodes.push(next);\n                    this.offsets.push(this.dir > 0 ? 0 : next instanceof TextLeaf ? next.text.length : next.children.length);\n                }\n            }\n        }\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        if (start > end) {\n            this.skip = text.length - start;\n            this.limit = start - end;\n        }\n        else {\n            this.skip = start;\n            this.limit = end - start;\n        }\n    }\n    next() {\n        if (this.limit <= 0) {\n            this.limit = -1;\n        }\n        else {\n            let { value, lineBreak, done } = this.cursor.next(this.skip);\n            this.skip = 0;\n            this.value = value;\n            let len = lineBreak ? 1 : value.length;\n            if (len > this.limit)\n                this.value = this.cursor.dir > 0 ? value.slice(0, this.limit) : value.slice(len - this.limit);\n            if (done || this.value.length == 0)\n                this.limit = -1;\n            else\n                this.limit -= this.value.length;\n        }\n        return this;\n    }\n    get lineBreak() { return this.cursor.lineBreak; }\n    get done() { return this.limit < 0; }\n}\nclass LineCursor {\n    constructor(text, from = 0) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = text.iter();\n        this.skip = from;\n    }\n    next(skip = 0) {\n        if (this.cursor.done) {\n            this.done = true;\n            this.value = \"\";\n            return this;\n        }\n        skip += this.skip;\n        this.skip = 0;\n        for (this.value = \"\";;) {\n            let { value, lineBreak, done } = this.cursor.next(skip);\n            skip = 0;\n            if (done || lineBreak)\n                return this;\n            this.value += value;\n        }\n    }\n    get lineBreak() { return false; }\n}\n/// This type describes a line in the document. It is created\n/// on-demand when lines are [queried](#text.Text.lineAt).\nclass Line {\n    /// @internal\n    constructor(\n    /// The position of the start of the line.\n    from, \n    /// The position at the end of the line (_before_ the line break,\n    /// if this isn't the last line).\n    to, \n    /// This line's line number (1-based).\n    number, \n    /// @internal\n    content) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.content = content;\n    }\n    /// The length of the line (not including any line break after it).\n    get length() { return this.to - this.from; }\n    /// Retrieve a part of the content of this line. This is a method,\n    /// rather than, say, a string property, to avoid concatenating long\n    /// lines whenever they are accessed. Try to write your code, if it\n    /// is going to be doing a lot of line-reading, to read only the\n    /// parts it needs.\n    slice(from = 0, to = this.length) {\n        if (from == to)\n            return \"\";\n        if (typeof this.content == \"string\")\n            return this.content.slice(from, to);\n        if (!this.content)\n            this.content = new LineContent(this.doc, this.from);\n        let result = this.content.slice(from, to);\n        if (from == 0 && to == this.length)\n            this.content = result;\n        return result;\n    }\n    /// @internal\n    finish(text) {\n        this.doc = text;\n        return this;\n    }\n    /// Find the next (or previous if `forward` is false) grapheme\n    /// cluster break from the given start position (as an offset inside\n    /// the line, not the document). Will return a position greater than\n    /// (or less than if `forward` is false) `start` unless there is no\n    /// such index in the string.\n    findClusterBreak(start, forward) {\n        if (start < 0 || start > this.length)\n            throw new RangeError(\"Invalid position given to Line.findClusterBreak\");\n        let contextStart, context;\n        if (this.content == \"string\") {\n            contextStart = this.from;\n            context = this.content;\n        }\n        else {\n            contextStart = Math.max(0, start - 256);\n            context = this.slice(contextStart, Math.min(this.length, contextStart + 512));\n        }\n        return (forward ? nextClusterBreak : prevClusterBreak)(context, start - contextStart) + contextStart;\n    }\n}\nclass LineContent {\n    constructor(doc, start) {\n        this.doc = doc;\n        this.start = start;\n        this.cursor = null;\n        this.strings = null;\n    }\n    // FIXME quadratic complexity (somewhat) when iterating long lines in small pieces\n    slice(from, to) {\n        if (!this.cursor) {\n            this.cursor = this.doc.iter();\n            this.strings = [this.cursor.next(this.start).value];\n        }\n        for (let result = \"\", pos = 0, i = 0;; i++) {\n            if (i == this.strings.length) {\n                let next = this.cursor.next().value;\n                if (!next)\n                    return result;\n                this.strings.push(next);\n            }\n            let string = this.strings[i], start = pos;\n            pos += string.length;\n            if (pos <= from)\n                continue;\n            result += string.slice(Math.max(0, from - start), Math.min(string.length, to - start));\n            if (pos >= to)\n                return result;\n        }\n    }\n}\n\nexport { Line, Text, codePointAt, codePointSize, countColumn, findColumn, fromCodePoint, nextClusterBreak, prevClusterBreak };\n","import { ViewPlugin, themeClass, Direction, EditorView } from '@codemirror/next/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/next/state';\n\nconst Outside = \"-10000px\";\nconst tooltipPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.tooltips = view.state.facet(showTooltip);\n        this.tooltipViews = this.tooltips.map(tp => this.createTooltip(tp));\n    }\n    update(update) {\n        let tooltips = update.state.facet(showTooltip);\n        if (tooltips == this.tooltips) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n        }\n        else {\n            let views = [];\n            for (let i = 0; i < tooltips.length; i++) {\n                let tip = tooltips[i], known = -1;\n                for (let i = 0; i < this.tooltips.length; i++)\n                    if (this.tooltips[i].create == tip.create)\n                        known = i;\n                if (known < 0) {\n                    views[i] = this.createTooltip(tip);\n                }\n                else {\n                    let tooltipView = views[i] = this.tooltipViews[known];\n                    if (tooltipView.update)\n                        tooltipView.update(update);\n                }\n            }\n            for (let t of this.tooltipViews)\n                if (views.indexOf(t) < 0)\n                    t.dom.remove();\n            this.tooltips = tooltips;\n            this.tooltipViews = views;\n            this.maybeMeasure();\n        }\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.className = themeClass(\"tooltip\" + (tooltip.style ? \".\" + tooltip.style : \"\"));\n        this.view.dom.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        for (let { dom } of this.tooltipViews)\n            dom.remove();\n    }\n    readMeasure() {\n        return {\n            editor: this.view.dom.getBoundingClientRect(),\n            pos: this.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n            size: this.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight\n        };\n    }\n    writeMeasure(measured) {\n        let { editor } = measured;\n        for (let i = 0; i < this.tooltipViews.length; i++) {\n            let tooltip = this.tooltips[i], tView = this.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= editor.top || pos.top >= editor.bottom || pos.right <= editor.left || pos.left >= editor.right) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let left = this.view.textDirection == Direction.LTR ? Math.min(pos.left, measured.innerWidth - width)\n                : Math.max(0, pos.left - width);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide &&\n                (above ? pos.top - (size.bottom - size.top) < 0 : pos.bottom + (size.bottom - size.top) > measured.innerHeight))\n                above = !above;\n            dom.style.top = (above ? pos.top - height : pos.bottom) + \"px\";\n            dom.style.left = left + \"px\";\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.tooltips.length) {\n            if (this.view.inView || this.inView)\n                this.view.requestMeasure(this.measureReq);\n            this.inView = this.view.inView;\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = EditorView.baseTheme({\n    $tooltip: {\n        position: \"fixed\",\n        border: \"1px solid #ddd\",\n        backgroundColor: \"#f5f5f5\",\n        zIndex: 100\n    }\n});\n/// Supporting extension for displaying tooltips. Allows\n/// [`showTooltip`](#tooltip.showTooltip) to be used to define\n/// tooltips.\nfunction tooltips() {\n    return [tooltipPlugin, baseTheme];\n}\n/// Behavior by which an extension can provide a tooltip to be shown.\nconst showTooltip = Facet.define();\nconst HoverTime = 750, HoverMaxDist = 10;\nclass HoverPlugin {\n    constructor(view, source, field, setHover) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.lastMouseMove = null;\n        this.hoverTimeout = -1;\n        this.mouseInside = false;\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseenter\", this.mouseenter = this.mouseenter.bind(this));\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (!this.mouseInside || this.active)\n            return;\n        let now = Date.now(), lastMove = this.lastMouseMove;\n        if (now - lastMove.timeStamp < HoverTime) {\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime - (now - lastMove.timeStamp));\n            return;\n        }\n        let pos = this.view.contentDOM.contains(lastMove.target)\n            ? this.view.posAtCoords({ x: lastMove.clientX, y: lastMove.clientY }) : -1;\n        let open = pos == null ? null : this.source(this.view, (from, to) => {\n            return from <= pos && to >= pos && (from == to || isOverRange(this.view, from, to, lastMove.clientX, lastMove.clientY));\n        });\n        if (open)\n            this.view.dispatch({ effects: this.setHover.of(open) });\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMouseMove = event;\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(event.target)) {\n            let { pos } = tooltip, end = (_a = tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords({ x: event.clientX, y: event.clientY }) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, HoverMaxDist)))\n                this.view.dispatch({ effects: this.setHover.of(null) });\n        }\n    }\n    mouseenter() {\n        this.mouseInside = true;\n    }\n    mouseleave() {\n        this.mouseInside = false;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseenter\", this.mouseenter);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin = 0) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/// Enable a hover tooltip, which shows up when the pointer hovers\n/// over ranges of text. The callback should, for each hoverable\n/// range, call its `check` argument to see if that range is being\n/// hovered over, and return a tooltip description when it is.\nfunction hoverTooltip(source, options = {}) {\n    const setHover = StateEffect.define();\n    const hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection)))\n                return null;\n            for (let effect of tr.effects)\n                if (effect.is(setHover))\n                    return effect.value;\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                return copy;\n            }\n            return value;\n        },\n        provide: [showTooltip.nFrom(v => v ? [v] : [])]\n    });\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover)),\n        tooltips()\n    ];\n}\n\nexport { hoverTooltip, showTooltip, tooltips };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { MapMode, Facet, Text as Text$1, EditorSelection, ChangeSet, Transaction, CharCategory, EditorState, precedence, combineConfig } from '@codemirror/next/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nexport { Range } from '@codemirror/next/rangeset';\nimport { Text, countColumn, findColumn, codePointAt } from '@codemirror/next/text';\nimport { keyName, base } from 'w3c-keyname';\n\nlet [nav, doc] = typeof navigator != \"undefined\"\n    ? [navigator, document]\n    : [{ userAgent: \"\", vendor: \"\", platform: \"\" }, { documentElement: { style: {} } }];\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nvar browser = {\n    mac: /Mac/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n    android: /Android\\b/.test(nav.userAgent),\n    webkit,\n    safari: /Apple Computer/.test(nav.vendor),\n    webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nfunction getSelection(root) {\n    return (root.getSelection ? root.getSelection() : document.getSelection());\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nfunction selectionCollapsed(domSel) {\n    let collapsed = domSel.isCollapsed;\n    if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n        collapsed = false;\n    return collapsed;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return dom.contains(selection.anchorNode.nodeType == 3 ? selection.anchorNode.parentNode : selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3) {\n        let range = tempRange();\n        range.setEnd(dom, dom.nodeValue.length);\n        range.setStart(dom, 0);\n        return range.getClientRects();\n    }\n    else if (dom.nodeType == 1) {\n        return dom.getClientRects();\n    }\n    else {\n        return [];\n    }\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nconst ScrollSpace = 5;\nfunction scrollRectIntoView(dom, rect) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == document.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (rect.top < bounding.top)\n                moveY = -(bounding.top - rect.top + ScrollSpace);\n            else if (rect.bottom > bounding.bottom)\n                moveY = rect.bottom - bounding.bottom + ScrollSpace;\n            if (rect.left < bounding.left)\n                moveX = -(bounding.left - rect.left + ScrollSpace);\n            else if (rect.right > bounding.right)\n                moveX = rect.right - bounding.right + ScrollSpace;\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelection {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    set(domSel) {\n        this.anchorNode = domSel.anchorNode;\n        this.anchorOffset = domSel.anchorOffset;\n        this.focusNode = domSel.focusNode;\n        this.focusOffset = domSel.focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction tempRange() { return scratchRange || (scratchRange = document.createRange()); }\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst none = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom, pos = null;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    let next = pos ? pos.nextSibling : parent.firstChild;\n                    if (next && !child.dom && !ContentView.get(next))\n                        child.reuseDOM(next);\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                if (track && track.node == parent && pos != child.dom)\n                    track.written = true;\n                syncNodeInto(parent, pos, child.dom);\n                pos = child.dom;\n            }\n            let next = pos ? pos.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm(next);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { return false; }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (end >= to && end != pos && toI == -1) {\n                toI = i;\n                toEnd = end;\n                break;\n            }\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd, startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: toI < this.children.length - 1 && toI >= 0 ? this.children[toI + 1].dom : null };\n    }\n    // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n    markDirty(andParent = false) {\n        if (this.dirty & 2 /* Node */)\n            return;\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = none) {\n        this.markDirty();\n        for (let i = from; i < to; i++)\n            this.children[i].parent = null;\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nfunction syncNodeInto(parent, after, dom) {\n    let next = after ? after.nextSibling : parent.firstChild;\n    if (dom.parentNode == parent)\n        while (next != dom)\n            next = rm(next);\n    else\n        parent.insertBefore(dom, next);\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\n\nconst none$1 = [];\nclass InlineView extends ContentView {\n    /// Return true when this view is equivalent to `other` and can take\n    /// on its role.\n    become(_other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // negative number to indicate it is before its position, or a\n    // positive number when after its position.\n    getSide() { return 0; }\n}\nInlineView.prototype.children = none$1;\nconst MaxJoinLen = 256;\nclass TextView extends InlineView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType != 3)\n            return false;\n        this.createDOM(dom);\n        return true;\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new TextView(this.text.slice(from));\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side, this.length);\n    }\n}\nclass MarkView extends InlineView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    createDOM() {\n        let dom = document.createElement(this.mark.tagName);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        this.setDOM(dom);\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        super.sync(track);\n    }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeInlineChildren(this, from, to, source ? source.children : none$1, openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new MarkView(this.mark, sliceInlineChildren(this.children, from), this.length - from);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side, length) {\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else\n            to++;\n    }\n    let range = tempRange();\n    range.setEnd(text, to);\n    range.setStart(text, from);\n    let rects = range.getClientRects(), rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends InlineView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    slice(from) { return WidgetView.create(this.widget, this.length - from, this.side); }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) { return new DOMPos(this.widget.text, pos); }\n    sync() { if (!this.dom)\n        this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) { return textCoords(this.widget.text, pos, side, this.length); }\n}\nfunction mergeInlineChildren(parent, from, to, elts, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of elts)\n        dLen += view.length;\n    parent.length += dLen;\n    let { children } = parent;\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n        let start = children[fromI];\n        // Maybe just update that view and be done\n        if (elts.length == 1 && start.merge(fromOff, toOff, elts[0], openStart, openEnd))\n            return;\n        if (elts.length == 0) {\n            start.merge(fromOff, toOff, null, openStart, openEnd);\n            return;\n        }\n        // Otherwise split it, so that we don't have to worry about aliasing front/end afterwards\n        let after = start.slice(toOff);\n        if (after.merge(0, 0, elts[elts.length - 1], 0, openEnd))\n            elts[elts.length - 1] = after;\n        else\n            elts.push(after);\n        toI++;\n        openEnd = toOff = 0;\n    }\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n        let end = children[toI];\n        if (elts.length && end.merge(0, toOff, elts[elts.length - 1], 0, openEnd)) {\n            elts.pop();\n            openEnd = 0;\n        }\n        else {\n            end.merge(0, toOff, null, 0, 0);\n        }\n    }\n    else if (toI < children.length && elts.length &&\n        children[toI].merge(0, 0, elts[elts.length - 1], 0, openEnd)) {\n        elts.pop();\n        openEnd = 0;\n    }\n    if (fromOff) {\n        let start = children[fromI];\n        if (elts.length && start.merge(fromOff, start.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n        else {\n            start.merge(fromOff, start.length, null, 0, 0);\n        }\n        fromI++;\n    }\n    else if (fromI && elts.length) {\n        let end = children[fromI - 1];\n        if (end.merge(end.length, end.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n    }\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && children[toI - 1].become(elts[elts.length - 1])) {\n        elts.pop();\n        toI--;\n        openEnd = 0;\n    }\n    while (fromI < toI && elts.length && children[fromI].become(elts[0])) {\n        elts.shift();\n        fromI++;\n        openStart = 0;\n    }\n    if (!elts.length && fromI && toI < children.length && openStart && openEnd &&\n        children[toI].merge(0, 0, children[fromI - 1], openStart, openEnd))\n        fromI--;\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI)\n        parent.replaceChildren(fromI, toI, elts);\n}\nfunction sliceInlineChildren(children, from) {\n    let result = [], off = 0;\n    for (let elt of children) {\n        let end = off + elt.length;\n        if (end > from)\n            result.push(off < from ? elt.slice(from - off) : elt);\n        off = end;\n    }\n    return result;\n}\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (side <= 0 || end == view.length ? end >= pos : end > pos)\n            return child.coordsAt(pos - off, side);\n        off = end;\n    }\n    return (view.dom.lastChild || view.dom).getBoundingClientRect();\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(name, attrs[name]);\n}\n\n/// Widgets added to the content are described by subclasses of this\n/// class. This makes it possible to delay creating of the DOM\n/// structure for a widget until it is needed, and to avoid redrawing\n/// widgets even when the decorations that define them are recreated.\n/// `T` can be a type of value passed to instances of the widget type.\nclass WidgetType {\n    /// Compare this instance to another instance of the same type.\n    /// (TypeScript can't express this, but only instances of the same\n    /// specific class will be passed to this method.) This is used to\n    /// avoid redrawing widgets when they are replace by a new\n    /// decoration of the same type. The default implementation just\n    /// returns `false`, which may be wasteful.\n    eq(_widget) { return false; }\n    /// Update a DOM element created by a widget of the same type (but\n    /// different, non-`eq` content) to reflect this widget. May return\n    /// true to indicate that it could update, false to indicate it\n    /// couldn't (in which case the widget will be redrawn). The default\n    /// implementation just returns false.\n    updateDOM(_dom) { return false; }\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// The estimated height this widget will have, to be used when\n    /// estimating the height of content that hasn't been drawn. May\n    /// return -1 to indicate you don't know. The default implementation\n    /// returns -1.\n    get estimatedHeight() { return -1; }\n    /// Can be used to configure which kinds of events inside the widget\n    /// should be ignored by the editor. The default is to ignore all\n    /// events.\n    ignoreEvent(_event) { return true; }\n    //// @internal\n    get customView() { return null; }\n}\n/// The different types of blocks that can occur in an editor view.\nvar BlockType;\n(function (BlockType) {\n    /// A line of text.\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /// A block widget associated with the position after it.\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /// A block widget associated with the position before it.\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /// A block widget [replacing](#view.Decoration^replace) a range of content.\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\n})(BlockType || (BlockType = {}));\n/// A decoration provides information on how to draw or style a piece\n/// of content. You'll usually use it wrapped in a\n/// [`Range`](#rangeset.Range), which adds a start and end position.\nclass Decoration extends RangeValue {\n    /// @internal\n    constructor(\n    /// @internal\n    startSide, \n    /// @internal\n    endSide, \n    /// @internal\n    widget, \n    /// The config object used to create this decoration.\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /// @internal\n    get heightRelevant() { return false; }\n    /// Create a mark decoration, which influences the styling of the\n    /// content in its range. Nested mark decorations will cause nested\n    /// DOM elements to be created. Nesting order is determined by\n    /// precedence of the [facet](#view.EditorView^decorations) or\n    /// (below the facet-provided decorations) [view\n    /// plugin](#view.PluginSpec.decorations). Such elements are broken\n    /// on line boundaries and on the boundaries of higher-precedence\n    /// decorations.\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /// Create a widget decoration, which adds an element at the given\n    /// position.\n    static widget(spec) {\n        let side = spec.side || 0;\n        if (spec.block)\n            side += (200000000 /* BigBlock */ + 1) * (side > 0 ? 1 : -1);\n        return new PointDecoration(spec, side, side, !!spec.block, spec.widget || null, false);\n    }\n    /// Create a replace decoration which replaces the given range with\n    /// a widget, or simply hides it.\n    static replace(spec) {\n        let block = !!spec.block;\n        let { start, end } = getInclusive(spec);\n        let startSide = block ? -200000000 /* BigBlock */ * (start ? 2 : 1) : 100000000 /* BigInline */ * (start ? -1 : 1);\n        let endSide = block ? 200000000 /* BigBlock */ * (end ? 2 : 1) : 100000000 /* BigInline */ * (end ? 1 : -1);\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /// Create a line decoration, which can add DOM attributes to the\n    /// line starting at the given position.\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /// Build a [`DecorationSet`](#view.DecorationSet) from the given\n    /// decorated range or ranges.\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /// @internal\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/// The empty set of decorations.\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(100000000 /* BigInline */ * (start ? -1 : 1), 100000000 /* BigInline */ * (end ? 1 : -1), null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-100000000 /* BigInline */, -100000000 /* BigInline */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide < 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide < 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide < 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start || false, end: end || false };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nconst MinRangeGap = 4;\nfunction addRange(from, to, ranges) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + MinRangeGap > from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nconst theme = Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = StyleModule.newName();\nfunction expandThemeClasses(sel) {\n    return sel.replace(/\\$\\w[\\w\\.]*/g, cls => {\n        let parts = cls.slice(1).split(\".\"), result = \"\";\n        for (let i = 1; i <= parts.length; i++)\n            result += \".cm-\" + parts.slice(0, i).join(\"-\");\n        return result;\n    });\n}\nfunction buildTheme(main, spec) {\n    return new StyleModule(spec, {\n        process(sel) {\n            sel = expandThemeClasses(sel);\n            return /\\$/.test(sel) ? sel.replace(/\\$/, main) : main + \" \" + sel;\n        },\n        extend(template, sel) {\n            template = expandThemeClasses(template);\n            return sel.slice(0, main.length + 1) == main + \" \"\n                ? main + \" \" + template.replace(/&/, sel.slice(main.length + 1))\n                : template.replace(/&/, sel);\n        }\n    });\n}\n/// Create a set of CSS class names for the given theme class, which\n/// can be added to a DOM element within an editor to make themes able\n/// to style it. Theme classes can be single words or words separated\n/// by dot characters. In the latter case, the returned classes\n/// combine those that match the full name and those that match some\n/// prefix—for example `\"panel.search\"` will match both the theme\n/// styles specified as `\"panel.search\"` and those with just\n/// `\"panel\"`. More specific theme classes (with more dots) take\n/// precedence over less specific ones.\nfunction themeClass(selector) {\n    if (selector.indexOf(\".\") < 0)\n        return \"cm-\" + selector;\n    let parts = selector.split(\".\"), result = \"\";\n    for (let i = 1; i <= parts.length; i++)\n        result += (result ? \" \" : \"\") + \"cm-\" + parts.slice(0, i).join(\"-\");\n    return result;\n}\nconst baseTheme = buildTheme(\".\" + baseThemeID, {\n    $: {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&$focused\": {\n            // FIXME it would be great if we could directly use the browser's\n            // default focus outline, but it appears we can't, so this tries to\n            // approximate that\n            outline_fallback: \"1px dotted #212121\",\n            outline: \"5px auto -webkit-focus-ring-color\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    $scroller: {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    $content: {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\"\n    },\n    \"$$light $content\": { caretColor: \"black\" },\n    \"$$dark $content\": { caretColor: \"white\" },\n    $line: {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    $selectionLayer: {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    $selectionBackground: {\n        position: \"absolute\",\n    },\n    \"$$light $selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"$$dark $selectionBackground\": {\n        background: \"#222\"\n    },\n    \"$$focused$light $selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"$$focused$dark $selectionBackground\": {\n        background: \"#233\"\n    },\n    $cursorLayer: {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"$$focused $cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    $cursor: {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid #bbb\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\"\n    },\n    \"$$dark $cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \"$$focused $cursor\": {\n        borderLeft: \"1.2px solid black\",\n    },\n    $placeholder: {\n        color: \"#888\",\n        display: \"inline-block\"\n    },\n    $button: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"3px\"\n    },\n    \"$$light $button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"$$dark $button\": {\n        backgroundImage: \"linear-gradient(#555, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    $textfield: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"$$light $textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"$$dark $textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n});\n\nconst LineClass = themeClass(\"line\");\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, takeDeco, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (takeDeco)\n            this.setDeco(source ? source.attrs : null);\n        mergeInlineChildren(this, from, to, source ? source.children : none$2, openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].slice(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0) {\n            this.children[i - 1].parent = null;\n            i--;\n        }\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    // Only called when building a line view in ContentBuilder\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    // FIXME might need another hack to work around Firefox's behavior\n    // of not actually displaying the cursor even though it's there in\n    // the DOM\n    sync(track) {\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = LineClass;\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(LineClass);\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        if (!last || (last.nodeName != \"BR\" && (ContentView.get(last) instanceof WidgetView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height, charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    match(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0;; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (block.length)\n                    return null;\n            }\n            off = end + block.breakAfter;\n        }\n    }\n}\nconst none$2 = [];\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        return new BlockWidgetView(this.widget, len, this.type);\n    }\n    get children() { return none$2; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n    }\n    domBoundsAround() { return null; }\n    match(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine)\n            this.content.push(this.curLine = new LineView);\n        return this.curLine;\n    }\n    addWidget(view) {\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish() {\n        if (!this.posCovered())\n            this.getLine();\n    }\n    wrapMarks(view, active) {\n        for (let i = active.length - 1; i >= 0; i--)\n            view = new MarkView(active[i], [view], view.length);\n        return view;\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length);\n            this.getLine().append(this.wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            length -= take;\n            this.textOff += take;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart) {\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let widget = this.wrapMarks(WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide), active);\n                this.getLine().append(widget, openStart);\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations) {\n        let builder = new ContentBuilder(text, from, to);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish();\n        return builder;\n    }\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\n/// Used to indicate [text direction](#view.EditorView.textDirection).\nvar Direction;\n(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\n})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/// Represents a contiguous range of text that has a single direction\n/// (as in left-to-right or right-to-left).\nclass BidiSpan {\n    /// @internal\n    constructor(\n    /// The start of the span (relative to the start of the line).\n    from, \n    /// The end of the span.\n    to, \n    /// The [\"bidi\n    /// level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    /// of the span (in this context, 0 means\n    /// left-to-right, 1 means right-to-left, 2 means left-to-right\n    /// number inside right-to-left text).\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /// The direction of this span.\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /// @internal\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /// @internal\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = line.findClusterBreak(startIndex, indexForward);\n    movedOver = line.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, 0, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, 0, span.level);\n}\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.direction = Direction.LTR;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefresh(lineHeights, whiteSpace, direction) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight || (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction;\n    }\n    refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n            this.lineWrapping != lineWrapping ||\n            this.direction != direction;\n        this.lineWrapping = lineWrapping;\n        this.direction = direction;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/// Record used to represent information about a block-level element\n/// in the editor view.\nclass BlockInfo {\n    /// @internal\n    constructor(\n    /// The start of the element in the document.\n    from, \n    /// The length of the element.\n    length, \n    /// The top position of the element.\n    top, \n    /// Its height.\n    height, \n    /// The type of element this is. When querying lines, this may be\n    /// an array of all the blocks that make up the line.\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /// The end of the element as a document position.\n    get to() { return this.from + this.length; }\n    /// The bottom position of the element.\n    get bottom() { return this.top + this.height; }\n    /// @internal\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n}\nvar QueryType;\n(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\n})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-4;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(_from, _to, doc, top, offset, f) {\n        f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = from; pos < to;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, top += lineHeight, BlockType.Text));\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from);\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let line = new HeightMapText(len, measured.heights[measured.index++]);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            oracle.heightChanged = true;\n            return HeightMap.of(nodes);\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid || this.right.height == 0 ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop || this.right.height == 0 : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? Math.max(0, deco.widget.estimatedHeight) : 0;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder);\n        return builder.finish(from);\n    }\n    get minPointSize() { return 0; }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator();\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes);\n    }\n    get minPointSize() { return 0; }\n}\n\nconst none$3 = [];\nconst clickAddsSelectionRange = Facet.define();\nconst dragMovesSelection = Facet.define();\nconst mouseSelectionStyle = Facet.define();\nconst exceptionSink = Facet.define();\nconst updateListener = Facet.define();\nconst inputHandler = Facet.define();\n/// Log or report an unhandled exception in client code. Should\n/// probably only be used by extension code that allows client code to\n/// provide functions, and calls those functions in a context where an\n/// exception can't be propagated to calling code in a reasonable way\n/// (for example when in an event handler).\n///\n/// Either calls a handler registered with\n/// [`EditorView.exceptionSink`](#view.EditorView^exceptionSink),\n/// `window.onerror`, if defined, or `console.error` (in which case\n/// it'll pass `context`, when given, as first argument).\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = Facet.define({ combine: values => values.length ? values[0] : true });\n/// Used to [declare](#view.PluginSpec.provide) which\n/// [fields](#view.PluginValue) a [view plugin](#view.ViewPlugin)\n/// provides.\nclass PluginFieldProvider {\n    /// @internal\n    constructor(\n    /// @internal\n    field, \n    /// @internal\n    get) {\n        this.field = field;\n        this.get = get;\n    }\n}\n/// Plugin fields are a mechanism for allowing plugins to provide\n/// values that can be retrieved through the\n/// [`pluginField`](#view.EditorView.pluginField) view method.\nclass PluginField {\n    from(get) {\n        return new PluginFieldProvider(this, get);\n    }\n    /// Define a new plugin field.\n    static define() { return new PluginField(); }\n}\n/// Plugins can provide additional scroll margins (space around the\n/// sides of the scrolling element that should be considered\n/// invisible) through this field. This can be useful when the\n/// plugin introduces elements that cover part of that element (for\n/// example a horizontally fixed gutter).\nPluginField.scrollMargins = PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = Facet.define();\n/// View plugins associate stateful values with a view. They can\n/// influence the way the content is drawn, and are notified of things\n/// that happen in the view.\nclass ViewPlugin {\n    constructor(\n    /// @internal\n    id, \n    /// @internal\n    create, \n    /// @internal\n    fields) {\n        this.id = id;\n        this.create = create;\n        this.fields = fields;\n        this.extension = viewPlugin.of(this);\n    }\n    /// Define a plugin from a constructor function that creates the\n    /// plugin's value, given an editor view.\n    static define(create, spec) {\n        let { eventHandlers, provide, decorations } = spec || {};\n        let fields = [];\n        if (provide)\n            for (let provider of Array.isArray(provide) ? provide : [provide])\n                fields.push(provider);\n        if (eventHandlers)\n            fields.push(domEventHandlers.from((value) => ({ plugin: value, handlers: eventHandlers })));\n        if (decorations)\n            for (let get of Array.isArray(decorations) ? decorations : [decorations])\n                fields.push(pluginDecorations.from(get));\n        return new ViewPlugin(nextPluginID++, create, fields);\n    }\n    /// Create a plugin for a class whose constructor takes a single\n    /// editor view as argument.\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\n// FIXME somehow ensure that no replacing decorations end up in here\nconst pluginDecorations = PluginField.define();\nconst domEventHandlers = PluginField.define();\nclass PluginInstance {\n    constructor(value, spec) {\n        this.value = value;\n        this.spec = spec;\n    }\n    static create(spec, view) {\n        let value;\n        try {\n            value = spec.create(view);\n        }\n        catch (e) {\n            logException(view.state, e, \"CodeMirror plugin crashed\");\n            return PluginInstance.dummy;\n        }\n        return new PluginInstance(value, spec);\n    }\n    takeField(type, target) {\n        for (let { field, get } of this.spec.fields)\n            if (field == type)\n                target.push(get(this.value));\n    }\n    update(update) {\n        if (!this.value.update)\n            return this;\n        try {\n            this.value.update(update);\n            return this;\n        }\n        catch (e) {\n            logException(update.state, e, \"CodeMirror plugin crashed\");\n            if (this.value.destroy)\n                try {\n                    this.value.destroy();\n                }\n                catch (_) { }\n            return PluginInstance.dummy;\n        }\n    }\n    destroy(view) {\n        if (this.value.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n}\nPluginInstance.dummy = new PluginInstance({}, ViewPlugin.define(() => ({})));\nconst editorAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\nconst contentAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\n// Provide decorations\nconst decorations = Facet.define();\nconst styleModule = Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/// View [plugins](#view.ViewPlugin) are given instances of this\n/// class, which describe what happened, whenever the view is updated.\nclass ViewUpdate {\n    /// @internal\n    constructor(\n    /// The editor view that the update is associated with.\n    view, \n    /// The new editor state.\n    state, \n    /// The transactions involved in the update. May be empty.\n    transactions = none$3) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /// @internal\n        this.flags = 0;\n        this.prevState = view.state;\n        this.changes = ChangeSet.empty(this.prevState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags != 1 /* Focus */;\n        }\n        if (this.docChanged)\n            this.flags |= 2 /* Height */;\n    }\n    /// Tells you whether the viewport changed in this update.\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /// Indicates whether the line height in the editor changed in this update.\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /// Returns true when the document changed or the size of the editor\n    /// or the lines or characters within it has changed.\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (16 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /// True when this update indicates a focus change.\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /// Whether the document changed in this update.\n    get docChanged() {\n        return this.transactions.some(tr => tr.docChanged);\n    }\n    /// Whether the selection was explicitly set in this update.\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /// @internal\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent;) { // (Cast to any because TypeScript is useless with Node types)\n        if (parent.nodeType == 1) {\n            if ((parent.scrollHeight > parent.clientHeight || parent.scrollWidth > parent.clientWidth) &&\n                window.getComputedStyle(parent).overflow != \"visible\") {\n                let parentRect = parent.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = parent.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: right - rect.left,\n        top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentWidth = 0;\n        this.heightOracle = new HeightOracle;\n        this.heightMap = HeightMap.empty();\n        this.scrollTo = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be signficant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.heightMap = this.heightMap.applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    update(update, scrollTo = null) {\n        let prev = this.state;\n        this.state = update.state;\n        let newDeco = this.state.facet(decorations);\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.prevState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTo && (scrollTo.head < viewport.from || scrollTo.head > viewport.to) || !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTo);\n        if (!viewport.eq(this.viewport)) {\n            this.viewport = viewport;\n            update.flags |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            update.flags |= this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        this.computeVisibleRanges();\n        if (scrollTo)\n            this.scrollTo = scrollTo;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.primary.empty && update.state.selection.primary.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(docView, repeated) {\n        let dom = docView.dom, whiteSpace = \"\", direction = Direction.LTR;\n        if (!repeated) {\n            // Vertical padding\n            let style = window.getComputedStyle(dom);\n            whiteSpace = style.whiteSpace, direction = (style.direction == \"rtl\" ? Direction.RTL : Direction.LTR);\n            this.paddingTop = parseInt(style.paddingTop) || 0;\n            this.paddingBottom = parseInt(style.paddingBottom) || 0;\n        }\n        // Pixel viewport\n        let pixelViewport = this.printing ? { top: -1e8, bottom: 1e8, left: -1e8, right: 1e8 } : visiblePixelRange(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        this.inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (!this.inView)\n            return 0;\n        let lineHeights = docView.measureVisibleLineHeights();\n        let refresh = false, bias = 0, result = 0, oracle = this.heightOracle;\n        if (!repeated) {\n            let contentWidth = docView.dom.clientWidth;\n            if (oracle.mustRefresh(lineHeights, whiteSpace, direction) ||\n                oracle.lineWrapping && Math.abs(contentWidth - this.contentWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    docView.minWidth = 0;\n                    result |= 16 /* Geometry */;\n                }\n            }\n            if (this.contentWidth != contentWidth) {\n                this.contentWidth = contentWidth;\n                result |= 16 /* Geometry */;\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n        }\n        oracle.heightChanged = false;\n        this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n        if (oracle.heightChanged)\n            result |= 2 /* Height */;\n        if (!this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTo && (this.scrollTo.head < this.viewport.from || this.scrollTo.head > this.viewport.to)) {\n            this.viewport = this.getViewport(bias, this.scrollTo);\n            result |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            result |= this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    getViewport(bias, scrollTo) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { top, bottom } = this.pixelViewport;\n        let viewport = new Viewport(map.lineAt(top - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(bottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTo is given, make sure the viewport includes that position\n        if (scrollTo) {\n            if (scrollTo.head < viewport.from) {\n                let { top: newTop } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newTop - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newTop + (bottom - top) + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n            else if (scrollTo.head > viewport.to) {\n                let { bottom: newBottom } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newBottom - (bottom - top) - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newBottom + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        return (from == 0 || top <= this.pixelViewport.top - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= this.pixelViewport.bottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > this.pixelViewport.top - 2 * 1000 /* Margin */ && bottom < this.pixelViewport.bottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.heightOracle.direction != Direction.LTR)\n            return gaps;\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, line => {\n            if (line.length < 10000 /* Margin */)\n                return;\n            let structure = lineStructure(line.from, line.to, this.state);\n            if (structure.total < 10000 /* Margin */)\n                return;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                if (line.from != this.viewport.from)\n                    viewFrom = line.from;\n                else\n                    viewFrom = findPosition(structure, (this.pixelViewport.top - line.top) / line.height);\n                if (line.to != this.viewport.to)\n                    viewTo = line.to;\n                else\n                    viewTo = findPosition(structure, (this.pixelViewport.bottom - line.top) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, this.pixelViewport.left / totalWidth);\n                viewTo = findPosition(structure, this.pixelViewport.right / totalWidth);\n            }\n            let sel = this.state.selection.primary;\n            // Make sure the gap doesn't cover a selection end\n            if (sel.from <= viewFrom && sel.to >= line.from)\n                viewFrom = sel.from;\n            if (sel.from <= line.to && sel.to >= viewTo)\n                viewTo = sel.to;\n            let gapTo = viewFrom - 10000 /* Margin */, gapFrom = viewTo + 10000 /* Margin */;\n            if (gapTo > line.from + 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.from == line.from && gap.to > gapTo - 5000 /* HalfMargin */ && gap.to < gapTo + 5000 /* HalfMargin */) ||\n                    new LineGap(line.from, gapTo, this.gapSize(line, gapTo, true, structure)));\n            if (gapFrom < line.to - 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.to == line.to && gap.from > gapFrom - 5000 /* HalfMargin */ &&\n                    gap.from < gapFrom + 5000 /* HalfMargin */) ||\n                    new LineGap(gapFrom, line.to, this.gapSize(line, gapFrom, false, structure)));\n        });\n        return gaps;\n    }\n    gapSize(line, pos, start, structure) {\n        if (this.heightOracle.lineWrapping) {\n            let height = line.height * findFraction(structure, pos);\n            return start ? height : line.height - height;\n        }\n        else {\n            let ratio = findFraction(structure, pos);\n            return structure.total * this.heightOracle.charWidth * (start ? ratio : 1 - ratio);\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n            return 8 /* LineGaps */;\n        }\n        return 0;\n    }\n    computeVisibleRanges() {\n        let deco = this.state.facet(decorations);\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { },\n            minPointSize: 20\n        });\n        this.visibleRanges = ranges;\n    }\n    lineAt(pos, editorTop) {\n        return this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    lineAtHeight(height, editorTop) {\n        return this.heightMap.lineAt(height, QueryType.ByHeight, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    blockAtHeight(height, editorTop) {\n        return this.heightMap.blockAt(height, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    forEachLine(from, to, f, editorTop) {\n        return this.heightMap.forEachLine(from, to, this.state.doc, editorTop + this.paddingTop, 0, f);\n    }\n}\n/// Indicates the range of the document that is in the visible\n/// viewport.\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n    eq(b) { return this.from == b.from && this.to == b.to; }\n}\nfunction lineStructure(from, to, state) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(state.facet(decorations), from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        },\n        minPointSize: 20 // We're only interested in collapsed ranges of a significant size\n    });\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n\nconst none$4 = [];\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.viewports = none$4;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // checkLayout, this is updated to point at the width of a given\n        // element and its extent in the document. When a change happens in\n        // that range, these are reset. That way, once we've seen a\n        // line/element of a given length, we keep the editor wide enough to\n        // fit at least that element, until it is changed, at which point we\n        // forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], this.updateDeco(), 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        var _a;\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (!((_a = this.view.inputState) === null || _a === void 0 ? void 0 : _a.composing))\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        let forceSelection = (browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.prevState.doc.lines;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        let pointerSel = update.transactions.some(tr => tr.annotation(Transaction.userEvent) == \"pointerselection\");\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0 &&\n            !(update.flags & (4 /* Viewport */ | 8 /* LineGaps */)) &&\n            update.state.selection.primary.from >= this.view.viewport.from &&\n            update.state.selection.primary.to <= this.view.viewport.to) {\n            this.updateSelection(forceSelection, pointerSel);\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, deco, update.prevState.doc.length, forceSelection, pointerSel);\n            return true;\n        }\n    }\n    // Used both by update and checkLayout do perform the actual DOM\n    // update\n    updateInner(changes, deco, oldLength, forceSelection = false, pointerSel = false) {\n        this.updateChildren(changes, deco, oldLength);\n        this.view.observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.heightMap.height + \"px\";\n            this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome ? { node: getSelection(this.view.root).focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track === null || track === void 0 ? void 0 : track.written)\n                forceSelection = true;\n            this.updateSelection(forceSelection, pointerSel);\n            this.dom.style.height = \"\";\n        });\n    }\n    updateChildren(changes, deco, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, deco);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            this.replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd) {\n        let before = this.children[fromI], last = content.length ? content[content.length - 1] : null;\n        let breakAtEnd = last ? last.breakAfter : breakAtStart;\n        // Change within a single line\n        if (fromI == toI && !breakAtStart && !breakAtEnd && content.length < 2 &&\n            before.merge(fromOff, toOff, content.length ? last : null, fromOff == 0, openStart, openEnd))\n            return;\n        let after = this.children[toI];\n        // Make sure the end of the line after the update is preserved in `after`\n        if (toOff < after.length || after.children.length && after.children[after.children.length - 1].length == 0) {\n            // If we're splitting a line, separate part of the start line to\n            // avoid that being mangled when updating the start line.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                content[content.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff || after.children.length && after.children[0].length == 0)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                content.push(after);\n            }\n        }\n        else if (after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && content.length && before.merge(fromOff, before.length, content[0], false, openStart, 0)) {\n                before.breakAfter = content.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n        // Try to merge widgets on the boundaries of the replacement\n        while (fromI < toI && content.length) {\n            if (this.children[toI - 1].match(content[content.length - 1]))\n                toI--, content.pop();\n            else if (this.children[fromI].match(content[0]))\n                fromI++, content.shift();\n            else\n                break;\n        }\n        if (fromI < toI || content.length)\n            this.replaceChildren(fromI, toI, content);\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(force = false, fromPointer = false) {\n        if (!(fromPointer || this.mayControlSelection()))\n            return;\n        let primary = this.view.state.selection.primary;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(primary.anchor);\n        let head = this.domAtPos(primary.head);\n        let domSel = getSelection(this.root);\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            (browser.gecko && primary.empty && nextToUneditable(domSel.focusNode, domSel.focusOffset)) ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                if (primary.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    domSel.collapse(anchor.node, anchor.offset);\n                    if (primary.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = primary.bidiLevel;\n                }\n                else if (domSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    domSel.collapse(anchor.node, anchor.offset);\n                    domSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (primary.anchor > primary.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    domSel.removeAllRanges();\n                    domSel.addRange(range);\n                }\n            });\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        let cursor = this.view.state.selection.primary;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head); // FIXME provide view-line-range finding helper\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom : hasSelection(this.dom, getSelection(this.root));\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start || pos == start && (child.type == BlockType.Text || !i || this.children[i - 1].breakAfter))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights() {\n        let result = [], { from, to } = this.view.viewState.viewport;\n        let minWidth = Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                result.push(child.dom.getBoundingClientRect().height);\n                let width = child.dom.scrollWidth;\n                if (width > minWidth) {\n                    this.minWidth = minWidth = width;\n                    this.minWidthFrom = pos;\n                    this.minWidthTo = end;\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let visible = this.view.viewState.viewport, viewports = [visible];\n        let { head, anchor } = this.view.state.selection.primary;\n        if (head < visible.from || head > visible.to) {\n            let { from, to } = this.view.viewState.lineAt(head, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        if (!viewports.some(({ from, to }) => anchor >= from && anchor <= to)) {\n            let { from, to } = this.view.viewState.lineAt(anchor, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        let deco = [];\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == viewports.length ? null : viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = this.view.viewState.lineAt(end, 0).bottom - this.view.viewState.lineAt(pos, 0).top;\n                deco.push(Decoration.replace({ widget: new BlockGapWidget(height), block: true, inclusive: true }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        return this.decorations = [\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco,\n            this.compositionDeco,\n            ...this.view.state.facet(decorations),\n            ...this.view.pluginField(pluginDecorations)\n        ];\n    }\n    scrollPosIntoView(pos, side) {\n        let rect = this.coordsAt(pos, side);\n        if (!rect)\n            return;\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.pluginField(PluginField.scrollMargins))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        scrollRectIntoView(this.dom, {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        });\n    }\n}\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MaxNodeHeight = 1e7;\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        if (this.height < MaxNodeHeight) {\n            while (elt.lastChild)\n                elt.lastChild.remove();\n            elt.style.height = this.height + \"px\";\n        }\n        else {\n            elt.style.height = \"\";\n            for (let remaining = this.height; remaining > 0; remaining -= MaxNodeHeight) {\n                let fill = elt.appendChild(document.createElement(\"div\"));\n                fill.style.height = Math.min(remaining, MaxNodeHeight) + \"px\";\n            }\n        }\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction computeCompositionDeco(view, changes) {\n    let sel = getSelection(view.root);\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return Decoration.none;\n    let cView = view.docView.nearest(textNode);\n    let from, to, topNode = textNode;\n    if (cView instanceof InlineView) {\n        while (cView.parent instanceof InlineView)\n            cView = cView.parent;\n        from = cView.posAtStart;\n        to = from + cView.length;\n        topNode = cView.dom;\n    }\n    else if (cView instanceof LineView) {\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        from = to = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n    }\n    else {\n        return Decoration.none;\n    }\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let text = textNode.nodeValue, { state } = view;\n    if (newTo - newFrom < text.length) {\n        if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.sliceDoc(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(topNode, textNode) }).range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text) {\n        super();\n        this.top = top;\n        this.text = text;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = line.findClusterBreak(linePos, false);\n    else\n        to = line.findClusterBreak(linePos, true);\n    let cat = categorize(line.slice(from, to));\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (categorize(line.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (categorize(line.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length, range = tempRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rects = range.getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (rect.left - 1 <= x && rect.right + 1 >= x &&\n                rect.top - 1 <= y && rect.bottom + 1 >= y) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    range.setEnd(node, i);\n                    let rectBefore = range.getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                return { node, offset: i + (after ? 1 : 0) };\n            }\n        }\n    }\n    return { node, offset: 0 };\n}\nfunction posAtCoords(view, { x, y }, bias = -1) {\n    let content = view.contentDOM.getBoundingClientRect(), block;\n    let halfLine = view.defaultLineHeight / 2;\n    for (let bounced = false;;) {\n        block = view.blockAtHeight(y, content.top);\n        if (block.top > y || block.bottom < y) {\n            bias = block.top > y ? -1 : 1;\n            y = Math.min(block.bottom - halfLine, Math.max(block.top + halfLine, y));\n            if (bounced)\n                return -1;\n            else\n                bounced = true;\n        }\n        if (block.type == BlockType.Text)\n            break;\n        y = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n    }\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : null;\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length : null;\n    // Clip x to the viewport sides\n    x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n    let root = view.root, element = root.elementFromPoint(x, y);\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n        if (root.caretPositionFromPoint) {\n            let pos = root.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (root.caretRangeFromPoint) {\n            let range = root.caretRangeFromPoint(x, y);\n            if (range)\n                ({ startContainer: node, startOffset: offset } = range);\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let pos = view.posAtCoords({ x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, view.textDirection, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    var _a;\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos);\n    let startCoords = view.coordsAtPos(startPos);\n    if (startCoords) {\n        let rect = view.dom.getBoundingClientRect();\n        let goal = (_a = start.goalColumn) !== null && _a !== void 0 ? _a : startCoords.left - rect.left;\n        let resolvedGoal = rect.left + goal;\n        let dist = distance !== null && distance !== void 0 ? distance : 5;\n        for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, extra = 0; extra < 50; extra += 10) {\n            let pos = posAtCoords(view, { x: resolvedGoal, y: startY + (dist + extra) * dir }, dir);\n            if (pos == null)\n                break;\n            if (pos != startPos)\n                return EditorSelection.cursor(pos, undefined, undefined, goal);\n        }\n    }\n    // Outside of the drawn viewport, use a crude column-based approach\n    let { doc } = view.state, line = doc.lineAt(startPos), tabSize = view.state.tabSize;\n    let goal = start.goalColumn, goalCol = 0;\n    if (goal == null) {\n        for (const iter = doc.iterRange(line.from, startPos); !iter.next().done;)\n            goalCol = countColumn(iter.value, goalCol, tabSize);\n        goal = goalCol * view.defaultCharacterWidth;\n    }\n    else {\n        goalCol = Math.round(goal / view.defaultCharacterWidth);\n    }\n    if (dir < 0 && line.from == 0)\n        return EditorSelection.cursor(0);\n    else if (dir > 0 && line.to == doc.length)\n        return EditorSelection.cursor(line.to);\n    let otherLine = doc.line(line.number + dir);\n    let result = otherLine.from;\n    let seen = 0;\n    for (const iter = doc.iterRange(otherLine.from, otherLine.to); seen >= goalCol && !iter.next().done;) {\n        const { offset, leftOver } = findColumn(iter.value, seen, goalCol, tabSize);\n        seen = goalCol - leftOver;\n        result += offset;\n    }\n    return EditorSelection.cursor(result, undefined, undefined, goal);\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        this.composing = false;\n        this.compositionEndedAt = 0;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        // Must always run, even if a custom handler handled the event\n        view.contentDOM.addEventListener(\"keydown\", (event) => {\n            view.inputState.lastKeyCode = event.keyCode;\n            view.inputState.lastKeyTime = Date.now();\n        });\n        this.notifiedFocused = view.hasFocus;\n        this.ensureHandlers(view);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view) {\n        let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n        for (let set of handlers) {\n            for (let type in set.handlers)\n                if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                    this.registeredEvents.push(type);\n                    view.contentDOM.addEventListener(type, (event) => {\n                        if (!eventBelongsToEditor(view, event))\n                            return;\n                        if (this.runCustomHandlers(type, view, event))\n                            event.preventDefault();\n                    });\n                }\n        }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && event.timeStamp - this.compositionEndedAt < 500) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return event.type == \"keydown\" || event.type == \"compositionend\";\n    }\n    startMouseSelection(view, event, style) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = new MouseSelection(this, view, event, style);\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nclass MouseSelection {\n    constructor(inputState, view, startEvent, style) {\n        this.inputState = inputState;\n        this.view = view;\n        this.startEvent = startEvent;\n        this.style = style;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection$1(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.startEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (!selection.eq(this.view.state.selection) || selection.primary.assoc != this.view.state.selection.primary.assoc)\n            this.view.dispatch({\n                selection,\n                annotations: Transaction.userEvent.of(\"pointerselection\"),\n                scrollIntoView: true\n            });\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        this.style.update(update);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection$1(view, event) {\n    let facet = view.state.facet(dragMovesSelection);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { primary } = view.state.selection;\n    if (primary.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        changes = {\n            changes: state.selection.ranges.map(r => state.doc.lineAt(r.from))\n                .filter((l, i, a) => i == 0 || a[i - 1] != l)\n                .map(line => ({ from: line.from, insert: (byLine ? text.line(i++).slice() : input) + state.lineBreak }))\n        };\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.slice() },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        annotations: Transaction.userEvent.of(\"paste\"),\n        scrollIntoView: true\n    });\n}\nfunction mustCapture(event) {\n    let mods = (event.ctrlKey ? 1 /* Ctrl */ : 0) | (event.metaKey ? 8 /* Meta */ : 0) |\n        (event.altKey ? 2 /* Alt */ : 0) | (event.shiftKey ? 4 /* Shift */ : 0);\n    let code = event.keyCode, macCtrl = browser.mac && mods == 1 /* Ctrl */;\n    return code == 8 || (macCtrl && code == 72) || // Backspace, Ctrl-h on Mac\n        code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n        code == 27 || // Esc\n        (mods == (browser.mac ? 8 /* Meta */ : 1 /* Ctrl */) && // Ctrl/Cmd-[biyz]\n            (code == 66 || code == 73 || code == 89 || code == 90));\n}\nhandlers.keydown = (view, event) => {\n    if (mustCapture(event))\n        event.preventDefault();\n    view.inputState.setSelectionOrigin(\"keyboardselection\");\n};\nhandlers.touchdown = handlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"pointerselection\");\n};\nhandlers.mousedown = (view, event) => {\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        if (view.root.activeElement != view.contentDOM)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(view, event, style);\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let line = LineView.find(view.docView, pos);\n        if (line)\n            return EditorSelection.range(line.posAtStart, line.posAtEnd);\n        let { from, to } = view.state.doc.lineAt(pos);\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (pos == null)\n        return null;\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown;\n    lastMouseDown = event;\n    return lastMouseDownCount = !last || (last.timeStamp > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.changes) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.primary.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { primary } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = primary;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(primary.from, primary.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    let text = event.dataTransfer.getData(\"Text\");\n    if (dropPos == null || !text)\n        return;\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        annotations: Transaction.userEvent.of(\"drop\")\n    });\n};\nhandlers.paste = (view, event) => {\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let text = data && data.getData(\"text/plain\");\n    if (text) {\n        doPaste(view, text);\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.slice());\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\")\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            annotations: Transaction.userEvent.of(\"cut\")\n        });\n};\nhandlers.focus = handlers.blur = view => {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n};\nhandlers.beforeprint = view => {\n    view.viewState.printing = true;\n    view.requestMeasure();\n    setTimeout(() => {\n        view.viewState.printing = false;\n        view.requestMeasure();\n    }, 2000);\n};\nfunction forceClearComposition(view) {\n    if (view.docView.compositionDeco.size)\n        view.update([]);\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (!view.inputState.composing) {\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view);\n        }\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = true;\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = false;\n    view.inputState.compositionEndedAt = Date.now();\n    setTimeout(() => {\n        if (!view.inputState.composing)\n            forceClearComposition(view);\n    }, 50);\n};\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        this.ignoreSelection = new DOMSelection;\n        this.delayedFlush = -1;\n        this.queue = [];\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.intersecting = false;\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM\n            if (browser.ie && browser.ie_version <= 11 &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = (event) => {\n            if (this.view.root.activeElement != this.dom)\n                return;\n            let sel = getSelection(this.view.root);\n            let context = sel.anchorNode && this.view.docView.nearest(sel.anchorNode);\n            if (context && context.ignoreEvent(event))\n                return;\n            // Deletions on IE11 fire their events in the wrong order, giving\n            // us a selection change event before the DOM changes are\n            // reported.\n            // (Selection.isCollapsed isn't reliable on IE)\n            if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.primary.empty &&\n                sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                this.flushSoon();\n            else\n                this.flush();\n        };\n        this.start();\n        this.onScroll = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScroll);\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n        }\n        this.listenForScroll();\n    }\n    onScroll(e) {\n        if (this.intersecting) {\n            this.flush();\n            this.onScrollChanged(e);\n        }\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        // FIXME is this shadow-root safe?\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    clearSelection() {\n        this.ignoreSelection.set(getSelection(this.view.root));\n    }\n    // Throw away any pending changes\n    clear() {\n        this.observer.takeRecords();\n        this.queue.length = 0;\n        this.clearSelection();\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    // Apply pending changes, if any\n    flush() {\n        if (this.delayedFlush >= 0)\n            return;\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let selection = getSelection(this.view.root);\n        let newSel = !this.ignoreSelection.eq(selection) && hasSelection(this.dom, selection);\n        if (records.length == 0 && !newSel)\n            return;\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        let startState = this.view.state;\n        if (from > -1 || newSel)\n            this.onChange(from, to, typeOver);\n        if (this.view.state == startState) { // The view wasn't updated\n            if (this.view.docView.dirty) {\n                this.ignore(() => this.view.docView.sync());\n                this.view.docView.dirty = 0 /* Not */;\n            }\n            this.view.docView.updateSelection();\n        }\n        this.clearSelection();\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty();\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else { // \"characterData\"\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this.intersection)\n            this.intersection.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        clearTimeout(this.parentCheck);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.primary, bounds;\n    if (start > -1 && (bounds = view.docView.domBoundsAround(start, end, 0))) {\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view.contentDOM, view.root);\n        let reader = new DOMReader(selPoints, view.state.lineBreak);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        newSel = selectionFromPoints(selPoints, from);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n        if (diff)\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: view.state.toText(reader.text.slice(diff.from, diff.toB)) };\n    }\n    else if (view.hasFocus) {\n        let domSel = getSelection(view.root);\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ? view.state.selection.primary.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset\n            ? view.state.selection.primary.anchor\n            : selectionCollapsed(domSel) ? head : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.primary.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    if (change) {\n        let startState = view.state;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events.\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view, \"Enter\", 10)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view, \"Delete\", 46))))\n            return;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) +\n                after));\n        }\n        else {\n            let changes = startState.changes(change);\n            tr = {\n                changes,\n                selection: newSel && !startState.selection.primary.eq(newSel.primary) && newSel.primary.to <= changes.newLength\n                    ? startState.selection.replaceRange(newSel.primary) : undefined\n            };\n        }\n        view.dispatch(tr, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") });\n    }\n    else if (newSel && !newSel.primary.eq(sel)) {\n        let scrollIntoView = false, annotations;\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"keyboardselection\")\n                scrollIntoView = true;\n            else\n                annotations = Transaction.userEvent.of(view.inputState.lastSelectionOrigin);\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, annotations });\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nclass DOMReader {\n    constructor(points, lineSep) {\n        this.points = points;\n        this.lineSep = lineSep;\n        this.text = \"\";\n    }\n    readRange(start, end) {\n        if (!start)\n            return;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if ((view ? view.breakAfter : isBlockElement(cur)) ||\n                ((nextView ? nextView.breakAfter : isBlockElement(next)) && !(cur.nodeName == \"BR\" && !cur.cmIgnore)))\n                this.text += this.lineSep;\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        let text;\n        if (fromView != null)\n            text = fromView.sliceString(0, undefined, this.lineSep);\n        else if (node.nodeType == 3)\n            text = node.nodeValue;\n        else if (node.nodeName == \"BR\")\n            text = node.nextSibling ? this.lineSep : \"\";\n        else if (node.nodeType == 1)\n            this.readRange(node.firstChild, null);\n        if (text != null) {\n            this.findPointIn(node, text.length);\n            this.text += text;\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointIn(node, maxLen) {\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, maxLen);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\nfunction selectionPoints(dom, root) {\n    let result = [];\n    if (root.activeElement != dom)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = getSelection(root);\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\nfunction dispatchKey(view, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    view.contentDOM.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    view.contentDOM.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/// An editor view represents the editor's user interface. It holds\n/// the editable DOM surface, and possibly other elements such as the\n/// line number gutter. It handles events and dispatches state\n/// transactions for editing actions.\nclass EditorView {\n    /// Construct a new view. You'll usually want to put `view.dom` into\n    /// your document after creating a view, so that the user can see\n    /// it.\n    constructor(\n    /// Configuration options.\n    config = {}) {\n        this.plugins = [];\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        /// @internal\n        this.updateState = 2 /* Updating */;\n        /// @internal\n        this.measureScheduled = -1;\n        /// @internal\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.className = themeClass(\"scroller\");\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n        this.observer = new DOMObserver(this, (from, to, typeOver) => {\n            applyDOMChange(this, from, to, typeOver);\n        }, event => {\n            this.inputState.runScrollHandlers(this, event);\n            this.measure();\n        });\n        this.docView = new DocView(this);\n        this.inputState = new InputState(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        ensureGlobalHandler();\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /// The current editor state.\n    get state() { return this.viewState.state; }\n    /// To be able to display large documents without consuming too much\n    /// memory or overloading the browser, CodeMirror only draws the\n    /// code that is visible (plus a margin around it) to the DOM. This\n    /// property tells you the extent of the current drawn viewport, in\n    /// document positions.\n    get viewport() { return this.viewState.viewport; }\n    /// When there are, for example, large collapsed ranges in the\n    /// viewport, its size can be a lot bigger than the actual visible\n    /// content. Thus, if you are doing something like styling the\n    /// content in the viewport, it is preferable to only do so for\n    /// these ranges, which are the subset of the viewport that is\n    /// actually drawn.\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /// Returns false when the editor is entirely scrolled out of view\n    /// or otherwise hidden.\n    get inView() { return this.viewState.inView; }\n    /// Indicates whether the user is currently composing text via\n    /// [IME](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide).\n    get composing() { return this.inputState.composing; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /// Update the view for the given array of transactions. This will\n    /// update the visible document and selection to match the state\n    /// produced by the transactions, and notify view plugins of the\n    /// change. You should usually call\n    /// [`dispatch`](#view.EditorView.dispatch) instead, which uses this\n    /// as a primitive.\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, update;\n        this.updateState = 2 /* Updating */;\n        try {\n            let state = this.state;\n            for (let tr of transactions) {\n                if (tr.startState != state)\n                    throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n                state = tr.state;\n            }\n            update = new ViewUpdate(this, state, transactions);\n            let scrollTo = transactions.some(tr => tr.scrollIntoView) ? state.selection.primary : null;\n            this.viewState.update(update, scrollTo);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty)\n                this.updatePlugins(update);\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            this.updateAttrs();\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (redrawn || scrollTo || this.viewState.mustEnforceCursorAssoc)\n            this.requestMeasure();\n        for (let listener of this.state.facet(updateListener))\n            listener(update);\n    }\n    /// Reset the view to the given state. (This will cause the entire\n    /// document to be redrawn and all view plugins to be reinitialized,\n    /// so you should probably only use it when the new state isn't\n    /// derived from the old state. Otherwise, use\n    /// [`update`](#view.EditorView.update) instead.)\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        this.updateState = 2 /* Updating */;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.prevState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [], reused = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(PluginInstance.create(spec, this));\n                }\n                else {\n                    let plugin = this.plugins[found].update(update);\n                    reused.push(plugin);\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (reused.indexOf(plugin) < 0)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.inputState.ensureHandlers(this);\n        }\n        else {\n            for (let i = 0; i < this.plugins.length; i++)\n                this.plugins[i] = this.plugins[i].update(update);\n        }\n    }\n    /// @internal\n    measure() {\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = -1; // Prevent requestMeasure calls from scheduling another animation frame\n        let updated = null;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let changed = this.viewState.measure(this.docView, i > 0);\n                let measuring = this.measureRequests;\n                if (!changed && !measuring.length && this.viewState.scrollTo == null)\n                    break;\n                this.measureRequests = [];\n                if (i > 5) {\n                    console.warn(\"Viewport failed to stabilize\");\n                    break;\n                }\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = new ViewUpdate(this, this.state);\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                this.updatePlugins(update);\n                this.updateAttrs();\n                if (changed)\n                    this.docView.update(update);\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            measuring[i].write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.scrollTo) {\n                    this.docView.scrollPosIntoView(this.viewState.scrollTo.head, this.viewState.scrollTo.assoc);\n                    this.viewState.scrollTo = null;\n                }\n                if (!(changed & 4 /* Viewport */) && this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.measureScheduled = -1;\n        if (updated)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /// Get the CSS classes for the currently active editor themes.\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? \"cm-dark\" : \"cm-light\") + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = combineAttrs(this.state.facet(editorAttributes), {\n            class: themeClass(\"wrap\") + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n        this.editorAttrs = editorAttrs;\n        let contentAttrs = combineAttrs(this.state.facet(contentAttributes), {\n            spellcheck: \"false\",\n            contenteditable: String(this.state.facet(editable)),\n            class: themeClass(\"content\"),\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        });\n        updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n        this.contentAttrs = contentAttrs;\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n    }\n    /// Find the DOM parent node and offset (child offset if `node` is\n    /// an element, character offset when it is a text node) at the\n    /// given document position.\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /// Find the document position at the given DOM node. Can be useful\n    /// for associating positions with DOM events. Will raise an error\n    /// when `node` isn't part of the editor content.\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure();\n    }\n    /// Make sure plugins get a chance to measure the DOM before the\n    /// next frame. Calling this is preferable to messing with the DOM\n    /// directly from, for example, an even handler, because it'll make\n    /// sure measuring and drawing done by other components is\n    /// synchronized, avoiding unnecessary DOM layout computations.\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /// Collect all values provided by the active plugins for a given\n    /// field.\n    pluginField(field) {\n        // FIXME make this error when called during plugin updating\n        let result = [];\n        for (let plugin of this.plugins)\n            plugin.takeField(field, result);\n        return result;\n    }\n    /// Get the value of a specific plugin, if present. Note that\n    /// plugins that crash can be dropped from a view, so even when you\n    /// know you registered a given plugin, it is recommended to check\n    /// the return value of this method.\n    plugin(plugin) {\n        for (let inst of this.plugins)\n            if (inst.spec == plugin)\n                return inst.value;\n        return null;\n    }\n    /// Find the line or block widget at the given vertical position.\n    /// `editorTop`, if given, provides the vertical position of the top\n    /// of the editor. It defaults to the editor's screen position\n    /// (which will force a DOM layout).\n    blockAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.blockAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find information for the visual line (see\n    /// [`visualLineAt`](#view.EditorView.visualLineAt)) at the given\n    /// vertical position. The resulting block info might hold another\n    /// array of block info structs in its `type` field if this line\n    /// consists of more than one block.\n    ///\n    /// Heights are interpreted relative to the given `editorTop`\n    /// position. When not given, the top position of the editor's\n    /// [content element](#view.EditorView.contentDOM) is taken.\n    visualLineAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.lineAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find the extent and height of the visual line (the content shown\n    /// in the editor as a line, which may be smaller than a document\n    /// line when broken up by block widgets, or bigger than a document\n    /// line when line breaks are covered by replaced decorations) at\n    /// the given position.\n    ///\n    /// Vertical positions are computed relative to the `editorTop`\n    /// argument. You can pass `view.dom.getBoundingClientRect().top`\n    /// here to get screen coordinates.\n    visualLineAt(pos, editorTop = 0) {\n        return this.viewState.lineAt(pos, editorTop);\n    }\n    /// Iterate over the height information of the lines in the\n    /// viewport.\n    viewportLines(f, editorTop) {\n        let { from, to } = this.viewport;\n        this.viewState.forEachLine(from, to, f, ensureTop(editorTop, this.contentDOM));\n    }\n    /// The editor's total content height.\n    get contentHeight() {\n        return this.viewState.heightMap.height + this.viewState.paddingTop + this.viewState.paddingBottom;\n    }\n    /// Move a cursor position by [grapheme\n    /// cluster](#text.nextClusterBreak). `forward` determines whether\n    /// the motion is away from the line start, or towards it. Motion in\n    /// bidirectional text is in visual order, in the editor's [text\n    /// direction](#view.EditorView.textDirection). When the start\n    /// position was the last one on the line, the returned position\n    /// will be across the line break. If there is no further line, the\n    /// original position is returned.\n    moveByChar(start, forward, by) {\n        return moveByChar(this, start, forward, by);\n    }\n    /// Move a cursor position across the next group of either\n    /// [letters](#state.EditorState.charCategorizer) or non-letter\n    /// non-whitespace characters.\n    moveByGroup(start, forward) {\n        return moveByChar(this, start, forward, initial => byGroup(this, start.head, initial));\n    }\n    /// Move to the next line boundary in the given direction. If\n    /// `includeWrap` is true, line wrapping is on, and there is a\n    /// further wrap point on the current line, the wrap point will be\n    /// returned. Otherwise this function will return the start or end\n    /// of the line.\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /// Move a cursor position vertically. When `distance` isn't given,\n    /// it defaults to moving to the next line (including wrapped\n    /// lines). Otherwise, `distance` should provide a positive distance\n    /// in pixels.\n    ///\n    /// When `start` has a\n    /// [`goalColumn`](#state.SelectionRange.goalColumn), the vertical\n    /// motion will use that as a target horizontal position. Otherwise,\n    /// the cursor's own horizontal position is used. The returned\n    /// cursor will have its goal column set to whichever column was\n    /// used.\n    moveVertically(start, forward, distance) {\n        return moveVertically(this, start, forward, distance);\n    }\n    /// Scroll the given document position into view.\n    scrollPosIntoView(pos) {\n        this.viewState.scrollTo = EditorSelection.cursor(pos);\n        this.requestMeasure();\n    }\n    /// Get the document position at the given screen coordinates.\n    /// Returns null if no valid position could be found.\n    posAtCoords(coords) {\n        this.readMeasured();\n        return posAtCoords(this, coords);\n    }\n    /// Get the screen coordinates at the given document position.\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /// The default width of a character in the editor. May not\n    /// accurately reflect the width of all characters.\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /// The default height of a line in the editor.\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /// The text direction (`direction` CSS property) of the editor.\n    get textDirection() { return this.viewState.heightOracle.direction; }\n    /// Whether this editor [wraps lines](#view.EditorView.lineWrapping)\n    /// (as determined by the `white-space` CSS property of its content\n    /// element).\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /// Returns the bidirectional text structure of the given line\n    /// (which should be in the current document) as an array of span\n    /// objects. The order of these spans matches the [text\n    /// direction](#view.EditorView.textDirection)—if that is\n    /// left-to-right, the leftmost spans come first, otherwise the\n    /// rightmost spans come first.\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirection;\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.slice(), this.textDirection);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /// Check whether the editor has focus.\n    get hasFocus() {\n        return document.hasFocus() && this.root.activeElement == this.contentDOM;\n    }\n    /// Put focus on the editor.\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /// Clean up this editor view, removing its element from the\n    /// document, unregistering event handlers, and notifying\n    /// plugins. The view instance can no longer be used after\n    /// calling this.\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n    }\n    /// Facet that can be used to add DOM event handlers. The value\n    /// should be an object mapping event names to handler functions. The\n    /// first such function to return true will be assumed to have handled\n    /// that event, and no other handlers or built-in behavior will be\n    /// activated for it.\n    /// These are registered on the [content\n    /// element](#view.EditorView.contentDOM), except for `scroll`\n    /// handlers, which will be called any time the editor's [scroll\n    /// element](#view.EditorView.scrollDOM) or one of its parent nodes\n    /// is scrolled.\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /// Create a theme extension. The first argument can be a\n    /// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    /// style spec providing the styles for the theme. These will be\n    /// prefixed with a generated class for the style.\n    ///\n    /// It is highly recommended you use _theme classes_, rather than\n    /// regular CSS classes, in your selectors. These are prefixed with\n    /// a `$` instead of a `.`, and will be expanded (as with\n    /// [`themeClass`](#view.themeClass)) to one or more prefixed class\n    /// names. So for example `$content` targets the editor's [content\n    /// element](#view.EditorView.contentDOM).\n    ///\n    /// Because the selectors will be prefixed with a scope class,\n    /// directly matching the editor's [wrapper\n    /// element](#view.EditorView.dom), which is the element on which\n    /// the scope class will be added, needs to be explicitly\n    /// differentiated by adding an additional `$` to the front of the\n    /// pattern. For example `$$focused $panel` will expand to something\n    /// like `.[scope].cm-focused .cm-panel`.\n    ///\n    /// When `dark` is set to true, the theme will be marked as dark,\n    /// which will add the `$dark` selector to the wrapper element (as\n    /// opposed to `$light` when a light theme is active).\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${baseThemeID}.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /// Create an extension that adds styles to the base theme. The\n    /// given object works much like the one passed to\n    /// [`theme`](#view.EditorView^theme). You'll often want to qualify\n    /// base styles with `$dark` or `$light` so they only apply when\n    /// there is a dark or light theme active. For example `\"$$dark\n    /// $myHighlight\"`.\n    static baseTheme(spec) {\n        return precedence(styleModule.of(buildTheme(\".\" + baseThemeID, spec)), \"fallback\");\n    }\n}\n/// Facet to add a [style\n/// module](https://github.com/marijnh/style-mod#documentation) to\n/// an editor view. The view will ensure that the module is\n/// registered in its [document\n/// root](#view.EditorView.constructor^config.root).\nEditorView.styleModule = styleModule;\n/// An input handler can be used to override the way changes to the\n/// content are handled. A handler is passed the document positions\n/// between which the change was found, and the new content. When it\n/// returns true, no further input handlers are called and the\n/// default behavior is prevented.\nEditorView.inputHandler = inputHandler;\n/// Allows you to provide a function that should be called when the\n/// library catches an exception from an extension (mostly from view\n/// plugins, but may be used by other extensions to route exceptions\n/// from user-code-provided callbacks). This is mostly useful for\n/// debugging and logging. See [`logException`](#view.logException).\nEditorView.exceptionSink = exceptionSink;\n/// A facet that can be used to have a listener function be notified\n/// every time the view updates.\nEditorView.updateListener = updateListener;\n/// Facet that controls whether the editor content is editable. When\n/// its the highest-precedence value is `false`, editing is\n/// disabled, and the content element will no longer have its\n/// `contenteditable` attribute set to `true`. (Note that this\n/// doesn't affect API calls that change the editor content, even\n/// when those are bound to keys or buttons.)\nEditorView.editable = editable;\n/// Facet used to configure whether a given selection drag event\n/// should move or copy the selection. The given predicate will be\n/// called with the `mousedown` event, and can return `true` when\n/// the drag should move the content.\nEditorView.dragMovesSelection = dragMovesSelection;\n/// Facet used to configure whether a given selecting click adds\n/// a new range to the existing selection or replaces it entirely.\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/// Allows you to influence the way mouse selection happens. The\n/// functions in this facet will be called for a `mousedown` event\n/// on the editor, and can return an object that overrides the way a\n/// selection is computed from that mouse click or drag.\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/// A facet that determines which [decorations](#view.Decoration)\n/// are shown in the view. See also [view\n/// plugins](#view.EditorView^decorations), which have a separate\n/// mechanism for providing decorations.\nEditorView.decorations = decorations;\n/// An extension that enables line wrapping in the editor.\nEditorView.lineWrapping = EditorView.theme({ $content: { whiteSpace: \"pre-wrap\" } });\n/// Facet that provides attributes for the editor's editable DOM\n/// element.\nEditorView.contentAttributes = contentAttributes;\n/// Facet that provides editor DOM attributes for the editor's\n/// outer element.\nEditorView.editorAttributes = editorAttributes;\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nfunction ensureTop(given, dom) {\n    return given == null ? dom.getBoundingClientRect().top : given;\n}\nlet resizeDebounce = -1;\nfunction ensureGlobalHandler() {\n    window.addEventListener(\"resize\", () => {\n        if (resizeDebounce == -1)\n            resizeDebounce = setTimeout(handleResize, 50);\n    });\n}\nfunction handleResize() {\n    resizeDebounce = -1;\n    let found = document.querySelectorAll(\".cm-content\");\n    for (let i = 0; i < found.length; i++) {\n        let docView = ContentView.get(found[i]);\n        if (docView)\n            docView.editorView.requestMeasure();\n    }\n}\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\n\nconst currentPlatform = typeof navigator == \"undefined\" ? \"key\"\n    : /Mac/.test(navigator.platform) ? \"mac\"\n        : /Win/.test(navigator.platform) ? \"win\"\n            : /Linux|X11/.test(navigator.platform) ? \"linux\"\n                : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst keymaps = Facet.define();\nconst handleKeyEvents = EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(view.state.facet(keymaps), event, view, \"editor\");\n    }\n});\n/// Create a view extension that registers a keymap.\n///\n/// You can add multiple keymap extensions to an editor. Their\n/// priorities determine their precedence (the ones specified early or\n/// with high priority get checked first). When a handler has returned\n/// `true` for a given key, no further handlers are called.\n///\n/// When a key is bound multiple times (either in a single keymap or\n/// in separate maps), the bound commands all get a chance to handle\n/// the key stroke, in order of precedence, until one of them returns\n/// true.\nfunction keymap(bindings, platform) {\n    return [handleKeyEvents, keymaps.of(buildKeymap(bindings, platform))];\n}\n/// Run the key handlers registered for a given scope. Returns true if\n/// any of them handled the event.\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(view.state.facet(keymaps), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(maps, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\";\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        storedPrefix = null;\n    }\n    let fallthrough = !!prefix;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    for (let map of maps) {\n        let scopeObj = map[scope], baseName;\n        if (!scopeObj)\n            continue;\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/// Returns an extension that hides the browser's native selection and\n/// cursor, replacing the selection with a background behind the text\n/// (labeled with the `$selectionBackground` theme class), and the\n/// cursors with elements overlaid over the code (using\n/// `$cursor.primary` and `$cursor.secondary`).\n///\n/// This allows the editor to display secondary selection ranges, and\n/// tends to produce a type of selection more in line with that users\n/// expect in a text editor (the native selection styling will often\n/// leave gaps between lines and won't fill the horizontal space after\n/// a line when the selection continues past it).\n///\n/// It does have a performance cost, in that it requires an extra DOM\n/// layout cycle for many updates (the selection is drawn based on DOM\n/// layout information that's only available after laying out the\n/// content).\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n        return elt;\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = themeClass(\"selectionLayer\");\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = themeClass(\"cursorLayer\");\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.prevState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.primary;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            this.cursorLayer.textContent = \"\";\n            for (let c of cursors)\n                this.cursorLayer.appendChild(c.draw());\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    $line: {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec.$line.caretColor = \"transparent !important\";\nconst hideNativeSelection = precedence(EditorView.theme(themeSpec), \"override\");\nconst selectionClass = themeClass(\"selectionBackground\");\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    return { left: rect.left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from) };\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft);\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let visualStart = view.visualLineAt(from);\n    let visualEnd = view.visualLineAt(to);\n    if (view.lineWrapping) {\n        visualStart = wrappedLine(view, from, visualStart);\n        visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to));\n    }\n    else {\n        let top = drawForLine(range.from, null);\n        let bottom = drawForLine(null, range.to);\n        let between = [];\n        if (visualStart.to < visualEnd.from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && bottom.top - top.bottom < 4)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top, right - left, bottom - top, selectionClass);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            let fromCoords = view.coordsAtPos(from, 1), toCoords = view.coordsAtPos(to, -1);\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : view.moveToLineBoundary(EditorSelection.cursor(to, 1), false).head;\n        let end = to !== null && to !== void 0 ? to : view.moveToLineBoundary(EditorSelection.cursor(from, -1), true).head;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0) {\n            let coords = view.coordsAtPos(start, -1);\n            top = Math.min(coords.top, top);\n            bottom = Math.max(coords.bottom, bottom);\n        }\n        return { top, bottom, horizontal };\n    }\n}\nconst primaryCursorClass = themeClass(\"cursor.primary\");\nconst cursorClass = themeClass(\"cursor.secondary\");\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? primaryCursorClass : cursorClass);\n}\n\nconst Specials = /[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200c\\u200e\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/gu;\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = (styles.tabSize || styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst specialCharConfig = Facet.define({\n    combine(configs) {\n        // FIXME make configurations compose properly\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/// Returns an extension that installs highlighting of special\n/// characters.\nfunction highlightSpecialChars(\n/// Configuration options.\nconfig = {}) {\n    let ext = [specialCharConfig.of(config), specialCharPlugin];\n    if (!supportsTabSize())\n        ext.push(tabStyle);\n    return ext;\n}\nconst specialCharPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = Decoration.none;\n        this.decorationCache = Object.create(null);\n        this.recompute();\n    }\n    update(update) {\n        let confChange = update.prevState.facet(specialCharConfig) != update.state.facet(specialCharConfig);\n        if (confChange)\n            this.decorationCache = Object.create(null);\n        if (confChange || update.changes.length || update.viewportChanged)\n            this.recompute();\n    }\n    recompute() {\n        let decorations = [];\n        for (let { from, to } of this.view.visibleRanges)\n            this.getDecorationsFor(from, to, decorations);\n        this.decorations = Decoration.set(decorations);\n    }\n    getDecorationsFor(from, to, target) {\n        let config = this.view.state.facet(specialCharConfig);\n        let { doc } = this.view.state;\n        for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n            if (!cursor.lineBreak) {\n                while (m = config.specialChars.exec(cursor.value)) {\n                    let code = codePointAt(m[0], 0), deco;\n                    if (code == null)\n                        continue;\n                    if (code == 9) {\n                        let line = doc.lineAt(pos + m.index);\n                        let size = this.view.state.tabSize, col = countColumn(doc.sliceString(line.from, pos + m.index), 0, size);\n                        deco = Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    else {\n                        deco = this.decorationCache[code] ||\n                            (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(config, code) }));\n                    }\n                    target.push(deco.range(pos + m.index, pos + m.index + m[0].length));\n                }\n            }\n            pos += cursor.value.length;\n        }\n    }\n}, {\n    decorations: v => v.decorations\n});\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code) {\n    if (code >= 32)\n        return null;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nconst DefaultPlaceholder = \"\\u2022\";\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM() {\n        let ph = placeHolder(this.code) || DefaultPlaceholder;\n        let desc = \"Control character \" + (Names[this.code] || this.code);\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.style.color = \"red\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = tab;\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nconst tab = StyleModule.newName(), tabStyle = EditorView.styleModule.of(new StyleModule({\n    [\".\" + tab]: {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    }\n}));\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = themeClass(\"placeholder\");\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/// Extension that enables a placeholder—a piece of extample content\n/// to show when the editor is empty.\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n/// @internal\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, highlightSpecialChars, keymap, logException, placeholder, runScopeHandlers, themeClass };\n","import * as N3 from \"n3.ts\"\n\nnamespace APG {\n\texport type Schema = Readonly<{ [key: string]: Type }>\n\n\texport type Type = Unit | Uri | Literal | Product | Coproduct | Reference\n\texport type Reference = Readonly<{ type: \"reference\"; value: string }>\n\texport type Unit = Readonly<{ type: \"unit\" }>\n\texport type Uri = Readonly<{ type: \"uri\" }>\n\texport type Literal = Readonly<{ type: \"literal\"; datatype: string }>\n\texport type Product = Readonly<{\n\t\ttype: \"product\"\n\t\tcomponents: Readonly<{ [key: string]: Type }>\n\t}>\n\texport type Coproduct = Readonly<{\n\t\ttype: \"coproduct\"\n\t\toptions: Readonly<{ [key: string]: Type }>\n\t}>\n\n\texport type Instance = Readonly<{ [key: string]: Value[] }>\n\n\texport type Value =\n\t\t| N3.BlankNode\n\t\t| N3.NamedNode\n\t\t| N3.Literal\n\t\t| Record\n\t\t| Variant\n\t\t| Pointer\n\n\texport class Pointer {\n\t\tconstructor(readonly index: number) {\n\t\t\tObject.freeze(this)\n\t\t}\n\t\tpublic get termType(): \"Pointer\" {\n\t\t\treturn \"Pointer\"\n\t\t}\n\t}\n\n\texport class Record extends Array<Value> {\n\t\tpublic get termType(): \"Record\" {\n\t\t\treturn \"Record\"\n\t\t}\n\n\t\tconstructor(\n\t\t\treadonly components: readonly string[],\n\t\t\tvalues: Iterable<Value>\n\t\t) {\n\t\t\tsuper(...values)\n\t\t\tObject.freeze(this)\n\t\t}\n\n\t\tget(key: string): Value {\n\t\t\tconst index = this.components.indexOf(key)\n\t\t\tif (index in this) {\n\t\t\t\treturn this[index]\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Index out of range: ${index}`)\n\t\t\t}\n\t\t}\n\n\t\tmap<T>(f: (value: Value, index: number, record: Record) => T): T[] {\n\t\t\tconst result = new Array<T>(this.length)\n\t\t\tfor (const [i, value] of this.entries()) {\n\t\t\t\tresult[i] = f(value, i, this)\n\t\t\t}\n\t\t\treturn result\n\t\t}\n\t}\n\n\texport class Variant {\n\t\tconstructor(\n\t\t\treadonly options: readonly string[],\n\t\t\treadonly index: number,\n\t\t\treadonly value: Value\n\t\t) {\n\t\t\tif (index in options) {\n\t\t\t\tObject.freeze(this)\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Varint index out of range\")\n\t\t\t}\n\t\t}\n\t\tpublic get option(): string {\n\t\t\treturn this.options[this.index]\n\t\t}\n\t\tpublic get termType(): \"Variant\" {\n\t\t\treturn \"Variant\"\n\t\t}\n\t}\n\n\texport type Expression =\n\t\t| Identity\n\t\t| Initial\n\t\t| Terminal\n\t\t| Identifier\n\t\t| Constant\n\t\t| Dereference\n\t\t| Projection\n\t\t| Injection\n\t\t| Tuple\n\t\t| Match\n\n\texport type Identity = Readonly<{ type: \"identity\" }>\n\texport type Initial = Readonly<{ type: \"initial\" }>\n\texport type Terminal = Readonly<{ type: \"terminal\" }>\n\texport type Identifier = Readonly<{ type: \"identifier\"; value: string }>\n\texport type Constant = Readonly<{\n\t\ttype: \"constant\"\n\t\tvalue: string\n\t\tdatatype: string\n\t}>\n\texport type Dereference = Readonly<{ type: \"dereference\"; key: string }>\n\texport type Projection = Readonly<{ type: \"projection\"; key: string }>\n\texport type Injection = Readonly<{\n\t\ttype: \"injection\"\n\t\tkey: string\n\t\tvalue: Expression[]\n\t}>\n\texport type Tuple = Readonly<{\n\t\ttype: \"tuple\"\n\t\tslots: Readonly<{ [key: string]: Expression[] }>\n\t}>\n\texport type Match = Readonly<{\n\t\ttype: \"match\"\n\t\tcases: Readonly<{ [key: string]: Expression[] }>\n\t}>\n\n\texport type Map = Readonly<{\n\t\ttype: \"map\"\n\t\tsource: string\n\t\ttarget: Path\n\t\tvalue: readonly APG.Expression[]\n\t}>\n\n\texport type Path = readonly {\n\t\treadonly type: \"component\" | \"option\"\n\t\treadonly key: string\n\t}[]\n\n\texport type Mapping = Readonly<{ [key: string]: Map }>\n}\n\nexport default APG\n","export const label = \"http://underlay.org/ns/label\",\n\treference = \"http://underlay.org/ns/reference\",\n\tunit = \"http://underlay.org/ns/unit\",\n\turi = \"http://underlay.org/ns/uri\",\n\tliteral = \"http://underlay.org/ns/literal\",\n\tdatatype = \"http://underlay.org/ns/datatype\",\n\tproduct = \"http://underlay.org/ns/product\",\n\tcoproduct = \"http://underlay.org/ns/coproduct\",\n\tcomponent = \"http://underlay.org/ns/component\",\n\toption = \"http://underlay.org/ns/option\",\n\tkey = \"http://underlay.org/ns/key\",\n\tvalue = \"http://underlay.org/ns/value\",\n\tsource = \"http://underlay.org/ns/source\",\n\ttarget = \"http://underlay.org/ns/target\",\n\tnone = \"http://underlay.org/ns/none\",\n\tsome = \"http://underlay.org/ns/some\",\n\thead = \"http://underlay.org/ns/head\",\n\ttail = \"http://underlay.org/ns/tail\",\n\texpression = \"http://underlay.org/ns/expression\",\n\tidentity = \"http://underlay.org/ns/identity\",\n\tinitial = \"http://underlay.org/ns/initial\",\n\tterminal = \"http://underlay.org/ns/terminal\",\n\tidentifier = \"http://underlay.org/ns/identifier\",\n\tconstant = \"http://underlay.org/ns/constant\",\n\tdereference = \"http://underlay.org/ns/dereference\",\n\tprojection = \"http://underlay.org/ns/injection\",\n\tinjection = \"http://underlay.org/ns/injection\",\n\ttuple = \"http://underlay.org/ns/tuple\",\n\tslot = \"http://underlay.org/ns/slot\",\n\tmatch = \"http://underlay.org/ns/match\",\n\tCASE = \"http://underlay.org/ns/case\",\n\tpath = \"http://underlay.org/ns/path\",\n\tmap = \"http://underlay.org/ns/map\"\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import { BlankNode } from \"n3.ts\"\nimport { v4 as uuid } from \"uuid\"\nimport APG from \"./apg\"\n\nconst keyMap = new WeakMap<\n\tReadonly<{ [key: string]: any }>,\n\treadonly string[]\n>()\n\nexport function* forEntries<T>(\n\tobject: Readonly<{ [key: string]: T }>\n): Generator<[string, T], void, undefined> {\n\tfor (const key of getKeys(object)) {\n\t\tyield [key, object[key]]\n\t}\n}\n\nexport function getKeys(\n\tobject: Readonly<{ [key: string]: any }>\n): readonly string[] {\n\tif (keyMap.has(object)) {\n\t\treturn keyMap.get(object)!\n\t} else {\n\t\tconst keys = Object.keys(object).sort()\n\t\tObject.freeze(keys)\n\t\tkeyMap.set(object, keys)\n\t\treturn keys\n\t}\n}\n\nexport function getKeyIndex(\n\tobject: Readonly<{ [key: string]: any }>,\n\tkey: string\n) {\n\tif (keyMap.has(object)) {\n\t\tconst index = keyMap.get(object)!.indexOf(key)\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Key not found: ${key}`)\n\t\t}\n\t\treturn index\n\t} else {\n\t\tconst keys = Object.keys(object).sort()\n\t\tObject.freeze(keys)\n\t\tkeyMap.set(object, keys)\n\t\tconst index = keys.indexOf(key)\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Key not found: ${key}`)\n\t\t}\n\t\treturn index\n\t}\n}\n\nexport function mapKeys<S, T>(\n\tobject: Readonly<{ [key: string]: S }>,\n\tmap: (value: S, key: string) => T\n) {\n\tconst keys = getKeys(object)\n\tconst result = Object.fromEntries(\n\t\tkeys.map((key) => [key, map(object[key], key)])\n\t)\n\tkeyMap.set(result, keys)\n\tObject.freeze(result)\n\treturn result\n}\n\nexport function signalInvalidType(type: never): never {\n\tconsole.error(type)\n\tthrow new Error(\"Invalid type\")\n}\n\nexport const rootId = uuid()\n\nexport type ID = () => BlankNode\nexport function getID(): ID {\n\tlet id = 0\n\treturn () => new BlankNode(`b${id++}`)\n}\n\nexport function freezeType(type: APG.Type) {\n\tif (type.type === \"product\") {\n\t\tfor (const [_, value] of forEntries(type.components)) {\n\t\t\tfreezeType(value)\n\t\t}\n\t\tObject.freeze(type.components)\n\t} else if (type.type === \"coproduct\") {\n\t\tfor (const [_, value] of forEntries(type.options)) {\n\t\t\tfreezeType(value)\n\t\t}\n\t\tObject.freeze(type.options)\n\t}\n\tObject.freeze(type)\n}\n","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\nimport { getKeys } from \"./utils.js\"\n\nexport function* forType(\n\ttype: APG.Type,\n\tstack?: APG.Type[]\n): Generator<[APG.Type, APG.Type[]], void, undefined> {\n\tif (stack === undefined) {\n\t\tstack = []\n\t} else if (stack.includes(type)) {\n\t\tthrow new Error(\"Recursive type\")\n\t}\n\n\tyield [type, stack]\n\tif (type.type === \"product\") {\n\t\tstack.push(type)\n\t\tfor (const key of getKeys(type.components)) {\n\t\t\tyield* forType(type.components[key], stack)\n\t\t}\n\t\tstack.pop()\n\t} else if (type.type === \"coproduct\") {\n\t\tstack.push(type)\n\t\tfor (const key of getKeys(type.options)) {\n\t\t\tyield* forType(type.options[key], stack)\n\t\t}\n\t\tstack.pop()\n\t}\n}\n\nexport function isTypeEqual(a: APG.Type, b: APG.Type) {\n\tif (a === b) {\n\t\treturn true\n\t} else if (a.type !== b.type) {\n\t\treturn false\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\treturn a.value === b.value\n\t} else if (a.type === \"unit\" && b.type === \"unit\") {\n\t\treturn true\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn true\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\treturn a.datatype === b.datatype\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tconst A = getKeys(a.components)\n\t\tconst B = getKeys(b.components)\n\t\tif (A.length !== B.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\t\tif (keyA !== keyB) {\n\t\t\t\treturn false\n\t\t\t} else if (isTypeEqual(a.components[keyA], a.components[keyB])) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tconst A = getKeys(a.options)\n\t\tconst B = getKeys(b.options)\n\t\tif (A.length !== B.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\t\tif (keyA !== keyB) {\n\t\t\t\treturn false\n\t\t\t} else if (isTypeEqual(a.options[keyA], b.options[keyB])) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function isTypeAssignable(a: APG.Type, b: APG.Type): boolean {\n\tif (a === b) {\n\t\treturn true\n\t} else if (a.type !== b.type) {\n\t\treturn false\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\treturn a.value === b.value\n\t} else if (a.type === \"unit\" && b.type === \"unit\") {\n\t\treturn true\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn true\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\treturn a.datatype === b.datatype\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tfor (const key of getKeys(b.components)) {\n\t\t\tif (\n\t\t\t\tkey in a.components &&\n\t\t\t\tisTypeAssignable(a.components[key], b.components[key])\n\t\t\t) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tfor (const key of getKeys(a.options)) {\n\t\t\tif (\n\t\t\t\tkey in b.options &&\n\t\t\t\tisTypeAssignable(a.options[key], b.options[key])\n\t\t\t) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function unify(a: APG.Type, b: APG.Type): APG.Type {\n\tif (a === b) {\n\t\treturn b\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\tif (a.value === b.value) {\n\t\t\treturn b\n\t\t}\n\t} else if (a.type === \"unit\" && b.type === \"unit\") {\n\t\treturn b\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn b\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\tif (a.datatype === b.datatype) {\n\t\t\treturn b\n\t\t}\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tconst components = Object.fromEntries(unifyComponents(a, b))\n\t\tObject.freeze(components)\n\t\treturn Object.freeze({ type: \"product\", components })\n\t}\n\tif (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tconst options = Object.fromEntries(unifyOptions(a, b))\n\t\tObject.freeze(options)\n\t\treturn Object.freeze({ type: \"coproduct\", options })\n\t} else {\n\t\tthrow new Error(\"Cannot unify unequal types\")\n\t}\n}\n\nfunction* unifyComponents(\n\ta: APG.Product,\n\tb: APG.Product\n): Generator<[string, APG.Type], void, undefined> {\n\tconst A = getKeys(a.components)\n\tconst B = getKeys(b.components)\n\tif (A.length !== B.length) {\n\t\tthrow new Error(\"Cannot unify unequal products\")\n\t}\n\n\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\tif (keyA !== keyB) {\n\t\t\tthrow new Error(\"Cannot unify unequal types\")\n\t\t} else {\n\t\t\tyield [keyA, unify(a.components[keyA], b.components[keyB])]\n\t\t}\n\t}\n}\n\nfunction* unifyOptions(\n\ta: APG.Coproduct,\n\tb: APG.Coproduct\n): Generator<[string, APG.Type], void, undefined> {\n\tconst keys = Array.from(\n\t\tnew Set([...getKeys(a.options), ...getKeys(b.options)])\n\t).sort()\n\tfor (const key of keys) {\n\t\tconst A = a.options[key]\n\t\tconst B = b.options[key]\n\t\tif (A !== undefined && B === undefined) {\n\t\t\tyield [key, A]\n\t\t} else if (A === undefined && B !== undefined) {\n\t\t\tyield [key, B]\n\t\t} else if (A !== undefined && B !== undefined) {\n\t\t\tyield [key, unify(A, B)]\n\t\t} else {\n\t\t\tthrow new Error(\"Error unifying options\")\n\t\t}\n\t}\n}\n","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\n\nimport { isTypeAssignable, unify } from \"./type.js\"\nimport { forEntries, getKeys, mapKeys, signalInvalidType } from \"./utils.js\"\n\nexport const applyExpressions = (\n\tS: APG.Schema,\n\texpressions: readonly APG.Expression[],\n\tsource: APG.Type\n) =>\n\texpressions.reduce(\n\t\t(type: APG.Type, expression: APG.Expression) => apply(S, expression, type),\n\t\tsource\n\t)\n\nexport function apply(\n\tS: APG.Schema,\n\texpression: APG.Expression,\n\tsource: APG.Type\n): APG.Type {\n\tif (expression.type === \"identity\") {\n\t\treturn source\n\t} else if (expression.type === \"initial\") {\n\t\tthrow new Error(\"Not implemented\")\n\t} else if (expression.type === \"terminal\") {\n\t\treturn Object.freeze({ type: \"unit\" })\n\t} else if (expression.type === \"identifier\") {\n\t\treturn Object.freeze({ type: \"uri\" })\n\t} else if (expression.type === \"constant\") {\n\t\treturn Object.freeze({ type: \"literal\", datatype: expression.datatype })\n\t} else if (expression.type === \"dereference\") {\n\t\tif (\n\t\t\tsource.type === \"reference\" &&\n\t\t\tsource.value in S &&\n\t\t\tsource.value === expression.key\n\t\t) {\n\t\t\treturn S[source.value]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid dereference morphism\")\n\t\t}\n\t} else if (expression.type === \"projection\") {\n\t\tif (source.type === \"product\" && expression.key in source.components) {\n\t\t\treturn source.components[expression.key]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid projection morphism\")\n\t\t}\n\t} else if (expression.type === \"injection\") {\n\t\tconst { key, value } = expression\n\t\treturn Object.freeze({\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: Object.freeze({\n\t\t\t\t[key]: value.reduce(\n\t\t\t\t\t(type, expression) => apply(S, expression, type),\n\t\t\t\t\tsource\n\t\t\t\t),\n\t\t\t}),\n\t\t})\n\t} else if (expression.type === \"tuple\") {\n\t\treturn Object.freeze({\n\t\t\ttype: \"product\",\n\t\t\tcomponents: mapKeys(expression.slots, (value) =>\n\t\t\t\tapplyExpressions(S, value, source)\n\t\t\t),\n\t\t})\n\t} else if (expression.type === \"match\") {\n\t\tif (source.type === \"coproduct\") {\n\t\t\tconst cases = Array.from(applyCases(S, source, expression))\n\t\t\tif (cases.length === 0) {\n\t\t\t\tthrow new Error(\"Empty case analysis\")\n\t\t\t} else {\n\t\t\t\treturn cases.reduce(unify)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid match morphism\")\n\t\t}\n\t} else {\n\t\tsignalInvalidType(expression)\n\t}\n}\n\nfunction* applyCases(\n\tS: APG.Schema,\n\tsource: APG.Coproduct,\n\t{ cases }: APG.Match\n): Generator<APG.Type, void, undefined> {\n\tfor (const key of getKeys(source.options)) {\n\t\tif (key in cases) {\n\t\t\tyield applyExpressions(S, cases[key], source.options[key])\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid case analysis\")\n\t\t}\n\t}\n}\n\nexport function validateExpressions(\n\tS: APG.Schema,\n\texpressions: readonly APG.Expression[],\n\tsource: APG.Type,\n\ttarget: APG.Type\n): boolean {\n\tlet type: APG.Type\n\ttry {\n\t\ttype = applyExpressions(S, expressions, source)\n\t} catch (e) {\n\t\treturn false\n\t}\n\n\treturn isTypeAssignable(type, target)\n}\n","import APG from \"./apg.js\"\nimport { getKeyIndex } from \"./utils.js\"\n\nexport function getType(\n\tschema: APG.Schema,\n\tsource: string,\n\ttarget: APG.Path\n): APG.Type {\n\tif (!(source in schema)) {\n\t\tthrow new Error(`Path source not found in schema: ${source}`)\n\t}\n\n\treturn target.reduce((t: APG.Type, { type, key: value }): APG.Type => {\n\t\tif (t.type === \"product\" && value in t.components) {\n\t\t\treturn t.components[value]\n\t\t} else if (t.type === \"coproduct\" && value in t.options) {\n\t\t\treturn t.options[value]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid type index\")\n\t\t}\n\t}, schema[source])\n}\n\nexport function* getValues(\n\tschema: APG.Schema,\n\tinstance: APG.Instance,\n\tsource: string,\n\ttarget: APG.Path\n): Generator<APG.Value, void, undefined> {\n\tif (!(source in schema)) {\n\t\tthrow new Error(`Path source not found in schema: ${source}`)\n\t}\n\n\tfor (const element of instance[source]) {\n\t\tconst token = target.reduce(\n\t\t\t(\n\t\t\t\ttoken: [APG.Type, APG.Value] | null,\n\t\t\t\tp\n\t\t\t): [APG.Type, APG.Value] | null => {\n\t\t\t\tif (token === null) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst [type, value] = token\n\t\t\t\tif (\n\t\t\t\t\ttype.type === \"product\" &&\n\t\t\t\t\tp.key in type.components &&\n\t\t\t\t\tvalue.termType === \"Record\"\n\t\t\t\t) {\n\t\t\t\t\treturn [type.components[p.key], value.get(p.key)]\n\t\t\t\t} else if (\n\t\t\t\t\ttype.type === \"coproduct\" &&\n\t\t\t\t\tp.key in type.options &&\n\t\t\t\t\tvalue.termType === \"Variant\" &&\n\t\t\t\t\tvalue.option === p.key\n\t\t\t\t) {\n\t\t\t\t\treturn [type.options[p.key], value.value]\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Invalid target path\")\n\t\t\t\t}\n\t\t\t},\n\t\t\t[schema[source], element]\n\t\t)\n\n\t\tif (token !== null) {\n\t\t\tconst [{}, value] = token\n\t\t\tyield value\n\t\t}\n\t}\n}\n","import * as N3 from \"n3.ts\"\nimport zip from \"ziterable\"\n\nimport APG from \"./apg.js\"\nimport { validateExpressions } from \"./morphism.js\"\nimport { getType, getValues } from \"./path.js\"\n\nimport {\n\trootId,\n\tsignalInvalidType,\n\tgetKeys,\n\tforEntries,\n\tmapKeys,\n} from \"./utils.js\"\n\ntype Expressions = readonly APG.Expression[]\ntype M = [APG.Path[], Expressions[]]\n\nexport function validateMapping(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema\n): boolean {\n\tfor (const key of getKeys(S)) {\n\t\tconst value = S[key]\n\t\tif (!(key in M)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst source = getType(T, M[key].source, M[key].target)\n\t\tconst target = fold(M, S, T, value)\n\n\t\tif (validateExpressions(S, M[key].value, source, target)) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n\nexport function fold(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema,\n\ttype: APG.Type\n): APG.Type {\n\tif (type.type === \"reference\") {\n\t\tconst { source, target } = M[type.value]\n\t\tconst value = getType(T, source, target)\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(\"Invalid reference index\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"unit\") {\n\t\treturn type\n\t} else if (type.type === \"uri\") {\n\t\treturn type\n\t} else if (type.type === \"literal\") {\n\t\treturn type\n\t} else if (type.type === \"product\") {\n\t\treturn Object.freeze({\n\t\t\ttype: \"product\",\n\t\t\tcomponents: mapKeys(type.components, (value) => fold(M, S, T, value)),\n\t\t})\n\t} else if (type.type === \"coproduct\") {\n\t\treturn Object.freeze({\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: mapKeys(type.options, (value) => fold(M, S, T, value)),\n\t\t})\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nexport const mapExpressions = (\n\texpressions: readonly APG.Expression[],\n\tvalue: APG.Value,\n\tinstance: APG.Instance,\n\tschema: APG.Schema\n) =>\n\texpressions.reduce(\n\t\t(value: APG.Value, expression: APG.Expression) =>\n\t\t\tmap(expression, value, instance, schema),\n\t\tvalue\n\t)\n\nexport function map(\n\texpression: APG.Expression,\n\tvalue: APG.Value,\n\tinstance: APG.Instance,\n\tschema: APG.Schema\n): APG.Value {\n\tif (expression.type === \"identity\") {\n\t\treturn value\n\t} else if (expression.type === \"initial\") {\n\t\tthrow new Error(\"Not implemented\")\n\t} else if (expression.type === \"terminal\") {\n\t\tif (value.termType === \"BlankNode\") {\n\t\t\treturn value\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid terminal expression\")\n\t\t}\n\t} else if (expression.type === \"identifier\") {\n\t\treturn new N3.NamedNode(expression.value)\n\t} else if (expression.type === \"constant\") {\n\t\treturn new N3.Literal(\n\t\t\texpression.value,\n\t\t\t\"\",\n\t\t\tnew N3.NamedNode(expression.datatype)\n\t\t)\n\t} else if (expression.type === \"dereference\") {\n\t\tif (value.termType === \"Pointer\") {\n\t\t\tconst { key } = expression\n\t\t\tif (key in instance && value.index in instance[key]) {\n\t\t\t\treturn instance[key][value.index]\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid pointer dereference\")\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid pointer dereference\")\n\t\t}\n\t} else if (expression.type === \"projection\") {\n\t\tif (value.termType === \"Record\") {\n\t\t\treturn value.get(expression.key)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid projection\")\n\t\t}\n\t} else if (expression.type === \"match\") {\n\t\tif (value.termType === \"Variant\") {\n\t\t\tif (value.option in expression.cases) {\n\t\t\t\tconst c = expression.cases[value.option]\n\t\t\t\treturn mapExpressions(c, value.value, instance, schema)\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid case analysis\")\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid match morphism\")\n\t\t}\n\t} else if (expression.type === \"tuple\") {\n\t\tconst keys = getKeys(expression.slots)\n\t\treturn new APG.Record(\n\t\t\tkeys,\n\t\t\tkeys.map((key) =>\n\t\t\t\tmapExpressions(expression.slots[key], value, instance, schema)\n\t\t\t)\n\t\t)\n\t} else if (expression.type === \"injection\") {\n\t\treturn new APG.Variant(\n\t\t\tObject.freeze([expression.key]),\n\t\t\t0,\n\t\t\tmapExpressions(expression.value, value, instance, schema)\n\t\t)\n\t} else {\n\t\tsignalInvalidType(expression)\n\t}\n}\n\nexport function delta(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema,\n\tTI: APG.Instance\n): APG.Instance {\n\tconst SI: APG.Instance = mapKeys(S, () => [])\n\n\tconst indices = mapKeys(S, () => new Map<APG.Value, number>())\n\n\tfor (const [key, type] of forEntries(S)) {\n\t\tif (!(key in M) || !(key in indices)) {\n\t\t\tthrow new Error(\"Invalid mapping\")\n\t\t}\n\t\tfor (const value of getValues(T, TI, M[key].source, M[key].target)) {\n\t\t\tif (indices[key].has(value)) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\tconst imageValue = mapExpressions(M[key].value, value, TI, T)\n\n\t\t\t\tconst i = SI[key].push(placeholder) - 1\n\t\t\t\tindices[key].set(value, i)\n\t\t\t\tSI[key][i] = pullback({ M, S, T, SI, TI, indices }, type, imageValue)\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key of getKeys(S)) {\n\t\tObject.freeze(SI[key])\n\t}\n\n\tObject.freeze(SI)\n\n\treturn SI\n}\n\nconst placeholder = new N3.NamedNode(rootId)\n\ntype State = {\n\tM: APG.Mapping\n\tS: APG.Schema\n\tT: APG.Schema\n\tSI: APG.Instance\n\tTI: APG.Instance\n\tindices: Readonly<{ [key: string]: Map<APG.Value, number> }>\n}\n\nfunction pullback(\n\tstate: State,\n\ttype: APG.Type, // in source\n\tvalue: APG.Value // of image\n): APG.Value {\n\tif (type.type === \"reference\") {\n\t\t// Here we actually know that value is an instance of M1[type.value]\n\t\t// So now what?\n\t\t// First we check to see if the value is in the index cache.\n\t\t// (We're ultimately going to return a Pointer for sure)\n\t\tconst index = state.indices[type.value].get(value)\n\t\tif (index !== undefined) {\n\t\t\treturn new APG.Pointer(index)\n\t\t} else {\n\t\t\t// Otherwise, we map value along the morphism M2[type.value].\n\t\t\t// This gives us a value that is an instance of the image of the referenced type\n\t\t\t// - ie an instance of fold(M1, T, S[type.value].value)\n\t\t\tconst t = state.S[type.value]\n\t\t\tconst m = state.M[type.value]\n\t\t\tconst v = mapExpressions(m.value, value, state.TI, state.T)\n\t\t\tconst index = state.SI[type.value].push(placeholder) - 1\n\t\t\tstate.indices[type.value].set(value, index)\n\t\t\tconst p = pullback(state, t, v)\n\t\t\tstate.SI[type.value][index] = p\n\t\t\treturn new APG.Pointer(index)\n\t\t}\n\t} else if (type.type === \"unit\") {\n\t\tif (value.termType !== \"BlankNode\") {\n\t\t\tthrow new Error(\"Invalid image value: expected blank node\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"uri\") {\n\t\tif (value.termType !== \"NamedNode\") {\n\t\t\tthrow new Error(\"Invalid image value: expected iri\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"literal\") {\n\t\tif (value.termType !== \"Literal\") {\n\t\t\tthrow new Error(\"Invalid image value: expected literal\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"product\") {\n\t\tif (value.termType !== \"Record\") {\n\t\t\tthrow new Error(\"Invalid image value: expected record\")\n\t\t} else {\n\t\t\treturn new APG.Record(\n\t\t\t\tvalue.components,\n\t\t\t\tpullbackComponents(state, type, value)\n\t\t\t)\n\t\t}\n\t} else if (type.type === \"coproduct\") {\n\t\tif (value.termType !== \"Variant\") {\n\t\t\tthrow new Error(\"Invalid image value: expected variant\")\n\t\t} else if (value.option in type.options) {\n\t\t\treturn new APG.Variant(\n\t\t\t\tvalue.options,\n\t\t\t\tvalue.index,\n\t\t\t\tpullback(state, type.options[value.option], value.value)\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid image variant\")\n\t\t}\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nfunction* pullbackComponents(\n\tstate: State,\n\ttype: APG.Product,\n\tvalue: APG.Record\n) {\n\tfor (const [k1, k2, field] of zip(\n\t\tgetKeys(type.components),\n\t\tvalue.components,\n\t\tvalue\n\t)) {\n\t\tif (k1 === k2) {\n\t\t\tyield pullback(state, type.components[k1], field)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid image record\")\n\t\t}\n\t}\n}\n","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\nimport { getKeys, signalInvalidType } from \"./utils.js\"\n\nexport function validateValue(type: APG.Type, value: APG.Value): boolean {\n\tif (type.type === \"reference\") {\n\t\treturn value.termType === \"Pointer\"\n\t} else if (type.type === \"unit\") {\n\t\treturn value.termType === \"BlankNode\"\n\t} else if (type.type === \"uri\") {\n\t\treturn value.termType === \"NamedNode\"\n\t} else if (type.type === \"literal\") {\n\t\treturn (\n\t\t\tvalue.termType === \"Literal\" && value.datatype.value === type.datatype\n\t\t)\n\t} else if (type.type === \"product\") {\n\t\tif (value.termType === \"Record\") {\n\t\t\tconst keys = getKeys(type.components)\n\t\t\tif (keys.length !== value.length) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tfor (const [k, v] of zip(keys, value)) {\n\t\t\t\tif (validateValue(type.components[k], v)) {\n\t\t\t\t\tcontinue\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} else if (type.type === \"coproduct\") {\n\t\tif (value.termType === \"Variant\" && value.option in type.options) {\n\t\t\treturn validateValue(type.options[value.option], value.value)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nexport function* forValue(\n\tvalue: APG.Value\n): Generator<[APG.Value], void, undefined> {\n\tyield [value]\n\tif (value.termType === \"Record\") {\n\t\tfor (const leaf of value) {\n\t\t\tyield* forValue(leaf)\n\t\t}\n\t} else if (value.termType === \"Variant\") {\n\t\tyield* forValue(value.value)\n\t}\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parser = void 0;\n\nvar _lezer = require(\"lezer\");\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {\n  __proto__: null,\n  namespace: 8,\n  type: 16,\n  class: 44,\n  edge: 48,\n  list: 52\n};\n\nconst parser = _lezer.Parser.deserialize({\n  version: 13,\n  states: \")`QYQPOOOkQPO'#C_OpQPO'#CcOuQQO'#CqOzQQO'#CsO!PQQO'#CuOOQO'#C}'#C}OOQO'#Cw'#CwQYQPOOOOQO'#Ca'#CaO!UQQO,58yOOQO'#Ce'#CeO!ZQPO,58}O!ZQPO,59]O!uQPO,59_O!zQPO,59aOOQO-E6u-E6uOOQO1G.e1G.eOOQO'#Cf'#CfO!ZQPO'#CgO#PQQO'#ChO#UQQO'#ClO#ZQQO'#CmO#cQQO'#CoOOQO'#DP'#DPOOQO1G.i1G.iOOQO1G.w1G.wO#kQQO1G.yO!ZQPO1G.{OOQO,59R,59ROOQO,59S,59SO#pQPO,59WO#uQPO'#CnO#zQPO'#DUO$SQPO,59XO$XQQO'#CpO$dQPO'#DZO$lQPO,59ZO$qQPO7+$eOOQO7+$g7+$gOOQO1G.r1G.rO!ZQPO,59YO$xQQO,59pO%QQPO,59pOOQO1G.s1G.sO!ZQPO,59[O%YQQO,59uO%bQPO,59uOOQO1G.u1G.uO%jQQO<<HPO%oQPO<<HPOOQO1G.t1G.tOOQO,59d,59dO%tQQO1G/[OOQO-E6v-E6vOOQO1G.v1G.vOOQO,59e,59eO%|QQO1G/aOOQO-E6w-E6wOOQOAN=kAN=kO&UQQOAN=kP&ZQQO'#CxP&`QQO'#CyOOQOG23VG23V\",\n  stateData: \"&e~OpOSPOS~OSPOWQOfROhSOjTO~OrXO~OrZO~OU]O~OU^O~OU_O~OUaO~O]dO^hO_hOrbOtcOueOwfO|gO~O!QkO~O!SlO~OUnO~OUoO~OUpO{xP~OUsO!P}P~OUvO~OvxO~OyyO~OzzO{xX~O{|O~O!O}OzdX!PdX~Oz!OO!P}X~O!P!QO~O!R!RO~P!ZOUpO{xa~Oz!VO{xa~OUsO!P}a~Oz!ZO!P}a~OU!]O~O!R!^O~OUpO{xi~OUsO!P}i~OU!aO~OUpO~OUsO~O\",\n  goto: \"#w!OPPP!PP!TP!PP!W!Z!Z!ZPPP!Z!Z!d!Z!l!PP!PP!PP!t!z#QPPP#WP#[PPPP#qPPPP#tTUOWRYPR[Q_h[]clvy}QqfV!Uz!V!_QtgV!Y!O!Z!`QWOR`WQ{qR!W{Q!PtR![!PTVOWQi[Qj]QmcQwlQ!SvQ!TyR!X}RrfRug\",\n  nodeNames: \"⚠ Comment Schema Namespace namespace Prefix Uri Type type TypeName Variable Optional Reference Pointer Unit Iri Literal Product Component Coproduct Option Class class Edge edge List list\",\n  maxTerm: 50,\n  nodeProps: [[_lezer.NodeProp.group, -8, 10, 11, 12, 14, 15, 16, 17, 19, \"Expression\"]],\n  skippedNodes: [0, 1],\n  repeatNodeCount: 3,\n  tokenData: \"'h~RjX^!spq!sqr#hst#mz{#x}!O#}!P!Q$Y![!]$k!]!^$v!^!_${!_!`%Y!`!a%k!a!b%x!}#O%}#P#Q&S#T#o&X#o#p'^#q#r'c#y#z!s$f$g!s#BY#BZ!s$IS$I_!s$I|$JO!s$JT$JU!s$KV$KW!s&FU&FV!s~!xYp~X^!spq!s#y#z!s$f$g!s#BY#BZ!s$IS$I_!s$I|$JO!s$JT$JU!s$KV$KW!s&FU&FV!s~#mO^~~#rQP~OY#mZ~#m~#}O]~~$QP!`!a$T~$YOy~~$]P!_!`$`~$cP!`!a$f~$kO!R~~$nP![!]$q~$vO!S~~${Oz~~%QPu~!`!a%T~%YO_~~%]P!_!`%`~%cP!P!Q%f~%kO!Q~R%pPvP}!O%sQ%xO!OQ~%}Ot~~&SO|~~&XO!P~R&`SUQrP!Q![&X![!]&l!c!}&X#T#o&XQ&qXUQst&l}!O&l!O!P&l!P!Q&l!Q![&l![!]&l!c!}&l#R#S&l#T#o&l~'cOw~~'hO{~\",\n  tokenizers: [0, 1],\n  topRules: {\n    \"Schema\": [0, 2]\n  },\n  specialized: [{\n    term: 34,\n    get: value => spec_identifier[value] || -1\n  }],\n  tokenPrec: 0\n});\n\nexports.parser = parser;","export * from \"./parse.js\"\nexport * from \"./stdlib.js\"\n","import { APG, forEntries, freezeType, ns } from \"@underlay/apg\"\nimport { Parser, SyntaxNode } from \"lezer\"\n\nimport { parser } from \"../grammar/index.js\"\nimport { defaultTypes, defaultNamespaces } from \"./stdlib.js\"\n\nexport const uriPattern = /^[a-z]+:[a-zA-Z0-9-/_.:#]+$/\nexport const namespacePattern = /[#/]$/\n\nexport type ParseState = {\n\tslice: (node: { from: number; to: number }) => string\n\tnamespaces: Record<string, string>\n\tschema: Record<string, APG.Type>\n\ttypes: Record<string, APG.Type>\n\treferences: { from: number; to: number; key: string }[]\n}\n\nexport class LintError extends Error {\n\tconstructor(\n\t\treadonly from: number,\n\t\treadonly to: number,\n\t\treadonly value: string,\n\t\tmessage: string\n\t) {\n\t\tsuper(message)\n\t}\n}\n\nexport interface ParseResult {\n\tschema: APG.Schema\n\tnamespaces: Record<string, string>\n}\n\nexport function parse(input: string): ParseResult {\n\tconst tree = parser.configure({ strict: true }).parse(input)\n\tconst cursor = tree.cursor()\n\n\tif (cursor.name === \"Schema\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tthrow new LintError(cursor.from, cursor.to, \"\", \"Invalid top-level node\")\n\t}\n\n\tconst state: ParseState = {\n\t\tslice: ({ from, to }: { from: number; to: number }) =>\n\t\t\tinput.slice(from, to),\n\t\tnamespaces: {},\n\t\ttypes: { ...defaultTypes },\n\t\tschema: {},\n\t\treferences: [],\n\t}\n\n\tdo {\n\t\tif (cursor.type.name === \"Namespace\") {\n\t\t\tconst uri = cursor.node.getChild(\"Uri\")!\n\t\t\tconst namespace = state.slice(uri)\n\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\tthrow new LintError(\n\t\t\t\t\turi.from,\n\t\t\t\t\turi.to,\n\t\t\t\t\tnamespace,\n\t\t\t\t\t`Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t)\n\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\tthrow new LintError(\n\t\t\t\t\turi.from,\n\t\t\t\t\turi.to,\n\t\t\t\t\tnamespace,\n\t\t\t\t\t\"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")!\n\t\t\tconst prefix = state.slice(identifier)\n\t\t\tif (prefix in state.namespaces) {\n\t\t\t\tconst message = `Duplicate namespace: ${prefix}`\n\t\t\t\tthrow new LintError(identifier.from, identifier.to, prefix, message)\n\t\t\t} else {\n\t\t\t\tstate.namespaces[prefix] = namespace\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Type\") {\n\t\t\tconst identifier = cursor.node.getChild(\"TypeName\")!\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\tconst type = parseType(state, expression)\n\n\t\t\tconst name = state.slice(identifier)\n\t\t\tif (name in state.types) {\n\t\t\t\tconst { from, to } = identifier\n\t\t\t\tconst message = `Invalid type declaration: type ${name} has already been declared`\n\t\t\t\tthrow new LintError(from, to, name, message)\n\t\t\t} else {\n\t\t\t\tstate.types[name] = type\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Class\") {\n\t\t\tconst node = cursor.node.getChild(\"Uri\")!\n\t\t\tconst uri = parseURI(state, node)!\n\t\t\tif (uri in state.schema) {\n\t\t\t\tconst { from, to } = node\n\t\t\t\tconst message = `Invalid class declaration: class ${uri} has already been declared`\n\t\t\t\tthrow new LintError(from, to, uri, message)\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\t\tstate.schema[uri] = parseType(state, expression)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Edge\") {\n\t\t\tconst uris = cursor.node.getChildren(\"Uri\")\n\t\t\tconst names = uris.map((uri) => parseURI(state, uri))\n\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst value = expression && parseType(state, expression)\n\n\t\t\tconst [sourceNode, labelNode, targetNode] = uris\n\t\t\tconst [source, label, target] = names\n\t\t\tif (label in state.schema) {\n\t\t\t\tconst { from, to } = labelNode\n\t\t\t\tconst message = `Invalid edge declaration: class ${label} has already been declared`\n\t\t\t\tthrow new LintError(from, to, label, message)\n\t\t\t} else {\n\t\t\t\tif (!(source in state.schema)) {\n\t\t\t\t\tconst { from, to } = sourceNode\n\t\t\t\t\tstate.references.push({ from, to, key: source })\n\t\t\t\t}\n\n\t\t\t\tif (!(target in state.schema)) {\n\t\t\t\t\tconst { from, to } = targetNode\n\t\t\t\t\tstate.references.push({ from, to, key: target })\n\t\t\t\t}\n\n\t\t\t\tconst components: Record<string, APG.Type> = {\n\t\t\t\t\t[ns.source]: { type: \"reference\", value: source },\n\t\t\t\t\t[ns.target]: { type: \"reference\", value: target },\n\t\t\t\t}\n\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tcomponents[ns.value] = value\n\t\t\t\t}\n\n\t\t\t\tstate.schema[label] = { type: \"product\", components }\n\t\t\t}\n\t\t} else if (cursor.type.name === \"List\") {\n\t\t\tconst node = cursor.node.getChild(\"Uri\")!\n\t\t\tconst uri = parseURI(state, node)!\n\t\t\tif (uri in state.schema) {\n\t\t\t\tconst { from, to } = node\n\t\t\t\tconst message = `Invalid list declaration: class ${uri} has already been declared`\n\t\t\t\tthrow new LintError(from, to, uri, message)\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\t\tstate.schema[uri] = {\n\t\t\t\t\ttype: \"coproduct\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t[ns.none]: { type: \"unit\" },\n\t\t\t\t\t\t[ns.some]: {\n\t\t\t\t\t\t\ttype: \"product\",\n\t\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\t\t[ns.head]: parseType(state, expression),\n\t\t\t\t\t\t\t\t[ns.tail]: { type: \"reference\", value: uri },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} while (cursor.nextSibling())\n\n\tfor (const { from, to, key } of state.references) {\n\t\tif (key in state.schema) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tconst message = `Invalid reference: class ${key} is not defined`\n\t\t\tthrow new LintError(from, to, key, message)\n\t\t}\n\t}\n\n\tfor (const [_, type] of forEntries(state.schema)) {\n\t\tfreezeType(type)\n\t}\n\n\tObject.freeze(state.schema)\n\treturn { schema: state.schema, namespaces: state.namespaces }\n}\n\nexport function parseURI(state: ParseState, node: SyntaxNode): string {\n\tconst value = state.slice(node)\n\tconst index = value.indexOf(\":\")\n\tif (index === -1) {\n\t\tconst { from, to } = node\n\t\tconst message = `Invalid URI: URIs must be of the form [namespace]:[path]`\n\t\tthrow new LintError(from, to, value, message)\n\t}\n\n\tconst prefix = value.slice(0, index)\n\tif (prefix in state.namespaces) {\n\t\treturn state.namespaces[prefix] + value.slice(index + 1)\n\t} else {\n\t\tconst { from, to } = node\n\t\tconst message = `Invalid URI: namespace ${prefix} is not defined`\n\t\tthrow new LintError(from, to, value, message)\n\t}\n}\n\n// Variable | Optional | Reference | Unit | Iri | Literal | Product | Coproduct\nexport function parseType(state: ParseState, node: SyntaxNode): APG.Type {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.types) {\n\t\t\treturn state.types[value]\n\t\t} else {\n\t\t\tconst { from, to } = node\n\t\t\tthrow new LintError(from, to, value, `Type ${value} is not defined`)\n\t\t}\n\t} else if (node.name === \"Optional\") {\n\t\tconst expression = node.getChild(\"Expression\")!\n\t\tconst type = parseType(state, expression)\n\t\treturn {\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: { [ns.none]: { type: \"unit\" }, [ns.some]: type },\n\t\t}\n\t} else if (node.name === \"Reference\") {\n\t\tconst uri = node.getChild(\"Uri\")!\n\t\tconst key = parseURI(state, uri)\n\t\tif (!(key in state.schema)) {\n\t\t\tconst { from, to } = uri\n\t\t\tstate.references.push({ from, to, key })\n\t\t}\n\n\t\treturn { type: \"reference\", value: key }\n\t} else if (node.name === \"Unit\") {\n\t\treturn { type: \"unit\" }\n\t} else if (node.name === \"Iri\") {\n\t\treturn { type: \"uri\" }\n\t} else if (node.name === \"Literal\") {\n\t\tconst uri = node.getChild(\"Uri\")!\n\t\tconst datatype = parseURI(state, uri)\n\t\treturn { type: \"literal\", datatype }\n\t} else if (node.name === \"Product\") {\n\t\tconst components: Record<string, APG.Type> = {}\n\t\tfor (const component of node.getChildren(\"Component\")) {\n\t\t\tconst uri = component.getChild(\"Uri\")!\n\n\t\t\tconst key = parseURI(state, uri)\n\t\t\tif (key in components) {\n\t\t\t\tconst { to, from } = uri\n\t\t\t\tconst message = `Duplicate product component key: ${key}`\n\t\t\t\tthrow new LintError(from, to, key, message)\n\t\t\t} else {\n\t\t\t\tconst expression = component.getChild(\"Expression\")!\n\t\t\t\tcomponents[key] = parseType(state, expression)\n\t\t\t}\n\t\t}\n\n\t\treturn { type: \"product\", components }\n\t} else if (node.name === \"Coproduct\") {\n\t\tconst options: Record<string, APG.Type> = {}\n\t\tfor (const option of node.getChildren(\"Option\")) {\n\t\t\tconst uri = option.getChild(\"Uri\")!\n\t\t\tconst key = parseURI(state, uri)\n\t\t\tif (key in options) {\n\t\t\t\tconst { from, to } = uri\n\t\t\t\tconst message = `Duplicate coproduct option key: ${key}`\n\t\t\t\tthrow new LintError(from, to, key, message)\n\t\t\t} else {\n\t\t\t\tconst expression = option.getChild(\"Expression\")\n\t\t\t\tif (expression === null) {\n\t\t\t\t\toptions[key] = { type: \"unit\" }\n\t\t\t\t} else {\n\t\t\t\t\toptions[key] = parseType(state, expression)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { type: \"coproduct\", options }\n\t} else {\n\t\treturn { type: \"unit\" }\n\t}\n}\n\nexport function printSyntax(node: SyntaxNode, prefix: string = \"\") {\n\tconsole.log(`${prefix}- ${node.type.name} ${node.from} ${node.to}`)\n\tfor (let child = node.firstChild; child !== null; child = child.nextSibling) {\n\t\tprintSyntax(child, prefix + \"  \")\n\t}\n}\n","import { APG } from \"@underlay/apg\"\nimport { rdf, xsd } from \"n3.ts\"\n\nexport const defaultTypes: Record<string, APG.Type> = {\n\tunit: { type: \"unit\" },\n\turi: { type: \"uri\" },\n\n\tstring: { type: \"literal\", datatype: xsd.string },\n\tboolean: { type: \"literal\", datatype: xsd.boolean },\n\tinteger: { type: \"literal\", datatype: xsd.integer },\n\tdouble: { type: \"literal\", datatype: xsd.double },\n\tdate: { type: \"literal\", datatype: xsd.date },\n\tdateTime: { type: \"literal\", datatype: xsd.dateTime },\n\tbase64Binary: { type: \"literal\", datatype: xsd.base64Binary },\n\tJSON: { type: \"literal\", datatype: rdf.JSON },\n}\n\nexport const defaultNamespaces: Record<string, string> = {\n\tul: \"http://underlay.org/ns/\",\n\txsd: \"http://www.w3.org/2001/XMLSchema#\",\n\trdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n}\n","/// The default maximum length of a `TreeBuffer` node.\nexport const DefaultBufferLength = 1024\n\nlet nextPropID = 0\n\nconst CachedNode = new WeakMap<Tree, TreeNode>()\n\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nexport class NodeProp<T> {\n  /// @internal\n  id: number\n\n  /// A method that deserializes a value of this prop from a string.\n  /// Can be used to allow a prop to be directly written in a grammar\n  /// file. Defaults to raising an error.\n  deserialize: (str: string) => T\n\n  /// Create a new node prop type. You can optionally pass a\n  /// `deserialize` function.\n  constructor({deserialize}: {deserialize?: (str: string) => T} = {}) {\n    this.id = nextPropID++\n    this.deserialize = deserialize || (() => {\n      throw new Error(\"This node type doesn't define a deserialize function\")\n    })\n  }\n\n  /// Create a string-valued node prop whose deserialize function is\n  /// the identity function.\n  static string() { return new NodeProp<string>({deserialize: str => str}) }\n\n  /// Create a number-valued node prop whose deserialize function is\n  /// just `Number`.\n  static number() { return new NodeProp<number>({deserialize: Number}) }\n\n  /// Creates a boolean-valued node prop whose deserialize function\n  /// returns true for any input.\n  static flag() { return new NodeProp<boolean>({deserialize: () => true}) }\n\n  /// Store a value for this prop in the given object. This can be\n  /// useful when building up a prop object to pass to the\n  /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n  /// argument.\n  set(propObj: {[prop: number]: any}, value: T) {\n    propObj[this.id] = value\n    return propObj\n  }\n\n  /// This is meant to be used with\n  /// [`NodeSet.extend`](#tree.NodeSet.extend) or\n  /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n  /// values for each node type in the set. Takes a [match\n  /// object](#tree.NodeType^match) or function that returns undefined\n  /// if the node type doesn't get this prop, and the prop's value if\n  /// it does.\n  add(match: {[selector: string]: T} | ((type: NodeType) => T | undefined)): NodePropSource {\n    if (typeof match != \"function\") match = NodeType.match(match)\n    return (type) => {\n      let result = (match as (type: NodeType) => T | undefined)(type)\n      return result === undefined ? null : [this, result]\n    }\n  }\n\n  /// Prop that is used to describe matching delimiters. For opening\n  /// delimiters, this holds an array of node names (written as a\n  /// space-separated string when declaring this prop in a grammar)\n  /// for the node types of closing delimiters that match it.\n  static closedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n  /// attached to closing delimiters, holding an array of node names\n  /// of types of matching opening delimiters.\n  static openedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// Used to assign node types to groups (for example, all node\n  /// types that represent an expression could be tagged with an\n  /// `\"Expression\"` group).\n  static group = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n}\n\n/// Type returned by [`NodeProp.add`](#tree.NodeProp.add). Describes\n/// the way a prop should be added to each node type in a node set.\nexport type NodePropSource = (type: NodeType) => null | [NodeProp<any>, any]\n\n// Note: this is duplicated in lezer/src/constants.ts\nconst enum NodeFlag {\n  Top = 1,\n  Skipped = 2,\n  Error = 4,\n  Anonymous = 8\n}\n\nconst noProps: {[propID: number]: any} = Object.create(null)\n\n/// Each node in a syntax tree has a node type associated with it.\nexport class NodeType {\n  /// @internal\n  constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    readonly name: string,\n    /// @internal\n    readonly props: {readonly [prop: number]: any},\n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    readonly id: number,\n    /// @internal\n    readonly flags: number = 0) {}\n\n  static define(spec: {\n    /// The ID of the node type. When this type is used in a\n    /// [set](#tree.NodeSet), the ID must correspond to its index in\n    /// the type array.\n    id: number, \n    /// The name of the node type. Leave empty to define an anonymous\n    /// node.\n    name?: string,\n    /// [Node props](#tree.NodeProp) to assign to the type. The value\n    /// given for any given prop should correspond to the prop's type.\n    props?: readonly ([NodeProp<any>, any] | NodePropSource)[],\n    /// Whether is is a [top node](#tree.NodeType.isTop).\n    top?: boolean,\n    /// Whether this node counts as an [error\n    /// node](#tree.NodeType.isError).\n    error?: boolean,\n    /// Whether this node is a [skipped](#tree.NodeType.isSkipped)\n    /// node.\n    skipped?: boolean\n  }) {\n    let props = spec.props && spec.props.length ? Object.create(null) : noProps\n    let flags = (spec.top ? NodeFlag.Top : 0) | (spec.skipped ? NodeFlag.Skipped : 0) |\n      (spec.error ? NodeFlag.Error : 0) | (spec.name == null ? NodeFlag.Anonymous : 0)\n    let type = new NodeType(spec.name || \"\", props, spec.id, flags)\n    if (spec.props) for (let src of spec.props) {\n      if (!Array.isArray(src)) src = src(type)!\n      if (src) src[0].set(props, src[1])\n    }\n    return type\n  }\n\n  /// Retrieves a node prop for this type. Will return `undefined` if\n  /// the prop isn't present on this node.\n  prop<T>(prop: NodeProp<T>): T | undefined { return this.props[prop.id] }\n\n  /// True when this is the top node of a grammar.\n  get isTop() { return (this.flags & NodeFlag.Top) > 0 }\n\n  /// True when this node is produced by a skip rule.\n  get isSkipped() { return (this.flags & NodeFlag.Skipped) > 0 }\n\n  /// Indicates whether this is an error node.\n  get isError() { return (this.flags & NodeFlag.Error) > 0 }\n\n  /// When true, this node type doesn't correspond to a user-declared\n  /// named node, for example because it is used to cache repetition.\n  get isAnonymous() { return (this.flags & NodeFlag.Anonymous) > 0 }\n\n  /// Returns true when this node's name or one of its\n  /// [groups](#tree.NodeProp^group) matches the given string.\n  is(name: string | number) {\n    if (typeof name == 'string') {\n      if (this.name == name) return true\n      let group = this.prop(NodeProp.group)\n      return group ? group.indexOf(name) > -1 : false\n    }\n    return this.id == name\n  }\n\n  /// An empty dummy node type to use when no actual type is available.\n  static none: NodeType = new NodeType(\"\", Object.create(null), 0, NodeFlag.Anonymous)\n\n  /// Create a function from node types to arbitrary values by\n  /// specifying an object whose property names are node or\n  /// [group](#tree.NodeProp^group) names. Often useful with\n  /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n  /// names, separated by spaces, in a single property name to map\n  /// multiple node names to a single value.\n  static match<T>(map: {[selector: string]: T}): (node: NodeType) => T | undefined {\n    let direct = Object.create(null)\n    for (let prop in map)\n      for (let name of prop.split(\" \")) direct[name] = map[prop]\n    return (node: NodeType) => {\n      for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n        let found = direct[i < 0 ? node.name : groups![i]]\n        if (found) return found\n      }\n    }\n  }\n}\n\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.nodeSet) a node set, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nexport class NodeSet {\n  /// Create a set with the given types. The `id` property of each\n  /// type should correspond to its position within the array.\n  constructor(\n    /// The node types in this set, by id.\n    readonly types: readonly NodeType[]\n  ) {\n    for (let i = 0; i < types.length; i++) if (types[i].id != i)\n      throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\")\n  }\n\n  /// Create a copy of this set with some node properties added. The\n  /// arguments to this method should be created with\n  /// [`NodeProp.add`](#tree.NodeProp.add).\n  extend(...props: NodePropSource[]): NodeSet {\n    let newTypes: NodeType[] = []\n    for (let type of this.types) {\n      let newProps = null\n      for (let source of props) {\n        let add = source(type)\n        if (add) {\n          if (!newProps) newProps = Object.assign({}, type.props)\n          add[0].set(newProps, add[1])\n        }\n      }\n      newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type)\n    }\n    return new NodeSet(newTypes)\n  }\n}\n\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nexport class Tree {\n  /// Construct a new tree. You usually want to go through\n  /// [`Tree.build`](#tree.Tree^build) instead.\n  constructor(\n    readonly type: NodeType,\n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    readonly children: readonly (Tree | TreeBuffer)[],\n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    readonly positions: readonly number[],\n    /// The total length of this tree\n    readonly length: number\n  ) {}\n\n  /// @internal\n  toString(): string {\n    let children = this.children.map(c => c.toString()).join()\n    return !this.type.name ? children :\n      (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n      (children.length ? \"(\" + children + \")\" : \"\")\n  }\n\n  /// The empty tree\n  static empty = new Tree(NodeType.none, [], [], 0)\n\n  /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n  /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n  /// to the given position and side.\n  cursor(pos?: number, side: -1 | 0 | 1 = 0): TreeCursor {\n    let scope = (pos != null && CachedNode.get(this)) || (this.topNode as TreeNode)\n    let cursor = new TreeCursor(scope)\n    if (pos != null) {\n      cursor.moveTo(pos, side)\n      CachedNode.set(this, cursor._tree)\n    }\n    return cursor\n  }\n\n  /// Get a [tree cursor](#tree.TreeCursor) that, unlike regular\n  /// cursors, doesn't skip [anonymous](#tree.NodeType.isAnonymous)\n  /// nodes.\n  fullCursor(): TreeCursor {\n    return new TreeCursor(this.topNode as TreeNode, true)\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n  /// tree.\n  get topNode(): SyntaxNode {\n    return new TreeNode(this, 0, 0, null)\n  }\n\n  /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n  /// If `side` is -1, this will move into nodes that end at the\n  /// position. If 1, it'll move into nodes that start at the\n  /// position. With 0, it'll only enter nodes that cover the position\n  /// from both sides.\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor(pos, side).node\n  }\n\n  /// Iterate over the tree and its children, calling `enter` for any\n  /// node that touches the `from`/`to` region (if given) before\n  /// running over such a node's children, and `leave` (if given) when\n  /// leaving the node. When `enter` returns `false`, the given node\n  /// will not have its children iterated over (or `leave` called).\n  iterate(spec: {\n    enter(type: NodeType, from: number, to: number): false | void,\n    leave?(type: NodeType, from: number, to: number): void,\n    from?: number,\n    to?: number\n  }) {\n    let {enter, leave, from = 0, to = this.length} = spec\n    for (let c = this.cursor();;) {\n      let mustLeave = false\n      if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to) !== false)) {\n        if (c.firstChild()) continue\n        if (!c.type.isAnonymous) mustLeave = true\n      }\n      for (;;) {\n        if (mustLeave && leave) leave(c.type, c.from, c.to)\n        mustLeave = c.type.isAnonymous\n        if (c.nextSibling()) break\n        if (!c.parent()) return\n        mustLeave = true\n      }\n    }\n  }\n\n  /// Balance the direct children of this tree.\n  balance(maxBufferLength = DefaultBufferLength) {\n    return this.children.length <= BalanceBranchFactor ? this\n      : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0,\n                     maxBufferLength, this.length)\n  }\n\n  /// Build a tree from a postfix-ordered buffer of node information,\n  /// or a cursor over such a buffer.\n  static build(data: BuildData) { return buildTree(data) }\n}\n\ntype BuildData = {\n  /// The buffer or buffer cursor to read the node data from.\n  ///\n  /// When this is an array, it should contain four values for every\n  /// node in the tree.\n  ///\n  ///  - The first holds the node's type, as a node ID pointing into\n  ///    the given `NodeSet`.\n  ///  - The second holds the node's start offset.\n  ///  - The third the end offset.\n  ///  - The fourth the amount of space taken up in the array by this\n  ///    node and its children. Since there's four values per node,\n  ///    this is the total number of nodes inside this node (children\n  ///    and transitive children) plus one for the node itself, times\n  ///    four.\n  ///\n  /// Parent nodes should appear _after_ child nodes in the array. As\n  /// an example, a node of type 10 spanning positions 0 to 4, with\n  /// two children, of type 11 and 12, might look like this:\n  ///\n  ///     [11, 0, 1, 4, 12, 2, 4, 4, 10, 0, 4, 12]\n  buffer: BufferCursor | readonly number[],\n  /// The node types to use.\n  nodeSet: NodeSet,\n  /// The id of the top node type, if any.\n  topID?: number,\n  /// The position the tree should start at. Defaults to 0.\n  start?: number,\n  /// The length of the wrapping node. The end offset of the last\n  /// child is used when not provided.\n  length?: number,\n  /// The maximum buffer length to use. Defaults to\n  /// [`DefaultBufferLength`](#tree.DefaultBufferLength).\n  maxBufferLength?: number,\n  /// An optional set of reused nodes that the buffer can refer to.\n  reused?: (Tree | TreeBuffer)[],\n  /// The first node type that indicates repeat constructs in this\n  /// grammar.\n  minRepeatType?: number\n}\n\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nexport class TreeBuffer {\n  /// Create a tree buffer @internal\n  constructor(\n    /// @internal\n    readonly buffer: Uint16Array,\n    // The total length of the group of nodes in the buffer.\n    readonly length: number,\n    /// @internal\n    readonly set: NodeSet,\n    readonly type = NodeType.none\n  ) {}\n\n  /// @internal\n  toString() {\n    let result: string[] = []\n    for (let index = 0; index < this.buffer.length;) {\n      result.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result.join(\",\")\n  }\n\n  /// @internal\n  childString(index: number): string {\n    let id = this.buffer[index], endIndex = this.buffer[index + 3]\n    let type = this.set.types[id], result = type.name\n    if (/\\W/.test(result) && !type.isError) result = JSON.stringify(result)\n    index += 4\n    if (endIndex == index) return result\n    let children: string[] = []\n    while (index < endIndex) {\n      children.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result + \"(\" + children.join(\",\") + \")\"\n  }\n\n  /// @internal\n  findChild(startIndex: number, endIndex: number, dir: 1 | -1, after: number) {\n    let {buffer} = this, pick = -1\n    for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n      if (after != After.None) {\n        let start = buffer[i + 1], end = buffer[i + 2]\n        if (dir > 0) {\n          if (end > after) pick = i\n          if (end > after) break\n        } else {\n          if (start < after) pick = i\n          if (end >= after) break\n        }\n      } else {\n        pick = i\n        if (dir > 0) break\n      }\n    }\n    return pick\n  }\n}\n\nconst enum After { None = -1e8 }\n\n/// A syntax node provides an immutable pointer at a give node in a\n/// tree. When iterating over large amounts of nodes, you may want to\n/// use a mutable [cursor](#tree.TreeCursor) instead, which is more\n/// efficient.\nexport interface SyntaxNode {\n  /// The type of the node.\n  type: NodeType\n  /// The name of the node (`.type.name`).\n  name: string\n  /// The start position of the node.\n  from: number\n  /// The end position of the node.\n  to: number\n\n  /// The node's parent node, if any.\n  parent: SyntaxNode | null\n  /// The first child, if the node has children.\n  firstChild: SyntaxNode | null\n  /// The node's last child, if available.\n  lastChild: SyntaxNode | null\n  /// The first child that starts at or after `pos`.\n  childAfter(pos: number): SyntaxNode | null\n  /// The last child that ends at or before `pos`.\n  childBefore(pos: number): SyntaxNode | null\n  /// This node's next sibling, if any.\n  nextSibling: SyntaxNode | null\n  /// This node's previous sibling.\n  prevSibling: SyntaxNode | null\n  /// A [tree cursor](#tree.TreeCursor) starting at this node.\n  cursor: TreeCursor\n  /// Find the node around, before (if `side` is -1), or after (`side`\n  /// is 1) the given position. Will look in parent nodes if the\n  /// position is outside this node.\n  resolve(pos: number, side?: -1 | 0 | 1): SyntaxNode\n\n  /// Get the first child of the given type (which may be a [node\n  /// name](#tree.NodeProp.name) or a [group\n  /// name](#tree.NodeProp^group)). If `before` is non-null, only\n  /// return children that occur somewhere after a node with that name\n  /// or group. If `after` is non-null, only return children that\n  /// occur somewhere before a node with that name or group.\n  getChild(type: string | number, before?: string | number | null, after?: string | number | null): SyntaxNode | null\n\n  /// Like [`getChild`](#tree.SyntaxNode.getChild), but return all\n  /// matching children, not just the first.\n  getChildren(type: string | number, before?: string | number | null, after?: string | number | null): SyntaxNode[]\n}\n\nclass TreeNode implements SyntaxNode {\n  constructor(readonly node: Tree,\n              readonly from: number,\n              readonly index: number,\n              readonly _parent: TreeNode | null) {}\n\n  get type() { return this.node.type }\n\n  get name() { return this.node.type.name }\n\n  get to() { return this.from + this.node.length }\n\n  nextChild(i: number, dir: 1 | -1, after: number, full = false): TreeNode | BufferNode | null {\n    for (let parent: TreeNode = this;;) {\n      for (let {children, positions} = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n        let next = children[i], start = positions[i] + parent.from\n        if (after != After.None && (dir < 0 ? start >= after : start + next.length <= after))\n          continue\n        if (next instanceof TreeBuffer) {\n          let index = next.findChild(0, next.buffer.length, dir, after == After.None ? After.None : after - start)\n          if (index > -1) return new BufferNode(new BufferContext(parent, next, i, start), null, index)\n        } else if (full || (!next.type.isAnonymous || hasChild(next))) {\n          let inner = new TreeNode(next, start, i, parent)\n          return full || !inner.type.isAnonymous ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after)\n        }\n      }\n      if (full || !parent.type.isAnonymous) return null\n      i = parent.index + dir\n      parent = parent._parent!\n      if (!parent) return null\n    }\n  }\n\n  get firstChild() { return this.nextChild(0, 1, After.None) }\n  get lastChild() { return this.nextChild(this.node.children.length - 1, -1, After.None) }\n\n  childAfter(pos: number) { return this.nextChild(0, 1, pos) }\n  childBefore(pos: number) { return this.nextChild(this.node.children.length - 1, -1, pos) }\n\n  nextSignificantParent() {\n    let val: TreeNode = this\n    while (val.type.isAnonymous && val._parent) val = val._parent\n    return val\n  }\n\n  get parent() {\n    return this._parent ? this._parent.nextSignificantParent() : null\n  }\n\n  get nextSibling() {\n    return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null\n  }\n  get prevSibling() {\n    return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  getChild(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    return getChildren(this, type, before, after)\n  }\n\n  /// @internal\n  toString() { return this.node.toString() }\n}\n\nfunction getChildren(node: SyntaxNode, type: string | number, before: string | number | null, after: string | number | null): SyntaxNode[] {\n  let cur = node.cursor, result: SyntaxNode[] = []\n  if (!cur.firstChild()) return result\n  if (before != null) while (!cur.type.is(before)) if (!cur.nextSibling()) return result\n  for (;;) {\n    if (after != null && cur.type.is(after)) return result\n    if (cur.type.is(type)) result.push(cur.node)\n    if (!cur.nextSibling()) return after == null ? result : []\n  }\n}\n\nclass BufferContext {\n  constructor(readonly parent: TreeNode,\n              readonly buffer: TreeBuffer,\n              readonly index: number,\n              readonly start: number) {}\n}\n\nclass BufferNode implements SyntaxNode {\n  type: NodeType\n\n  get name() { return this.type.name }\n\n  get from() { return this.context.start + this.context.buffer.buffer[this.index + 1] }\n\n  get to() { return this.context.start + this.context.buffer.buffer[this.index + 2] }\n\n  constructor(readonly context: BufferContext,\n              readonly _parent: BufferNode | null,\n              readonly index: number) {\n    this.type = context.buffer.set.types[context.buffer.buffer[index]]\n  }\n\n  child(dir: 1 | -1, after: number): BufferNode | null {\n    let {buffer} = this.context\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.context.start)\n    return index < 0 ? null : new BufferNode(this.context, this, index)\n  }\n\n  get firstChild() { return this.child(1, After.None) }\n  get lastChild() { return this.child(-1, After.None) }\n\n  childAfter(pos: number) { return this.child(1, pos) }\n  childBefore(pos: number) { return this.child(-1, pos) }\n\n  get parent() {\n    return this._parent || this.context.parent.nextSignificantParent()\n  }\n\n  externalSibling(dir: 1 | -1) {\n    return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1)\n  }\n\n  get nextSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let after = buffer.buffer[this.index + 3]\n    if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n      return new BufferNode(this.context, this._parent, after)\n    return this.externalSibling(1)\n  }\n\n  get prevSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let parentStart = this._parent ? this._parent.index + 4 : 0\n    if (this.index == parentStart) return this.externalSibling(-1)\n    return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, After.None))\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  /// @internal\n  toString() { return this.context.buffer.childString(this.index) }\n\n  getChild(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    return getChildren(this, type, before, after)\n  }\n}\n\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nexport class TreeCursor {\n  /// The node's type.\n  type!: NodeType\n\n  /// Shorthand for `.type.name`.\n  get name() { return this.type.name }\n\n  /// The start source offset of this node.\n  from!: number\n\n  /// The end source offset.\n  to!: number\n\n  /// @internal\n  _tree!: TreeNode\n  private buffer: BufferContext | null = null\n  private stack: number[] = []\n  private index: number = 0\n  private bufferNode: BufferNode | null = null\n\n  /// @internal\n  constructor(node: TreeNode | BufferNode, readonly full = false) {\n    if (node instanceof TreeNode) {\n      this.yieldNode(node)\n    } else {\n      this._tree = node.context.parent\n      this.buffer = node.context\n      for (let n: BufferNode | null = node._parent; n; n = n._parent) this.stack.unshift(n.index)\n      this.bufferNode = node\n      this.yieldBuf(node.index)\n    }\n  }\n\n  private yieldNode(node: TreeNode | null) {\n    if (!node) return false\n    this._tree = node\n    this.type = node.type\n    this.from = node.from\n    this.to = node.to\n    return true\n  }\n\n  private yieldBuf(index: number, type?: NodeType) {\n    this.index = index\n    let {start, buffer} = this.buffer!\n    this.type = type || buffer.set.types[buffer.buffer[index]]\n    this.from = start + buffer.buffer[index + 1]\n    this.to = start + buffer.buffer[index + 2]\n    return true\n  }\n\n  private yield(node: TreeNode | BufferNode | null) {\n    if (!node) return false\n    if (node instanceof TreeNode) {\n      this.buffer = null\n      return this.yieldNode(node)\n    }\n    this.buffer = node.context\n    return this.yieldBuf(node.index, node.type)\n  }\n\n  /// @internal\n  toString() {\n    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString()\n  }\n\n  /// @internal\n  enter(dir: 1 | -1, after: number) {\n    if (!this.buffer)\n      return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, after, this.full))\n\n    let {buffer} = this.buffer\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.buffer.start)\n    if (index < 0) return false\n    this.stack.push(this.index)\n    return this.yieldBuf(index)\n  }\n\n  /// Move the cursor to this node's first child. When this returns\n  /// false, the node has no child, and the cursor has not been moved.\n  firstChild() { return this.enter(1, After.None) }\n\n  /// Move the cursor to this node's last child.\n  lastChild() { return this.enter(-1, After.None) }\n\n  /// Move the cursor to the first child that starts at or after `pos`.\n  childAfter(pos: number) { return this.enter(1, pos) }\n\n  /// Move to the last child that ends at or before `pos`.\n  childBefore(pos: number) { return this.enter(-1, pos) }\n\n  /// Move the node's parent node, if this isn't the top node.\n  parent() {\n    if (!this.buffer) return this.yieldNode(this.full ? this._tree._parent : this._tree.parent)\n    if (this.stack.length) return this.yieldBuf(this.stack.pop()!)\n    let parent = this.full ? this.buffer.parent : this.buffer.parent.nextSignificantParent()\n    this.buffer = null\n    return this.yieldNode(parent)\n  }\n\n  /// @internal\n  sibling(dir: 1 | -1) {\n    if (!this.buffer)\n      return !this._tree._parent ? false\n        : this.yield(this._tree._parent.nextChild(this._tree.index + dir, dir, After.None, this.full))\n\n    let {buffer} = this.buffer, d = this.stack.length - 1\n    if (dir < 0) {\n      let parentStart = d < 0 ? 0 : this.stack[d] + 4\n      if (this.index != parentStart)\n        return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, After.None))\n    } else {\n      let after = buffer.buffer[this.index + 3]\n      if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n        return this.yieldBuf(after)\n    }\n    return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, After.None, this.full)) : false\n  }\n\n  /// Move to this node's next sibling, if any.\n  nextSibling() { return this.sibling(1) }\n\n  /// Move to this node's previous sibling, if any.\n  prevSibling() { return this.sibling(-1) }\n\n  private atLastNode(dir: 1 | -1) {\n    let index, parent: TreeNode | null, {buffer} = this\n    if (buffer) {\n      if (dir > 0) {\n        if (this.index < buffer.buffer.buffer.length) return false\n      } else {\n        for (let i = 0; i < this.index; i++) if (buffer.buffer.buffer[i + 3] < this.index) return false\n      }\n      ;({index, parent} = buffer)\n    } else {\n      ({index, _parent: parent} = this._tree)\n    }\n    for (; parent; {index, _parent: parent} = parent) {\n      for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n        let child = parent.node.children[i]\n        if (this.full || !child.type.isAnonymous || child instanceof TreeBuffer || hasChild(child)) return false\n      }\n    }\n    return true\n  }\n\n  private move(dir: 1 | -1) {\n    if (this.enter(dir, After.None)) return true\n    for (;;) {\n      if (this.sibling(dir)) return true\n      if (this.atLastNode(dir) || !this.parent()) return false\n    }\n  }\n\n  /// Move to the next node in a\n  /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n  /// traversal, going from a node to its first child or, if the\n  /// current node is empty, its next sibling or the next sibling of\n  /// the first parent node that has one.\n  next() { return this.move(1) }\n\n  /// Move to the next node in a last-to-first pre-order traveral. A\n  /// node is followed by ist last child or, if it has none, its\n  /// previous sibling or the previous sibling of the first parent\n  /// node that has one.\n  prev() { return this.move(-1) }\n\n  /// Move the cursor to the innermost node that covers `pos`. If\n  /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n  /// it will enter nodes that start at `pos`.\n  moveTo(pos: number, side: -1 | 0 | 1 = 0) {\n    // Move up to a node that actually holds the position, if possible\n    while (this.from == this.to ||\n           (side < 1 ? this.from >= pos : this.from > pos) ||\n           (side > -1 ? this.to <= pos : this.to < pos))\n      if (!this.parent()) break\n\n    // Then scan down into child nodes as far as possible\n    for (;;) {\n      if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos)) break\n      if (this.from == this.to ||\n          (side < 1 ? this.from >= pos : this.from > pos) ||\n          (side > -1 ? this.to <= pos : this.to < pos)) {\n        this.parent()\n        break\n      }\n    }\n    return this\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n  /// position.\n  get node(): SyntaxNode {\n    if (!this.buffer) return this._tree\n    \n    let cache = this.bufferNode, result: BufferNode | null = null, depth = 0\n    if (cache && cache.context == this.buffer) {\n      scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n        for (let c: BufferNode | null = cache; c; c = c._parent) if (c.index == index) {\n          if (index == this.index) return c\n          result = c\n          depth = d + 1\n          break scan\n        }\n        index = this.stack[--d]\n      }\n    }\n    for (let i = depth; i < this.stack.length; i++) result = new BufferNode(this.buffer, result, this.stack[i])\n    return this.bufferNode = new BufferNode(this.buffer, result, this.index)\n  }\n\n  /// Get the [tree](#tree.Tree) that represents the current node, if\n  /// any. Will return null when the node is in a [tree\n  /// buffer](#tree.TreeBuffer).\n  get tree(): Tree | null {\n    return this.buffer ? null : this._tree.node\n  }\n}\n\nfunction hasChild(tree: Tree): boolean {\n  return tree.children.some(ch => !ch.type.isAnonymous || ch instanceof TreeBuffer || hasChild(ch))\n}\n\n/// This is used by `Tree.build` as an abstraction for iterating over\n/// a tree buffer. A cursor initially points at the very last element\n/// in the buffer. Every time `next()` is called it moves on to the\n/// previous one.\nexport interface BufferCursor {\n  /// The current buffer position (four times the number of nodes\n  /// remaining).\n  pos: number\n  /// The node ID of the next node in the buffer.\n  id: number\n  /// The start position of the next node in the buffer.\n  start: number\n  /// The end position of the next node.\n  end: number\n  /// The size of the next node (the number of nodes inside, counting\n  /// the node itself, times 4).\n  size: number\n  /// Moves `this.pos` down by 4.\n  next(): void\n  /// Create a copy of this cursor.\n  fork(): BufferCursor\n}\n\nclass FlatBufferCursor implements BufferCursor {\n  constructor(readonly buffer: readonly number[], public index: number) {}\n\n  get id() { return this.buffer[this.index - 4] }\n  get start() { return this.buffer[this.index - 3] }\n  get end() { return this.buffer[this.index - 2] }\n  get size() { return this.buffer[this.index - 1] }\n\n  get pos() { return this.index }\n\n  next() { this.index -= 4 }\n\n  fork() { return new FlatBufferCursor(this.buffer, this.index) }\n}\n\nconst BalanceBranchFactor = 8\n\nfunction buildTree(data: BuildData) {\n  let {buffer, nodeSet, topID = 0,\n       maxBufferLength = DefaultBufferLength,\n       reused = [],\n       minRepeatType = nodeSet.types.length} = data as BuildData\n  let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer as BufferCursor\n  let types = nodeSet.types\n  function takeNode(parentStart: number, minPos: number,\n                    children: (Tree | TreeBuffer)[], positions: number[],\n                    inRepeat: number) {\n    let {id, start, end, size} = cursor\n    while (id == inRepeat) { cursor.next(); ({id, start, end, size} = cursor) }\n\n    let startPos = start - parentStart\n    if (size < 0) { // Reused node\n      children.push(reused[id])\n      positions.push(startPos)\n      cursor.next()\n      return\n    }\n\n    let type = types[id], node, buffer: {size: number, start: number, skip: number} | undefined\n    if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n      // Small enough for a buffer, and no reused nodes inside\n      let data = new Uint16Array(buffer.size - buffer.skip)\n      let endPos = cursor.pos - buffer.size, index = data.length\n      while (cursor.pos > endPos)\n        index = copyToBuffer(buffer.start, data, index, inRepeat)\n      node = new TreeBuffer(data, end - buffer.start, nodeSet, inRepeat < 0 ? NodeType.none : types[inRepeat])\n      startPos = buffer.start - parentStart\n    } else { // Make it a node\n      let endPos = cursor.pos - size\n      cursor.next()\n      let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n      let localInRepeat = id >= minRepeatType ? id : -1\n      while (cursor.pos > endPos)\n        takeNode(start, endPos, localChildren, localPositions, localInRepeat)\n      localChildren.reverse(); localPositions.reverse()\n\n      if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n        node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start)\n      else\n        node = new Tree(type, localChildren, localPositions, end - start)\n    }\n\n    children.push(node)\n    positions.push(startPos)\n  }\n\n  function findBufferSize(maxSize: number, inRepeat: number) {\n    // Scan through the buffer to find previous siblings that fit\n    // together in a TreeBuffer, and don't contain any reused nodes\n    // (which can't be stored in a buffer).\n    // If `inRepeat` is > -1, ignore node boundaries of that type for\n    // nesting, but make sure the end falls either at the start\n    // (`maxSize`) or before such a node.\n    let fork = cursor.fork()\n    let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength\n    let result = {size: 0, start: 0, skip: 0}\n    scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n      // Pretend nested repeat nodes of the same type don't exist\n      if (fork.id == inRepeat) {\n        // Except that we store the current state as a valid return\n        // value.\n        result.size = size; result.start = start; result.skip = skip\n        skip += 4; size += 4\n        fork.next()\n        continue\n      }\n      let nodeSize = fork.size, startPos = fork.pos - nodeSize\n      if (nodeSize < 0 || startPos < minPos || fork.start < minStart) break\n      let localSkipped = fork.id >= minRepeatType ? 4 : 0\n      let nodeStart = fork.start\n      fork.next()\n      while (fork.pos > startPos) {\n        if (fork.size < 0) break scan\n        if (fork.id >= minRepeatType) localSkipped += 4\n        fork.next()\n      }\n      start = nodeStart\n      size += nodeSize\n      skip += localSkipped\n    }\n    if (inRepeat < 0 || size == maxSize) {\n      result.size = size; result.start = start; result.skip = skip\n    }\n    return result.size > 4 ? result : undefined\n  }\n\n  function copyToBuffer(bufferStart: number, buffer: Uint16Array, index: number, inRepeat: number): number {\n    let {id, start, end, size} = cursor\n    cursor.next()\n    if (id == inRepeat) return index\n    let startIndex = index\n    if (size > 4) {\n      let endPos = cursor.pos - (size - 4)\n      while (cursor.pos > endPos)\n        index = copyToBuffer(bufferStart, buffer, index, inRepeat)\n    }\n    if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n      buffer[--index] = startIndex\n      buffer[--index] = end - bufferStart\n      buffer[--index] = start - bufferStart\n      buffer[--index] = id\n    }\n    return index\n  }\n\n  let children: (Tree | TreeBuffer)[] = [], positions: number[] = []\n  while (cursor.pos > 0) takeNode(data.start || 0, 0, children, positions, -1)\n  let length = data.length ?? (children.length ? positions[0] + children[0].length : 0)\n  return new Tree(types[topID], children.reverse(), positions.reverse(), length)\n}\n\nfunction balanceRange(outerType: NodeType, innerType: NodeType,\n                      children: readonly (Tree | TreeBuffer)[], positions: readonly number[],\n                      from: number, to: number,\n                      start: number, maxBufferLength: number, length: number): Tree {\n  let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n  if (length <= maxBufferLength) {\n    for (let i = from; i < to; i++) {\n      localChildren.push(children[i])\n      localPositions.push(positions[i] - start)\n    }\n  } else {\n    let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor))\n    for (let i = from; i < to;) {\n      let groupFrom = i, groupStart = positions[i]\n      i++\n      for (; i < to; i++) {\n        let nextEnd = positions[i] + children[i].length\n        if (nextEnd - groupStart > maxChild) break\n      }\n      if (i == groupFrom + 1) {\n        let only = children[groupFrom]\n        if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n          for (let j = 0; j < only.children.length; j++) {\n            localChildren.push(only.children[j])\n            localPositions.push(only.positions[j] + groupStart - start)\n          }\n          continue\n        }\n        localChildren.push(only)\n      } else if (i == groupFrom + 1) {\n        localChildren.push(children[groupFrom])\n      } else {\n        let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart,\n                                 maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart)\n        if (innerType != NodeType.none && !containsType(inner.children, innerType))\n          inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length)\n        localChildren.push(inner)\n      }\n      localPositions.push(groupStart - start)\n    }\n  }\n  return new Tree(outerType, localChildren, localPositions, length)\n}\n\nfunction containsType(nodes: readonly (Tree | TreeBuffer)[], type: NodeType) {\n  for (let elt of nodes) if (elt.type == type) return true\n  return false\n}\n\n/// The [`TreeFragment.applyChanges`](#tree.TreeFragment^applyChanges)\n/// method expects changed ranges in this format.\nexport interface ChangedRange {\n  /// The start of the change in the start document\n  fromA: number\n  /// The end of the change in the start document\n  toA: number\n  /// The start of the replacement in the new document\n  fromB: number\n  /// The end of the replacement in the new document\n  toB: number\n}\n\nconst enum Open { Start = 1, End = 2 }\n\n/// Tree fragments are used during [incremental\n/// parsing](#lezer.ParseOptions.fragments) to track parts of old\n/// trees that can be reused in a new parse. An array of fragments is\n/// used to track regions of an old tree whose nodes might be reused\n/// in new parses. Use the static\n/// [`applyChanges`](#tree.TreeFragment^applyChanges) method to update\n/// fragments for document changes.\nexport class TreeFragment {\n  constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    readonly from: number,\n    /// The end of the unchanged range.\n    readonly to: number,\n    /// The tree that this fragment is based on.\n    readonly tree: Tree,\n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    readonly offset: number,\n    private open: number\n  ) {}\n\n  get openStart() { return (this.open & Open.Start) > 0 }\n\n  get openEnd() { return (this.open & Open.End) > 0 }\n\n  /// Apply a set of edits to an array of fragments, removing or\n  /// splitting fragments as necessary to remove edited ranges, and\n  /// adjusting offsets for fragments that moved.\n  static applyChanges(fragments: readonly TreeFragment[], changes: readonly ChangedRange[], minGap = 128) {\n    if (!changes.length) return fragments\n    let result: TreeFragment[] = []\n    let fI = 1, nextF = fragments.length ? fragments[0] : null\n    let cI = 0, pos = 0, off = 0\n    for (;;) {\n      let nextC = cI < changes.length ? changes[cI++] : null\n      let nextPos = nextC ? nextC.fromA : 1e9\n      if (nextPos - pos >= minGap) while (nextF && nextF.from < nextPos) {\n        let cut: TreeFragment | null = nextF\n        if (pos >= cut.from || nextPos <= cut.to || off) {\n          let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off\n          cut = fFrom >= fTo ? null :\n            new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off,\n                             (cI > 0 ? Open.Start : 0) | (nextC ? Open.End : 0))\n        }\n        if (cut) result.push(cut)\n        if (nextF.to > nextPos) break\n        nextF = fI < fragments.length ? fragments[fI++] : null\n      }\n      if (!nextC) break\n      pos = nextC.toA\n      off = nextC.toA - nextC.toB\n    }\n    return result\n  }\n\n  /// Create a set of fragments from a freshly parsed tree, or update\n  /// an existing set of fragments by replacing the ones that overlap\n  /// with a tree with content from the new tree. When `partial` is\n  /// true, the parse is treated as incomplete, and the token at its\n  /// end is not included in [`safeTo`](#tree.TreeFragment.safeTo).\n  static addTree(tree: Tree, fragments: readonly TreeFragment[] = [], partial = false) {\n    let result = [new TreeFragment(0, tree.length, tree, 0, partial ? Open.End : 0)]\n    for (let f of fragments) if (f.to > tree.length) result.push(f)\n    return result\n  }\n}\n\n/// Interface used to represent an in-progress parse, which can be\n/// moved forward piece-by-piece.\nexport interface PartialParse {\n  /// Advance the parse state by some amount.\n  advance(): Tree | null\n  /// The current parse position.\n  pos: number\n  /// Get the currently parsed content as a tree, even though the\n  /// parse hasn't finished yet.\n  forceFinish(): Tree\n}\n\n/// A parse context is an object providing additional information to the\n/// parser. It is passed through to nested parsers.\nexport interface ParseContext {\n  /// A set of fragments from a previous parse to be used for incremental\n  /// parsing. These should be aligned with the current document\n  /// (through a call to\n  /// [`TreeFragment.applyChanges`](#tree.TreeFragment^applyChanges))\n  /// if any changes were made since they were produced. The parser\n  /// will try to reuse nodes from the fragments in the new parse,\n  /// greatly speeding up the parse when it can do so for most of the\n  /// document.\n  fragments?: readonly TreeFragment[]\n}\n\n/// This is the interface the parser uses to access the document. It\n/// exposes a sequence of UTF16 code units. Most (but not _all_)\n/// access, especially through `get`, will be sequential, so\n/// implementations can optimize for that.\nexport interface Input {\n  /// The end of the stream.\n  length: number\n  /// Get the code unit at the given position. Will return -1 when\n  /// asked for a point below 0 or beyond the end of the stream.\n  get(pos: number): number\n  /// Returns the string between `pos` and the next newline character\n  /// or the end of the document. Not used by the built-in tokenizers,\n  /// but can be useful in custom tokenizers or completely custom\n  /// parsers.\n  lineAfter(pos: number): string\n  /// Read part of the stream as a string\n  read(from: number, to: number): string\n  /// Return a new `Input` over the same data, but with a lower\n  /// `length`. Used, for example, when nesting grammars to give the\n  /// inner grammar a narrower view of the input.\n  clip(at: number): Input\n}\n\n// Creates an `Input` that is backed by a single, flat string.\nexport function stringInput(input: string): Input { return new StringInput(input) }\n\nclass StringInput implements Input {\n  constructor(readonly string: string, readonly length = string.length) {}\n\n  get(pos: number) {\n    return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos)\n  }\n\n  lineAfter(pos: number) {\n    if (pos < 0) return \"\"\n    let end = this.string.indexOf(\"\\n\", pos)\n    return this.string.slice(pos, end < 0 ? this.length : Math.min(end, this.length))\n  }\n  \n  read(from: number, to: number): string { return this.string.slice(from, Math.min(this.length, to)) }\n\n  clip(at: number) { return new StringInput(this.string, at) }\n}\n","const xsdString = \"http://www.w3.org/2001/XMLSchema#string\";\nconst xsdBoolean = \"http://www.w3.org/2001/XMLSchema#boolean\";\nconst xsdDecimal = \"http://www.w3.org/2001/XMLSchema#decimal\";\nconst xsdInteger = \"http://www.w3.org/2001/XMLSchema#integer\";\nconst xsdDouble = \"http://www.w3.org/2001/XMLSchema#double\";\nconst xsdFloat = \"http://www.w3.org/2001/XMLSchema#float\";\nconst xsdDate = \"http://www.w3.org/2001/XMLSchema#date\";\nconst xsdTime = \"http://www.w3.org/2001/XMLSchema#time\";\nconst xsdDateTime = \"http://www.w3.org/2001/XMLSchema#dateTime\";\nconst xsdDateTimeStamp = \"http://www.w3.org/2001/XMLSchema#dateTimeStamp\";\nconst xsdGYear = \"http://www.w3.org/2001/XMLSchema#gYear\";\nconst xsdGMonth = \"http://www.w3.org/2001/XMLSchema#gMonth\";\nconst xsdGDay = \"http://www.w3.org/2001/XMLSchema#gDay\";\nconst xsdGYearMonth = \"http://www.w3.org/2001/XMLSchema#gYearMonth\";\nconst xsdGMonthDay = \"http://www.w3.org/2001/XMLSchema#gMonthDay\";\nconst xsdDuration = \"http://www.w3.org/2001/XMLSchema#duration\";\nconst xsdYearMonthDuration = \"http://www.w3.org/2001/XMLSchema#yearMonthDuration\";\nconst xsdDayTimeDuration = \"http://www.w3.org/2001/XMLSchema#dayTimeDuration\";\nconst xsdByte = \"http://www.w3.org/2001/XMLSchema#byte\";\nconst xsdShort = \"http://www.w3.org/2001/XMLSchema#short\";\nconst xsdInt = \"http://www.w3.org/2001/XMLSchema#int\";\nconst xsdLong = \"http://www.w3.org/2001/XMLSchema#long\";\nconst xsdUnsignedByte = \"http://www.w3.org/2001/XMLSchema#unsignedByte\";\nconst xsdUnsignedSHort = \"http://www.w3.org/2001/XMLSchema#unsignedShort\";\nconst xsdUnsignedInt = \"http://www.w3.org/2001/XMLSchema#unsignedInt\";\nconst xsdUnsignedLong = \"http://www.w3.org/2001/XMLSchema#unsignedLong\";\nconst xsdPositiveInteger = \"http://www.w3.org/2001/XMLSchema#positiveInteger\";\nconst xsdNonNegativeInteger = \"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\";\nconst xsdNonPositiveInteger = \"http://www.w3.org/2001/XMLSchema#nonPositiveInteger\";\nconst xsdHexBinary = \"http://www.w3.org/2001/XMLSchema#hexBinary\";\nconst xsdBase64Binary = \"http://www.w3.org/2001/XMLSchema#base64Binary\";\nconst xsdAnyURI = \"http://www.w3.org/2001/XMLSchema#anyURI\";\nconst xsdLanguage = \"http://www.w3.org/2001/XMLSchema#language\";\nconst xsdNormalizedString = \"http://www.w3.org/2001/XMLSchema#normalizedString\";\nconst xsdToken = \"http://www.w3.org/2001/XMLSchema#token\";\nconst xsdNMTOKEN = \"http://www.w3.org/2001/XMLSchema#NMTOKEN\";\nconst xsdName = \"http://www.w3.org/2001/XMLSchema#Name\";\nconst xsdNCNames = \"http://www.w3.org/2001/XMLSchema#NCNames\";\nconst rdfType = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nconst rdfNil = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\";\nconst rdfFirst = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\";\nconst rdfRest = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\";\nconst rdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\nconst rdfJSON = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON\";\nexport const xsd = {\n    string: xsdString,\n    boolean: xsdBoolean,\n    decimal: xsdDecimal,\n    integer: xsdInteger,\n    double: xsdDouble,\n    float: xsdFloat,\n    date: xsdDate,\n    time: xsdTime,\n    dateTime: xsdDateTime,\n    dateTimeStamp: xsdDateTimeStamp,\n    hexBinary: xsdHexBinary,\n    base64Binary: xsdBase64Binary,\n};\nexport const rdf = {\n    type: rdfType,\n    nil: rdfNil,\n    first: rdfFirst,\n    rest: rdfRest,\n    langString: rdfLangString,\n    JSON: rdfJSON,\n};\n","import { rdf, xsd } from \"./IRIs.js\";\nlet _blankNodeCounter = 0;\nexport class NamedNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get termType() {\n        return \"NamedNode\";\n    }\n    get id() {\n        return `<${this.value}>`;\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return other.termType === \"NamedNode\" && other.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nconst xsdString = new NamedNode(xsd.string);\nconst rdfLangString = new NamedNode(rdf.langString);\nexport class Literal {\n    constructor(value, language, datatype) {\n        this.value = value;\n        this.language = language;\n        this.datatype = datatype;\n        if (datatype.value === xsd.string) {\n            this.id = JSON.stringify(value);\n        }\n        else if (datatype.value === rdf.langString && language !== \"\") {\n            this.id = `${JSON.stringify(value)}@${this.language}`;\n        }\n        else {\n            this.id = `${JSON.stringify(value)}^^<${datatype.value}>`;\n        }\n    }\n    get termType() {\n        return \"Literal\";\n    }\n    get datatypeString() {\n        return this.datatype.value;\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return (this.termType === term.termType &&\n                this.value === term.value &&\n                this.language === term.language &&\n                this.datatype.equals(term.datatype));\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n            language: this.language,\n            datatype: { termType: \"NamedNode\", value: this.datatype.value },\n        };\n    }\n}\nexport class BlankNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `_:${this.value}`;\n    }\n    get termType() {\n        return \"BlankNode\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class Variable {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `?${this.value}`;\n    }\n    get termType() {\n        return \"Variable\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class DefaultGraph {\n    get termType() {\n        return \"DefaultGraph\";\n    }\n    get id() {\n        return \"\";\n    }\n    get value() {\n        return \"\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: \"\",\n        };\n    }\n}\nexport const Default = new DefaultGraph();\nexport function fromId(id) {\n    if (id === \"\") {\n        return Default;\n    }\n    switch (id[0]) {\n        case \"_\":\n            return new BlankNode(id.slice(2));\n        case \"?\":\n            return new Variable(id.slice(1));\n        case '\"':\n            const i = id.lastIndexOf('\"');\n            if (i === -1) {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n            const value = id.slice(1, i);\n            if (id.length === i + 1) {\n                return new Literal(value, \"\", xsdString);\n            }\n            else if (id[i + 1] === \"@\") {\n                return new Literal(value, id.slice(i + 2), rdfLangString);\n            }\n            else if (id.slice(i, i + 4) === '\"^^<' && id[id.length - 1] === \">\") {\n                const datatype = new NamedNode(id.slice(i + 4, -1));\n                return new Literal(value, \"\", datatype);\n            }\n            else {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n        case \"<\":\n            return new NamedNode(id.slice(1, -1));\n        default:\n            throw new Error(`Invalid term id ${id}`);\n    }\n}\nexport function toId(term) {\n    if (typeof term === \"string\") {\n        return term;\n    }\n    switch (term.termType) {\n        case \"NamedNode\":\n            return `<${term.value}>`;\n        case \"BlankNode\":\n            return \"_:\" + term.value;\n        case \"Variable\":\n            return \"?\" + term.value;\n        case \"DefaultGraph\":\n            return \"\";\n        case \"Literal\":\n            return ('\"' +\n                term.value +\n                '\"' +\n                (term.language\n                    ? \"@\" + term.language\n                    : term.datatype && term.datatype.value !== xsd.string\n                        ? \"^^<\" + term.datatype.value + \">\"\n                        : \"\"));\n        default:\n            throw new Error(\"Invalid term: \" + term);\n    }\n}\n// TODO: think about it\nexport class Quad extends Array {\n    constructor(subject, predicate, object, graph) {\n        super(subject, predicate, object, graph || Default);\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph || Default;\n    }\n    get termType() {\n        return \"Quad\";\n    }\n    get value() {\n        return \"\";\n    }\n    get id() {\n        if (this.graph.equals(Default)) {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} .`;\n        }\n        else {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} ${this.graph.id} .`;\n        }\n    }\n    toJSON() {\n        return {\n            termType: \"Quad\",\n            value: \"\",\n            subject: this.subject.toJSON(),\n            predicate: this.predicate.toJSON(),\n            object: this.object.toJSON(),\n            graph: this.graph.toJSON(),\n        };\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return (other.termType === \"Quad\" &&\n                this.subject.equals(other.subject) &&\n                this.predicate.equals(other.predicate) &&\n                this.object.equals(other.object) &&\n                this.graph.equals(other.graph));\n        }\n    }\n}\nfunction namedNode(iri) {\n    return new NamedNode(iri);\n}\nfunction blankNode(name) {\n    return new BlankNode(name || `b${_blankNodeCounter++}`);\n}\nfunction literal(value, languageOrDataType) {\n    if (languageOrDataType === undefined) {\n        return new Literal(value, \"\", xsdString);\n    }\n    else if (typeof languageOrDataType === \"string\") {\n        return new Literal(value, languageOrDataType, rdfLangString);\n    }\n    else {\n        const datatype = new NamedNode(languageOrDataType.value);\n        return new Literal(value, \"\", datatype);\n    }\n}\nfunction variable(name) {\n    return new Variable(name);\n}\nfunction defaultGraph() {\n    return Default;\n}\nfunction quad(subject, predicate, object, graph) {\n    return new Quad(subject, predicate, object, graph);\n}\n// export function getTerm(\n// \tterm: null | string | Term\n// ): null | NamedNode | BlankNode | Literal | Variable | DefaultGraph {\n// \tif (term === null) {\n// \t\treturn null\n// \t} else if (typeof term === \"string\") {\n// \t\treturn fromId(term)\n// \t} else if (term instanceof BaseTerm) {\n// \t\treturn term\n// \t} else {\n// \t\tswitch (term.termType) {\n// \t\t\tcase \"NamedNode\":\n// \t\t\t\treturn new NamedNode(term.value)\n// \t\t\tcase \"BlankNode\":\n// \t\t\t\treturn new BlankNode(term.value)\n// \t\t\tcase \"Literal\":\n// \t\t\t\treturn new Literal(\n// \t\t\t\t\tterm.value,\n// \t\t\t\t\tterm.language || new NamedNode(term.datatype.value)\n// \t\t\t\t)\n// \t\t\tcase \"DefaultGraph\":\n// \t\t\t\treturn Default\n// \t\t\tcase \"Variable\":\n// \t\t\t\treturn new Variable(term.value)\n// \t\t}\n// \t}\n// }\nconst DataFactory = {\n    namedNode,\n    blankNode,\n    variable,\n    literal,\n    defaultGraph,\n    quad,\n};\nexport default DataFactory;\n","import DataFactory, { toId, fromId, Quad } from \"./DataFactory.js\";\nconst SPO = [\"subject\", \"predicate\", \"object\"];\nconst POS = [\"predicate\", \"object\", \"subject\"];\nconst OSP = [\"object\", \"subject\", \"predicate\"];\nexport default class Store {\n    constructor(quads) {\n        this.sizeCache = 0;\n        this.graphMap = new Map();\n        this.id = 0;\n        this.ids = new Map([[\"><\", 0]]);\n        this.entities = new Map();\n        this.blankNodeIndex = 0;\n        // Add quads if passed\n        if (quads !== undefined) {\n            this.addQuads(quads);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.quads(null, null, null, null);\n    }\n    get size() {\n        if (this.sizeCache !== null) {\n            return this.sizeCache;\n        }\n        // Calculate the number of quads by counting to the deepest level\n        let size = 0;\n        for (const { subjects } of this.graphMap.values()) {\n            for (const predicates of subjects.values()) {\n                for (const objects of predicates.values()) {\n                    size += objects.size;\n                }\n            }\n        }\n        this.sizeCache = size;\n        return size;\n    }\n    // ## Private methods\n    // Returns if the index has changed, if the entry did not already exist.\n    addToIndex(index0, key0, key1, key2) {\n        // Create layers as necessary\n        let existed = false;\n        const index1 = index0.get(key0);\n        if (index1 === undefined) {\n            index0.set(key0, new Map([[key1, new Set([key2])]]));\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 === undefined) {\n                index1.set(key1, new Set([key2]));\n            }\n            else {\n                existed = index2.has(key2);\n                index2.add(key2);\n            }\n        }\n        return existed;\n    }\n    // ### `_removeFromIndex` removes a quad from a three-layered index\n    removeFromIndex(index0, key0, key1, key2) {\n        // Remove the quad from the index\n        const index1 = index0.get(key0);\n        const index2 = index1.get(key1);\n        index2.delete(key2);\n        if (index2.size === 0) {\n            index1.delete(key1);\n            if (index1.size === 0) {\n                index0.delete(key0);\n            }\n        }\n    }\n    *generateIndex(index0, key0, key1, key2, rotation, graph) {\n        const entities = [\"\", \"\", \"\"];\n        if (key0) {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                entities[0] = this.entities.get(key0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n        else {\n            for (const [value0, index1] of index0) {\n                entities[0] = this.entities.get(value0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n    }\n    *generateIndex1(e, index1, key1, key2, r, graph) {\n        if (key1) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                e[1] = this.entities.get(key1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n        else {\n            for (const [value1, index2] of index1) {\n                e[1] = this.entities.get(value1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n    }\n    *generateIndex2(e, key2, index2, r, graph) {\n        if (key2) {\n            if (index2.has(key2)) {\n                e[2] = this.entities.get(key2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n        else {\n            for (const value2 of index2) {\n                e[2] = this.entities.get(value2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n    }\n    makeQuad([entity0, entity1, entity2], [name0, name1, name2], graph) {\n        const parts = { subject: null, predicate: null, object: null };\n        parts[name0] = fromId(entity0);\n        parts[name1] = fromId(entity1);\n        parts[name2] = fromId(entity2);\n        return new Quad(parts.subject, parts.predicate, parts.object, fromId(graph));\n    }\n    *loopByKey0(index0, key0) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            yield* index1.keys();\n        }\n    }\n    *loopByKey1(index0, key1) {\n        for (const [key0, index1] of index0) {\n            if (index1.has(key1)) {\n                yield key0;\n            }\n        }\n    }\n    *loopBy2Keys(index0, key0, key1) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                yield* index2.keys();\n            }\n        }\n    }\n    // ### `countInIndex` counts matching quads in a three-layered index.\n    // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n    // Any of these keys can be undefined, which is interpreted as a wildcard.\n    countInIndex(index0, key0, key1, key2) {\n        let count = 0;\n        if (key0 === null) {\n            for (const index1 of index0.values()) {\n                count += this.countInIndex1(index1, key1, key2);\n            }\n        }\n        else {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                count = this.countInIndex1(index1, key1, key2);\n            }\n        }\n        return count;\n    }\n    countInIndex1(index1, key1, key2) {\n        let count = 0;\n        if (key1 === null) {\n            for (const index2 of index1.values()) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        return count;\n    }\n    // ### `getGraphIndices` returns an array with the given graph,\n    // or all graphs if the argument is null or undefined.\n    getGraphIndices(graph) {\n        if (graph === undefined || graph === null) {\n            return this.graphMap;\n        }\n        else {\n            const graphIndex = this.graphMap.get(graph);\n            return new Map([[graph, graphIndex]]);\n        }\n    }\n    getGraphIndex(graph) {\n        const graphIndex = this.graphMap.get(graph);\n        if (graphIndex !== undefined) {\n            return graphIndex;\n        }\n        const newGraphIndex = Object.freeze({\n            subjects: new Map(),\n            predicates: new Map(),\n            objects: new Map(),\n        });\n        this.graphMap.set(graph, newGraphIndex);\n        return newGraphIndex;\n    }\n    addQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            if (args[3] === undefined) {\n                graph = \"\";\n            }\n            else {\n                graph = toId(args[3]);\n            }\n        }\n        const graphIndex = this.getGraphIndex(graph);\n        // Since entities can often be long IRIs, we avoid storing them in every index.\n        // Instead, we have a separate index that maps entities to numbers,\n        // which are then used as keys in the other indexes.\n        if (!this.ids.has(subject)) {\n            const id = ++this.id;\n            this.entities.set(id, subject);\n            this.ids.set(subject, id);\n        }\n        const s = this.ids.get(subject);\n        if (!this.ids.has(predicate)) {\n            const id = ++this.id;\n            this.entities.set(id, predicate);\n            this.ids.set(predicate, id);\n        }\n        const p = this.ids.get(predicate);\n        if (!this.ids.has(object)) {\n            const id = ++this.id;\n            this.entities.set(id, object);\n            this.ids.set(object, id);\n        }\n        const o = this.ids.get(object);\n        const changed = this.addToIndex(graphIndex.subjects, s, p, o);\n        this.addToIndex(graphIndex.predicates, p, o, s);\n        this.addToIndex(graphIndex.objects, o, s, p);\n        // The cached quad count is now invalid\n        this.sizeCache = null;\n        return changed;\n    }\n    // ### `addQuads` adds multiple quads to the store\n    addQuads(quads) {\n        for (const quad of quads) {\n            this.addQuad(quad);\n        }\n    }\n    removeQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else if (args.length === 3) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = \"\";\n        }\n        else if (args.length === 4) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = toId(args[3]);\n        }\n        // Find internal identifiers for all components\n        // and verify the quad exists.\n        const index = this.graphMap.get(graph);\n        if (index === undefined) {\n            return false;\n        }\n        if (!this.ids.has(subject) ||\n            !this.ids.has(predicate) ||\n            !this.ids.has(object)) {\n            return false;\n        }\n        const [s, p, o] = [\n            this.ids.get(subject),\n            this.ids.get(predicate),\n            this.ids.get(object),\n        ];\n        const subjects = index.subjects.get(s);\n        if (subjects === undefined) {\n            return false;\n        }\n        const predicates = subjects.get(p);\n        if (predicates === undefined || !predicates.has(o)) {\n            return false;\n        }\n        // Remove it from all indexes\n        this.removeFromIndex(index.subjects, s, p, o);\n        this.removeFromIndex(index.predicates, p, o, s);\n        this.removeFromIndex(index.objects, o, s, p);\n        if (this.sizeCache !== null) {\n            this.sizeCache--;\n        }\n        if (index.subjects.size === 0) {\n            this.graphMap.delete(graph);\n        }\n        return true;\n    }\n    // ### `remove` removes a stream of quads from the store\n    remove(stream) {\n        for (const quad of stream) {\n            this.removeQuad(quad);\n        }\n    }\n    // ### `removeMatches` removes all matching quads from the store\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    removeMatches(subject, predicate, object, graph) {\n        return this.remove(this.quads(subject, predicate, object, graph));\n    }\n    // ### `deleteGraph` removes all triples with the given graph from the store\n    deleteGraph(graph) {\n        return this.removeMatches(null, null, null, graph);\n    }\n    getGraphId(graph) {\n        const graphId = toId(graph);\n        if (this.graphMap.has(graphId)) {\n            return graphId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    // TODO::::::\n    getIds(s, p, o, graph) {\n        return [\n            s === null ? null : this.ids.get(toId(s)),\n            p === null ? null : this.ids.get(toId(p)),\n            o === null ? null : this.ids.get(toId(o)),\n            graph === null ? null : this.getGraphId(graph),\n        ];\n    }\n    *q(s, p, o, g) {\n        const graphs = this.getGraphIndices(g);\n        for (const [graphId, { subjects, predicates, objects }] of graphs) {\n            // Choose the optimal index, based on what fields are present\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    yield* this.generateIndex(objects, o, s, p, OSP, graphId);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    yield* this.generateIndex(subjects, s, p, null, SPO, graphId);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                yield* this.generateIndex(predicates, p, o, null, POS, graphId);\n            }\n            else if (o) {\n                // If only object is given, the object index will be the fastest\n                yield* this.generateIndex(objects, o, null, null, OSP, graphId);\n            }\n            else {\n                // If nothing is given, iterate subjects and predicates first\n                yield* this.generateIndex(subjects, null, null, null, SPO, graphId);\n            }\n        }\n    }\n    // ### `match` returns a stream of quads matching a pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    *quads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return;\n        }\n        yield* this.q(s, p, o, g);\n    }\n    getQuads(subject, predicate, object, graph) {\n        return Array.from(this.quads(subject, predicate, object, graph));\n    }\n    countQuads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return 0;\n        }\n        const graphs = this.getGraphIndices(g);\n        let count = 0;\n        for (const content of graphs.values()) {\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    count += this.countInIndex(content.objects, o, s, p);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    count += this.countInIndex(content.subjects, s, p, o);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                count += this.countInIndex(content.predicates, p, o, s);\n            }\n            else {\n                // If only object is possibly given, the object index will be the fastest\n                count += this.countInIndex(content.objects, o, s, p);\n            }\n        }\n        return count;\n    }\n    getSubjects(predicate, object, graph) {\n        return Array.from(this.subjects(predicate, object, graph));\n    }\n    *subjects(predicate, object, graph) {\n        const [_, p, o, g] = this.getIds(null, predicate, object, graph);\n        if (p === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (p) {\n                if (o) {\n                    // If predicate and object are given, the POS index is best.\n                    iterator = this.loopBy2Keys(predicates, p, o);\n                }\n                else {\n                    // If only predicate is given, the SPO index is best.\n                    iterator = this.loopByKey1(subjects, p);\n                }\n            }\n            else if (o) {\n                // If only object is given, the OSP index is best.\n                iterator = this.loopByKey0(objects, o);\n            }\n            else {\n                // If no params given, iterate all the subjects\n                iterator = subjects.keys();\n            }\n            for (const s of iterator) {\n                yield* this.unique(s, ids);\n            }\n        }\n    }\n    getPredicates(subject, object, graph) {\n        return Array.from(this.predicates(subject, object, graph));\n    }\n    *predicates(subject, object, graph) {\n        const [s, _, o, g] = this.getIds(subject, null, object, graph);\n        if (s === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the OSP index is best.\n                    iterator = this.loopBy2Keys(objects, o, s);\n                }\n                else {\n                    // If only subject is given, the SPO index is best.\n                    iterator = this.loopByKey0(subjects, s);\n                }\n            }\n            else if (o) {\n                // If only object is given, the POS index is best.\n                iterator = this.loopByKey1(predicates, o);\n            }\n            else {\n                // If no params given, iterate all the predicates.\n                iterator = predicates.keys();\n            }\n            for (const p of iterator) {\n                yield* this.unique(p, ids);\n            }\n        }\n    }\n    // ### `getObjects` returns all objects that match the pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    getObjects(subject, predicate, graph) {\n        return Array.from(this.objects(subject, predicate, graph));\n    }\n    *objects(subject, predicate, graph) {\n        const [s, p, _, g] = this.getIds(subject, predicate, null, graph);\n        if (s === undefined || p === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            if (s) {\n                if (p) {\n                    // If subject and predicate are given, the SPO index is best.\n                    for (const o of this.loopBy2Keys(subjects, s, p)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n                else {\n                    // If only subject is given, the OSP index is best.\n                    for (const o of this.loopByKey1(objects, s)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n            }\n            else if (p) {\n                // If only predicate is given, the POS index is best.\n                for (const o of this.loopByKey0(predicates, p)) {\n                    yield* this.unique(o, ids);\n                }\n            }\n            else {\n                // If no params given, iterate all the objects.\n                for (const o of objects.keys()) {\n                    yield* this.unique(o, ids);\n                }\n            }\n        }\n    }\n    getGraphs(subject, predicate, object) {\n        return Array.from(this.graphs(subject, predicate, object));\n    }\n    *graphs(subject, predicate, object) {\n        const [s, p, o, _] = this.getIds(subject, predicate, object, null);\n        if (s === undefined || p === undefined || o === undefined) {\n            return;\n        }\n        for (const g of this.graphMap.keys()) {\n            const graph = fromId(g);\n            for (const _ of this.q(s, p, o, g)) {\n                yield graph;\n                break;\n            }\n        }\n    }\n    *unique(id, ids) {\n        if (!ids.has(id)) {\n            ids.add(id);\n            yield fromId(this.entities.get(id));\n        }\n    }\n    createBlankNode(suggestedName) {\n        let name = \"\";\n        if (suggestedName) {\n            // Generate a name based on the suggested name\n            name = \"_:\" + suggestedName;\n            for (let index = 1; this.ids.has(name); index++) {\n                name = \"_:\" + suggestedName + index;\n            }\n        }\n        else {\n            // Generate a generic blank node name\n            do {\n                name = \"_:b\" + this.blankNodeIndex++;\n            } while (this.ids.has(name));\n        }\n        // Add the blank node to the entities, avoiding the generation of duplicates\n        const id = ++this.id;\n        this.ids.set(name, id);\n        this.entities.set(id, name);\n        return DataFactory.blankNode(name.substr(2));\n    }\n}\n","import { Quad, NamedNode, BlankNode, Literal, Default, } from \"./DataFactory.js\";\nconst nnClosingTagError = () => new Error(`named node without closing angle bracket`);\nconst bnOpenTagError = () => new Error(`invalid blank node label`);\nconst unexpectedCharError = (identifier) => new Error(`Unexpected character '${identifier}'`);\nconst quadClosingPeriodError = (line) => new Error(`quad without closing period ${line}`);\nconst nnOpeningToken = \"<\";\nconst nnOpeningTokenOffset = nnOpeningToken.length;\nconst nnClosingToken = \">\";\nconst nnClosingPostfix = \"> \";\nconst nnClosingPostfixOffset = nnClosingPostfix.length;\nconst bnOpeningToken = \"_\";\nconst bnOpeningPrefix = \"_:\";\nconst bnOpeningPrefixOffset = bnOpeningPrefix.length;\nconst bnClosingToken = \" \";\nconst bnClosingTokenOffset = bnClosingToken.length;\nconst ltOpeningToken = '\"';\nconst ltOpeningTokenOffset = ltOpeningToken.length;\nconst quadClosingPostfix = \".\";\nconst ltReservedReplace = /\\\\(.)/g;\nconst ltReservedReplaceFn = (match) => {\n    switch (match) {\n        case \"\\\\n\":\n            return \"\\n\";\n        case \"\\\\r\":\n            return \"\\r\";\n        case '\\\\\"':\n            return '\"';\n        case \"\\\\\\\\\":\n            return \"\\\\\";\n        default:\n            throw new Error(`Unknown token ${match}`);\n    }\n};\n// const lgOpeningToken: string = \"@\"\n// const lgOpeningTokenOffset: number = lgOpeningToken.length\nconst lgOpeningPrefix = '\"@';\nconst lgOpeningPrefixOffset = lgOpeningPrefix.length;\nconst lgClosingToken = \" \";\nconst dtSplitPrefix = '\"^^<';\nconst dtSplitPrefixOffset = dtSplitPrefix.length;\nconst xsdString = new NamedNode(\"http://www.w3.org/2001/XMLSchema#string\");\nconst rdfLangString = new NamedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\");\nexport default function* Parse(input) {\n    if (!input || input.length === 0) {\n        return;\n    }\n    let rightBoundary, leftBoundary;\n    let lang, datatype;\n    let subject, predicate, object, graph;\n    for (const line of input.split(\"\\n\")) {\n        if (line === \"\") {\n            continue;\n        }\n        rightBoundary = -1;\n        leftBoundary = -1;\n        /*\n         * Parse the subject\n         */\n        switch (line.charAt(0)) {\n            case nnOpeningToken:\n                rightBoundary = line.indexOf(nnClosingPostfix);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                const namedNodeValue = line.substring(nnOpeningTokenOffset, rightBoundary);\n                subject = new NamedNode(namedNodeValue);\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                rightBoundary = line.indexOf(bnClosingToken);\n                const blankNodeValue = line.substring(bnOpeningPrefixOffset, rightBoundary);\n                subject = new BlankNode(blankNodeValue);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(0));\n        }\n        /*\n         * Parse the predicate\n         */\n        // We currently assume blank nodes can't be predicates\n        rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n        if (rightBoundary === -1) {\n            throw nnClosingTagError();\n        }\n        leftBoundary =\n            line.indexOf(nnOpeningToken, leftBoundary) + nnOpeningTokenOffset;\n        predicate = new NamedNode(line.substring(leftBoundary, rightBoundary));\n        leftBoundary = rightBoundary + nnClosingPostfixOffset;\n        /*\n         * Parse the object\n         */\n        switch (line.charAt(leftBoundary)) {\n            case nnOpeningToken:\n                leftBoundary = leftBoundary + nnOpeningTokenOffset;\n                // When parsing ntriples, the space of the nnClosingPostfix might not exist, so it can't be used\n                rightBoundary = line.indexOf(nnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                object = new NamedNode(line.substring(leftBoundary, rightBoundary));\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                leftBoundary =\n                    line.indexOf(bnOpeningPrefix, leftBoundary) + bnOpeningPrefixOffset;\n                rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw quadClosingPeriodError(line);\n                }\n                const value = line.substring(leftBoundary, rightBoundary);\n                object = new BlankNode(value);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            case '\"':\n                leftBoundary = leftBoundary + ltOpeningTokenOffset;\n                const objEndIndex = line.lastIndexOf(ltOpeningToken);\n                const literalValue = line\n                    .substring(leftBoundary, objEndIndex)\n                    .replace(ltReservedReplace, ltReservedReplaceFn);\n                leftBoundary = objEndIndex;\n                // dtOrLgBoundary = line.indexOf(dtSplitPrefix, leftBoundary)\n                if (line.substring(leftBoundary, leftBoundary + dtSplitPrefixOffset) ===\n                    dtSplitPrefix) {\n                    // Typed literal\n                    rightBoundary = line.indexOf(nnClosingToken, leftBoundary + dtSplitPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw nnClosingTagError();\n                    }\n                    const value = line.substring(leftBoundary + dtSplitPrefixOffset, rightBoundary);\n                    lang = null;\n                    datatype = new NamedNode(value);\n                    leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                }\n                else if (line.substring(leftBoundary, leftBoundary + lgOpeningPrefixOffset) ===\n                    lgOpeningPrefix) {\n                    rightBoundary = line.indexOf(lgClosingToken, leftBoundary + lgOpeningPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw quadClosingPeriodError(line);\n                    }\n                    lang = line.substring(leftBoundary + lgOpeningPrefixOffset, rightBoundary);\n                    datatype = rdfLangString;\n                    leftBoundary = rightBoundary;\n                }\n                else {\n                    // Implicit literals are strings\n                    lang = null;\n                    datatype = xsdString;\n                    leftBoundary += ltOpeningTokenOffset + 1;\n                }\n                object =\n                    lang === null\n                        ? new Literal(literalValue, \"\", datatype)\n                        : new Literal(literalValue, lang, rdfLangString);\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(leftBoundary));\n        }\n        /*\n         * Parse the graph, if any\n         */\n        if (line[leftBoundary] === nnOpeningToken) {\n            leftBoundary += nnOpeningTokenOffset;\n            rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n            if (rightBoundary === -1) {\n                throw nnClosingTagError();\n            }\n            else if (line.substring(rightBoundary, rightBoundary + nnClosingPostfixOffset) !== nnClosingPostfix) {\n                throw nnClosingTagError();\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            leftBoundary = rightBoundary + nnClosingPostfixOffset;\n            graph = new NamedNode(value);\n        }\n        else if (line[leftBoundary] === bnOpeningToken) {\n            if (line.substring(leftBoundary, leftBoundary + bnOpeningPrefixOffset) !==\n                bnOpeningPrefix) {\n                throw bnOpenTagError();\n            }\n            leftBoundary = leftBoundary + bnOpeningPrefixOffset;\n            rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n            if (rightBoundary === -1) {\n                throw quadClosingPeriodError(line);\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            graph = new BlankNode(value);\n            leftBoundary = rightBoundary + bnClosingTokenOffset;\n        }\n        else {\n            graph = Default;\n        }\n        if (line.substring(leftBoundary) === quadClosingPostfix) {\n            yield new Quad(subject, predicate, object, graph);\n        }\n        else {\n            throw quadClosingPeriodError(line);\n        }\n    }\n}\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{process: (string) → string, extend: (string, string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `process` is given, it is called on regular (non-`@`)\n  // selector properties to provide the actual selector. When `extend`\n  // is given, it is called when a property containing an `&` is\n  // found, and should somehow combine the `&`-template (its first\n  // argument) with the selector (its second argument) to produce an\n  // extended selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {process, extend} = options || {}\n\n    function processSelector(selector) {\n      if (/^@/.test(selector)) return [selector]\n      let selectors = selector.split(\",\")\n      return process ? selectors.map(process) : selectors\n    }\n\n    function render(selectors, spec, target) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0])\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(selectors.map(s => extend ? extend(prop, s) : prop.replace(/&/, s)), value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(isAt[1] == \"keyframes\" ? [prop] : processSelector(prop), value, local)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || isAt && isAt[1] == \"keyframes\") target.push(selectors.join(\",\") + \" {\" + local.join(\" \") + \"}\")\n    }\n\n    for (let prop in spec) render(processSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = null\n\nclass StyleSet {\n  constructor(root) {\n    if (root.adoptedStyleSheets && typeof CSSStyleSheet != \"undefined\") {\n      if (adoptedSet) {\n        root.adoptedStyleSheets = [adoptedSet.sheet].concat(root.adoptedStyleSheets)\n        return root[SET] = adoptedSet\n      }\n      this.sheet = new CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet].concat(root.adoptedStyleSheets)\n      adoptedSet = this\n    } else {\n      this.styleTag = (root.ownerDocument || root).createElement(\"style\")\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst zip = (...args) => ({\n    [Symbol.iterator]() {\n        const iterators = args.map((arg) => arg[Symbol.iterator]());\n        let i = 0;\n        return {\n            next() {\n                const results = iterators.map((iter) => iter.next());\n                if (results.some(({ done }) => done)) {\n                    return { done: true, value: undefined };\n                }\n                else {\n                    const values = results.map(({ value }) => value);\n                    return { done: false, value: [...values, i++] };\n                }\n            },\n        };\n    },\n});\nexports.default = zip;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { openLintPanel } from \"@codemirror/next/lint\"\nimport { EditorState } from \"@codemirror/next/state\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { editableConfig, makeSchemaLinter } from \"../lib/index\"\n\nconst initialValue = `# Welcome to the schema editor!\n# If you're new, you probably want to read\n# the schema language documentation here:\n# http://r1.underlay.org/docs/schemas\n\nnamespace ex http://example.com#\nnamespace ul http://underlay.org/ns/\n\ntype foo {\n  ex:a -> ? uri ;\n  ex:b -> string ;\n  ex:c -> dateTime ;\n}\n\nedge ex:cool ==/ ex:map /=> ex:wau\n\nclass ex:cool unit\n\nclass ex:wau {\n  ex:bar -> foo ;\n  ex:age -> integer ;\n  ex:self -> * ex:wau ;\n}\n\n\n\n\n\n\n`\n\nconst linter = makeSchemaLinter()\nconst extensions = [...editableConfig, linter]\n\nconst state = EditorState.create({\n\tdoc: initialValue,\n\textensions,\n})\n\nconst view = new EditorView({\n\tstate,\n\tparent: document.getElementById(\"editor\"),\n})\n\nopenLintPanel(view)\nview.focus()\n"],"sourceRoot":""}