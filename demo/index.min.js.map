{"version":3,"sources":["webpack://@underlay/apg-schema-codemirror/./node_modules/lezer/src/stack.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/node_modules/tslib/tslib.es6.js","webpack://@underlay/apg-schema-codemirror/./node_modules/lezer/src/token.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/lezer/src/decode.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/lezer/src/parse.ts","webpack://@underlay/apg-schema-codemirror/./grammar/index.js","webpack://@underlay/apg-schema-codemirror/./src/index.ts","webpack://@underlay/apg-schema-codemirror/./src/lint.ts","webpack://@underlay/apg-schema-codemirror/./src/stdlib.ts","webpack://@underlay/apg-schema-codemirror/./src/syntax.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/history/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/gutter/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/fold/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/closebrackets/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/search/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/autocomplete/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/rectangular-selection/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/goto-line/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/highlight-selection/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/basic-setup/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/commands/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/comment/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/highlight/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/lint/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/matchbrackets/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/panel/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/rangeset/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/state/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/syntax/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/text/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/tooltip/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/w3c-keyname/index.es.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@codemirror/next/view/dist/index.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/apg.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/namespace.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/uuid/dist/esm-browser/rng.js","webpack://@underlay/apg-schema-codemirror/./node_modules/uuid/dist/esm-browser/regex.js","webpack://@underlay/apg-schema-codemirror/./node_modules/uuid/dist/esm-browser/validate.js","webpack://@underlay/apg-schema-codemirror/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/utils.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/uuid/dist/esm-browser/v4.js","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/type.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/morphism.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/path.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/mapping.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/@underlay/apg/src/value.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/lezer-tree/src/tree.ts","webpack://@underlay/apg-schema-codemirror/./node_modules/n3.ts/es6/IRIs.js","webpack://@underlay/apg-schema-codemirror/./node_modules/n3.ts/es6/DataFactory.js","webpack://@underlay/apg-schema-codemirror/./node_modules/n3.ts/es6/Store.js","webpack://@underlay/apg-schema-codemirror/./node_modules/n3.ts/es6/Parse.js","webpack://@underlay/apg-schema-codemirror/./node_modules/style-mod/src/style-mod.js","webpack://@underlay/apg-schema-codemirror/./node_modules/ziterable/index.js","webpack://@underlay/apg-schema-codemirror/./demo/index.ts","webpack://@underlay/apg-schema-codemirror/webpack/bootstrap","webpack://@underlay/apg-schema-codemirror/webpack/runtime/define property getters","webpack://@underlay/apg-schema-codemirror/webpack/runtime/hasOwnProperty shorthand","webpack://@underlay/apg-schema-codemirror/webpack/runtime/make namespace object","webpack://@underlay/apg-schema-codemirror/webpack/startup"],"names":["Recover","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","cx","stack","state","reducePos","pos","score","buffer","bufferBase","parent","toString","this","filter","_","i","concat","start","Stack","pushState","push","length","reduce","action","depth","type","parser","dPrec","dynamicPrecedence","minRepeatTerm","storeNode","getGoto","base","count","stateFlag","baseStateID","pop","term","end","size","isReduce","cur","top","index","shift","next","nextEnd","nextState","maxNode","apply","useNode","value","reused","split","off","slice","recoverByDelete","isNode","canShift","sim","SimulatedStack","stateSlot","hasAction","force","startOf","types","before","frame","indexOf","recoverByInsert","nextStates","best","s","result","forceReduce","validAction","forceAll","data","restart","sameState","other","toTree","StackBufferCursor","create","group","topID","topTerm","maxBufferLength","minRepeatType","dialectEnabled","dialectID","dialect","flags","rest","offset","goto","maybeNext","fork","accept","string","get","charCodeAt","read","from","to","Math","min","clip","at","StringStream","id","token","input","groupMask","scan","accEnd","allows","overrides","low","high","mid","readToken","decodeArray","Type","Uint16Array","array","out","stop","digit","TokenGroup","contextual","fallback","extend","verbose","process","test","env","LOG","stackIDs","tree","nextStart","trees","nodeAt","last","children","positions","extended","mask","__","constructor","clear","Token","dummyToken","tokens","mainToken","actions","tokenizers","map","CachedToken","getActions","actionIndex","main","tokenizer","updateCachedToken","startIndex","addActions","eofTerm","specialized","specializers","putAction","set","pair","wrapType","TokenCache","options","recovering","tokenCount","nextStackID","cache","strict","bufferLength","topInfo","topRules","defaultTop","RangeError","stacks","StackContext","parseDialect","CacheCursor","putStack","putStackDedup","advance","stopped","stoppedTokens","advanceStack","tok","finished","findFinished","console","log","getName","SyntaxError","runRecovery","maxRemaining","sort","a","some","outer","j","splice","stackID","cached","match","inner","nest","startNested","maybeNest","grammar","placeholder","filterEnd","undefined","parseNode","nested","query","stay","scanForNestEnd","endToken","clippedInput","node","newStack","defaultReduce","localStack","finishNested","advanceFully","restarted","tokenEnd","deadEnd","forceBase","insert","forceFinish","parentParser","info","name","WeakMap","String","fromCodePoint","source","disabled","spec","nextStateCache","cachedDialect","version","tokenArray","tokenData","nodeNames","repeatNodeCount","nodeProps","noProps","setProp","nodeID","prop","deserialize","propSpec","states","Uint32Array","stateData","topTerms","keys","r","skippedNodes","maxTerm","dialects","dynamicPrecedences","tokenPrecTable","tokenPrec","termNames","l","parse","ParseContext","done","startParse","loose","table","groupTag","target","terminal","slot","flag","max","prev","iPrev","findOffset","withNested","copy","obj","withProps","props","withTokenizer","t","Parser","key","prec","values","part","Uint8Array","Dialect","spec_identifier","namespace","class","edge","uriPattern","namespacePattern","getURI","view","doc","sliceString","message","diagnostics","severity","prefix","namespaces","getType","errorUnit","expression","getChild","ns","none","uri","schema","backReferences","datatype","components","component","getChildren","option","reportChildErrors","cursor","isError","firstChild","nextSibling","freeze","schemaLinter","onChange","Map","defaultTypes","identifier","uris","names","sourceNode","labelNode","targetNode","label","entries","fromEntries","unit","decimal","xsd","boolean","double","integer","date","dateTime","hexBinary","base64Binary","JSON","rdf","schemaSyntax","LezerSyntax","define","indentNodeProp","add","Product","continuedIndent","except","Coproduct","foldNodeProp","subtree","styleTags","Comment","Prefix","TypeName","Variable","Uri","Prop","Iri","Unit","Literal","Pointer","Optional","languageData","closeBrackets","brackets","indentOnInput","commentTokens","line","fromHistory","isolateHistory","invertedEffects","historyConfig","combine","configs","minDepth","newGroupDelay","historyField","HistoryState","empty","tr","config","facet","fromHist","annotation","item","HistEvent","fromTransaction","side","undone","updateBranch","addSelection","startState","selection","isolate","changes","addMapping","desc","event","time","userEvent","addChanges","cmd","dispatch","historyState","field","undo","redo","undoSelection","redoSelection","histState","branch","effects","mapped","startSelection","selectionsAfter","after","invert","selections","maxLen","newEvent","newBranch","conc","lastEvent","sels","eq","setSelAfter","popSelection","addMappingToBranch","mapping","mapEvent","extraSelections","mappedChanges","mapDesc","fullMapping","composeDesc","prevTime","prevUserEvent","ranges","isAdjacent","iterChangedRanges","f","_f","_t","compose","update","annotations","of","historyKeymap","run","preventDefault","mac","GutterMarker","_view","elementClass","mapMode","defaults","style","renderEmptyElements","elementStyle","markers","lineMarker","initialSpacer","updateSpacer","domEventHandlers","activeGutters","gutter","gutters","assign","baseTheme","EditorView","$gutters","display","height","boxSizing","left","backgroundColor","color","borderRight","$gutter","flexDirection","flexShrink","overflow","$gutterElement","padding","minWidth","textAlign","whiteSpace","unfixGutters","x","gutterView","fixed","ViewPlugin","dom","document","createElement","className","themeClass","setAttribute","conf","SingleGutterView","appendChild","position","scrollDOM","insertBefore","contentDOM","updateGutters","contexts","UpdateContext","viewport","viewportLines","text","isArray","BlockType","finish","minHeight","contentHeight","prevState","change","docChanged","heightChanged","viewportChanged","known","g","remove","provide","PluginField","textDirection","Direction","offsetWidth","right","localMarkers","forLine","unshift","above","elements","newElt","GutterElement","elt","compare","sameMarkers","bottom","removeChild","spacer","addEventListener","visualLineAtHeight","clientY","getBoundingClientRect","cssText","prevMarkers","updated","eltClass","cssClass","marginTop","ch","lastChild","cls","m","toDOM","c","lineNumberMarkers","lineNumberConfig","formatNumber","exists","NumberMarker","number","super","createTextNode","lineNumberGutter","others","lineAt","maxLineNumber","lines","mapRange","range","mapPos","foldEffect","unfoldEffect","selectedLines","head","visualLineAt","foldState","Decoration","folded","e","is","foldExists","foldWidget","filterFrom","filterTo","onSelection","primary","between","foldInside","_a","found","getFoldable","maybeEnable","append","codeFolding","foldKeymap","reconfigure","defaultConfig","placeholderDOM","placeholderText","foldConfig","widget","WidgetType","element","textContent","phrase","title","onclick","posAtDOM","foldGutterDefaults","openText","closedText","FoldMarker","open","span","$foldPlaceholder","border","borderRadius","margin","definedClosing","closing","charAt","languageDataAt","closeBracketsKeymap","dont","changeByRange","prevChar","nextChar","scrollIntoView","handleOpen","close","closeBefore","anchor","handleClose","_open","moved","primaryIndex","handleSame","allowTriple","nodeStart","isTriple","sliceDoc","charCategorizer","resolve","basicNormalize","normalize","SearchCursor","matches","bufferPos","iter","iterRange","bufferStart","peek","str","fromCharCode","norm","code","keep","Query","search","replace","caseInsensitive","toLowerCase","setQuery","togglePanel","searchState","SearchState","effect","panel","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","decorations","highlight","selectionSet","valid","builder","selected","v","searchCommand","openSearchPanel","findNextMatch","findNext","maybeAnnounceMatch","findPrevInRange","findPrevious","selectMatches","replaceNext","replaceAll","buildPanel","q","querySelector","select","focus","searchExtensions","closeSearchPanel","contains","root","activeElement","searchKeymap","scope","sel","child","searchField","onchange","onkeyup","replaceField","caseField","checked","updateQuery","button","content","onkeydown","runScopeHandlers","keyCode","shiftKey","Break","lineStart","lineEnd","font","fontSize","CompletionContext","explicit","abortListeners","expr","ensureAnchor","_type","listener","Option","completion","addStart","addEnd","RegExp","ignoreCase","applyCompletion","FuzzyMatcher","pattern","chars","any","precise","byWord","char","upper","toUpperCase","astral","word","first","direct","len","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","prevType","completionConfig","activateOnTyping","override","maxRenderedOptions","fontFamily","overflowY","maxHeight","listStyle","lineHeight","background_fallback","color_fallback","opacity","width","maxWidth","MaxInfoWidth","verticalAlign","borderLeft","$completionMatchedText","textDecoration","$completionDetail","marginLeft","fontStyle","$completionIcon","paddingRight","createListBox","ul","li","icon","labelElt","detail","detailElt","classList","rangeAroundSelected","total","floor","CompletionTooltip","stateField","placeInfo","measureInfo","write","positionInfo","cState","parentNode","nodeName","exec","list","requestMeasure","updateSel","updateSelectedOption","createInfoDialog","opt","hasAttribute","removeAttribute","container","self","scrollTop","rect","clientHeight","spaceLeft","spaceRight","innerWidth","toggle","CompletionDialog","attrs","tooltip","timestamp","makeAttrs","active","hasResult","matcher","boost","cmpOption","sortOptions","selectedValue","completionState","Date","now","CompletionState","random","find","ActiveSource","every","touchesRange","iA","iB","endA","endB","sameResults","build","setSelectedEffect","setSelected","baseAttrs","dScore","lA","lB","handleUserEvent","handleChange","toggleCompletionEffect","setActiveEffect","_tr","ActiveResult","sources","moveCompletionSelection","forward","by","step","offsetHeight","acceptCompletion","RunningQuery","context","updates","completionPlugin","debounceUpdate","running","debounceAccept","startQuery","doesReset","transactions","handler","logException","clearTimeout","setTimeout","startUpdate","pending","Promise","then","aborted","scheduleAccept","err","current","fieldMarker","fieldRange","ActiveSnippet","deco","setActive","moveToField","snippetState","selectionInsideField","val","moveField","dir","keymap","completionKeymap","MaxOff","getPos","posAtCoords","clientX","y","col","ref","coordsAtPos","round","abs","defaultCharacterWidth","absoluteColumn","tabSize","extTag","Symbol","createLineDialog","innerHTML","go","n","parseInt","isNaN","gotoLineKeymap","lineDeco","attributes","activeLineHighlighter","getDeco","lastLineStart","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","matchDeco","mainMatchDeco","matchHighlighter","check","findClusterBreak","wordAt","trim","visibleRanges","defaultTheme","basicSetup","lineNumbers","highlightSpecialChars","fullConfig","canFold","canUnfold","click","foldGutter","drawSelection","defaultHighlighter","composing","closed","handleInsertion","autocompletion","eventFilter","altKey","startSel","newStart","newLine","_extend","multiple","startLine","endLine","startOff","endOff","startCol","endCol","leftOver","rectangleFor","rectangleSelectionStyle","rectangularSelection","ext","highlightSelectionMatches","defaultKeymap","commentKeymap","lintKeymap","setSel","moveSel","how","rangeEnd","cursorByChar","moveByChar","cursorCharLeft","cursorCharRight","cursorCharForward","cursorCharBackward","cursorByGroup","moveByGroup","cursorGroupLeft","cursorGroupRight","cursorGroupForward","cursorGroupBackward","interestingNode","bracketProp","moveBySyntax","newPos","childAfter","childBefore","matched","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","moveVertically","cursorLineUp","cursorLineDown","cursorByPage","cursorPageUp","cursorPageDown","moveByLineBoundary","moveToLineBoundary","space","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineStart","cursorLineEnd","toMatchingBracket","matching","cursorMatchingBracket","selectMatchingBracket","extendSel","goalColumn","selectByChar","selectCharLeft","selectCharRight","selectCharForward","selectCharBackward","selectByGroup","selectGroupLeft","selectGroupRight","selectGroupForward","selectGroupBackward","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineStart","selectLineEnd","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","selectAll","selectLine","selectedLineBlocks","selectParentSyntax","simplifySelection","deleteBy","towards","deleteByChar","codePoint","drop","indentUnit","deleteCodePointBackward","deleteCodePointForward","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","cat","nextCat","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","deleteTrailingWhitespace","iterLines","trailing","splitLine","transposeChars","blocks","upto","moveLine","block","nextLine","lineBreak","moveLineUp","moveLineDown","copyLine","copyLineUp","copyLineDown","deleteLine","getIndentation","insertNewline","replaceSelection","insertNewlineAndIndent","explode","closedBy","isBetweenBrackets","simulateBreak","simulateDoubleBreak","indent","indentString","lineIndent","changeBySelectedLine","atLine","changeSet","indentSelection","overrideIndentation","indentMore","indentLess","emacsStyleKeymap","standardKeymap","toggleLineComment","toggleLineCommentWithOption","CommentOption","Toggle","lineComment","OnlyComment","lineUncomment","OnlyUncomment","toggleBlockComment","toggleBlockCommentWithOption","blockComment","blockUncomment","getConfig","BlockCommenter","LineCommenter","selectionCommented","isSelectionCommented","isRangeCommented","startText","endText","textBefore","SearchMargin","textAfter","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","lineCommentToken","linesAcrossSelection","linesAcrossRange","getLinesInRange","column","isRangeLineSkipped","isLineSkipped","minCol","posAfter","marginLen","_state","Infinity","isRangeLineDiscarded","TagSystem","typeNames","typeIDs","flagMask","pow","typeShift","subtypes","parentNames","typeID","subID","parents","mode","tag","getWithMode","Rule","noContext","tags","byName","rule","styling","Styling","Highlighter","module","defaultTags","highlighter","StyleRule","specificity","modSpec","rules","nodeStack","classStack","inheritStack","buildDeco","syntax","parsePos","getTree","curClass","flush","iterate","enter","inheritedClass","opaque","matchContext","leave","_s","backTo","deleted","inserted","link","strong","fontWeight","emphasis","keyword","typeName","comment","meta","invalid","SelectedDiagnostic","diagnostic","LintState","findDiagnostic","maybeEnableLint","lintState","activeMark","lintTooltip","setDiagnostics","setDiagnosticsEffect","movePanelSelection","selPos","DiagnosticWidget","LintPanel","stackStart","stackEnd","renderDiagnostic","openLintPanel","closeLintPanel","nextDiagnostic","LintDelay","linter","lintTime","bind","_b","error","onmousedown","PanelItem","items","tabIndex","moveSelection","selectedIndex","needsSync","newSelectedItem","_start","_end","sync","domPos","rm","underline","btoa","$diagnostic","$diagnosticAction","$lintRange","backgroundPosition","backgroundRepeat","backgroundImage","$lintPoint","borderBottom","borderBottomColor","background","$matchingBracket","$nonmatchingBracket","DefaultBrackets","bracketMatchingConfig","afterCursor","maxScanDistance","matchingMark","nonmatchingMark","bracketMatchingUnique","matchBrackets","mark","bracketMatching","matchingNodes","byProp","sub","_pos","firstToken","prevSibling","matchMarkedBrackets","tokenType","startCh","bracket","startToken","distance","basePos","matchPlainBrackets","panelConfig","topContainer","bottomContainer","panels","panelPlugin","showPanel","getPanel","plugin","specs","PanelGroup","panelClass","mount","syncClasses","scrollMargin","classes","syncDOM","curDOM","themeClasses","$panels","borderTop","RangeValue","Range","startSide","endSide","point","cmpRange","Far","Chunk","maxPoint","startAt","arr","lo","hi","diff","findIndex","newFrom","newTo","curFrom","curTo","RangeSet","chunkPos","chunk","nextLayer","chunkEnd","updateSpec","LayerCursor","spill","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPoint","minPointSize","sharedChunks","inA","shared","Set","findSharedChunks","sideA","SpanCursor","sideB","iterGaps","fromA","fromB","iterator","openStart","activeForPoint","openEnd","chunkStart","lastFrom","lastTo","setMaxPoint","newArrays","Error","finishChunk","layer","skip","rank","gotoInner","has","heap","heapBubble","childIndex","activeTo","activeRank","minActive","pointFrom","pointRank","removeActive","findMinIndex","trackOpen","trackExtra","nextVal","addActive","startA","startB","dPos","clipEnd","comparePoint","sameValues","compareRange","foundPos","DefaultSplit","MapMode","ChangeDesc","sections","ins","posA","posB","individual","iterChanges","composeSets","mapSet","assoc","Simple","TrackDel","TrackBefore","TrackAfter","ChangeSet","toA","_toB","resultSections","resultInserted","filteredSections","SectionIter","addSection","addInsert","filtered","parts","toJSON","lineSep","insText","insLen","json","forceJoin","setA","setB","mkSet","len2","sectionLen","insB","textBit","forward2","SelectionRange","level","EditorSelection","which","fromJSON","normalized","bidiLevel","goal","checkSelection","docLength","nextID","Facet","compareInput","isStatic","default","sameArray","static","FacetProvider","deps","maybePrec","compute","computeN","dependencies","addresses","getter","idx","multi","depDoc","depSel","depAddrs","dep","addr","ensureAddr","newVal","oldVal","compareArray","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","oldAddr","address","changed","dynAddr","getAddr","StateField","createF","updateF","compareF","facets","oldIdx","maybeIndex","Prec","precedence","extension","PrecExtension","Configuration","replacements","dynamicSlots","staticValues","statusTemplate","oldState","fields","seen","tagsSeen","getOwnPropertySymbols","flatten","dynamicSlot","status","applying","allowMultipleSelections","lineSeparator","changeFilter","transactionFilter","languageDataProp","globalLanguageData","IndentContext","overriden","countColumn","Annotation","AnnotationType","StateEffect","StateEffectType","Transaction","_doc","newLength","applyTransaction","ann","joinRanges","mergeTransaction","sequential","mapForA","mapForB","mapEffects","full","resolveTransactionInner","docSize","reconf","single","resolveTransaction","seq","back","invertedDesc","filters","filterTransaction","addToHistory","CharCategory","nonASCIISingleCaseWordChar","wordChar","EditorState","require","newDoc","newSelection","toText","result1","newChanges","newMapped","extensions","configuration","staticFacet","asSingle","cols","phrases","wordChars","join","Space","hasWordChar","Word","Other","languageDataFacetAt","combineConfig","indentation","stringify","foldable","syntaxIndentation","ast","scanPos","strategy","indentStrategy","TreeIndentContext","computeIndentation","delimitedStrategy","ignoreClosed","topIndent","textAfterPos","atBreak","isParent","delimitedIndent","align","units","closedAt","aligned","openToken","openLine","isSkipped","bracketedAligned","baseIndent","flatIndent","matchExcept","setSyntax","SyntaxState","HighlightWorker","topType","timeout","updatedTree","work","stopParse","hasNested","DocStream","cursorPos","stringStart","endTime","takeTree","parsed","applyChanges","toB","requestIdle","window","requestIdleCallback","callback","cancelIdle","cancelIdleCallback","working","scheduleWork","deadline","timeRemaining","badness","isExtendingChar","isRegionalIndicator","nextClusterBreak","surrogateLow","surrogateHigh","codePointAt","codePointSize","countBefore","prevClusterBreak","code0","code1","findColumn","Text","lineCache","cacheLine","lineInner","decompose","TextNode","iterA","RawTextCursor","iterB","offA","offB","strA","strB","eqContent","PartialTextCursor","LineCursor","textLength","TextLeaf","lineCachePos","isLine","Line","sliceText","newLen","appendText","cut","lineLengthTo","lineLengthFrom","lastLineLength","firstLineLength","lengthDiff","chunkLength","maxLength","minLength","chunked","currentLength","currentChunk","childLength","nodes","offsets","limit","LineContent","contextStart","strings","tooltipPlugin","inView","measureReq","readMeasure","writeMeasure","tooltips","showTooltip","tooltipViews","tp","createTooltip","views","tip","tooltipView","maybeMeasure","editor","innerHeight","measured","tView","strictSide","positioned","eventHandlers","$tooltip","zIndex","HoverPlugin","setHover","lastMouseMove","hoverTimeout","mouseInside","checkHover","mouseenter","mouseleave","mousemove","lastMove","timeStamp","isOverRange","nodeType","isInTooltip","removeEventListener","createRange","fromDOM","domAtPos","setEnd","setStart","rects","getClientRects","hoverTooltip","hoverState","hideOnChange","nFrom","8","9","10","12","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","44","45","46","59","61","91","92","106","107","108","109","110","111","144","145","160","161","162","163","164","165","173","186","187","188","189","190","191","192","219","220","221","222","229","48","49","50","51","52","53","54","55","56","57","chrome","navigator","userAgent","safari","vendor","gecko","platform","ie","brokenModifierNames","nav","documentElement","ie_edge","ie_upto10","ie_11up","webkit","browser","ie_version","documentMode","gecko_version","chrome_version","ios","android","webkit_version","getSelection","hasSelection","anchorNode","clientRectsFor","tempRange","nodeValue","isEquivalentPosition","targetOff","scanFor","domIndex","previousSibling","maxOffset","childNodes","flattenRect","windowRect","win","DOMSelection","anchorOffset","focusNode","focusOffset","domSel","scratchRange","preventScrollSupported","focusPreventScroll","scrollLeft","ownerDocument","preventScroll","DOMPos","ContentView","dirty","editorView","posBefore","posAtStart","breakAfter","_side","track","reuseDOM","written","syncNodeInto","_dom","bias","fromI","fromStart","toI","toEnd","domBoundsAround","startDOM","endDOM","andParent","markParentsDirty","childList","cmView","markDirty","setParent","_rec","_event","ChildCursor","childCursor","findPos","none$1","InlineView","_other","TextView","textDOM","setDOM","createDOM","_from","_to","textCoords","MarkView","tagName","mergeInlineChildren","sliceInlineChildren","inlineDOMAtPos","coordsInChildren","WidgetView","customView","updateDOM","contentEditable","ignoreEvent","CompositionView","elts","toOff","fromOff","dLen","merge","become","replaceChildren","getSide","joinInlineInto","coordsAt","combineAttrs","attrsEq","keysA","keysB","updateAttrs","_widget","MarkDecoration","PointDecoration","getInclusive","LineDecoration","estimatedHeight","isReplace","WidgetRange","WidgetBefore","WidgetAfter","inclusiveStart","inclusiveEnd","inclusive","addRange","theme","strs","darkTheme","baseThemeID","expandThemeClasses","buildTheme","template","selector","$","outline_fallback","outline","$scroller","alignItems","overflowX","$content","flexGrow","caretColor","$line","$selectionLayer","contain","$selectionBackground","$cursorLayer","pointerEvents","animation","visibility","$cursor","$placeholder","$button","$textfield","LineClass","LineView","arguments","prevAttrs","takeDeco","transferDOM","setDeco","none$2","childPos","hack","cmIgnore","totalWidth","charWidth","docView","BlockWidgetView","_takeDeco","posAtEnd","ContentBuilder","curLine","breakAtStart","textOff","posCovered","getLine","take","wrapMarks","buildText","addWidget","NullWidget","addLineDeco","LTR","RTL","dec","LowTypes","ArabicTypes","BidiRE","BidiSpan","order","maybe","computeOrder","direction","outerType","trivialOrder","prevStrong","beforeL","rtl","movedOver","moveVisually","spanI","indexForward","nextIndex","nextSpan","wrappingWhiteSpace","HeightOracle","lineWrapping","heightSamples","lineLength","ceil","lineHeights","newHeight","h","knownHeights","MeasuredHeights","heights","BlockInfo","QueryType","HeightMap","oracle","oldDoc","me","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","_height","_value","blockAt","_force","more","setHeight","outdated","collapsed","widgetHeight","HeightMapGap","heightForLine","firstLine","lastLine","ByHeight","heightForGap","rightTop","rightOffset","subQuery","ByPos","forEachLine","rightStart","balanced","decomposeLeft","mergeGaps","decomposeRight","rebalance","around","covering","writtenTo","isCovered","heightRelevant","addBlock","blankContent","gap","enterLine","ensureLine","DecorationComparator","none$3","clickAddsSelectionRange","dragMovesSelection","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","exception","onerror","editable","PluginFieldProvider","scrollMargins","nextPluginID","viewPlugin","provider","handlers","pluginDecorations","PluginInstance","dummy","destroy","editorAttributes","contentAttributes","styleModule","ChangedRange","dI","rI","addToSet","ViewUpdate","changedRanges","hasFocus","inputState","notifiedFocused","LineGap","gA","gB","wrapping","LineGapWidget","vertical","ViewState","pixelViewport","paddingTop","paddingBottom","contentWidth","heightOracle","heightMap","scrollTo","printing","mustEnforceCursorAssoc","setDoc","getViewport","lineGaps","ensureLineGaps","lineGapDeco","draw","computeVisibleRanges","newDeco","contentChanges","heightChanges","extendWithRanges","comp","heightRelevantDecoChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLineGaps","mapLineGaps","repeated","getComputedStyle","scrollHeight","scrollWidth","clientWidth","parentRect","host","visiblePixelRange","dTop","dBottom","measureVisibleLineHeights","refresh","mustRefresh","measureTextSize","enforceCursorAssoc","Viewport","newTop","newBottom","gaps","viewFrom","viewTo","structure","lineStructure","findPosition","gapTo","gapFrom","gapSize","findFraction","ratio","same","editorTop","dist","counted","none$4","DocView","viewports","compositionDeco","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","updateInner","updateDeco","textNode","nearbyTextNode","cView","nearest","topNode","CompositionWidget","computeCompositionDeco","forceSelection","prevDeco","decoDiff","DecorationComparator$1","findChangedDeco","pointerSel","updateSelection","oldLength","updateChildren","observer","ignore","viewState","replaceRange","breakAtEnd","fromPointer","mayControlSelection","nextToUneditable","nextTo","collapse","cursorBidiLevel","removeAllRanges","modify","domView","rootView","localPosFromDOM","measure","visible","BlockGapWidget","computeBlockGapDeco","pluginField","mLeft","mRight","mTop","mBottom","margins","defaultView","bounding","body","moveX","moveY","scrollBy","scrollRectIntoView","MaxNodeHeight","remaining","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","halfLine","defaultLineHeight","bounced","blockAtHeight","elementFromPoint","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","posFromDOM","spans","bidiSpans","InputState","lastKeyCode","lastKeyTime","lastSelectionOrigin","lastSelectionTime","scrollHandlers","registeredEvents","customHandlers","compositionEndedAt","mouseSelection","eventBelongsToEditor","ignoreDuringComposition","mustFlushObserver","forceFlush","runCustomHandlers","ensureHandlers","origin","defaultPrevented","scroll","MouseSelection","startEvent","move","up","metaKey","ctrlKey","addsSelectionRange","dragMove","dragMovesSelection$1","dragging","rangeCount","getRangeAt","isInPrimarySelection","buttons","bubbles","brokenClipboardAPI","doPaste","byLine","lastLinewiseCopy","rangeForClick","linePos","groupAt","keydown","mods","macCtrl","mustCapture","setSelectionOrigin","touchdown","touchmove","mousedown","makeStyle","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","getClickType","startRange","basicMouseSelection","startMouseSelection","insideY","inside","findPositionSide","dragstart","dataTransfer","setData","effectAllowed","dropPos","getData","del","paste","clipboardData","capturePaste","forceClearComposition","linewise","copiedRange","clearData","selectionEnd","selectionStart","captureCopy","blur","beforeprint","compositionstart","compositionupdate","compositionend","observeOptions","characterData","characterDataOldValue","useCharData","DOMObserver","onScrollChanged","ignoreSelection","delayedFlush","queue","scrollTargets","intersection","intersecting","parentCheck","MutationObserver","mutations","mut","removedNodes","oldValue","flushSoon","onCharData","prevValue","onSelectionChange","onScroll","IntersectionObserver","listenForScroll","intersectionRatio","createEvent","observe","disconnect","takeRecords","clearSelection","records","newSel","typeOver","record","readMutation","rec","ignoreMutation","findChild","curView","DOMReader","points","findPointBefore","readNode","nextView","isBlockElement","fromView","overrideDOMText","readRange","findPointIn","DOMPoint","dispatchKey","cancelable","down","KeyboardEvent","dispatchEvent","plugins","editorAttrs","contentAttrs","bidiCache","updateState","measureScheduled","measureRequests","_dispatch","bounds","selPoints","selectionPoints","reader","selectionFromPoints","preferredPos","preferredSide","minLen","findDiff","iHead","iAnchor","isCollapsed","selectionCollapsed","applyDOMChange","runScrollHandlers","mountStyles","resizeDebounce","handleResize","CachedOrder","updatePlugins","redrawn","styleModules","newState","prevSpecs","newPlugins","cancelAnimationFrame","measuring","warn","BadMeasure","scrollPosIntoView","spellcheck","contenteditable","role","reverse","request","requestAnimationFrame","takeField","inst","readMeasured","ensureTop","lineAtHeight","initial","byGroup","includeWrap","coords","editorRect","lineView","startPos","startCoords","resolvedGoal","startY","extra","goalCol","otherLine","MaxBidiLine","entry","dark","given","querySelectorAll","lastDir","currentPlatform","modifiers","keymaps","handleKeyEvents","runHandlers","bindings","buildKeymap","storedPrefix","bound","isPrefix","checkPrefix","command","scopeObj","k","alt","ctrl","mod","normalizeKeyName","commands","ourObj","binding","maps","keyName","isChar","fallthrough","runFor","baseName","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelectionPlugin","hideNativeSelection","Piece","fromClass","rangePieces","cursors","readPos","drawSel","selectionLayer","cursorLayer","setBlinkRate","animationDuration","confChanged","geometryChanged","animationName","ltr","contentRect","getBase","lineStyle","leftSide","paddingLeft","rightSide","visualStart","visualEnd","pieces","drawForLine","piece","selectionClass","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","endPos","docLine","spanFrom","spanTo","measureRange","prim","measureCursor","themeSpec","primaryCursorClass","cursorClass","Specials","Names","0","7","11","8203","8204","8205","8206","8207","8232","8233","65279","65532","_supportsTabSize","supportsTabSize","styles","MozTabSize","UnicodeRegexpSupport","unicode","specialCharConfig","render","specialChars","addSpecialChars","replaceTabs","specialCharPlugin","tabStyle","decorationCache","recompute","confChange","getDecorationsFor","TabWidget","SpecialCharWidget","ph","placeHolder","custom","tab","Placeholder","wrap","__test","APG","Record","Variant","reference","literal","product","coproduct","tail","identity","constant","dereference","projection","injection","tuple","CASE","path","getRandomValues","crypto","msCrypto","rnds8","rng","uuid","byteToHex","substr","keyMap","getEntries","object","getKeys","getKeyIndex","mapKeys","signalInvalidType","rootId","buf","rnds","TypeError","getID","BlankNode","freezeType","forType","includes","isTypeEqual","A","B","keyA","keyB","isTypeAssignable","unify","unifyComponents","unifyOptions","applyExpressions","S","expressions","slots","cases","applyCases","validateExpressions","getValues","instance","termType","validateMapping","M","T","fold","mapExpressions","delta","TI","SI","indices","imageValue","pullback","k1","k2","pullbackComponents","validateValue","forValue","leaf","DefaultBufferLength","nextPropID","CachedNode","NodeProp","Number","propObj","NodeType","openedBy","groups","newTypes","newProps","NodeGroup","partial","Tree","cutAt","sibling","nextPos","TreeCursor","moveTo","TreeNode","mustLeave","isRepeated","balance","BalanceBranchFactor","balanceRange","buildTree","childString","endIndex","cutPoint","newBuffer","TreeBuffer","pick","_parent","nextChild","BufferNode","BufferContext","hasChild","nextSignificant","externalSibling","parentStart","bufferNode","yieldNode","yieldBuf","yield","atLastNode","FlatBufferCursor","takeNode","minPos","inRepeat","maxSize","minStart","nodeSize","localSkipped","findBufferSize","copyToBuffer","localChildren","localPositions","localInRepeat","innerType","maxChild","groupFrom","groupStart","only","containsType","nil","langString","_blankNodeCounter","NamedNode","language","equals","DefaultGraph","Default","fromId","lastIndexOf","toId","Quad","subject","predicate","graph","namedNode","iri","blankNode","variable","languageOrDataType","defaultGraph","quad","SPO","POS","OSP","Store","quads","sizeCache","graphMap","ids","entities","blankNodeIndex","addQuads","subjects","predicates","objects","index0","key0","key1","key2","existed","index1","index2","delete","rotation","generateIndex1","value0","generateIndex2","value1","makeQuad","value2","entity0","entity1","entity2","name0","name1","name2","countInIndex1","graphIndex","newGraphIndex","args","getGraphIndex","o","addToIndex","addQuad","removeFromIndex","stream","removeQuad","removeMatches","graphId","getGraphId","graphs","getGraphIndices","generateIndex","getIds","countInIndex","loopBy2Keys","loopByKey1","loopByKey0","unique","suggestedName","nnClosingTagError","unexpectedCharError","quadClosingPeriodError","nnOpeningToken","nnOpeningTokenOffset","nnClosingPostfix","nnClosingPostfixOffset","bnOpeningPrefix","bnOpeningPrefixOffset","bnClosingToken","bnClosingTokenOffset","ltOpeningTokenOffset","ltReservedReplace","ltReservedReplaceFn","lgOpeningPrefixOffset","dtSplitPrefix","dtSplitPrefixOffset","Parse","rightBoundary","leftBoundary","lang","namedNodeValue","substring","blankNodeValue","objEndIndex","literalValue","COUNT","for","SET","global","StyleModule","processSelector","selectors","local","isAt","modules","StyleSet","adoptedSet","adoptedStyleSheets","CSSStyleSheet","sheet","styleTag","insertRule","exports","iterators","arg","results","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","defineProperty","enumerable","toStringTag"],"mappings":"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","file":"index.min.js","sourcesContent":["import {Action, Term, StateFlag, ParseState, Seq} from \"./constants\"\nimport {StackContext} from \"./parse\"\nimport {Tree, TreeBuffer, BufferCursor} from \"lezer-tree\"\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nexport class Stack {\n  /// @internal\n  constructor(\n    /// A group of values that the stack will share with all\n    /// split instances\n    ///@internal\n    readonly cx: StackContext,\n    /// Holds state, pos, value stack pos (15 bits array index, 15 bits\n    /// buffer index) triplets for all but the top state\n    /// @internal\n    readonly stack: number[],\n    /// The current parse state @internal\n    public state: number,\n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    public reducePos: number,\n    /// The input position up to which this stack has parsed.\n    public pos: number,\n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    public score: number,\n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    readonly buffer: number[],\n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    readonly bufferBase: number,\n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    readonly parent: Stack | null\n  ) {}\n\n  /// @internal\n  toString() {\n    return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`\n  }\n\n  // Start an empty stack\n  /// @internal\n  static start(cx: StackContext, state: number, pos = 0) {\n    return new Stack(cx, [], state, pos, pos, 0, [], 0, null)\n  }\n\n  // Push a state onto the stack, tracking its start position as well\n  // as the buffer base at that point.\n  /// @internal\n  pushState(state: number, start: number) {\n    this.stack.push(this.state, start, this.bufferBase + this.buffer.length)\n    this.state = state\n  }\n\n  // Apply a reduce action\n  /// @internal\n  reduce(action: number) {\n    let depth = action >> Action.ReduceDepthShift, type = action & Action.ValueMask\n    let {parser} = this.cx\n\n    let dPrec = parser.dynamicPrecedence(type)\n    if (dPrec) this.score += dPrec\n\n    if (depth == 0) {\n      // Zero-depth reductions are a special case—they add stuff to\n      // the stack without popping anything off.\n      if (type < parser.minRepeatTerm) this.storeNode(type, this.reducePos, this.reducePos, 4, true)\n      this.pushState(parser.getGoto(this.state, type, true), this.reducePos)\n      return\n    }\n\n    // Find the base index into `this.stack`, content after which will\n    // be dropped. Note that with `StayFlag` reductions we need to\n    // consume two extra frames (the dummy parent node for the skipped\n    // expression and the state that we'll be staying in, which should\n    // be moved to `this.state`).\n    let base = this.stack.length - ((depth - 1) * 3) - (action & Action.StayFlag ? 6 : 0)\n    let start = this.stack[base - 2]\n    let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase\n    // Store normal terms or `R -> R R` repeat reductions\n    if (type < parser.minRepeatTerm || (action & Action.RepeatFlag)) {\n      let pos = parser.stateFlag(this.state, StateFlag.Skipped) ? this.pos : this.reducePos\n      this.storeNode(type, start, pos, count + 4, true)\n    }\n    if (action & Action.StayFlag) {\n      this.state = this.stack[base]\n    } else {\n      let baseStateID = this.stack[base - 3]\n      this.state = parser.getGoto(baseStateID, type, true)\n    }\n    while (this.stack.length > base) this.stack.pop()\n  }\n\n  // Shift a value into the buffer\n  /// @internal\n  storeNode(term: number, start: number, end: number, size = 4, isReduce = false) {\n    if (term == Term.Err) { // Try to omit/merge adjacent error nodes\n      let cur: Stack | null = this, top = this.buffer.length\n      if (top == 0 && cur.parent) {\n        top = cur.bufferBase - cur.parent.bufferBase\n        cur = cur.parent\n      }\n      if (top > 0 && cur.buffer[top - 4] == Term.Err && cur.buffer[top - 1] > -1) {\n        if (start == end) return\n        if (cur.buffer[top - 2] >= start) { cur.buffer[top - 2] = end; return }\n      }\n    }\n\n    if (!isReduce || this.pos == end) { // Simple case, just append\n      this.buffer.push(term, start, end, size)\n    } else { // There may be skipped nodes that have to be moved forward\n      let index = this.buffer.length\n      if (index > 0 && this.buffer[index - 4] != Term.Err) while (index > 0 && this.buffer[index - 2] > end) {\n        // Move this record forward\n        this.buffer[index] = this.buffer[index - 4]\n        this.buffer[index + 1] = this.buffer[index - 3]\n        this.buffer[index + 2] = this.buffer[index - 2]\n        this.buffer[index + 3] = this.buffer[index - 1]\n        index -= 4\n        if (size > 4) size -= 4\n      }\n      this.buffer[index] = term\n      this.buffer[index + 1] = start\n      this.buffer[index + 2] = end\n      this.buffer[index + 3] = size\n    }\n  }\n\n  // Apply a shift action\n  /// @internal\n  shift(action: number, next: number, nextEnd: number) {\n    if (action & Action.GotoFlag) {\n      this.pushState(action & Action.ValueMask, this.pos)\n    } else if ((action & Action.StayFlag) == 0) { // Regular shift\n      let start = this.pos, nextState = action, {parser} = this.cx\n      if (nextEnd > this.pos || next <= parser.maxNode) {\n        this.pos = nextEnd\n        if (!parser.stateFlag(nextState, StateFlag.Skipped)) this.reducePos = nextEnd\n      }\n      this.pushState(nextState, start)\n      if (next <= parser.maxNode) this.buffer.push(next, start, nextEnd, 4)\n    } else { // Shift-and-stay, which means this is a skipped token\n      if (next <= this.cx.parser.maxNode) this.buffer.push(next, this.pos, nextEnd, 4)\n      this.pos = nextEnd\n    }\n  }\n\n  // Apply an action\n  /// @internal\n  apply(action: number, next: number, nextEnd: number) {\n    if (action & Action.ReduceFlag) this.reduce(action)\n    else this.shift(action, next, nextEnd)\n  }\n\n  // Add a prebuilt node into the buffer. This may be a reused node or\n  // the result of running a nested parser.\n  /// @internal\n  useNode(value: Tree | TreeBuffer, next: number) {\n    let index = this.cx.reused.length - 1\n    if (index < 0 || this.cx.reused[index] != value) {\n      this.cx.reused.push(value)\n      index++\n    }\n    let start = this.pos\n    this.reducePos = this.pos = start + value.length\n    this.pushState(next, start)\n    this.buffer.push(index, start, this.reducePos, -1 /* size < 0 means this is a reused value */)\n  }\n\n  // Split the stack. Due to the buffer sharing and the fact\n  // that `this.stack` tends to stay quite shallow, this isn't very\n  // expensive.\n  /// @internal\n  split() {\n    let parent: Stack | null = this\n    let off = parent.buffer.length\n    // Because the top of the buffer (after this.pos) may be mutated\n    // to reorder reductions and skipped tokens, and shared buffers\n    // should be immutable, this copies any outstanding skipped tokens\n    // to the new buffer, and puts the base pointer before them.\n    while (off > 0 && parent.buffer[off - 2] > parent.reducePos) off -= 4\n    let buffer = parent.buffer.slice(off), base = parent.bufferBase + off\n    // Make sure parent points to an actual parent with content, if there is such a parent.\n    while (parent && base == parent.bufferBase) parent = parent.parent\n    return new Stack(this.cx, this.stack.slice(), this.state, this.reducePos, this.pos,\n                     this.score, buffer, base, parent)\n  }\n\n  // Try to recover from an error by 'deleting' (ignoring) one token.\n  /// @internal\n  recoverByDelete(next: number, nextEnd: number) {\n    let isNode = next <= this.cx.parser.maxNode\n    if (isNode) this.storeNode(next, this.pos, nextEnd)\n    this.storeNode(Term.Err, this.pos, nextEnd, isNode ? 8 : 4)\n    this.pos = this.reducePos = nextEnd\n    this.score -= Recover.Token\n  }\n\n  /// Check if the given term would be able to be shifted (optionally\n  /// after some reductions) on this stack. This can be useful for\n  /// external tokenizers that want to make sure they only provide a\n  /// given token when it applies.\n  canShift(term: number) {\n    for (let sim = new SimulatedStack(this);;) {\n      let action = this.cx.parser.stateSlot(sim.top, ParseState.DefaultReduce) || this.cx.parser.hasAction(sim.top, term)\n      if ((action & Action.ReduceFlag) == 0) return true\n      if (action == 0) return false\n      sim.reduce(action)\n    }\n  }\n\n  /// Find the start position of the rule that is currently being parsed.\n  get ruleStart() {\n    for (let state = this.state, base = this.stack.length;;) {\n      let force = this.cx.parser.stateSlot(state, ParseState.ForcedReduce)\n      if (!(force & Action.ReduceFlag)) return 0\n      base -= 3 * (force >> Action.ReduceDepthShift)\n      if ((force & Action.ValueMask) < this.cx.parser.minRepeatTerm)\n        return this.stack[base + 1]\n      state = this.stack[base]\n    }\n  }\n\n  /// Find the start position of an instance of any of the given term\n  /// types, or return `null` when none of them are found.\n  ///\n  /// **Note:** this is only reliable when there is at least some\n  /// state that unambiguously matches the given rule on the stack.\n  /// I.e. if you have a grammar like this, where the difference\n  /// between `a` and `b` is only apparent at the third token:\n  ///\n  ///     a { b | c }\n  ///     b { \"x\" \"y\" \"x\" }\n  ///     c { \"x\" \"y\" \"z\" }\n  ///\n  /// Then a parse state after `\"x\"` will not reliably tell you that\n  /// `b` is on the stack. You _can_ pass `[b, c]` to reliably check\n  /// for either of those two rules (assuming that `a` isn't part of\n  /// some rule that includes other things starting with `\"x\"`).\n  ///\n  /// When `before` is given, this keeps scanning up the stack until\n  /// it finds a match that starts before that position.\n  startOf(types: readonly number[], before?: number) {\n    let state = this.state, frame = this.stack.length, {parser} = this.cx\n    for (;;) {\n      let force = parser.stateSlot(state, ParseState.ForcedReduce)\n      let depth = force >> Action.ReduceDepthShift, term = force & Action.ValueMask\n      if (types.indexOf(term) > -1) {\n        let base = frame - (3 * (force >> Action.ReduceDepthShift)), pos = this.stack[base + 1]\n        if (before == null || before > pos) return pos\n      }\n      if (frame == 0) return null\n      if (depth == 0) {\n        frame -= 3\n        state = this.stack[frame]\n      } else {\n        frame -= 3 * (depth - 1)\n        state = parser.getGoto(this.stack[frame - 3], term, true)\n      }\n    }\n  }\n\n  // Apply up to Recover.MaxNext recovery actions that conceptually\n  // inserts some missing token or rule.\n  /// @internal\n  recoverByInsert(next: number): Stack[] {\n    if (this.stack.length >= Recover.MaxInsertStackDepth) return []\n\n    let nextStates = this.cx.parser.nextStates(this.state)\n    if (nextStates.length > Recover.MaxNext || this.stack.length >= Recover.DampenInsertStackDepth) {\n      let best = nextStates.filter(s => s != this.state && this.cx.parser.hasAction(s, next))\n      if (this.stack.length < Recover.DampenInsertStackDepth)\n        for (let i = 0; best.length < Recover.MaxNext && i < nextStates.length; i++)\n          if (best.indexOf(nextStates[i]) < 0) best.push(nextStates[i])\n      nextStates = best\n    }\n    let result: Stack[] = []\n    for (let i = 0; i < nextStates.length && result.length < Recover.MaxNext; i++) {\n      if (nextStates[i] == this.state) continue\n      let stack = this.split()\n      stack.storeNode(Term.Err, stack.pos, stack.pos, 4, true)\n      stack.pushState(nextStates[i], this.pos)\n      stack.score -= Recover.Token\n      result.push(stack)\n    }\n    return result\n  }\n\n  // Force a reduce, if possible. Return false if that can't\n  // be done.\n  /// @internal\n  forceReduce() {\n    let reduce = this.cx.parser.stateSlot(this.state, ParseState.ForcedReduce)\n    if ((reduce & Action.ReduceFlag) == 0) return false\n    if (!this.cx.parser.validAction(this.state, reduce)) {\n      this.storeNode(Term.Err, this.reducePos, this.reducePos, 4, true)\n      this.score -= Recover.Reduce\n    }\n    this.reduce(reduce)\n    return true\n  }\n\n  /// @internal\n  forceAll() {\n    while (!this.cx.parser.stateFlag(this.state, StateFlag.Accepting) && this.forceReduce()) {}\n    return this\n  }\n\n  /// Check whether this state has no further actions (assumed to be a direct descendant of the\n  /// top state, since any other states must be able to continue\n  /// somehow). @internal\n  get deadEnd() {\n    if (this.stack.length != 3) return false\n    let {parser} = this.cx\n    return parser.data[parser.stateSlot(this.state, ParseState.Actions)] == Seq.End &&\n      !parser.stateSlot(this.state, ParseState.DefaultReduce)\n  }\n\n  /// Restart the stack (put it back in its start state). Only safe\n  /// when this.stack.length == 3 (state is directly below the top\n  /// state). @internal\n  restart() {\n    this.state = this.stack[0]\n    this.stack.length = 0\n  }\n\n  /// @internal\n  sameState(other: Stack) {\n    if (this.state != other.state || this.stack.length != other.stack.length) return false\n    for (let i = 0; i < this.stack.length; i += 3)\n      if (this.stack[i] != other.stack[i]) return false\n    return true\n  }\n\n  // Convert the stack's buffer to a syntax tree.\n  /// @internal\n  toTree(): Tree {\n    return Tree.build({buffer: StackBufferCursor.create(this),\n                       group: this.cx.parser.group,\n                       topID: this.cx.topTerm,\n                       maxBufferLength: this.cx.maxBufferLength,\n                       reused: this.cx.reused,\n                       minRepeatType: this.cx.parser.minRepeatTerm})\n  }\n\n  /// Get the parser used by this stack.\n  get parser() { return this.cx.parser }\n\n  /// Test whether a given dialect (by numeric ID, as exported from\n  /// the terms file) is enabled.\n  dialectEnabled(dialectID: number) { return this.cx.dialect.flags[dialectID] }\n}\n\nexport const enum Recover {\n  Token = 200,\n  Reduce = 100,\n  MaxNext = 4,\n  MaxInsertStackDepth = 300,\n  DampenInsertStackDepth = 120\n}\n\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n  top: number\n  rest: number[]\n  offset: number\n\n  constructor(readonly stack: Stack) {\n    this.top = stack.state\n    this.rest = stack.stack\n    this.offset = this.rest.length\n  }\n\n  reduce(action: number) {\n    let term = action & Action.ValueMask, depth = action >> Action.ReduceDepthShift\n    if (depth == 0) {\n      if (this.rest == this.stack.stack) this.rest = this.rest.slice()\n      this.rest.push(this.top, 0, 0)\n      this.offset += 3\n    } else {\n      this.offset -= (depth - 1) * 3\n    }\n    let goto = this.stack.cx.parser.getGoto(this.rest[this.offset - 3], term, true)\n    this.top = goto\n  }\n}\n\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor implements BufferCursor {\n  buffer: number[]\n\n  constructor(public stack: Stack, public pos: number, public index: number) {\n    this.buffer = stack.buffer\n    if (this.index == 0) this.maybeNext()\n  }\n\n  static create(stack: Stack) {\n    return new StackBufferCursor(stack, stack.bufferBase + stack.buffer.length, stack.buffer.length)\n  }\n\n  maybeNext() {\n    let next = this.stack.parent\n    if (next != null) {\n      this.index = this.stack.bufferBase - next.bufferBase\n      this.stack = next\n      this.buffer = next.buffer\n    }\n  }\n\n  get id() { return this.buffer[this.index - 4] }\n  get start() { return this.buffer[this.index - 3] }\n  get end() { return this.buffer[this.index - 2] }\n  get size() { return this.buffer[this.index - 1] }\n\n  next() {\n    this.index -= 4\n    this.pos -= 4\n    if (this.index == 0) this.maybeNext()\n  }\n\n  fork() {\n    return new StackBufferCursor(this.stack, this.pos, this.index)\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Stack} from \"./stack\"\n\n/// Tokenizers write the tokens they read into instances of this class.\nexport class Token {\n  /// The start of the token. This is set by the parser, and should not\n  /// be mutated by the tokenizer.\n  start = -1\n  /// This starts at -1, and should be updated to a term id when a\n  /// matching token is found.\n  value = -1\n  /// When setting `.value`, you should also set `.end` to the end\n  /// position of the token. (You'll usually want to use the `accept`\n  /// method.)\n  end = -1\n\n  /// Accept a token, setting `value` and `end` to the given values.\n  accept(value: number, end: number) {\n    this.value = value\n    this.end = end\n  }\n}\n\n/// This is the interface the parser uses to access the document. It\n/// exposes a sequence of UTF16 code units. Most access will be\n/// sequential, so implementations can optimize for that.\nexport interface InputStream {\n  /// The end of the stream.\n  length: number\n  /// Get the code unit at the given position. Will return -1 when\n  /// asked for a point below 0 or beyond the end of the stream\n  get(pos: number): number\n  /// Read part of the stream as a string\n  read(from: number, to: number): string\n  /// Return a new `InputStream` over the same data, but with a lower\n  /// `length`. Used, for example, when nesting grammars to give the\n  /// inner grammar a narrower view of the input.\n  clip(at: number): InputStream\n}\n\n/// An `InputStream` that is backed by a single, flat string.\nexport class StringStream implements InputStream {\n  constructor(readonly string: string, readonly length = string.length) {}\n\n  get(pos: number) {\n    return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos)\n  }\n  \n  read(from: number, to: number): string { return this.string.slice(from, Math.min(this.length, to)) }\n\n  clip(at: number) { return new StringStream(this.string, at) }\n}\n\nexport interface Tokenizer {\n  token(input: InputStream, token: Token, stack: Stack): void\n  contextual: boolean\n  fallback: boolean\n  extend: boolean\n}\n\n/// @internal\nexport class TokenGroup implements Tokenizer {\n  contextual!: boolean\n  fallback!: boolean\n  extend!: boolean\n\n  constructor(readonly data: Readonly<Uint16Array>, readonly id: number) {}\n\n  token(input: InputStream, token: Token, stack: Stack) { readToken(this.data, input, token, stack, this.id) }\n}\n\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false\n\ninterface ExternalOptions {\n  /// When set to true, mark this tokenizer as depending on the\n  /// current parse stack, which prevents its result from being cached\n  /// between parser actions at the same positions.\n  contextual?: boolean,\n  /// By defaults, when a tokenizer returns a token, that prevents\n  /// tokenizers with lower precedence from even running. When\n  /// `fallback` is true, the tokenizer is allowed to run when a\n  /// previous tokenizer returned a token that didn't match any of the\n  /// current state's actions.\n  fallback?: boolean\n  /// When set to true, tokenizing will not stop after this tokenizer\n  /// has produced a token. (But it will still fail to reach this one\n  /// if a higher-precedence tokenizer produced a token.)\n  extend?: boolean\n}\n\n/// Exports that are used for `@external tokens` in the grammar should\n/// export an instance of this class.\nexport class ExternalTokenizer {\n  /// @internal\n  contextual: boolean\n  /// @internal\n  fallback: boolean\n  /// @internal\n  extend: boolean\n\n  /// Create a tokenizer. The first argument is the function that,\n  /// given an input stream and a token object,\n  /// [fills](#lezer.Token.accept) the token object if it recognizes a\n  /// token. `token.start` should be used as the start position to\n  /// scan from.\n  constructor(\n    /// @internal\n    readonly token: (input: InputStream, token: Token, stack: Stack) => void,\n    options: ExternalOptions = {}\n  ) {\n    this.contextual = !!options.contextual\n    this.fallback = !!options.fallback\n    this.extend = !!options.extend\n  }\n}\n\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data: Readonly<Uint16Array>,\n                   input: InputStream,\n                   token: Token,\n                   stack: Stack,\n                   group: number) {\n  let state = 0, groupMask = 1 << group, dialect = stack.cx.dialect\n  scan: for (let pos = token.start;;) {\n    if ((groupMask & data[state]) == 0) break\n    let accEnd = data[state + 1]\n    // Check whether this state can lead to a token in the current group\n    // Accept tokens in this state, possibly overwriting\n    // lower-precedence / shorter tokens\n    for (let i = state + 3; i < accEnd; i += 2) if ((data[i + 1] & groupMask) > 0) {\n      let term = data[i]\n      if (dialect.allows(term) &&\n          (token.value == -1 || token.value == term || stack.cx.parser.overrides(term, token.value))) {\n        token.accept(term, pos)\n        break\n      }\n    }\n    let next = input.get(pos++)\n    // Do a binary search on the state's edges\n    for (let low = 0, high = data[state + 2]; low < high;) {\n      let mid = (low + high) >> 1\n      let index = accEnd + mid + (mid << 1)\n      let from = data[index], to = data[index + 1]\n      if (next < from) high = mid\n      else if (next >= to) low = mid + 1\n      else { state = data[index + 2]; continue scan }\n    }\n    break\n  }\n}\n","// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\n\nimport {Encode} from \"./constants\"\n\nexport function decodeArray<T extends {[i: number]: number} = Uint16Array>(\n  input: string | T,\n  Type: {new (n: number): T} = Uint16Array as any\n): T {\n  if (typeof input != \"string\") return input\n  let array: T | null = null\n  for (let pos = 0, out = 0; pos < input.length;) {\n    let value = 0\n    for (;;) {\n      let next = input.charCodeAt(pos++), stop = false\n      if (next == Encode.BigValCode) { value = Encode.BigVal; break }\n      if (next >= Encode.Gap2) next--\n      if (next >= Encode.Gap1) next--\n      let digit = next - Encode.Start\n      if (digit >= Encode.Base) { digit -= Encode.Base; stop = true }\n      value += digit\n      if (stop) break\n      value *= Encode.Base\n    }\n    if (array) array[out++] = value\n    else array = new Type(value)\n  }\n  return array!\n}\n","import {Stack, Recover} from \"./stack\"\nimport {Action, Specialize, Term, Seq, StateFlag, ParseState, NodeFlag, File} from \"./constants\"\nimport {InputStream, Token, StringStream, Tokenizer, TokenGroup, ExternalTokenizer} from \"./token\"\nimport {DefaultBufferLength, Tree, TreeBuffer, NodeGroup, NodeType, NodeProp, NodePropSource} from \"lezer-tree\"\nimport {decodeArray} from \"./decode\"\n\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && /\\bparse\\b/.test(process.env.LOG!)\n\nlet stackIDs: WeakMap<Stack, string> | null = null\n\n/// Nested grammar values are associated with nesting positions in the\n/// grammar. If they are null, the nested region is simply skipped\n/// over. If they hold a parser object, that parser is used to parse\n/// the region. To implement dynamic behavior, the value may also be a\n/// function which returns a description of the way the region should\n/// be parsed.\nexport type NestedGrammar = null | Parser | ((input: InputStream, stack: Stack) => NestedGrammarSpec)\n\n/// An object indicating how to proceed with a nested parse.\nexport interface NestedGrammarSpec {\n  /// When given, this is used to provide a parser that should be used\n  /// to parse the content.\n  parser?: Parser\n  /// When `parser` is given, this can be used to configure which top\n  /// rule to parse with it.\n  top?: string\n  /// When `parser` is given, this can be used to configure a dialect.\n  dialect?: string\n  /// This being true means that the outer grammar should use\n  /// the fallback expression provided for the nesting to parse the\n  /// content.\n  stay?: boolean\n  /// Alternatively, `parseNode` may hold a function which will be made\n  /// responsible for parsing the region.\n  parseNode?: (input: InputStream, start: number) => Tree\n  /// An optional extra type to tag the resulting tree with.\n  wrapType?: number,\n  /// When a `filterEnd` property is present, that should hold a\n  /// function that determines whether a given end token (which matches\n  /// the end token specified in the grammar) should be used (true) or\n  /// ignored (false). This is mostly useful for implementing things\n  /// like XML closing tag matching.\n  filterEnd?: (endToken: string) => boolean\n}\n\nclass CacheCursor {\n  trees: Tree[]\n  start = [0]\n  index = [0]\n  nextStart: number = 0\n\n  constructor(tree: Tree) { this.trees = [tree] }\n\n  // `pos` must be >= any previously given `pos` for this cursor\n  nodeAt(pos: number): Tree | TreeBuffer | null {\n    if (pos < this.nextStart) return null\n\n    for (;;) {\n      let last = this.trees.length - 1\n      if (last < 0) { // End of tree\n        this.nextStart = 1e9\n        return null\n      }\n      let top = this.trees[last], index = this.index[last]\n      if (index == top.children.length) {\n        this.trees.pop()\n        this.start.pop()\n        this.index.pop()\n        continue\n      }\n      let next = top.children[index]\n      let start = this.start[last] + top.positions[index]\n      if (start >= pos) return start == pos ? next : null\n      if (next instanceof TreeBuffer) {\n        this.index[last]++\n        this.nextStart = start + next.length\n      } else {\n        this.index[last]++\n        if (start + next.length >= pos) { // Enter this node\n          this.trees.push(next)\n          this.start.push(start)\n          this.index.push(0)\n        }\n      }\n    }\n  }\n}\n\nclass CachedToken extends Token {\n  extended = -1\n  mask = 0\n\n  clear(start: number) {\n    this.start = start\n    this.value = this.extended = -1\n  }\n}\n\nconst dummyToken = new Token\n\nclass TokenCache {\n  tokens: CachedToken[] = []\n  mainToken: Token = dummyToken\n\n  actions: number[] = []\n\n  constructor(parser: Parser) {\n    this.tokens = parser.tokenizers.map(_ => new CachedToken)\n  }\n\n  getActions(stack: Stack, input: InputStream) {\n    let actionIndex = 0\n    let main: Token | null = null\n    let {parser} = stack.cx, {tokenizers} = parser\n\n    let mask = parser.stateSlot(stack.state, ParseState.TokenizerMask)\n    for (let i = 0; i < tokenizers.length; i++) {\n      if (((1 << i) & mask) == 0) continue\n      let tokenizer = tokenizers[i], token = this.tokens[i]\n      if (main && !tokenizer.fallback) continue\n      if (tokenizer.contextual || token.start != stack.pos || token.mask != mask) {\n        this.updateCachedToken(token, tokenizer, stack, input)\n        token.mask = mask\n      }\n\n      if (token.value != Term.Err) {\n        let startIndex = actionIndex\n        if (token.extended > -1) actionIndex = this.addActions(stack, token.extended, token.end, actionIndex)\n        actionIndex = this.addActions(stack, token.value, token.end, actionIndex)\n        if (!tokenizer.extend) {\n          main = token\n          if (actionIndex > startIndex) break\n        }\n      }\n    }\n\n    while (this.actions.length > actionIndex) this.actions.pop()\n    if (!main) {\n      main = dummyToken\n      main.start = stack.pos\n      if (stack.pos == input.length) main.accept(stack.cx.parser.eofTerm, stack.pos)\n      else main.accept(Term.Err, stack.pos + 1)\n    }\n    this.mainToken = main\n    return this.actions\n  }\n\n  updateCachedToken(token: CachedToken, tokenizer: Tokenizer, stack: Stack, input: InputStream) {\n    token.clear(stack.pos)\n    tokenizer.token(input, token, stack)\n    if (token.value > -1) {\n      let {parser} = stack.cx\n\n      for (let i = 0; i < parser.specialized.length; i++) if (parser.specialized[i] == token.value) {\n        let result = parser.specializers[i](input.read(token.start, token.end), stack)\n        if (result >= 0 && stack.cx.dialect.allows(result >> 1)) {\n          if ((result & 1) == Specialize.Specialize) token.value = result >> 1\n          else token.extended = result >> 1\n          break\n        }\n      }\n    } else if (stack.pos == input.length) {\n      token.accept(stack.cx.parser.eofTerm, stack.pos)\n    } else {\n      token.accept(Term.Err, stack.pos + 1)\n    }\n  }\n\n  putAction(action: number, token: number, end: number, index: number) {\n    // Don't add duplicate actions\n    for (let i = 0; i < index; i += 3) if (this.actions[i] == action) return index\n    this.actions[index++] = action\n    this.actions[index++] = token\n    this.actions[index++] = end\n    return index\n  }\n\n  addActions(stack: Stack, token: number, end: number, index: number) {\n    let {state} = stack, {parser} = stack.cx, {data} = parser\n    for (let set = 0; set < 2; set++) {\n      for (let i = parser.stateSlot(state, set ? ParseState.Skip : ParseState.Actions);; i += 3) {\n        if (data[i] == Seq.End) {\n          if (data[i + 1] == Seq.Next) {\n            i = pair(data, i + 2)\n          } else {\n            if (index == 0 && data[i + 1] == Seq.Other)\n              index = this.putAction(pair(data, i + 1), token, end, index)\n            break\n          }\n        }\n        if (data[i] == token) index = this.putAction(pair(data, i + 1), token, end, index)\n      }\n    }\n    return index\n  }\n}\n\n/// Options that can be passed to control parsing.\nexport interface ParseOptions {\n  /// Passing a cached tree is used for incremental parsing. This\n  /// should be a tree whose content is aligned with the current\n  /// document (though a call to `Tree.unchanged`) if any changes were\n  /// made since it was produced. The parser will try to reuse nodes\n  /// from this tree in the new parse, greatly speeding up the parse\n  /// when it can reuse nodes for most of the document.\n  cache?: Tree\n  /// When true, the parser will raise an exception, rather than run\n  /// its error-recovery strategies, when the input doesn't match the\n  /// grammar.\n  strict?: boolean,\n  /// The maximum length of the TreeBuffers generated in the output\n  /// tree. Defaults to 1024.\n  bufferLength?: number,\n  /// The name of the @top declaration to parse from. If not\n  /// specified, the first @top declaration is used.\n  top?: string,\n  /// A space-separated string of dialects to enable.\n  dialect?: string\n}\n\nexport class StackContext {\n  reused: (Tree | TreeBuffer)[] = []\n  tokens: TokenCache\n  constructor(\n    readonly parser: Parser,\n    readonly maxBufferLength: number,\n    readonly input: InputStream,\n    readonly topTerm: number,\n    readonly dialect: Dialect,\n    readonly parent: Stack | null = null,\n    public wrapType: number = -1 // Set to -2 when a stack descending from this nesting event finishes\n  ) {\n    this.tokens = new TokenCache(parser)\n  }\n}\n\nconst recoverDist = 5, maxRemainingPerStep = 3, minBufferLengthPrune = 200, forceReduceLimit = 10\n\n/// A parse context can be used for step-by-step parsing. After\n/// creating it, you repeatedly call `.advance()` until it returns a\n/// tree to indicate it has reached the end of the parse.\nexport class ParseContext {\n  // Active parse stacks.\n  private stacks: Stack[]\n  // The position to which the parse has advanced.\n  public pos = 0\n  private recovering = 0\n  private tokenCount = 0\n  private cache: CacheCursor | null\n  private strict: boolean\n  private nextStackID = 0x2654\n\n  /// @internal\n  constructor(parser: Parser,\n              input: InputStream,\n              options: ParseOptions = {}) {\n    let {cache = undefined, strict = false, bufferLength = DefaultBufferLength, top = undefined, dialect} = options\n    let topInfo = top ? parser.topRules[top] : parser.defaultTop\n    if (!topInfo) throw new RangeError(`Invalid top rule name ${top}`)\n    this.stacks = [Stack.start(new StackContext(parser, bufferLength, input, topInfo[1], parser.parseDialect(dialect)), topInfo[0])]\n    this.strict = strict\n    this.cache = cache ? new CacheCursor(cache) : null\n  }\n\n  /// @internal\n  putStack(stack: Stack) {\n    this.stacks.push(stack)\n    if (this.pos < 0 || stack.pos < this.pos) this.pos = stack.pos\n  }\n\n  /// @internal\n  putStackDedup(stack: Stack) {\n    for (let i = 0; i < this.stacks.length; i++) {\n      let other = this.stacks[i]\n      if (other.pos == stack.pos && other.sameState(stack)) {\n        if (this.stacks[i].score < stack.score) this.stacks[i] = stack\n        return\n      }\n    }\n    this.putStack(stack)\n  }\n\n  /// Move the parser forward. This will process all parse stacks at\n  /// `this.pos` and try to advance them to a further position. If no\n  /// stack for such a position is found, it'll start error-recovery.\n  ///\n  /// When the parse is finished, this will return a syntax tree. When\n  /// not, it returns `null`.\n  advance() {\n    let stacks = this.stacks, pos = this.pos\n    // This will now hold stacks beyond `pos`.\n    this.stacks = []\n    // Will be reset to the next position by `putStack`.\n    this.pos = -1\n    let stopped: Stack[] | null = null, stoppedTokens: number[] | null = null\n\n    // Keep advancing any stacks at `pos` until they either move\n    // forward or can't be advanced. Gather stacks that can't be\n    // advanced further in `stopped`.\n    for (let i = 0; i < stacks.length; i++) {\n      let stack = stacks[i]\n      for (;;) {\n        if (stack.pos > pos) {\n          this.putStack(stack)\n        } else {\n          let result = this.advanceStack(stack, stacks)\n          if (result) {\n            stack = result\n            continue\n          } else {\n            if (!stopped) { stopped = []; stoppedTokens = [] }\n            stopped.push(stack)\n            let tok = stack.cx.tokens.mainToken\n            stoppedTokens!.push(tok.value, tok.end)\n          }\n        }\n        break\n      }\n    }\n\n    if (!this.stacks.length) {\n      let finished = stopped && findFinished(stopped)\n      if (finished) return finished.toTree()\n\n      if (this.strict) {\n        if (verbose && stopped)\n          console.log(\"Stuck with token \" + stopped[0].cx.parser.getName(stopped[0].cx.tokens.mainToken.value))\n        throw new SyntaxError(\"No parse at \" + pos)\n      }\n      if (!this.recovering) this.recovering = recoverDist\n    }\n\n    if (this.recovering && stopped) {\n      let finished = this.runRecovery(stopped, stoppedTokens!)\n      if (finished) return finished.forceAll().toTree()\n    }\n\n    if (this.recovering) {\n      let maxRemaining = this.recovering == 1 ? 1 : this.recovering * maxRemainingPerStep\n      if (this.stacks.length > maxRemaining) {\n        this.stacks.sort((a, b) => b.score - a.score)\n        this.stacks.length = maxRemaining\n      }\n      if (this.stacks.some(s => s.reducePos > pos)) this.recovering--\n    } else if (this.stacks.length > 1) {\n      // Prune stacks that are in the same state, or that have been\n      // running without splitting for a while, to avoid getting stuck\n      // with multiple successful stacks running endlessly on.\n      outer: for (let i = 0; i < this.stacks.length - 1; i++) {\n        let stack = this.stacks[i]\n        for (let j = i + 1; j < this.stacks.length; j++) {\n          let other = this.stacks[j]\n          if (stack.sameState(other) ||\n              stack.buffer.length > minBufferLengthPrune && other.buffer.length > minBufferLengthPrune) {\n            if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n              this.stacks.splice(j--, 1)\n            } else {\n              this.stacks.splice(i--, 1)\n              continue outer\n            }\n          }\n        }\n      }\n    }\n\n    this.tokenCount++\n    return null\n  }\n\n  // Returns an updated version of the given stack, or null if the\n  // stack can't advance normally. When `split` is given, stacks split\n  // off by ambiguous operations will be pushed to that, or given to\n  // `putStack` if they move `pos` forward.\n  private advanceStack(stack: Stack, split: null | Stack[]) {\n    let start = stack.pos, {input, parser} = stack.cx\n    let base = verbose ? this.stackID(stack) + \" -> \" : \"\"\n\n    if (this.cache) {\n      for (let cached = this.cache.nodeAt(start); cached;) {\n        let match = parser.group.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1\n        if (match > -1 && cached.length) {\n          stack.useNode(cached, match)\n          if (verbose) console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`)\n          return stack\n        }\n        if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0) break\n        let inner = cached.children[0]\n        if (inner instanceof Tree) cached = inner\n        else break\n      }\n    }\n\n    let nest = parser.startNested(stack.state)\n    maybeNest: if (nest > -1) {\n      let {grammar, end: endToken, placeholder} = parser.nested[nest]\n      let filterEnd = undefined, parseNode = null, nested, top, dialect, wrapType = undefined\n      if (typeof grammar == \"function\") {\n        let query = grammar(input, stack)\n        if (query.stay) break maybeNest\n        ;({parseNode, parser: nested, top, dialect, filterEnd, wrapType} = query)\n      } else {\n        nested = grammar\n      }\n      let end = this.scanForNestEnd(stack, endToken, filterEnd)\n      let clippedInput = stack.cx.input.clip(end)\n      if (parseNode || !nested) {\n        let node = parseNode ? parseNode(clippedInput, stack.pos) : Tree.empty\n        if (node.length != end - stack.pos) node = new Tree(node.type, node.children, node.positions, end - stack.pos)\n        if (wrapType != null) node = new Tree(parser.group.types[wrapType], [node], [0], node.length)\n        stack.useNode(node, parser.getGoto(stack.state, placeholder, true))\n        return stack\n      } else {\n        let topInfo = top ? nested.topRules[top] : nested.defaultTop\n        let newStack = Stack.start(new StackContext(nested, stack.cx.maxBufferLength, clippedInput, topInfo[1],\n                                                    nested.parseDialect(dialect), stack, wrapType),\n                                   topInfo[0], stack.pos)\n        if (verbose) console.log(base + this.stackID(newStack) + ` (nested)`)\n        return newStack\n      }\n    }\n\n    let defaultReduce = parser.stateSlot(stack.state, ParseState.DefaultReduce)\n    if (defaultReduce > 0) {\n      stack.reduce(defaultReduce)\n      if (verbose) console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & Action.ValueMask)})`)\n      return stack\n    }\n\n    let actions = stack.cx.tokens.getActions(stack, input)\n    for (let i = 0; i < actions.length;) {\n      let action = actions[i++], term = actions[i++], end = actions[i++]\n      let last = i == actions.length || !split\n      let localStack = last ? stack : stack.split()\n      localStack.apply(action, term, end)\n      if (verbose)\n        console.log(base + this.stackID(localStack) + ` (via ${(action & Action.ReduceFlag) == 0 ? \"shift\"\n                     : `reduce of ${parser.getName(action & Action.ValueMask)}`} for ${\n        parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`)\n      if (last) return localStack\n      else if (localStack.pos > start) this.putStack(localStack)\n      else split!.push(localStack)\n    }\n\n    if (stack.cx.parent && stack.pos == input.length) return this.finishNested(stack)\n    return null\n  }\n\n  // Advance a given stack forward as far as it will go. Returns the\n  // (possibly updated) stack if it got stuck, or null if it moved\n  // forward and was given to `putStackDedup`.\n  private advanceFully(stack: Stack) {\n    let pos = stack.pos\n    for (;;) {\n      let result = this.advanceStack(stack, null)\n      if (!result) return stack\n      if (result.pos > pos) {\n        this.putStackDedup(result)\n        return null\n      }\n      stack = result\n    }\n  }\n\n  private runRecovery(stacks: Stack[], tokens: number[]) {\n    let finished: Stack | null = null, restarted = false\n    for (let i = 0; i < stacks.length; i++) {\n      let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1]\n      let base = verbose ? this.stackID(stack) + \" -> \" : \"\"\n\n      if (stack.deadEnd) {\n        if (restarted) continue\n        restarted = true\n        stack.restart()\n        if (verbose) console.log(base + this.stackID(stack) + \" (restarted)\")\n        let stopped = this.advanceFully(stack)\n        if (stopped) stack = stopped\n        else continue\n      }\n\n      let force = stack.split(), forceBase = base\n      for (let j = 0; force.forceReduce() && j < forceReduceLimit; j++) {\n        if (verbose) console.log(forceBase + this.stackID(force) + \" (via force-reduce)\")\n        let stopped = this.advanceFully(force)\n        if (!stopped) break\n        force = stopped\n        if (verbose) forceBase = this.stackID(stopped) + \" -> \"\n      }\n\n      for (let insert of stack.recoverByInsert(token)) {\n        if (verbose) console.log(base + this.stackID(insert) + \" (via recover-insert)\")\n        this.advanceFully(insert)\n      }\n\n      if (stack.cx.input.length > stack.pos) {\n        if (tokenEnd == stack.pos) {\n          tokenEnd++\n          token = Term.Err\n        }\n        stack.recoverByDelete(token, tokenEnd)\n        if (verbose) console.log(base + this.stackID(stack) + ` (via recover-delete ${stack.cx.parser.getName(token)})`)\n        this.putStackDedup(stack)\n      } else if (!stack.cx.parent && (!finished || finished.score < stack.score)) {\n        finished = stack\n      }\n    }\n    return finished\n  }\n\n  /// Force the parse to finish, generating a tree containing the nodes\n  /// parsed so far.\n  forceFinish() {\n    return this.stacks[0].split().forceAll().toTree()\n  }\n\n  /// A value that indicates how successful the parse is so far, as\n  /// the number of error-recovery steps taken divided by the number\n  /// of tokens parsed. Could be used to decide to abort a parse when\n  /// the input doesn't appear to match the grammar at all.\n  get badness() {\n    if (!this.stacks.length) return 0\n    return -(this.stacks[0].score / (Recover.Token * this.tokenCount))\n  }\n\n  private scanForNestEnd(stack: Stack, endToken: TokenGroup, filter?: ((token: string) => boolean)) {\n    let input = stack.cx.input\n    for (let pos = stack.pos; pos < input.length; pos++) {\n      dummyToken.start = pos\n      dummyToken.value = -1\n      endToken.token(input, dummyToken, stack)\n      if (dummyToken.value > -1 && (!filter || filter(input.read(pos, dummyToken.end)))) return pos\n    }\n    return input.length\n  }\n\n  private finishNested(stack: Stack) {\n    if (stack.cx.wrapType == -2) return null // Another nested stack already finished\n    let parent = stack.cx.parent!, tree = stack.forceAll().toTree()\n    let parentParser = parent.cx.parser, info = parentParser.nested[parentParser.startNested(parent.state)]\n    tree = new Tree(tree.type, tree.children, tree.positions.map(p => p - parent!.pos), stack.pos - parent.pos)\n    if (stack.cx.wrapType > -1) tree = new Tree(parentParser.group.types[stack.cx.wrapType], [tree], [0], tree.length)\n    stack.cx.wrapType = -2\n    parent.useNode(tree, parentParser.getGoto(parent.state, info.placeholder, true))\n    if (verbose) console.log(this.stackID(parent) + ` (via unnest ${stack.cx.wrapType > -1 ? parentParser.getName(stack.cx.wrapType) : tree.type.name})`)\n    return parent\n  }\n\n  private stackID(stack: Stack) {\n    let id = (stackIDs || (stackIDs = new WeakMap)).get(stack)\n    if (!id) stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++))\n    return id + stack\n  }\n}\n\nexport class Dialect {\n  constructor(readonly source: string | undefined,\n              readonly flags: readonly boolean[],\n              readonly disabled: null | Uint8Array) {}\n\n  allows(term: number) { return !this.disabled || this.disabled[term] == 0 }\n}\n\ntype ParserSpec = {\n  version: number,\n  states: string | Uint32Array,\n  stateData: string | Uint16Array,\n  goto: string | Uint16Array,\n  nodeNames: string,\n  maxTerm: number,\n  repeatNodeCount: number,\n  nodeProps?: [NodeProp<any>, ...(string | number)[]][],\n  skippedNodes?: number[],\n  tokenData: string,\n  tokenizers: (Tokenizer | number)[],\n  topRules: {[name: string]: [number, number]},\n  nested?: [string, null | NestedGrammar, string | Uint16Array, number][],\n  dialects?: {[name: string]: number},\n  dynamicPrecedences?: {[term: number]: number},\n  specialized?: {term: number, get: (value: string, stack: Stack) => number}[],\n  tokenPrec: number,\n  termNames?: {[id: number]: string}\n}\n\n/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nexport class Parser {\n  /// The parse states for this grammar @internal\n  readonly states: Readonly<Uint32Array>\n  /// A blob of data that the parse states, as well as some\n  /// of `Parser`'s fields, point into @internal\n  readonly data: Readonly<Uint16Array>\n  /// The goto table. See `computeGotoTable` in\n  /// lezer-generator for details on the format @internal\n  readonly goto: Readonly<Uint16Array>\n  /// A node group with the node types used by this parser.\n  readonly group: NodeGroup\n  /// The highest term id @internal\n  readonly maxTerm: number\n  /// The first repeat-related term id @internal\n  readonly minRepeatTerm: number\n  /// The tokenizer objects used by the grammar @internal\n  readonly tokenizers: readonly Tokenizer[]\n  /// Maps top rule names to [state ID, top term ID] pairs.\n  readonly topRules: {[name: string]: [number, number]}\n  /// Metadata about nested grammars used in this grammar @internal\n  readonly nested: readonly {\n    /// A name, used by `withNested`\n    name: string,\n    /// The grammar or grammar query function to use\n    grammar: NestedGrammar,\n    /// A token-recognizing automaton for the end of the nesting\n    end: TokenGroup,\n    /// The id of the placeholder term that appears in the grammar at\n    /// the position of this nesting\n    placeholder: number\n  }[]\n  /// A mapping from dialect names to the tokens that are exclusive\n  /// to them. @internal\n  readonly dialects: {[name: string]: number}\n  /// Null if there are no dynamic precedences, a map from term ids\n  /// to precedence otherwise. @internal\n  readonly dynamicPrecedences: {[term: number]: number} | null\n  /// The token types have specializers (in this.specializers) @internal\n  readonly specialized: Uint16Array\n  /// The specializer functions for the token types in specialized @internal\n  readonly specializers: ((value: string, stack: Stack) => number)[]\n  /// Points into this.data at an array that holds the\n  /// precedence order (higher precedence first) for ambiguous\n  /// tokens @internal\n  readonly tokenPrecTable: number\n  /// An optional object mapping term ids to name strings @internal\n  readonly termNames: null | {[id: number]: string}\n  /// @internal\n  readonly maxNode: number\n\n  private nextStateCache: (readonly number[] | null)[] = []\n  private cachedDialect: Dialect | null = null\n\n  /// @internal\n  constructor(spec: ParserSpec) {\n    if (spec.version != File.Version)\n      throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${File.Version})`)\n    let tokenArray = decodeArray<Uint16Array>(spec.tokenData)\n    let nodeNames = spec.nodeNames.split(\" \")\n    this.minRepeatTerm = nodeNames.length\n    for (let i = 0; i < spec.repeatNodeCount; i++) nodeNames.push(\"\")\n    let nodeProps: {[id: number]: any}[] = []\n    for (let i = 0; i < nodeNames.length; i++) nodeProps.push(noProps)\n    function setProp(nodeID: number, prop: NodeProp<any>, value: any) {\n      if (nodeProps[nodeID] == noProps) nodeProps[nodeID] = Object.create(null)\n      prop.set(nodeProps[nodeID], prop.deserialize(String(value)))\n    }\n    if (spec.nodeProps) for (let propSpec of spec.nodeProps) {\n      let prop = propSpec[0]\n      for (let i = 1; i < propSpec.length;) {\n        let next = propSpec[i++]\n        if (next >= 0) {\n          setProp(next as number, prop, propSpec[i++] as string)\n        } else {\n          let value = propSpec[i + -next] as string\n          for (let j = -next; j > 0; j--) setProp(propSpec[i++] as number, prop, value)\n          i++\n        }\n      }\n    }\n    this.specialized = new Uint16Array(spec.specialized ? spec.specialized.length : 0)\n    this.specializers = []\n    if (spec.specialized) for (let i = 0; i < spec.specialized.length; i++) {\n      this.specialized[i] = spec.specialized[i].term\n      this.specializers[i] = spec.specialized[i].get\n    }\n\n    this.states = decodeArray(spec.states, Uint32Array)\n    this.data = decodeArray(spec.stateData)\n    this.goto = decodeArray(spec.goto)\n    let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1])\n    this.group = new NodeGroup(nodeNames.map((name, i) => {\n      let flags = (i >= this.minRepeatTerm ? NodeFlag.Repeated : 0) |\n        (topTerms.indexOf(i) > -1 ? NodeFlag.Top : 0) |\n        (i == 0 ? NodeFlag.Error : 0) |\n        (spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1 ? NodeFlag.Skipped : 0)\n      return new (NodeType as any)(name, nodeProps[i], i, flags)\n    }))\n    this.maxTerm = spec.maxTerm\n    this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value)\n    this.topRules = spec.topRules\n    this.nested = (spec.nested || []).map(([name, grammar, endToken, placeholder]) => {\n      return {name, grammar, end: new TokenGroup(decodeArray(endToken), 0), placeholder}\n    })\n    this.dialects = spec.dialects || {}\n    this.dynamicPrecedences = spec.dynamicPrecedences || null\n    this.tokenPrecTable = spec.tokenPrec\n    this.termNames = spec.termNames || null\n    this.maxNode = this.group.types.length - 1\n    for (let i = 0, l = this.states.length / ParseState.Size; i < l; i++) this.nextStateCache[i] = null\n  }\n\n  /// Parse a given string or stream.\n  parse(input: InputStream | string, options?: ParseOptions) {\n    if (typeof input == \"string\") input = new StringStream(input)\n    let cx = new ParseContext(this, input, options)\n    for (;;) {\n      let done = cx.advance()\n      if (done) return done\n    }\n  }\n\n  /// Create a `ParseContext`.\n  startParse(input: InputStream | string, options?: ParseOptions) {\n    if (typeof input == \"string\") input = new StringStream(input)\n    return new ParseContext(this, input, options)\n  }\n\n  /// Get a goto table entry @internal\n  getGoto(state: number, term: number, loose = false) {\n    let table = this.goto\n    if (term >= table[0]) return -1\n    for (let pos = table[term + 1];;) {\n      let groupTag = table[pos++], last = groupTag & 1\n      let target = table[pos++]\n      if (last && loose) return target\n      for (let end = pos + (groupTag >> 1); pos < end; pos++)\n        if (table[pos] == state) return target\n      if (last) return -1\n    }\n  }\n\n  /// Check if this state has an action for a given terminal @internal\n  hasAction(state: number, terminal: number) {\n    let data = this.data\n    for (let set = 0; set < 2; set++) {\n      for (let i = this.stateSlot(state, set ? ParseState.Skip : ParseState.Actions), next;; i += 3) {\n        if ((next = data[i]) == Seq.End) {\n          if (data[i + 1] == Seq.Next) next = data[i = pair(data, i + 2)]\n          else if (data[i + 1] == Seq.Other) return pair(data, i + 2)\n          else break\n        }\n        if (next == terminal || next == Term.Err) return pair(data, i + 1)\n      }\n    }\n    return 0\n  }\n\n  /// @internal\n  stateSlot(state: number, slot: number) {\n    return this.states[(state * ParseState.Size) + slot]\n  }\n\n  /// @internal\n  stateFlag(state: number, flag: number) {\n    return (this.stateSlot(state, ParseState.Flags) & flag) > 0\n  }\n\n  /// @internal\n  startNested(state: number) {\n    let flags = this.stateSlot(state, ParseState.Flags)\n    return flags & StateFlag.StartNest ? flags >> StateFlag.NestShift : -1\n  }\n\n  /// @internal\n  validAction(state: number, action: number) {\n    if (action == this.stateSlot(state, ParseState.DefaultReduce)) return true\n    for (let i = this.stateSlot(state, ParseState.Actions);; i += 3) {\n      if (this.data[i] == Seq.End) {\n        if (this.data[i + 1] == Seq.Next) i = pair(this.data, i + 2)\n        else return false\n      }\n      if (action == pair(this.data, i + 1)) return true\n    }\n  }\n\n  /// Get the states that can follow this one through shift actions or\n  /// goto jumps. @internal\n  nextStates(state: number): readonly number[] {\n    let cached = this.nextStateCache[state]\n    if (cached) return cached\n    let result: number[] = []\n    for (let i = this.stateSlot(state, ParseState.Actions);; i += 3) {\n      if (this.data[i] == Seq.End) {\n        if (this.data[i + 1] == Seq.Next) i = pair(this.data, i + 2)\n        else break\n      }\n      if ((this.data[i + 2] & (Action.ReduceFlag >> 16)) == 0 && result.indexOf(this.data[i + 1]) < 0)\n        result.push(this.data[i + 1])\n    }\n    let table = this.goto, max = table[0]\n    for (let term = 0; term < max; term++) {\n      for (let pos = table[term + 1];;) {\n        let groupTag = table[pos++], target = table[pos++]\n        for (let end = pos + (groupTag >> 1); pos < end; pos++)\n          if (table[pos] == state && result.indexOf(target) < 0) result.push(target)\n        if (groupTag & 1) break\n      }\n    }\n    return this.nextStateCache[state] = result\n  }\n\n  /// @internal\n  overrides(token: number, prev: number) {\n    let iPrev = findOffset(this.data, this.tokenPrecTable, prev)\n    return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev\n  }\n\n  /// Create a new `Parser` instance with different values for (some\n  /// of) the nested grammars. This can be used to, for example, swap\n  /// in a different language for a nested grammar or fill in a nested\n  /// grammar that was left blank by the original grammar.\n  withNested(spec: {[name: string]: NestedGrammar | null}) {\n    return this.copy({nested: this.nested.map(obj => {\n      if (!Object.prototype.hasOwnProperty.call(spec, obj.name)) return obj\n      return {name: obj.name, grammar: spec[obj.name], end: obj.end, placeholder: obj.placeholder}\n    })})\n  }\n\n  /// Create a new `Parser` instance whose node types have the given\n  /// props added. You should use [`NodeProp.add`](#tree.NodeProp.add)\n  /// to create the arguments to this method.\n  withProps(...props: NodePropSource[]) {\n    return this.copy({group: this.group.extend(...props)})\n  }\n\n  /// Replace the given external tokenizer with another one, returning\n  /// a new parser object.\n  withTokenizer(from: ExternalTokenizer, to: ExternalTokenizer) {\n    return this.copy({tokenizers: this.tokenizers.map(t => t == from ? to : t)})\n  }\n\n  private copy(props: {[name: string]: any}): Parser {\n    // Hideous reflection-based kludge to make it easy to create a\n    // slightly modified copy of a parser.\n    let obj = Object.create(Parser.prototype)\n    for (let key of Object.keys(this))\n      obj[key] = key in props ? props[key] : (this as any)[key]\n    return obj\n  }\n\n  /// Returns the name associated with a given term. This will only\n  /// work for all terms when the parser was generated with the\n  /// `--names` option. By default, only the names of tagged terms are\n  /// stored.\n  getName(term: number): string {\n    return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.group.types[term].name || term)\n  }\n\n  /// The eof term id is always allocated directly after the node\n  /// types. @internal\n  get eofTerm() { return this.maxNode + 1 }\n\n  /// Tells you whether this grammar has any nested grammars.\n  get hasNested() { return this.nested.length > 0 }\n\n  /// @internal\n  get defaultTop() { return this.topRules[Object.keys(this.topRules)[0]] }\n\n  /// @internal\n  dynamicPrecedence(term: number) {\n    let prec = this.dynamicPrecedences\n    return prec == null ? 0 : prec[term] || 0\n  }\n\n  /// The node type produced by the default top rule.\n  get topType() { return this.group.types[this.defaultTop[1]] }\n\n  /// @internal\n  parseDialect(dialect?: string) {\n    if (this.cachedDialect && this.cachedDialect.source == dialect) return this.cachedDialect\n    let values = Object.keys(this.dialects), flags = values.map(() => false)\n    if (dialect) for (let part of dialect.split(\" \")) {\n      let id = values.indexOf(part)\n      if (id >= 0) flags[id] = true\n    }\n    let disabled: Uint8Array | null = null\n    for (let i = 0; i < values.length; i++) if (!flags[i]) {\n      for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != Seq.End;)\n        (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1\n    }\n    return this.cachedDialect = new Dialect(dialect, flags, disabled)\n  }\n\n  /// (used by the output of the parser generator) @internal\n  static deserialize(spec: ParserSpec) {\n    return new Parser(spec)\n  }\n}\n\nfunction pair(data: Readonly<Uint16Array>, off: number) { return data[off] | (data[off + 1] << 16) }\n\n// Hidden export for use by lezer-generator\n;(Parser as any).TokenGroup = TokenGroup\n\nconst noProps: {[propID: number]: any} = Object.create(null)\n\nfunction findOffset(data: Readonly<Uint16Array>, start: number, term: number) {\n  for (let i = start, next; (next = data[i]) != Seq.End; i++)\n    if (next == term) return i - start\n  return -1\n}\n\nfunction findFinished(stacks: Stack[]) {\n  let best: Stack | null = null\n  for (let stack of stacks) {\n    if (stack.pos == stack.cx.input.length &&\n        stack.cx.parser.stateFlag(stack.state, StateFlag.Accepting) &&\n        (!best || best.score < stack.score))\n      best = stack\n  }\n  return best\n}\n","// This file was generated by lezer-generator. You probably shouldn't edit it.\nimport {Parser} from \"lezer\"\nimport {NodeProp} from \"lezer\"\nconst spec_identifier = {__proto__:null,namespace:8, type:16, class:44, edge:48}\nexport const parser = Parser.deserialize({\n  version: 12,\n  states: \"(dQYQPOOOhQPO'#C_OmQPO'#CcOrQQO'#CqOwQQO'#CsOOQO'#C{'#C{OOQO'#Cu'#CuQYQPOOOOQO'#Ca'#CaO|QQO,58yOOQO'#Ce'#CeO!RQPO,58}O!RQPO,59]O!mQPO,59_OOQO-E6s-E6sOOQO1G.e1G.eOOQO'#Cf'#CfO!RQPO'#CgO!rQQO'#ChO!wQQO'#ClO!|QQO'#CmO#UQPO'#CoOOQO'#C}'#C}OOQO1G.i1G.iOOQO1G.w1G.wO#]QQO1G.yOOQO,59R,59ROOQO,59S,59SO#bQPO,59WO#gQPO'#CnO#lQPO'#DSO#tQPO,59XO#yQQO'#CpO$OQPO'#DXO$WQPO,59ZO$]QPO7+$eOOQO1G.r1G.rO!RQPO,59YO$bQQO,59nO$jQPO,59nOOQO1G.s1G.sO$rQQO,59[O$wQPO,59sO%OQPO,59sOOQO1G.u1G.uO%WQQO<<HPOOQO1G.t1G.tOOQO,59b,59bO%]QQO1G/YOOQO-E6t-E6tOOQO1G.v1G.vOOQO,59c,59cO%eQPO1G/_OOQO-E6u-E6uOOQOAN=kAN=kP%lQQO'#CvP!RQPO'#Cw\",\n  stateData: \"%q~OnOSPOS~OSPOWQOfROhSO~OpWO~OpYO~OU[O~OU]O~OU_O~O]bO^fO_fOp`OraOscOudOzeO~O!OiO~OUkO~OUlO~OUmOyvP~O}{P~P!ROUsO~OttO~OwuO~OxvOyvX~OyxO~O|yO~OxzO}{X~O}|O~O!P}O~OUmOyva~Ox!QOyva~OU!SO~O}{a~P!ROx!UO}{a~OU!WO~OUmOyvi~O}{i~P!ROUmO~O\",\n  goto: \"#s|PPP}P!RP}P!U!X!X!XPPP!X!X!c!X!k}P}P!s!y#PPPP#VP#ZPPPP#mPPPP#pTTOVRXPRZQafZ[aeuz!U!YQndV!Pv!Q!XQqeV!Tz!U!YQVOR^VQwnR!RwQ{qR!V{TUOVQgZQh[QjaWpez!U!YR!OuRodRre\",\n  nodeNames: \"⚠ Comment Schema Namespace namespace Prefix Uri Type type TypeName Variable Optional Reference Pointer Unit Iri Literal Product Component Coproduct Option Class class Edge edge\",\n  maxTerm: 47,\n  nodeProps: [\n    [NodeProp.group, -8,10,11,12,14,15,16,17,19,\"Expression\"]\n  ],\n  skippedNodes: [0,1],\n  repeatNodeCount: 3,\n  tokenData: \"'Y~RiX^!ppq!pqr#est#jz{#u}!O#z!P!Q$V!]!^$h!^!_$m!_!`$z!`!a%]!a!b%j!}#O%o#P#Q%t#T#o%y#o#p'O#q#r'T#y#z!p$f$g!p#BY#BZ!p$IS$I_!p$I|$JO!p$JT$JU!p$KV$KW!p&FU&FV!p~!uYn~X^!ppq!p#y#z!p$f$g!p#BY#BZ!p$IS$I_!p$I|$JO!p$JT$JU!p$KV$KW!p&FU&FV!p~#jO^~~#oQP~OY#jZ~#j~#zO]~~#}P!`!a$Q~$VOw~~$YP!_!`$]~$`P!`!a$c~$hO!P~~$mOx~~$rPs~!`!a$u~$zO_~~$}P!_!`%Q~%TP!P!Q%W~%]O!O~R%bPtP}!O%eQ%jO|Q~%oOr~~%tOz~~%yO}~R&QSUQpP!Q![%y![!]&^!c!}%y#T#o%yQ&cXUQst&^!O!P&^!P!Q&^!Q![&^![!]&^!c!}&^#R#S&^#T#o&^?Ar?As&^~'TOu~~'YOy~\",\n  tokenizers: [0, 1],\n  topRules: {\"Schema\":[0,2]},\n  specialized: [{term: 32, get: value => spec_identifier[value] || -1}],\n  tokenPrec: 0\n})\n","export * from \"./syntax.js\"\nexport * from \"./lint.js\"\n","import { EditorState } from \"@codemirror/next/state\"\nimport { Diagnostic } from \"@codemirror/next/lint\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { SyntaxNode, TreeCursor } from \"lezer-tree\"\n\nimport { APG, ns } from \"@underlay/apg\"\n\nimport { defaultTypes } from \"./stdlib.js\"\n\nconst uriPattern = /^[a-z]+:[a-zA-Z0-9-/_.:#]+$/\nconst namespacePattern = /[#/]$/\n\nexport const errorUnit: APG.Unit = Object.freeze({ type: \"unit\" })\n\nexport interface UpdateProps {\n\tstate: EditorState\n\tschema: APG.Schema\n\tnamespaces: Record<string, string>\n}\n\ntype State = {\n\tview: EditorView\n\tdiagnostics: Diagnostic[]\n\tnamespaces: Record<string, string | null>\n\tbackReferences: Map<Diagnostic, string>\n\tschema: Record<string, APG.Type>\n\ttypes: Record<string, APG.Type>\n}\n\nexport const schemaLinter = (onChange: (props: UpdateProps) => void) => (\n\tview: EditorView\n): Diagnostic[] => {\n\tconst cursor = view.state.tree.cursor()\n\t// printSyntax(\"\", cursor.node)\n\n\tconst state: State = {\n\t\tview: view,\n\t\tdiagnostics: [],\n\t\tnamespaces: {},\n\t\tbackReferences: new Map(),\n\t\ttypes: { ...defaultTypes },\n\t\tschema: {},\n\t}\n\n\tif (cursor.name === \"Schema\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tonChange({ state: view.state, schema: {}, namespaces: {} })\n\t\treturn []\n\t}\n\n\tdo {\n\t\tif (cursor.type.isError) {\n\t\t\treportChildErrors(state, cursor)\n\t\t} else if (cursor.type.name === \"Namespace\") {\n\t\t\tlet namespace: string | null = null\n\n\t\t\tconst uri = cursor.node.getChild(\"Uri\")\n\t\t\tif (uri !== null) {\n\t\t\t\tconst { from, to } = uri\n\t\t\t\tnamespace = view.state.doc.sliceString(from, to)\n\t\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\t\tconst message = `Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\t\tconst message = \"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst { from, to } = identifier\n\t\t\t\tconst prefix = view.state.doc.sliceString(from, to)\n\t\t\t\tif (prefix in state.namespaces) {\n\t\t\t\t\tconst message = `Duplicate namespace: ${prefix}`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tstate.namespaces[prefix] = namespace\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Type\") {\n\t\t\tconst identifier = cursor.node.getChild(\"TypeName\")\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst type = expression === null ? errorUnit : getType(state, expression)\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst { from, to } = identifier\n\t\t\t\tconst name = view.state.doc.sliceString(from, to)\n\t\t\t\tif (name in state.types) {\n\t\t\t\t\tconst message = `Invalid type declaration: type ${name} has already been declared`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tstate.types[name] = type\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Class\") {\n\t\t\tconst node = cursor.node.getChild(\"Uri\")\n\t\t\tif (node === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst uri = getURI(state, node)\n\t\t\tif (uri === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif (uri in state.schema) {\n\t\t\t\tconst { from, to } = node\n\t\t\t\tconst message = `Invalid class declaration: class ${uri} has already been declared`\n\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\t\tstate.schema[uri] =\n\t\t\t\t\texpression === null ? errorUnit : getType(state, expression)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Edge\") {\n\t\t\tconst uris = cursor.node.getChildren(\"Uri\")\n\t\t\tconst names = uris.map((uri) => getURI(state, uri))\n\t\t\tif (uris.length === 3 && names.length === 3) {\n\t\t\t\tconst [sourceNode, labelNode, targetNode] = uris\n\t\t\t\tconst [source, label, target] = names\n\t\t\t\tif (label in state.schema) {\n\t\t\t\t\tconst { from, to } = labelNode\n\t\t\t\t\tconst message = `Invalid edge declaration: class ${label} has already been declared`\n\t\t\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tif (!(source in state.schema)) {\n\t\t\t\t\t\tconst message = `Invalid edge declaration: source class ${source} is not defined`\n\t\t\t\t\t\tconst { to, from } = sourceNode\n\t\t\t\t\t\tconst d: Diagnostic = { to, from, message, severity: \"error\" }\n\t\t\t\t\t\tstate.backReferences.set(d, source)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!(target in state.schema)) {\n\t\t\t\t\t\tconst message = `Invalid edge declaration: target class ${target} is not defined`\n\t\t\t\t\t\tconst { to, from } = targetNode\n\t\t\t\t\t\tconst d: Diagnostic = { to, from, message, severity: \"error\" }\n\t\t\t\t\t\tstate.backReferences.set(d, target)\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.schema[label] = {\n\t\t\t\t\t\ttype: \"product\",\n\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\t[ns.source]: { type: \"reference\", value: source },\n\t\t\t\t\t\t\t[ns.target]: { type: \"reference\", value: target },\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treportChildErrors(state, cursor)\n\t} while (cursor.nextSibling())\n\n\tconst namespaces: [string, string][] = Object.entries(\n\t\tstate.namespaces\n\t).filter(([_, base]) => base !== null) as [string, string][]\n\n\tonChange({\n\t\tstate: view.state,\n\t\tschema: state.schema,\n\t\tnamespaces: Object.fromEntries(namespaces),\n\t})\n\n\treturn state.diagnostics\n\t\t.filter((d) => {\n\t\t\tconst key = state.backReferences.get(d)\n\t\t\tif (key === undefined) {\n\t\t\t\treturn true\n\t\t\t} else if (key in state.schema) {\n\t\t\t\treturn false\n\t\t\t} else {\n\t\t\t\treturn true\n\t\t\t}\n\t\t})\n\t\t.sort(({ from: a }, { from: b }) => (a < b ? -1 : b < a ? 1 : 0))\n}\n\nfunction getURI(state: State, node: SyntaxNode): string {\n\tconst { from, to } = node\n\tconst value = state.view.state.doc.sliceString(from, to)\n\tconst index = value.indexOf(\":\")\n\tif (index === -1) {\n\t\tconst message = `Invalid URI: URIs must be of the form [namespace]:[path]`\n\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\treturn value\n\t}\n\n\tconst prefix = value.slice(0, index)\n\tif (prefix in state.namespaces) {\n\t\tconst namespace = state.namespaces[prefix]\n\t\treturn namespace === null ? value : namespace + value.slice(index + 1)\n\t}\n\n\tconst message = `Invalid URI: namespace ${prefix} is not defined`\n\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\treturn value\n}\n\n// Variable | Optional | Reference | Unit | Iri | Literal | Product | Coproduct\nfunction getType(state: State, node: SyntaxNode): APG.Type {\n\tif (node.name === \"Variable\") {\n\t\tconst { from, to } = node\n\t\tconst value = state.view.state.doc.sliceString(from, to)\n\t\tif (value in state.types) {\n\t\t\treturn state.types[value]\n\t\t} else {\n\t\t\tconst message = `Type ${value} is not defined`\n\t\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn errorUnit\n\t\t}\n\t} else if (node.name === \"Optional\") {\n\t\tconst expression = node.getChild(\"Expression\")\n\t\tconst type: APG.Type =\n\t\t\texpression === null ? errorUnit : getType(state, expression)\n\t\treturn {\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: { [ns.none]: { type: \"unit\" }, [ns.some]: type },\n\t\t}\n\t} else if (node.name === \"Reference\") {\n\t\tconst uri = node.getChild(\"Uri\")\n\t\tif (uri === null) {\n\t\t\treturn errorUnit\n\t\t}\n\n\t\tconst key = getURI(state, uri)\n\t\tif (!(key in state.schema)) {\n\t\t\tconst { to, from } = uri\n\t\t\tconst message = `Reference error: class ${key} is not defined`\n\t\t\tconst d: Diagnostic = { to, from, message, severity: \"error\" }\n\t\t\tstate.backReferences.set(d, key)\n\t\t\tstate.diagnostics.push(d)\n\t\t}\n\n\t\treturn { type: \"reference\", value: key }\n\t} else if (node.name === \"Unit\") {\n\t\treturn { type: \"unit\" }\n\t} else if (node.name === \"Iri\") {\n\t\treturn { type: \"uri\" }\n\t} else if (node.name === \"Literal\") {\n\t\tconst uri = node.getChild(\"Uri\")\n\t\tif (uri === null) {\n\t\t\treturn errorUnit\n\t\t}\n\t\tconst datatype = getURI(state, uri)\n\t\treturn { type: \"literal\", datatype }\n\t} else if (node.name === \"Product\") {\n\t\tconst components: Record<string, APG.Type> = {}\n\t\tfor (const component of node.getChildren(\"Component\")) {\n\t\t\tconst uri = component.getChild(\"Uri\")\n\t\t\tif (uri === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, uri)\n\t\t\tif (key in components) {\n\t\t\t\tconst { to, from } = uri\n\t\t\t\tconst message = `Duplicate product component key`\n\t\t\t\tstate.diagnostics.push({ to, from, message, severity: \"error\" })\n\t\t\t} else {\n\t\t\t\tconst expression = component.getChild(\"Expression\")\n\t\t\t\tcomponents[key] =\n\t\t\t\t\texpression === null ? errorUnit : getType(state, expression)\n\t\t\t}\n\t\t}\n\n\t\treturn { type: \"product\", components }\n\t} else if (node.name === \"Coproduct\") {\n\t\tconst options: Record<string, APG.Type> = {}\n\t\tfor (const option of node.getChildren(\"Option\")) {\n\t\t\tconst uri = option.getChild(\"Uri\")\n\t\t\tif (uri === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, uri)\n\t\t\tif (key in options) {\n\t\t\t\tconst { to, from } = uri\n\t\t\t\tconst message = `Duplicate coproduct option key`\n\t\t\t\tstate.diagnostics.push({ to, from, message, severity: \"error\" })\n\t\t\t} else {\n\t\t\t\tconst expression = option.getChild(\"Expression\")\n\t\t\t\toptions[key] =\n\t\t\t\t\texpression === null ? errorUnit : getType(state, expression)\n\t\t\t}\n\t\t}\n\n\t\treturn { type: \"coproduct\", options }\n\t} else {\n\t\treturn { type: \"unit\" }\n\t}\n}\n\n// function printSyntax(prefix: string, node: SyntaxNode) {\n// \tconsole.log(`${prefix}- ${node.type.name} ${node.from} ${node.to}`)\n// \tfor (let child = node.firstChild; child !== null; child = child.nextSibling) {\n// \t\tprintSyntax(prefix + \"  \", child)\n// \t}\n// }\n\nfunction reportChildErrors(state: State, cursor: TreeCursor) {\n\tif (cursor.type.isError) {\n\t\tconst { from, to } = cursor\n\t\tconst message = `Syntax error`\n\t\tstate.diagnostics.push({ from, to, message, severity: \"error\" })\n\t}\n\tif (cursor.firstChild()) {\n\t\tdo {\n\t\t\treportChildErrors(state, cursor)\n\t\t} while (cursor.nextSibling())\n\t\tcursor.parent()\n\t}\n}\n","import { APG } from \"@underlay/apg\"\nimport { rdf, xsd } from \"n3.ts\"\n\nexport const defaultTypes: Record<string, APG.Type> = {\n\tunit: { type: \"unit\" },\n\turi: { type: \"uri\" },\n\tdecimal: { type: \"literal\", datatype: xsd.decimal },\n\tboolean: { type: \"literal\", datatype: xsd.boolean },\n\tdouble: { type: \"literal\", datatype: xsd.double },\n\tinteger: { type: \"literal\", datatype: xsd.integer },\n\tstring: { type: \"literal\", datatype: xsd.string },\n\tdate: { type: \"literal\", datatype: xsd.date },\n\tdateTime: { type: \"literal\", datatype: xsd.dateTime },\n\thexBinary: { type: \"literal\", datatype: xsd.hexBinary },\n\tbase64Binary: { type: \"literal\", datatype: xsd.base64Binary },\n\tJSON: { type: \"literal\", datatype: rdf.JSON },\n}\n","import {\n\tcontinuedIndent,\n\tindentNodeProp,\n\tfoldNodeProp,\n\tLezerSyntax,\n} from \"@codemirror/next/syntax\"\n\nimport { styleTags } from \"@codemirror/next/highlight\"\nimport { SyntaxNode } from \"lezer-tree\"\n\nimport { parser } from \"../grammar/index.js\"\n\nexport const schemaSyntax = LezerSyntax.define(\n\tparser.withProps(\n\t\tindentNodeProp.add({\n\t\t\tProduct: continuedIndent({ except: /^\\s*\\}/ }),\n\t\t\tCoproduct: continuedIndent({ except: /^\\s*\\]/ }),\n\t\t}),\n\t\tfoldNodeProp.add({\n\t\t\tProduct(subtree: SyntaxNode) {\n\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t},\n\t\t\tCoproduct(subtree: SyntaxNode) {\n\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t},\n\t\t}),\n\t\tstyleTags({\n\t\t\tComment: \"comment\",\n\t\t\tPrefix: \"namespace\",\n\t\t\tTypeName: \"typeName\",\n\t\t\tVariable: \"typeName\",\n\t\t\tUri: \"name\",\n\t\t\t\"Class/Uri\": \"className\",\n\t\t\t\"Edge/Uri\": \"className\",\n\t\t\tProp: \"propertyName\",\n\t\t\tIri: \"string\",\n\t\t\tUnit: \"literal\",\n\t\t\tLiteral: \"string\",\n\t\t\t\"Literal/Uri\": \"string\",\n\t\t\t\"Reference/Uri\": \"className\",\n\t\t\tPointer: \"operator\",\n\t\t\tOptional: \"operator\",\n\t\t\t\"{ }\": \"bracket\",\n\t\t\t\"[ ]\": \"bracket\",\n\t\t\t\"->\": \"separator\",\n\t\t\t\"<-\": \"separator\",\n\t\t\t\";\": \"separator\",\n\t\t\t\"Namespace/Uri\": \"namespace\",\n\t\t\tnamespace: \"keyword\",\n\t\t\ttype: \"keyword\",\n\t\t\tclass: \"keyword\",\n\t\t\tedge: \"keyword\",\n\t\t})\n\t),\n\t{\n\t\tlanguageData: {\n\t\t\tcloseBrackets: { brackets: [\"[\", \"{\", \"<\"] },\n\t\t\tindentOnInput: /^\\s*[\\}\\]]$/,\n\t\t\tcommentTokens: { line: \"#\" },\n\t\t},\n\t}\n)\n","import { Annotation, Facet, combineConfig, StateField, Transaction, StateEffect } from '@codemirror/next/state';\n\nconst fromHistory = Annotation.define();\n/// Transaction annotation that will prevent that annotation from\n/// being combined with other annotations in the undo history. Given\n/// `\"before\"`, it'll prevent merging with previous transactions. With\n/// `\"after\"`, subsequent transactions won't be combined with this\n/// one. With `\"full\"`, the transaction is isolated on both sides.\nconst isolateHistory = Annotation.define();\n/// This facet provides a way to register functions that, given a\n/// transaction, provide a set of effects that the history should\n/// store when inverting the transaction. This can be used to\n/// integrate some kinds of effects in the history, so that they can\n/// be undone (and redone again).\nconst invertedEffects = Facet.define();\nconst historyConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500\n        }, { minDepth: Math.max, newGroupDelay: Math.min });\n    }\n});\nconst historyField = StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr), from = fromHist.side;\n            let other = from == 0 /* Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* Done */ ? fromHist.rest : other, from == 0 /* Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return tr.changes.length ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    }\n});\n/// Create a history extension with the given configuration.\nfunction history(config = {}) {\n    // FIXME register beforeinput handler\n    return [\n        historyField,\n        historyConfig.of(config)\n    ];\n}\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        let historyState = state.field(historyField, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/// Undo a single group of history events. Returns false if no group\n/// was available.\nconst undo = cmd(0 /* Done */, false);\n/// Redo a group of history events. Returns false if no group was\n/// available.\nconst redo = cmd(1 /* Undone */, false);\n/// Undo a selection change.\nconst undoSelection = cmd(0 /* Done */, true);\n/// Redo a selection change.\nconst redoSelection = cmd(1 /* Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/// The amount of undoable change events available in a given state.\nconst undoDepth = depth(0 /* Done */);\n/// The amount of redoable change events available in a given state.\nconst redoDepth = depth(1 /* Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, newGroupDelay, maxLen) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes &&\n            time - this.prevTime < newGroupDelay &&\n            !lastEvent.selectionsAfter.length &&\n            lastEvent.changes.length && event.changes &&\n            isAdjacent(lastEvent.changes, event.changes)) {\n            done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, maxLen, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == \"keyboardselection\" && this.prevUserEvent == userEvent &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) })\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false\n            });\n        }\n    }\n}\nHistoryState.empty = new HistoryState(none, none);\n/// Default key bindings for the undo history.\n///\n/// - Mod-z: [`undo`](#history.undo).\n/// - Mod-y (Mod-Shift-z on macOS): [`redo`](#history.redo).\n/// - Mod-u: [`undoSelection`](#history.undoSelection).\n/// - Alt-u (Mod-Shift-u on macOS): [`redoSelection`](#history.redoSelection).\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nexport { history, historyKeymap, invertedEffects, isolateHistory, redo, redoDepth, redoSelection, undo, undoDepth, undoSelection };\n","import { EditorView, ViewPlugin, themeClass, BlockType, PluginField, Direction } from '@codemirror/next/view';\nimport { RangeValue, Range, RangeSet } from '@codemirror/next/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/next/state';\n\n/// A gutter marker represents a bit of information attached to a line\n/// in a specific gutter. Your own custom markers have to extend this\n/// class.\nclass GutterMarker extends RangeValue {\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// Render the DOM node for this marker, if any.\n    toDOM(_view) { return null; }\n    /// Create a range that places this marker at the given position.\n    at(pos) { return new Range(pos, pos, this); }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nconst defaults = {\n    style: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = Facet.define();\n/// Define an editor gutter.\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = EditorView.baseTheme({\n    $gutters: {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0\n    },\n    \"$$light $gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"$$dark $gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    $gutter: {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        height: \"100%\",\n        overflow: \"hidden\"\n    },\n    $gutterElement: {\n        boxSizing: \"border-box\"\n    },\n    \"$gutterElement.lineNumber\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    }\n});\nconst unfixGutters = Facet.define({\n    combine: values => values.some(x => x)\n});\n/// The gutter-drawing plugin is automatically enabled when you add a\n/// gutter, but you can use this function to explicitly configure it.\n///\n/// Unless `fixed` is explicitly set to `false`, the gutters are\n/// fixed, meaning they don't scroll along with the content\n/// horizontally.\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutters\");\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (!this.updateGutters(update))\n            return;\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport));\n        this.view.viewportLines(line => {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                return;\n            for (let cx of contexts)\n                cx.line(this.view, text);\n        }, 0);\n        for (let cx of contexts)\n            cx.finish();\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (update.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n    }\n    updateGutters(update) {\n        let prev = update.prevState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged;\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters)\n                g.dom.remove();\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        this.dom.remove();\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nclass UpdateContext {\n    constructor(gutter, viewport) {\n        this.gutter = gutter;\n        this.localMarkers = [];\n        this.i = 0;\n        this.height = 0;\n        this.cursor = RangeSet.iter(Array.isArray(gutter.markers) ? gutter.markers : [gutter.markers], viewport.from);\n    }\n    line(view, line) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        while (this.cursor.value && this.cursor.from <= line.from) {\n            if (this.cursor.from == line.from)\n                this.localMarkers.push(this.cursor.value);\n            this.cursor.next();\n        }\n        let forLine = this.gutter.config.lineMarker(view, line, this.localMarkers);\n        if (forLine)\n            this.localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (this.localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, this.localMarkers, gutter.elementClass);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            let markers = this.localMarkers, elt = gutter.elements[this.i];\n            if (sameMarkers(markers, elt.markers)) {\n                markers = elt.markers;\n                this.localMarkers.length = 0;\n            }\n            elt.update(view, line.height, above, markers, gutter.elementClass);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i)\n            gutter.dom.removeChild(gutter.elements.pop().dom);\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutter\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        this.elementClass = themeClass(\"gutterElement\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.visualLineAtHeight(event.clientY, view.contentDOM.getBoundingClientRect().top);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = config.markers(view.state);\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)], this.elementClass);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = this.config.markers(update.state);\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated], this.elementClass);\n        }\n        return this.markers != prevMarkers;\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers, eltClass) {\n        this.height = -1;\n        this.above = 0;\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers, eltClass);\n    }\n    update(view, height, above, markers, cssClass) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (this.markers != markers) {\n            this.markers = markers;\n            for (let ch; ch = this.dom.lastChild;)\n                ch.remove();\n            let cls = cssClass;\n            for (let m of markers) {\n                let dom = m.toDOM(view);\n                if (dom)\n                    this.dom.appendChild(dom);\n                let c = m.elementClass;\n                if (c)\n                    cls += \" \" + c;\n            }\n            this.dom.className = cls;\n        }\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/// Facet used to provide markers to the line number gutter.\nconst lineNumberMarkers = Facet.define();\nconst lineNumberConfig = Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM(view) {\n        let config = view.state.facet(lineNumberConfig);\n        return document.createTextNode(config.formatNumber(this.number));\n    }\n}\nconst lineNumberGutter = gutter({\n    style: \"lineNumber\",\n    markers(state) { return state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.length)\n            return null;\n        // FIXME try to make the line number queries cheaper?\n        return new NumberMarker(view.state.doc.lineAt(line.from).number);\n    },\n    initialSpacer(view) {\n        return new NumberMarker(maxLineNumber(view.state.doc.lines));\n    },\n    updateSpacer(spacer, update) {\n        let max = maxLineNumber(update.view.state.doc.lines);\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    }\n});\n/// Create a line number gutter extension. The order in which the\n/// gutters appear is determined by their extension priority.\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\n\nexport { GutterMarker, gutter, gutters, lineNumberMarkers, lineNumbers };\n","import { StateEffect, StateField, EditorState, Facet, combineConfig } from '@codemirror/next/state';\nimport { Decoration, EditorView, WidgetType, themeClass } from '@codemirror/next/view';\nimport { gutter, GutterMarker } from '@codemirror/next/gutter';\n\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\nconst foldEffect = StateEffect.define({ map: mapRange });\nconst unfoldEffect = StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.visualLineAt(head));\n    }\n    return lines;\n}\nconst foldState = StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.primary;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: [EditorView.decorations]\n});\nfunction foldInside(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = ({ from, to });\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction getFoldable(state, from, to) {\n    return state.facet(EditorState.foldable).reduce((value, f) => value || f(state, from, to), null);\n}\nfunction maybeEnable(state) {\n    return state.field(foldState, false) ? undefined : { append: codeFolding() };\n}\n/// Fold the lines that are selected, if possible.\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = getFoldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: foldEffect.of(range),\n                reconfigure: maybeEnable(view.state) });\n            return true;\n        }\n    }\n    return false;\n};\n/// Unfold folded ranges on selected lines.\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = foldInside(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\n/// Fold all top-level foldable ranges.\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.visualLineAt(pos), range = getFoldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.visualLineAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects, reconfigure: maybeEnable(view.state) });\n    return !!effects.length;\n};\n/// Unfold all folded code.\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n/// Default fold-related key bindings.\n///\n///  - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](#fold.foldCode).\n///  - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](#fold.unfoldCode).\n///  - Ctrl-Alt-[: [`foldAll`](#fold.foldAll).\n///  - Ctrl-Alt-]: [`unfoldAll`](#fold.unfoldAll).\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/// Create an extension that configures code folding.\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = Decoration.replace({ widget: new class extends WidgetType {\n        ignoreEvents() { return false; }\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM();\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = themeClass(\"foldPlaceholder\");\n            element.onclick = event => {\n                let line = view.visualLineAt(view.posAtDOM(event.target));\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\"\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/// Create an extension that registers a fold gutter, which shows a\n/// fold status indicator before lines which can be clicked to fold or\n/// unfold the line.\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    return [\n        gutter({\n            style: \"foldGutter\",\n            lineMarker(view, line) {\n                // FIXME optimize this. At least don't run it for updates that\n                // don't change anything relevant\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    return canUnfold;\n                if (getFoldable(view.state, line.from, line.to))\n                    return canFold;\n                return null;\n            },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: {\n                click: (view, line) => {\n                    let folded = foldInside(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = getFoldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme = EditorView.baseTheme({\n    $foldPlaceholder: {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \"$gutterElement.foldGutter\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\nexport { codeFolding, foldAll, foldCode, foldGutter, foldKeymap, unfoldAll, unfoldCode };\n","import { EditorView } from '@codemirror/next/view';\nimport { EditorSelection, Transaction, CharCategory } from '@codemirror/next/state';\nimport { codePointSize, codePointAt, fromCodePoint } from '@codemirror/next/text';\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\n/// Extension to enable bracket-closing behavior. When a closeable\n/// bracket is typed, its closing bracket is immediately inserted\n/// after the cursor. When closing a bracket directly in front of that\n/// closing bracket, the cursor moves over the existing bracket.\nfunction closeBrackets() {\n    return EditorView.inputHandler.of(handleInput);\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.primary;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = handleInsertion(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/// Command that implements deleting a pair of matching brackets when\n/// the cursor is between them.\nconst deleteBracketPair = ({ state, dispatch }) => {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length),\n                        annotations: Transaction.userEvent.of(\"delete\") };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/// Close-brackets related key bindings. Binds Backspace to\n/// [`deleteBracketPair`](#closebrackets.deleteBracketPair).\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/// Implements the extension's behavior on text insertion. @internal\nfunction handleInsertion(state, ch) {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (ch == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (ch == closed)\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, moved = state.selection.ranges.map(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state.update({ selection: EditorSelection.create(moved, state.selection.primaryIndex),\n        scrollIntoView: true });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos);\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            let prev = state.sliceDoc(pos - 1, pos);\n            if (prev != token && state.charCategorizer(pos)(prev) != CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") });\n}\nfunction nodeStart(state, pos) {\n    let tree = state.tree.resolve(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexport { closeBrackets, closeBracketsKeymap, deleteBracketPair, handleInsertion };\n","import { Decoration, themeClass, ViewPlugin, EditorView, runScopeHandlers } from '@codemirror/next/view';\nimport { StateEffect, StateField, EditorSelection, precedence } from '@codemirror/next/state';\nimport { showPanel, getPanel, panels } from '@codemirror/next/panel';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\" ? x => x.normalize(\"NFKD\") : x => x;\n/// A search cursor provides an iterator over text matches in a\n/// document.\nclass SearchCursor {\n    /// Create a text cursor. The query is the search string, `from` to\n    /// `to` provides the region to search.\n    ///\n    /// When `normalize` is given, it will be called, on both the query\n    /// string and the content it is matched against, before comparing.\n    /// You can, for example, create a case-insensitive search by\n    /// passing `s => s.toLowerCase()`.\n    ///\n    /// Text is always normalized with\n    /// [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    /// (when supported).\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /// The current match (only holds a meaningful value after\n        /// [`next`](#search.SearchCursor.next) has been called and when\n        /// `done` is false).\n        this.value = { from: 0, to: 0 };\n        /// Whether the end of the iterated region has been reached.\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return this.buffer.charCodeAt(this.bufferPos);\n    }\n    /// Look for the next match. Updates the iterator's\n    /// [`value`](#search.SearchCursor.value) and\n    /// [`done`](#search.SearchCursor.done) properties. Should be called\n    /// at least once before using the cursor.\n    next() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = String.fromCharCode(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos++;\n            for (;;) {\n                let peek = this.peek();\n                if (peek < 0xDC00 || peek >= 0xE000)\n                    break;\n                this.bufferPos++;\n                str += String.fromCharCode(peek);\n            }\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\n\nclass Query {\n    constructor(search, replace, caseInsensitive) {\n        this.search = search;\n        this.replace = replace;\n        this.caseInsensitive = caseInsensitive;\n    }\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace && this.caseInsensitive == other.caseInsensitive;\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.search, from, to, this.caseInsensitive ? x => x.toLowerCase() : undefined);\n    }\n    get valid() { return !!this.search; }\n}\nconst setQuery = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst searchState = StateField.define({\n    create() {\n        return new SearchState(new Query(\"\", \"\", false), []);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setQuery))\n                value = new SearchState(effect.value, value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? [createSearchPanel] : []);\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel)]\n});\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = Decoration.mark({ class: themeClass(\"searchMatch\") }), selectedMatchMark = Decoration.mark({ class: themeClass(\"searchMatch.selected\") });\nconst searchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.prevState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel.length || !query.valid)\n            return Decoration.none;\n        let state = this.view.state, viewport = this.view.viewport;\n        let cursor = query.cursor(state.doc, Math.max(0, viewport.from - query.search.length), Math.min(viewport.to + query.search.length, state.doc.length));\n        let builder = new RangeSetBuilder();\n        while (!cursor.next().done) {\n            let { from, to } = cursor.value;\n            let selected = state.selection.ranges.some(r => r.from == from && r.to == to);\n            builder.add(from, to, selected ? selectedMatchMark : matchMark);\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\nfunction findNextMatch(doc, from, query) {\n    let cursor = query.cursor(doc, from).next();\n    if (cursor.done) {\n        cursor = query.cursor(doc, 0, from + query.search.length - 1).next();\n        if (cursor.done)\n            return null;\n    }\n    return cursor.value;\n}\n/// Open the search panel if it isn't already open, and move the\n/// selection to the first match after the current primary selection.\n/// Will wrap around to the start of the document when it reaches the\n/// end.\nconst findNext = searchCommand((view, state) => {\n    let { from, to } = view.state.selection.primary;\n    let next = findNextMatch(view.state.doc, view.state.selection.primary.from + 1, state.query);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\nconst FindPrevChunkSize = 10000;\n// Searching in reverse is, rather than implementing inverted search\n// cursor, done by scanning chunk after chunk forward.\nfunction findPrevInRange(query, doc, from, to) {\n    for (let pos = to;;) {\n        let start = Math.max(from, pos - FindPrevChunkSize - query.search.length);\n        let cursor = query.cursor(doc, start, pos), range = null;\n        while (!cursor.next().done)\n            range = cursor.value;\n        if (range)\n            return range;\n        if (start == from)\n            return null;\n        pos -= FindPrevChunkSize;\n    }\n}\n/// Move the selection to the previous instance of the search query,\n/// before the current primary selection. Will wrap past the start\n/// of the document to start searching at the end again.\nconst findPrevious = searchCommand((view, { query }) => {\n    let { state } = view;\n    let range = findPrevInRange(query, state.doc, 0, state.selection.primary.to - 1) ||\n        findPrevInRange(query, state.doc, state.selection.primary.from + 1, state.doc.length);\n    if (!range)\n        return false;\n    view.dispatch({ selection: { anchor: range.from, head: range.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\n/// Select all instances of the search query.\nconst selectMatches = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), ranges = [];\n    while (!cursor.next().done)\n        ranges.push(EditorSelection.range(cursor.value.from, cursor.value.to));\n    if (!ranges.length)\n        return false;\n    view.dispatch({ selection: EditorSelection.create(ranges) });\n    return true;\n});\n/// Select all instances of the currently selected text.\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.primary.empty)\n        return false;\n    let { from, to } = sel.primary;\n    let ranges = [], primary = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            primary = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({ selection: new EditorSelection(ranges, primary) }));\n    return true;\n};\n/// Replace the current match of the search query.\nconst replaceNext = searchCommand((view, { query }) => {\n    let { state } = view, next = findNextMatch(state.doc, state.selection.primary.from, query);\n    if (!next)\n        return false;\n    let { from, to } = state.selection.primary, changes = [], selection;\n    if (next.from == from && next.to == to) {\n        changes.push({ from: next.from, to: next.to, insert: query.replace });\n        next = findNextMatch(state.doc, next.to, query);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - query.replace.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({ changes, selection, scrollIntoView: !!selection });\n    if (next)\n        maybeAnnounceMatch(view);\n    return true;\n});\n/// Replace all instances of the search query with the given\n/// replacement.\nconst replaceAll = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), changes = [];\n    while (!cursor.next().done) {\n        let { from, to } = cursor.value;\n        changes.push({ from, to, insert: query.replace });\n    }\n    if (!changes.length)\n        return false;\n    view.dispatch({ changes });\n    return true;\n});\nfunction createSearchPanel(view) {\n    let { query } = view.state.field(searchState);\n    return {\n        dom: buildPanel({\n            view,\n            query,\n            updateQuery(q) {\n                if (!query.eq(q)) {\n                    query = q;\n                    view.dispatch({ effects: setQuery.of(query) });\n                }\n            }\n        }),\n        mount() {\n            this.dom.querySelector(\"[name=search]\").select();\n        },\n        pos: 80,\n        style: \"search\"\n    };\n}\n/// Make sure the search panel is open and focused.\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel.length) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        panel.dom.querySelector(\"[name=search]\").focus();\n    }\n    else {\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: state ? undefined : { append: searchExtensions } });\n    }\n    return true;\n};\n/// Close the search panel.\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel.length)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Default search-related key bindings.\n///\n///  * Mod-f: [`openSearchPanel`](#search.openSearchPanel)\n///  * F3, Mod-g: [`findNext`](#search.findNext)\n///  * Shift-F3, Shift-Mod-g: [`findPrevious`](#search.findPrevious)\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches }\n];\nfunction elt(name, props = null, children = []) {\n    let e = document.createElement(name);\n    if (props)\n        for (let prop in props) {\n            let value = props[prop];\n            if (typeof value == \"string\")\n                e.setAttribute(prop, value);\n            else\n                e[prop] = value;\n        }\n    for (let child of children)\n        e.appendChild(typeof child == \"string\" ? document.createTextNode(child) : child);\n    return e;\n}\n// FIXME sync when search state changes independently\nfunction buildPanel(conf) {\n    function p(phrase) { return conf.view.state.phrase(phrase); }\n    let searchField = elt(\"input\", {\n        value: conf.query.search,\n        placeholder: p(\"Find\"),\n        \"aria-label\": p(\"Find\"),\n        class: themeClass(\"textfield\"),\n        name: \"search\",\n        onchange: update,\n        onkeyup: update\n    });\n    let replaceField = elt(\"input\", {\n        value: conf.query.replace,\n        placeholder: p(\"Replace\"),\n        \"aria-label\": p(\"Replace\"),\n        class: themeClass(\"textfield\"),\n        name: \"replace\",\n        onchange: update,\n        onkeyup: update\n    });\n    let caseField = elt(\"input\", {\n        type: \"checkbox\",\n        name: \"case\",\n        checked: !conf.query.caseInsensitive,\n        onchange: update\n    });\n    function update() {\n        conf.updateQuery(new Query(searchField.value, replaceField.value, !caseField.checked));\n    }\n    function keydown(e) {\n        if (runScopeHandlers(conf.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(conf.view);\n        }\n        else if (e.keyCode == 13 && e.target == replaceField) {\n            e.preventDefault();\n            replaceNext(conf.view);\n        }\n    }\n    function button(name, onclick, content) {\n        return elt(\"button\", { class: themeClass(\"button\"), name, onclick }, content);\n    }\n    let panel = elt(\"div\", { onkeydown: keydown }, [\n        searchField,\n        button(\"next\", () => findNext(conf.view), [p(\"next\")]),\n        button(\"prev\", () => findPrevious(conf.view), [p(\"previous\")]),\n        button(\"select\", () => selectMatches(conf.view), [p(\"all\")]),\n        elt(\"label\", null, [caseField, \"match case\"]),\n        elt(\"br\"),\n        replaceField,\n        button(\"replace\", () => replaceNext(conf.view), [p(\"replace\")]),\n        button(\"replaceAll\", () => replaceAll(conf.view), [p(\"replace all\")]),\n        elt(\"button\", { name: \"close\", onclick: () => closeSearchPanel(conf.view), \"aria-label\": p(\"close\") }, [\"×\"]),\n        elt(\"div\", { style: \"position: absolute; top: -10000px\", \"aria-live\": \"polite\" })\n    ]);\n    return panel;\n}\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\n// FIXME this is a kludge\nfunction maybeAnnounceMatch(view) {\n    let { from, to } = view.state.selection.primary;\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    let panel = getPanel(view, createSearchPanel);\n    if (!panel || !panel.dom.contains(view.root.activeElement))\n        return;\n    let live = panel.dom.querySelector(\"div[aria-live]\");\n    live.textContent = view.state.phrase(\"current match\") + \". \" + text;\n}\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button\": {\n            margin: \".2em .5em .2em 0\"\n        },\n        \"& label\": {\n            fontSize: \"80%\"\n        }\n    },\n    \"$$light $searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"$$dark $searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"$$light $searchMatch.selected\": { backgroundColor: \"#ff6a0054\" },\n    \"$$dark $searchMatch.selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    precedence(searchHighlighter, \"override\"),\n    panels(),\n    baseTheme\n];\n\nexport { SearchCursor, closeSearchPanel, findNext, findPrevious, openSearchPanel, replaceAll, replaceNext, searchKeymap, selectMatches, selectSelectionMatches };\n","import { showTooltip, tooltips } from '@codemirror/next/tooltip';\nimport { Facet, combineConfig, StateEffect, StateField, Transaction, Text, EditorSelection, precedence, EditorState } from '@codemirror/next/state';\nimport { EditorView, Direction, themeClass, ViewPlugin, logException, Decoration, WidgetType, keymap } from '@codemirror/next/view';\nimport { codePointAt, codePointSize, fromCodePoint } from '@codemirror/next/text';\n\n/// An instance of this is passed to completion source functions.\nclass CompletionContext {\n    /// Create a new completion context. (Mostly useful for testing\n    /// completion sources—in the editor, the extension will create\n    /// these for you.)\n    constructor(\n    /// The editor state that the completion happens in.\n    state, \n    /// The position at which the completion happens.\n    pos, \n    /// Indicates whether completion was activated explicitly, or\n    /// implicitly by typing. The usual way to respond to this is to\n    /// only return completions when either there is part of a\n    /// completable entity at the cursor, or explicit is true.\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /// @internal\n        this.abortListeners = [];\n    }\n    /// Get the extent, content, and (if there is a token) type of the\n    /// token before `this.pos`.\n    tokenBefore(types) {\n        let token = this.state.tree.resolve(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /// Get the match of the given expression directly before the\n    /// cursor.\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /// Yields true when the query has been aborted. Can be useful in\n    /// asynchronous queries to avoid doing work that will be ignored.\n    get aborted() { return this.abortListeners == null; }\n    /// Allows you to register abort handlers, which will be called when\n    /// the query is\n    /// [aborted](#autocomplete.CompletionContext.aborted).\n    addEventListener(_type, listener) {\n        if (this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nclass Option {\n    constructor(completion, source, match) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n    }\n}\nfunction cur(state) { return state.selection.primary.head; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\nfunction applyCompletion(view, option) {\n    let apply = option.completion.apply || option.completion.label;\n    let result = option.source;\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length }\n        });\n    }\n    else {\n        apply(view, option.completion, result.from, result.to);\n    }\n}\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0);\n            return first == chars[0] ? [0, 0, codePointSize(first)]\n                : first == folded[0] ? [-200 /* CaseFold */, 0, codePointSize(first)] : null;\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [0, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        let preciseTo = 0;\n        let byWordTo = 0, byWordFolded = false;\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Lower */ : next >= 65 && next <= 90 ? 1 /* Upper */ : 0 /* NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Upper */ : ch != ch.toUpperCase() ? 2 /* Lower */ : 0 /* NonWord */);\n            if (type == 1 /* Upper */ || prevType == 0 /* NonWord */ && type != 0 /* NonWord */ &&\n                (this.chars[byWordTo] == next || (this.folded[byWordTo] == next && (byWordFolded = true))))\n                byWord[byWordTo++] = i;\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* CaseFold */, 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* NotStart */, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* CaseFold */ + -700 /* NotStart */, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0) + -700 /* NotStart */, byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* NotStart */ : 0) + -200 /* CaseFold */ + -1100 /* Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            maxRenderedOptions: 100\n        });\n    }\n});\n\nconst MaxInfoWidth = 300;\nconst baseTheme = EditorView.baseTheme({\n    \"$tooltip.autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            overflowY: \"auto\",\n            whiteSpace: \"nowrap\",\n            maxHeight: \"10em\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li\": {\n                cursor: \"pointer\",\n                padding: \"1px 1em 1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li[aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            }\n        }\n    },\n    \"$completionListIncompleteTop:before, $completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \"$tooltip.completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: MaxInfoWidth + \"px\",\n    },\n    \"$tooltip.completionInfo.left\": { right: \"100%\" },\n    \"$tooltip.completionInfo.right\": { left: \"100%\" },\n    \"$$light $snippetField\": { backgroundColor: \"#ddd\" },\n    \"$$dark $snippetField\": { backgroundColor: \"#333\" },\n    \"$snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    $completionMatchedText: {\n        textDecoration: \"underline\"\n    },\n    $completionDetail: {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    $completionIcon: {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\"\n    },\n    \"$completionIcon.function, $completionIcon.method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \"$completionIcon.class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \"$completionIcon.interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \"$completionIcon.variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \"$completionIcon.constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \"$completionIcon.type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \"$completionIcon.enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \"$completionIcon.property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \"$completionIcon.keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \"$completionIcon.namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \"$completionIcon.text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nfunction createListBox(options, id, range) {\n    const ul = document.createElement(\"ul\");\n    ul.id = id;\n    ul.setAttribute(\"role\", \"listbox\");\n    ul.setAttribute(\"aria-expanded\", \"true\");\n    for (let i = range.from; i < range.to; i++) {\n        let { completion, match } = options[i];\n        const li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        let icon = li.appendChild(document.createElement(\"div\"));\n        icon.className = themeClass(\"completionIcon\" + (completion.type ? \".\" + completion.type : \"\"));\n        icon.setAttribute(\"aria-hidden\", \"true\");\n        let labelElt = li.appendChild(document.createElement(\"span\"));\n        labelElt.className = themeClass(\"completionLabel\");\n        let { label, detail } = completion, off = 0;\n        for (let j = 1; j < match.length;) {\n            let from = match[j++], to = match[j++];\n            if (from > off)\n                labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n            let span = labelElt.appendChild(document.createElement(\"span\"));\n            span.appendChild(document.createTextNode(label.slice(from, to)));\n            span.className = themeClass(\"completionMatchedText\");\n            off = to;\n        }\n        if (off < label.length)\n            labelElt.appendChild(document.createTextNode(label.slice(off)));\n        if (detail) {\n            let detailElt = li.appendChild(document.createElement(\"span\"));\n            detailElt.className = themeClass(\"completionDetail\");\n            detailElt.textContent = detail;\n        }\n        li.setAttribute(\"role\", \"option\");\n    }\n    if (range.from)\n        ul.classList.add(themeClass(\"completionListIncompleteTop\"));\n    if (range.to < options.length)\n        ul.classList.add(themeClass(\"completionListIncompleteBottom\"));\n    return ul;\n}\nfunction createInfoDialog(option) {\n    let dom = document.createElement(\"div\");\n    dom.className = themeClass(\"tooltip.completionInfo\");\n    let { info } = option.completion;\n    if (typeof info == \"string\")\n        dom.textContent = info;\n    else\n        dom.appendChild(info(option.completion));\n    return dom;\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfo = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.positionInfo(pos),\n            key: this\n        };\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.list = this.dom.appendChild(createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfo);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        if (update.state.field(this.stateField) != update.prevState.field(this.stateField))\n            this.updateSel();\n    }\n    positioned() {\n        if (this.info)\n            this.view.requestMeasure(this.placeInfo);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfo);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let option = open.options[open.selected];\n            if (option.completion.info) {\n                this.info = this.dom.appendChild(createInfoDialog(option));\n                this.view.requestMeasure(this.placeInfo);\n            }\n        }\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel)\n            return null;\n        let rect = this.dom.getBoundingClientRect();\n        let top = sel.getBoundingClientRect().top - rect.top;\n        if (top < 0 || top > this.list.clientHeight - 10)\n            return null;\n        let left = this.view.textDirection == Direction.RTL;\n        let spaceLeft = rect.left, spaceRight = innerWidth - rect.right;\n        if (left && spaceLeft < Math.min(MaxInfoWidth, spaceRight))\n            left = false;\n        else if (!left && spaceRight < Math.min(MaxInfoWidth, spaceLeft))\n            left = true;\n        return { top, left };\n    }\n    positionInfo(pos) {\n        if (this.info && pos) {\n            this.info.style.top = pos.top + \"px\";\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-left\", pos.left);\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-right\", !pos.left);\n        }\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\nconst MaxOptions = 300;\nfunction sortOptions(active, state) {\n    let options = [];\n    for (let a of active)\n        if (a.hasResult()) {\n            let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n            for (let option of a.result.options)\n                if (match = matcher.match(option.label)) {\n                    if (option.boost != null)\n                        match[0] += option.boost;\n                    options.push(new Option(option, a, match));\n                }\n        }\n    options.sort(cmpOption);\n    return options.length > MaxOptions ? options.slice(0, MaxOptions) : options;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);\n    }\n    static build(active, state, id, prev) {\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return null;\n        let selected = 0;\n        if (prev) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length && !selected; i++) {\n                if (options[i].completion == selectedValue)\n                    selected = i;\n            }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), [{\n                pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n                style: \"autocomplete\",\n                create: completionTooltip(completionState)\n            }], prev ? prev.timestamp : Date.now(), selected);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, [Object.assign(Object.assign({}, this.tooltip[0]), { pos: changes.mapPos(this.tooltip[0].pos) })], this.timestamp, this.selected);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override || state.languageDataAt(\"autocomplete\", cur(state));\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) || new ActiveSource(source, 0 /* Inactive */, false);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open)\n            : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : none; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nfunction makeAttrs(id, selected) {\n    return {\n        \"aria-autocomplete\": \"list\",\n        \"aria-activedescendant\": id + \"-\" + selected,\n        \"aria-owns\": id\n    };\n}\nconst baseAttrs = { \"aria-autocomplete\": \"list\" }, none = [];\nfunction cmpOption(a, b) {\n    let dScore = b.match[0] - a.match[0];\n    if (dScore)\n        return dScore;\n    let lA = a.completion.label, lB = b.completion.label;\n    return lA < lB ? -1 : lA == lB ? 0 : 1;\n}\nclass ActiveSource {\n    constructor(source, state, explicit) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = tr.annotation(Transaction.userEvent), value = this;\n        if (event == \"input\" || event == \"delete\")\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* Inactive */)\n            value = new ActiveSource(value.source, 0 /* Inactive */, false);\n        for (let effect of tr.effects) {\n            if (effect.is(toggleCompletionEffect)) {\n                value = effect.value ? new ActiveSource(value.source, 1 /* Pending */, true)\n                    : new ActiveSource(value.source, 0 /* Inactive */, false);\n            }\n            else if (effect.is(setActiveEffect)) {\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n            }\n        }\n        return value;\n    }\n    handleUserEvent(_tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this : new ActiveSource(this.source, 1 /* Pending */, false);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* Inactive */, false) : this;\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, result, from, to, span) {\n        super(source, 2 /* Result */, explicit);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n        this.span = span;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicit ? pos < from : pos <= from) || pos > to)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* Pending */ : 0 /* Inactive */, false);\n        if (this.span && (from == to || this.span.test(tr.state.sliceDoc(from, to))))\n            return new ActiveResult(this.source, this.explicit, this.result, from, to, this.span);\n        return new ActiveSource(this.source, 1 /* Pending */, this.explicit);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to)\n            ? new ActiveSource(this.source, 0 /* Inactive */, false)\n            : new ActiveResult(this.source, this.explicit, this.result, tr.changes.mapPos(this.from), tr.changes.mapPos(this.to, 1), this.span);\n    }\n    map(mapping) {\n        return new ActiveResult(this.source, this.explicit, this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1), this.span);\n    }\n}\nconst toggleCompletionEffect = StateEffect.define();\nconst setActiveEffect = StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.hasResult() && !mapping.empty ? s.map(mapping) : s); }\n});\nconst setSelectedEffect = StateEffect.define();\nconst completionState = StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: [\n        showTooltip.nFrom(state => state.tooltip),\n        EditorView.contentAttributes.from(state => state.attrs)\n    ]\n});\n\nconst CompletionInteractMargin = 75;\n/// Returns a command that moves the completion selection forward or\n/// backward by the given amount.\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = view.dom.querySelector(\".cm-tooltip-autocomplete\")))\n            step = Math.max(2, Math.floor(tooltip.offsetHeight / tooltip.firstChild.offsetHeight));\n        let selected = cState.open.selected + step * (forward ? 1 : -1), { length } = cState.open.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/// Accept the current completion.\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/// Explicitly start autocompletion.\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: toggleCompletionEffect.of(true) });\n    return true;\n};\n/// Close the currently active completion.\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* Inactive */))\n        return false;\n    view.dispatch({ effects: toggleCompletionEffect.of(false) });\n    return true;\n};\nclass RunningQuery {\n    constructor(source, context) {\n        this.source = source;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.prevState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let event = tr.annotation(Transaction.userEvent);\n            return (tr.selection || tr.docChanged) && event != \"input\" && event != \"delete\";\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && query.time - Date.now() > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* Pending */ && !this.running.some(q => q.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* Pending */ && !this.running.some(r => r.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit);\n        let pending = new RunningQuery(active.source, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: toggleCompletionEffect.of(false) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.source, query.context.explicit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state), query.done.span ? ensureAnchor(query.done.span, true) : null);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.source);\n            if (current && current.state == 1 /* Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.source, 0 /* Inactive */, false);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.slice(0, Math.min(100, lineObj.length)))[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(EditorState.indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3], found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (name ? fields[i].name == name : seq != null && fields[i].seq == seq)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name: name || null });\n                    found = i;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = Decoration.widget({ widget: new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = themeClass(\"snippetFieldPosition\");\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = Decoration.mark({ class: themeClass(\"snippetField\") });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = StateEffect.define();\nconst snippetState = StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: [EditorView.decorations.from(val => val ? val.deco : Decoration.none)]\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/// Convert a snippet template to a function that can apply it.\n/// Snippets are written using syntax like this:\n///\n///     \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n///\n/// Each `${}` placeholder (you may also use `#{}`) indicates a field\n/// that the user can fill in. Its name, if any, will be the default\n/// content for the field.\n///\n/// When the snippet is activated by calling the returned function,\n/// the code is inserted at the given position. Newlines in the\n/// template are indented by the indentation of the start line, plus\n/// one [indent unit](#state.EditorState^indentUnit) per tab character\n/// after the newline.\n///\n/// On activation, (all instances of) the first field are selected.\n/// The user can move between fields with Tab and Shift-Tab as long as\n/// the fields are active. Moving to the last field or moving the\n/// cursor out of the current field deactivates the fields.\n///\n/// The order of fields defaults to textual order, but you can add\n/// numbers to placeholders (`${1}` or `${1:defaultText}`) to provide\n/// a custom order.\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, _completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = { changes: { from, to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            spec.effects = setActive.of(new ActiveSnippet(ranges, 0));\n            if (editor.state.field(snippetState, false) === undefined)\n                spec.reconfigure = { append: [snippetState, snippetKeymap, baseTheme] };\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\nconst snippetKeymap = precedence(keymap([\n    { key: \"Tab\", run: moveField(1), shift: moveField(-1) },\n    { key: \"Escape\", run: clearSnippet }\n]), \"override\");\n\n/// Returns an extension that enables autocompletion.\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        baseTheme,\n        tooltips(),\n        precedence(keymap([\n            { key: \"ArrowDown\", run: moveCompletionSelection(true) },\n            { key: \"ArrowUp\", run: moveCompletionSelection(false) },\n            { key: \"PageDown\", run: moveCompletionSelection(true, \"page\") },\n            { key: \"PageUp\", run: moveCompletionSelection(false, \"page\") },\n            { key: \"Enter\", run: acceptCompletion }\n        ]), \"override\")\n    ];\n}\n/// Basic keybindings for autocompletion.\n///\n///  - Ctrl-Space (Cmd-Space on macOS): [`startCompletion`](#autocomplete.startCompletion)\n///  - Escape: [`closeCompletion`](#autocomplete.closeCompletion)\nconst completionKeymap = [\n    { key: \"Mod-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion }\n];\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/// Given a a fixed array of options, return an autocompleter that\n/// compares those options to the current\n/// [token](#autocomplete.CompletionContext.tokenBefore) and returns\n/// the matching ones.\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [span, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, span } : null;\n    };\n}\n/// Wrap the given completion source so that it will not fire when the\n/// cursor is in a syntax node with one of the given names.\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = context.state.tree.resolve(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n        return source(context);\n    };\n}\n/// Create a completion source from an array of snippet specs.\nfunction completeSnippets(snippets) {\n    return completeFromList(snippets.map(s => Object.assign({}, s, { apply: snippet(s.snippet) })));\n}\n/// Get the current completion status. When completions are available,\n/// this will return `\"active\"`. When completions are pending (in the\n/// process of being queried), this returns `\"pending\"`. Otherwise, it\n/// returns `null`.\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* Inactive */) ? \"active\" : null;\n}\n/// Returns the available completions as an array.\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options.map(o => o.completion) : [];\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, closeCompletion, completeFromList, completeSnippets, completionKeymap, completionStatus, currentCompletions, ifNotIn, moveCompletionSelection, snippet, startCompletion };\n","import { EditorSelection } from '@codemirror/next/state';\nimport { EditorView } from '@codemirror/next/view';\nimport { findColumn, countColumn } from '@codemirror/next/text';\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i), str = line.length > MaxOff ? line.slice(0, 2 * endCol) : line.slice();\n            let start = findColumn(str, 0, startCol, state.tabSize), end = findColumn(str, 0, endCol, state.tabSize);\n            if (!start.leftOver)\n                ranges.push(EditorSelection.range(line.from + start.offset, line.from + end.offset));\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (offset == null)\n        return null;\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.slice(0, offset - line.from), 0, view.state.tabSize);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.prevState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/// Create an extension that enables rectangular selections. By\n/// default, it will rect to left mouse drag with the alt key held\n/// down. When such a selection occurs, the text within the rectangle\n/// that was dragged over will be selected, as one selection\n/// [range](#state.SelectionRange) per line. You can pass a custom\n/// predicate function, which takes a `mousedown` event and returns\n/// true if it should be used for rectangular selection.\nfunction rectangularSelection(eventFilter) {\n    let filter = eventFilter || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexport { rectangularSelection };\n","import { getPanel, panels, showPanel } from '@codemirror/next/panel';\nimport { EditorSelection } from '@codemirror/next/state';\nimport { EditorView, themeClass } from '@codemirror/next/view';\n\nconst extTag = typeof Symbol == \"undefined\" ? \"__goto-line\" : Symbol(\"goto-line\");\nfunction createLineDialog(view) {\n    let dom = document.createElement(\"form\");\n    dom.innerHTML = `<label>${view.state.phrase(\"Go to line:\")} <input class=${themeClass(\"textfield\")} name=line></label>\n<button class=${themeClass(\"button\")} type=submit>${view.state.phrase(\"go\")}</button>`;\n    let input = dom.querySelector(\"input\");\n    function go() {\n        let n = parseInt(input.value, 10);\n        view.dispatch({\n            reconfigure: { [extTag]: [baseTheme] },\n            selection: !isNaN(n) && n > 0 && n <= view.state.doc.lines ? EditorSelection.cursor(view.state.doc.line(n).from) : undefined,\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    dom.addEventListener(\"keydown\", event => {\n        if (event.keyCode == 27) { // Escape\n            event.preventDefault();\n            view.dispatch({ reconfigure: { append: [baseTheme] } });\n            view.focus();\n        }\n        else if (event.keyCode == 13) { // Enter\n            event.preventDefault();\n            go();\n        }\n    });\n    dom.addEventListener(\"submit\", go);\n    return { dom, style: \"gotoLine\", pos: -10 };\n}\n/// Command that shows a dialog asking the user for a line number, and\n/// when a valid number is provided, moves the cursor to that line.\n///\n/// The dialog can be styled with the `panel.gotoLine` theme\n/// selector.\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        view.dispatch({ reconfigure: { append: [panels(), showPanel.of(createLineDialog), baseTheme] } });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n/// Keymap that binds Alt-g to [`gotoLine`](#goto-line.gotoLine).\nconst gotoLineKeymap = [\n    { key: \"Alt-g\", run: gotoLine }\n];\n\nexport { gotoLine, gotoLineKeymap };\n","import { Decoration, themeClass, ViewPlugin, EditorView } from '@codemirror/next/view';\nimport { Facet, combineConfig, CharCategory } from '@codemirror/next/state';\nimport { SearchCursor } from '@codemirror/next/search';\n\n/// Mark lines that have a cursor on them with the \\`$activeLine\\`\n/// theme class.\nfunction highlightActiveLine() {\n    return [defaultTheme, activeLineHighlighter];\n}\nconst lineDeco = Decoration.line({ attributes: { class: themeClass(\"activeLine\") } });\nconst activeLineHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                continue;\n            let line = view.visualLineAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/// This extension highlights text that matches the selection. It uses\n/// the `$selectionMatch` theme class for the highlighting. When\n/// `highlightWordAroundCursor` is enabled, the word at the cursor\n/// itself will be highlighted with `selectionMatch.main`.\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nfunction wordAt(doc, pos, check) {\n    let line = doc.lineAt(pos);\n    let from = pos - line.from, to = pos - line.from;\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (check(line.slice(prev, from)) != CharCategory.Word)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (check(line.slice(to, next)) != CharCategory.Word)\n            break;\n        to = next;\n    }\n    return from == to ? null : line.slice(from, to);\n}\nconst matchDeco = Decoration.mark({ class: themeClass(\"selectionMatch\") });\nconst mainMatchDeco = Decoration.mark({ class: themeClass(\"selectionMatch.main\") });\nconst matchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.primary, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = wordAt(state.doc, range.head, check);\n            if (!query)\n                return Decoration.none;\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            query = state.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return Decoration.none;\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n                    (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = EditorView.baseTheme({\n    \"$$light $activeLine\": { backgroundColor: \"#eff5ff\" },\n    \"$$dark $activeLine\": { backgroundColor: \"#223039\" },\n    \"$selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \"$searchMatch $selectionMatch\": { backgroundColor: \"transparent\" }\n});\n\nexport { highlightActiveLine, highlightSelectionMatches };\n","import { highlightSpecialChars, drawSelection, indentOnInput, keymap } from '@codemirror/next/view';\nexport { EditorView } from '@codemirror/next/view';\nimport { EditorState } from '@codemirror/next/state';\nexport { EditorState } from '@codemirror/next/state';\nimport { history, historyKeymap } from '@codemirror/next/history';\nimport { foldGutter, foldKeymap } from '@codemirror/next/fold';\nimport { lineNumbers } from '@codemirror/next/gutter';\nimport { defaultKeymap } from '@codemirror/next/commands';\nimport { bracketMatching } from '@codemirror/next/matchbrackets';\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/next/closebrackets';\nimport { searchKeymap } from '@codemirror/next/search';\nimport { autocompletion, completionKeymap } from '@codemirror/next/autocomplete';\nimport { commentKeymap } from '@codemirror/next/comment';\nimport { rectangularSelection } from '@codemirror/next/rectangular-selection';\nimport { gotoLineKeymap } from '@codemirror/next/goto-line';\nimport { highlightActiveLine, highlightSelectionMatches } from '@codemirror/next/highlight-selection';\nimport { defaultHighlighter } from '@codemirror/next/highlight';\nimport { lintKeymap } from '@codemirror/next/lint';\n\n/// This is an extension value that just pulls together a whole lot of\n/// extensions that you might want in a basic editor. It is meant as a\n/// convenient helper to quickly set up CodeMirror without installing\n/// and importing a lot of packages.\n///\n/// Specifically, it includes...\n///\n///  - [the default command bindings](#commands.defaultKeymap)\n///  - [line numbers](#gutter.lineNumbers)\n///  - [special character highlighting](#view.highlightSpecialChars)\n///  - [the undo history](#history.history)\n///  - [a fold gutter](#fold.foldGutter)\n///  - [custom selection drawing](#view.drawSelection)\n///  - [multiple selections](#view.EditorView^allowMultipleSelections)\n///  - [reindentation on input](#view.indentOnInput)\n///  - [the default highlighter](#highlight.defaultHighlighter)\n///  - [bracket matching](#matchbrackets.bracketMatching)\n///  - [bracket closing](#closebrackets.closeBrackets)\n///  - [autocompletion](#autocomplete.autocompletion)\n///  - [rectangular selection](#rectangular-selection.rectangularSelection)\n///  - [active line highlighting](#highlight-selection.highlightActiveLine)\n///  - [selection match highlighting](#highlight-selection.highlightSelectionMatches)\n///  - [search](#search.searchKeymap)\n///  - [go to line](#goto-line.gotoLineKeymap)\n///  - [commenting](#comment.commentKeymap)\n///  - [linting](#lint.lintKeymap)\n///\n/// (You'll probably want to add some language package to your setup\n/// too.)\n///\n/// This package does not allow customization. The idea is that, once\n/// you decide you want to configure your editor more precisely, you\n/// take this package's source (which is just a bunch of imports and\n/// an array literal), copy it into your own code, and adjust it as\n/// desired.\nconst basicSetup = [\n    lineNumbers(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    defaultHighlighter,\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...commentKeymap,\n        ...gotoLineKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n];\n\nexport { basicSetup };\n","import { Transaction, EditorSelection, IndentContext, EditorState, CharCategory } from '@codemirror/next/state';\nimport { Text, countColumn, codePointSize, codePointAt } from '@codemirror/next/text';\nimport { Direction } from '@codemirror/next/view';\nimport { matchBrackets } from '@codemirror/next/matchbrackets';\nimport { NodeProp } from 'lezer-tree';\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.primaryIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, annotations: Transaction.userEvent.of(\"keyboardselection\") });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one character to the left (which is backward in\n/// left-to-right text, forward in right-to-left text).\nconst cursorCharLeft = view => cursorByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection one character to the right.\nconst cursorCharRight = view => cursorByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection one character forward.\nconst cursorCharForward = view => cursorByChar(view, true);\n/// Move the selection one character backward.\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection across one group of word or non-word (but also\n/// non-space) characters.\nconst cursorGroupLeft = view => cursorByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection one group to the right.\nconst cursorGroupRight = view => cursorByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection one group forward.\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/// Move the selection one group backward.\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = state.tree.resolve(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/// Move the cursor over the next syntactic element to the left.\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the cursor over the next syntactic element to the right.\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one line up.\nconst cursorLineUp = view => cursorByLine(view, false);\n/// Move the selection one line down.\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction cursorByPage(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward, view.dom.clientHeight) : rangeEnd(range, forward));\n}\n/// Move the selection one page up.\nconst cursorPageUp = view => cursorByPage(view, false);\n/// Move the selection one page down.\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.visualLineAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head > line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/// Move the selection to the next line wrap point, or to the end of\n/// the line if there isn't one left on this line.\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection to previous line wrap point, or failing that to\n/// the start of the line.\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection to the start of the line.\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from, 1));\n/// Move the selection to the end of the line.\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/// Move the selection to the bracket matching the one it is currently\n/// on, if any.\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/// Extend the selection to the bracket matching the one the selection\n/// head is currently on, if any.\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/// Move the selection head one character to the left, while leaving\n/// the anchor in place.\nconst selectCharLeft = view => selectByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection head one character to the right.\nconst selectCharRight = view => selectByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection head one character forward.\nconst selectCharForward = view => selectByChar(view, true);\n/// Move the selection head one character backward.\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/// Move the selection head one [group](#commands.cursorGroupLeft) to\n/// the left.\nconst selectGroupLeft = view => selectByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection head one group to the right.\nconst selectGroupRight = view => selectByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection head one group forward.\nconst selectGroupForward = view => selectByGroup(view, true);\n/// Move the selection head one group backward.\nconst selectGroupBackward = view => selectByGroup(view, false);\n/// Move the selection head over the next syntactic element to the left.\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the selection head over the next syntactic element to the right.\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/// Move the selection head one line up.\nconst selectLineUp = view => selectByLine(view, false);\n/// Move the selection head one line down.\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, view.dom.clientHeight));\n}\n/// Move the selection head one page up.\nconst selectPageUp = view => selectByPage(view, false);\n/// Move the selection head one page down.\nconst selectPageDown = view => selectByPage(view, true);\n/// Move the selection head to the next line boundary.\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection head to the previous line boundary.\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection head to the start of the line.\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from));\n/// Move the selection head to the end of the line.\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to));\n/// Move the selection to the start of the document.\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/// Move the selection to the end of the document.\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/// Move the selection head to the start of the document.\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: 0 }));\n    return true;\n};\n/// Move the selection head to the end of the document.\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: state.doc.length }));\n    return true;\n};\n/// Select the entire document.\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Expand the selection to cover entire lines.\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: new EditorSelection(ranges), annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Select the next syntactic construct that is larger than the\n/// selection. Note that this will only work insofar as the language\n/// [syntaxes](#state.EditorState^syntax) you use builds up a full\n/// syntax tree.\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = state.tree.resolve(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/// Simplify the current selection. When multiple ranges are selected,\n/// reduce it to its primary range. Otherwise, if the selection is\n/// non-empty, convert it to a cursor selection.\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = new EditorSelection([cur.primary]);\n    else if (!cur.primary.empty)\n        selection = new EditorSelection([EditorSelection.cursor(cur.primary.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(view, by) {\n    let { state } = view, changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"delete\") });\n    return true;\n}\nconst deleteByChar = (view, forward, codePoint) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), before;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, 0, state.tabSize), drop = col % state.indentUnit || state.indentUnit;\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        return pos;\n    }\n    let target;\n    if (codePoint) {\n        let next = line.slice(pos - line.from + (forward ? 0 : -2), pos - line.from + (forward ? 2 : 0));\n        let size = next ? codePointSize(codePointAt(next, 0)) : 1;\n        target = forward ? Math.min(state.doc.length, pos + size) : Math.max(0, pos - size);\n    }\n    else {\n        target = line.findClusterBreak(pos - line.from, forward) + line.from;\n    }\n    if (target == pos && line.number != (forward ? state.doc.lines : 1))\n        target += forward ? 1 : -1;\n    return target;\n});\n/// Delete the selection, or, for cursor selections, the code point\n/// before the cursor.\nconst deleteCodePointBackward = view => deleteByChar(view, false, true);\n/// Delete the selection, or, for cursor selections, the code point\n/// after the cursor.\nconst deleteCodePointForward = view => deleteByChar(view, true, true);\n/// Delete the selection, or, for cursor selections, the character\n/// before the cursor.\nconst deleteCharBackward = view => deleteByChar(view, false, false);\n/// Delete the selection or the character after the cursor.\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (view, forward) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        let next, nextChar;\n        if (pos == (forward ? line.to : line.from)) {\n            if (line.number == (forward ? state.doc.lines : 1))\n                break;\n            line = state.doc.line(line.number + (forward ? 1 : -1));\n            next = forward ? line.from : line.to;\n            nextChar = \"\\n\";\n        }\n        else {\n            next = line.findClusterBreak(pos - line.from, forward) + line.from;\n            nextChar = line.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        }\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextCat != CharCategory.Space)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/// Delete the selection or backward until the end of the next\n/// [group](#view.EditorView.moveByGroup).\nconst deleteGroupBackward = view => deleteByGroup(view, false);\n/// Delete the selection or forward until the end of the next group.\nconst deleteGroupForward = view => deleteByGroup(view, true);\n/// Delete the selection, or, if it is a cursor selection, delete to\n/// the end of the line. If the cursor is directly at the end of the\n/// line, delete the line break after it.\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.visualLineAt(pos).to;\n    if (pos < lineEnd)\n        return lineEnd;\n    return Math.max(view.state.doc.length, pos + 1);\n});\n/// Delete all whitespace directly before a line end from the\n/// document.\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    let changes = [];\n    for (let pos = 0, iter = state.doc.iterLines(); !iter.next().done;) {\n        let trailing = iter.value.search(/\\s+$/);\n        if (trailing > -1)\n            changes.push({ from: pos + trailing, to: pos + iter.value.length });\n        pos += iter.value.length + 1;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes }));\n    return true;\n};\n/// Replace each selection range with a line break, leaving the cursor\n/// on the line before the break.\nconst splitLine = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") }));\n    return true;\n};\n/// Flip the characters before and after the cursor(s).\nconst transposeChars = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : line.findClusterBreak(pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : line.findClusterBreak(pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (upto == startLine.number)\n            blocks[blocks.length - 1].to = endLine.to;\n        else\n            blocks.push({ from: startLine.from, to: endLine.to });\n        upto = endLine.number;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        if (forward)\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.slice() + state.lineBreak });\n        else\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.slice() });\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Move the selected lines up one line.\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/// Move the selected lines down one line.\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Create a copy of the selected lines. Keep the selection in the top copy.\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/// Create a copy of the selected lines. Keep the selection in the bottom copy.\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/// Delete selected lines.\nconst deleteLine = view => {\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true });\n    return true;\n};\nfunction getIndentation(cx, pos) {\n    for (let f of cx.state.facet(EditorState.indentation)) {\n        let result = f(cx, pos);\n        if (result > -1)\n            return result;\n    }\n    return -1;\n}\n/// Replace the selection with a newline.\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = state.tree.resolve(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/// Replace the selection with a newline and indent the newly created\n/// line(s). If the current line consists only of whitespace, this\n/// will also delete that whitespace. When the cursor is between\n/// matching brackets, an additional newline will be inserted after\n/// the cursor.\nconst insertNewlineAndIndent = ({ state, dispatch }) => {\n    let changes = state.changeByRange(({ from, to }) => {\n        let explode = from == to && isBetweenBrackets(state, from);\n        let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n        let indent = getIndentation(cx, from);\n        if (indent < 0)\n            indent = /^\\s*/.exec(state.doc.lineAt(from).slice(0, 50))[0].length;\n        let line = state.doc.lineAt(from);\n        while (to < line.to && /\\s/.test(line.slice(to - line.from, to + 1 - line.from)))\n            to++;\n        if (explode)\n            ({ from, to } = explode);\n        else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.slice(0, from)))\n            from = line.from;\n        let insert = [\"\", state.indentString(indent)];\n        if (explode)\n            insert.push(state.indentString(cx.lineIndent(line)));\n        return { changes: { from, to, insert: Text.of(insert) },\n            range: EditorSelection.cursor(from + 1 + indent) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let line = state.doc.lineAt(range.from);;) {\n            if (line.number > atLine) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            if (range.to <= line.to)\n                break;\n            line = state.doc.lineAt(line.to + 1);\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/// Auto-indent the selected lines. This uses the [indentation\n/// facet](#state.EditorState^indentation) as source for auto-indent\n/// information.\nconst indentSelection = ({ state, dispatch }) => {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent < 0)\n            return;\n        let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, 200)))[0];\n        let norm = state.indentString(indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes));\n    return true;\n};\n/// Add a [unit](#state.EditorState^indentUnit) of indentation to all\n/// selected lines.\nconst indentMore = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(EditorState.indentUnit) });\n    })));\n    return true;\n};\n/// Remove a [unit](#state.EditorState^indentUnit) of indentation from\n/// all selected lines.\nconst indentLess = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let lineStart = line.slice(0, Math.min(line.length, 200));\n        let space = /^\\s*/.exec(lineStart)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, 0, state.tabSize), insert = state.indentString(Math.max(0, col - state.indentUnit)), keep = 0;\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    })));\n    return true;\n};\n/// Array of key bindings containing the Emacs-style bindings that are\n/// available on macOS by default.\n///\n///  - Ctrl-b: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - Ctrl-f: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-p: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - Ctrl-n: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Ctrl-a: [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Ctrl-e: [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - Ctrl-d: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-h: [`deleteCharBackward`](#commands.deleteCharBackward)\n///  - Ctrl-k: [`deleteToLineEnd`](#commands.deleteToLineEnd)\n///  - Alt-d: [`deleteGroupForward`](#commands.deleteGroupForward)\n///  - Ctrl-Alt-h: [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-o: [`splitLine`](#commands.splitLine)\n///  - Ctrl-t: [`transposeChars`](#commands.transposeChars)\n///  - Alt-f: [`cursorGroupForward`](#commands.cursorGroupForward) ([`selectGroupForward`](#commands.selectGroupForward) with Shift)\n///  - Alt-b: [`cursorGroupBackward`](#commands.cursorGroupBackward) ([`selectGroupBackward`](#commands.selectGroupBackward) with Shift)\n///  - Alt-<: [`cursorDocStart`](#commands.cursorDocStart)\n///  - Alt->: [`cursorDocEnd`](#commands.cursorDocEnd)\n///  - Ctrl-v: [`cursorPageDown`](#commands.cursorPageDown)\n///  - Alt-v: [`cursorPageUp`](#commands.cursorPageUp)\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Alt-d\", run: deleteGroupForward },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Alt-f\", run: cursorGroupForward, shift: selectGroupForward },\n    { key: \"Alt-b\", run: cursorGroupBackward, shift: selectGroupBackward },\n    { key: \"Alt-<\", run: cursorDocStart },\n    { key: \"Alt->\", run: cursorDocEnd },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n    { key: \"Alt-v\", run: cursorPageUp },\n];\n/// An array of key bindings closely sticking to platform-standard or\n/// widely used bindings. (This includes the bindings from\n/// [`emacsStyleKeymap`](#commands.emacsStyleKeymap), with their `key`\n/// property changed to `mac`.)\n///\n///  - ArrowLeft: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - ArrowRight: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](#commands.cursorGroupLeft) ([`selectGroupLeft`](#commands.selectGroupLeft) with Shift)\n///  - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](#commands.cursorGroupRight) ([`selectGroupRight`](#commands.selectGroupRight) with Shift)\n///  - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - ArrowUp: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - ArrowDown: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Cmd-ArrowUp (on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - PageUp: [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - PageDown: [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - Home: [`cursorLineBoundaryBackward`](#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](#commands.selectLineBoundaryBackward) with Shift)\n///  - End: [`cursorLineBoundaryForward`](#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](#commands.selectLineBoundaryForward) with Shift)\n///  - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Enter: [`insertNewlineAndIndent`](#commands.insertNewlineAndIndent)\n///  - Ctrl-a (Cmd-a on macOS): [`selectAll`](#commands.selectAll)\n///  - Backspace: [`deleteCodePointBackward`](#commands.deleteCodePointBackward)\n///  - Delete: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](#commands.deleteGroupForward)\nconst standardKeymap = [\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCodePointBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n].concat(emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/// The default keymap. Includes all bindings from\n/// [`standardKeymap`](#commands.standardKeymap) plus the following:\n///\n/// - Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](#commands.selectSyntaxLeft) with Shift)\n/// - Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](#commands.cursorSyntaxRight) ([`selectSyntaxRight`](#commands.selectSyntaxRight) with Shift)\n/// - Alt-ArrowUp: [`moveLineUp`](#commands.moveLineUp)\n/// - Alt-ArrowDown: [`moveLineDown`](#commands.moveLineDown)\n/// - Shift-Alt-ArrowUp: [`copyLineUp`](#commands.copyLineUp)\n/// - Shift-Alt-ArrowDown: [`copyLineDown`](#commands.copyLineDown)\n/// - Escape: [`simplifySelection`](#commands.simplifySelection)\n/// - Ctrl-l (Cmd-l on macOS): [`selectLine`](#commands.selectLine)\n/// - Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](#commands.selectParentSyntax)\n/// - Ctrl-[ (Cmd-[ on macOS): [`indentLess`](#commands.indentLess)\n/// - Ctrl-] (Cmd-] on macOS): [`indentMore`](#commands.indentMore)\n/// - Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](#commands.indentSelection)\n/// - Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](#commands.deleteLine)\n/// - Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](#commands.cursorMatchingBracket)\nconst defaultKeymap = [\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket }\n].concat(standardKeymap);\n\nexport { copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteCodePointBackward, deleteCodePointForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteTrailingWhitespace, emacsStyleKeymap, indentLess, indentMore, indentSelection, insertNewline, insertNewlineAndIndent, moveLineDown, moveLineUp, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, transposeChars };\n","import { EditorSelection } from '@codemirror/next/state';\n\n/// Comments or uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst toggleLineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineUncomment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Comments or uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst toggleBlockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockUncomment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Default key bindings for this package.\n///\n///  - Ctrl-/ (Cmd-/ on macOS): [\\`toggleLineComment\\`](#comment.toggleLineComment).\n///  - Shift-Alt-a: [\\`toggleBlockComment\\`](#comment.toggleBlockComment).\nconst commentKeymap = [\n    { key: \"Mod-/\", run: toggleLineComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n];\nfunction dispatch(cmd, target) {\n    const tr = cmd(target.state);\n    if (!tr)\n        return false;\n    target.dispatch(tr);\n    return true;\n}\nvar CommentOption;\n(function (CommentOption) {\n    CommentOption[CommentOption[\"Toggle\"] = 0] = \"Toggle\";\n    CommentOption[CommentOption[\"OnlyComment\"] = 1] = \"OnlyComment\";\n    CommentOption[CommentOption[\"OnlyUncomment\"] = 2] = \"OnlyUncomment\";\n})(CommentOption || (CommentOption = {}));\nfunction getConfig(state, pos = state.selection.primary.head) {\n    return state.languageDataAt(\"commentTokens\", pos)[0] || {};\n}\nconst toggleBlockCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.block ? new BlockCommenter(config.block.open, config.block.close).toggle(option, state) : null;\n};\nconst toggleLineCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.line ? new LineCommenter(config.line).toggle(option, state) : null;\n};\n// This class performs toggle, comment and uncomment\n// of block comments in languages that support them.\n// The `open` and `close` arguments refer to the open and close\n// tokens of which this `BlockCommenter` is made up.\nclass BlockCommenter {\n    constructor(open, close, margin = \" \") {\n        this.open = open;\n        this.close = close;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const selectionCommented = this.isSelectionCommented(state);\n        if (selectionCommented !== null) {\n            if (option !== CommentOption.OnlyComment) {\n                return state.update({\n                    changes: selectionCommented.map(({ open, close }) => [\n                        { from: open.pos - this.open.length, to: open.pos + open.margin },\n                        { from: close.pos - close.margin, to: close.pos + this.close.length }\n                    ])\n                });\n            }\n        }\n        else {\n            if (option !== CommentOption.OnlyUncomment) {\n                return state.update(state.changeByRange(range => {\n                    const shift = (this.open + this.margin).length;\n                    return {\n                        changes: [{ from: range.from, insert: this.open + this.margin },\n                            { from: range.to, insert: this.margin + this.close }],\n                        range: EditorSelection.range(range.anchor + shift, range.head + shift)\n                    };\n                }));\n            }\n        }\n        return null;\n    }\n    /// Determines whether all selection ranges in `state` are block-commented.\n    isSelectionCommented(state) {\n        let result = [];\n        for (const range of state.selection.ranges) {\n            const x = this.isRangeCommented(state, range);\n            if (x === null)\n                return null;\n            result.push(x);\n        }\n        return result;\n    }\n    /// Determines if the `range` is block-commented in the given `state`.\n    /// The `range` must be a valid range in `state`.\n    isRangeCommented(state, range) {\n        let textBefore = state.sliceDoc(range.from - SearchMargin, range.from);\n        let textAfter = state.sliceDoc(range.to, range.to + SearchMargin);\n        let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n        let beforeOff = textBefore.length - spaceBefore;\n        if (textBefore.slice(beforeOff - this.open.length, beforeOff) == this.open &&\n            textAfter.slice(spaceAfter, spaceAfter + this.close.length) == this.close) {\n            return { open: { pos: range.from - spaceBefore, margin: spaceBefore && 1 },\n                close: { pos: range.to + spaceAfter, margin: spaceAfter && 1 } };\n        }\n        let startText, endText;\n        if (range.to - range.from <= 2 * SearchMargin) {\n            startText = endText = state.sliceDoc(range.from, range.to);\n        }\n        else {\n            startText = state.sliceDoc(range.from, range.from + SearchMargin);\n            endText = state.sliceDoc(range.to - SearchMargin, range.to);\n        }\n        let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n        let endOff = endText.length - endSpace - this.close.length;\n        if (startText.slice(startSpace, startSpace + this.open.length) == this.open &&\n            endText.slice(endOff, endOff + this.close.length) == this.close) {\n            return { open: { pos: range.from + startSpace + this.open.length,\n                    margin: /\\s/.test(startText.charAt(startSpace + this.open.length)) ? 1 : 0 },\n                close: { pos: range.to - endSpace - this.close.length,\n                    margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n        }\n        return null;\n    }\n}\nconst SearchMargin = 50;\n// This class performs toggle, comment and uncomment\n// of line comments in languages that support them.\n// The `lineCommentToken` argument refer to the token of\n// which this `LineCommenter` is made up.\nclass LineCommenter {\n    constructor(lineCommentToken, margin = \" \") {\n        this.lineCommentToken = lineCommentToken;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const linesAcrossSelection = [];\n        const linesAcrossRange = {};\n        for (let i = 0; i < state.selection.ranges.length; i++) {\n            const lines = getLinesInRange(state.doc, state.selection.ranges[i]);\n            linesAcrossSelection.push(...lines);\n            linesAcrossRange[i] = lines;\n        }\n        const column = this.isRangeCommented(state, linesAcrossSelection);\n        if (column.isRangeLineSkipped) {\n            if (option != CommentOption.OnlyComment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length > 1 && column.isLineSkipped[line.number])\n                            continue;\n                        const pos = line.from + column.minCol;\n                        const posAfter = column.minCol + this.lineCommentToken.length;\n                        const marginLen = line.slice(posAfter, posAfter + 1) == \" \" ? 1 : 0;\n                        changes.push({ from: pos, to: pos + this.lineCommentToken.length + marginLen });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        else {\n            if (option != CommentOption.OnlyUncomment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length <= 1 || !column.isLineSkipped[line.number])\n                            changes.push({ from: line.from + column.minCol, insert: this.lineCommentToken + this.margin });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        return null;\n    }\n    isRangeCommented(_state, lines) {\n        let minCol = Infinity;\n        let isRangeLineDiscarded = true;\n        const isLineSkipped = [];\n        for (const line of lines) {\n            const str = line.slice(0, Math.min(line.length, SearchMargin));\n            const col = /^\\s*/.exec(str)[0].length;\n            if ((lines.length == 1 || col < str.length) && col < minCol) {\n                minCol = col;\n            }\n            if (isRangeLineDiscarded && (lines.length == 1 || col < str.length) &&\n                str.slice(col, col + this.lineCommentToken.length) != this.lineCommentToken) {\n                isRangeLineDiscarded = false;\n            }\n            isLineSkipped[line.number] = col == str.length;\n        }\n        return { minCol: minCol, isRangeLineSkipped: isRangeLineDiscarded, isLineSkipped: isLineSkipped };\n    }\n}\n// Computes the lines spanned by `range`.\n/// @internal\nfunction getLinesInRange(doc, range) {\n    let line = doc.lineAt(range.from);\n    const lines = [];\n    while (line.from + line.length < range.to ||\n        (line.from <= range.to && range.to <= line.to)) {\n        lines.push(line);\n        if (line.number + 1 <= doc.lines) {\n            line = doc.line(line.number + 1);\n        }\n        else {\n            break;\n        }\n    }\n    return lines;\n}\n\nexport { blockComment, blockUncomment, commentKeymap, lineComment, lineUncomment, toggleBlockComment, toggleLineComment };\n","import { NodeProp } from 'lezer-tree';\nimport { StyleModule } from 'style-mod';\nimport { ViewPlugin, EditorView, Decoration } from '@codemirror/next/view';\nimport { precedence, EditorState } from '@codemirror/next/state';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\n/// A tag system defines a set of node (token) tags used for\n/// highlighting. You'll usually want to use the\n/// [default](#highlight.defaultTags) set, but it is possible to\n/// define your own custom system when that doesn't fit your use case.\nclass TagSystem {\n    /// Define a tag system. Each tag identifies a type of syntactic\n    /// element, which can have a single type and any number of flags.\n    /// The `flags` argument should be an array of flag names, and the\n    /// `types` argument an array of type names. Type names may have a\n    /// `\"name=parentName\"` format to specify that this type is an\n    /// instance of some other type, which means that, if no styling for\n    /// the type itself is provided, it'll fall back to the parent\n    /// type's styling.\n    ///\n    /// You can specify a `subtypes` property to assign a given number\n    /// of sub-types to each type. These are automatically generated\n    /// types with the base type name suffixed with `#1` to `#`_`N`_\n    /// (where _N_ is the number given in the `subtypes` field) that\n    /// have the base type as parent type.\n    constructor(options) {\n        /// @internal\n        this.typeNames = [\"\"];\n        /// @internal\n        this.typeIDs = Object.create(null);\n        /// @internal\n        this.prop = new NodeProp();\n        this.flags = options.flags;\n        this.types = options.types;\n        this.flagMask = Math.pow(2, this.flags.length) - 1;\n        this.typeShift = this.flags.length;\n        let subtypes = options.subtypes || 0;\n        let parentNames = [undefined];\n        this.typeIDs[\"\"] = 0;\n        let typeID = 1;\n        for (let type of options.types) {\n            let match = /^([\\w\\-]+)(?:=([\\w-]+))?$/.exec(type);\n            if (!match)\n                throw new RangeError(\"Invalid type name \" + type);\n            let id = typeID++;\n            this.typeNames[id] = match[1];\n            this.typeIDs[match[1]] = id;\n            parentNames[id] = match[2];\n            for (let i = 0; i < subtypes; i++) {\n                let subID = typeID++, name = match[1] + \"#\" + (i + 1);\n                this.typeNames[subID] = name;\n                this.typeIDs[name] = subID;\n                parentNames[subID] = match[1];\n            }\n        }\n        this.parents = parentNames.map(name => {\n            if (name == null)\n                return 0;\n            let id = this.typeIDs[name];\n            if (id == null)\n                throw new RangeError(`Unknown parent type '${name}' specified`);\n            return id;\n        });\n        if (this.flags.length > 30 || this.typeNames.length > Math.pow(2, 30 - this.flags.length))\n            throw new RangeError(\"Too many style tag flags to fit in a 30-bit integer\");\n    }\n    /// @internal\n    get(name) {\n        let value = 0;\n        for (let part of name.split(\" \"))\n            if (part) {\n                let flag = this.flags.indexOf(part);\n                if (flag > -1) {\n                    value += 1 << flag;\n                }\n                else {\n                    let typeID = this.typeIDs[part];\n                    if (typeID == null)\n                        throw new RangeError(`Unknown tag type '${part}'`);\n                    if (value >> this.typeShift)\n                        throw new RangeError(`Multiple tag types specified in '${name}'`);\n                    value += typeID << this.typeShift;\n                }\n            }\n        return value;\n    }\n    /// @internal\n    getWithMode(name) {\n        let mode = name[0] == \"+\" ? 1 /* Inherit */ : name[0] == \"!\" ? 0 /* Opaque */ : 2 /* Normal */;\n        return { mode, tag: this.get(mode == 2 /* Normal */ ? name : name.slice(1)) };\n    }\n    /// Manually add a highlighting tag to a set of node props.\n    addTagProp(name, props = {}) {\n        let { mode, tag } = this.getWithMode(name);\n        return this.prop.set(props, new Rule(tag, mode, noContext));\n    }\n    /// Create a\n    /// [`PropSource`](https://lezer.codemirror.net/docs/ref#tree.PropSource)\n    /// that adds node properties for this system. See\n    /// [`styleTags`](#highlight.styleTags) for documentation of the\n    /// argument object.\n    add(tags) {\n        let byName = Object.create(null);\n        for (let prop in tags) {\n            let value = tags[prop];\n            let { mode, tag } = this.getWithMode(value);\n            for (let part of prop.split(\" \")) {\n                let stack = part.split(\"/\"), inner = stack[stack.length - 1];\n                let context = stack.length > 1 ? stack.slice(0, stack.length - 1).map(s => s == \"*\" ? null : s) : noContext;\n                let rule = new Rule(tag, mode, context);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n        }\n        return this.prop.add(byName);\n    }\n    /// Create a highlighter extension for this system, styling the\n    /// given tags using the given CSS objects.\n    highlighter(spec) {\n        let styling = new Styling(this, spec);\n        return [\n            precedence(ViewPlugin.define(view => new Highlighter(view, this.prop, styling), {\n                decorations: v => v.decorations\n            }), \"fallback\"),\n            EditorView.styleModule.of(styling.module)\n        ];\n    }\n    /// @internal\n    specificity(tag) {\n        let flags = tag & this.flagMask, spec = 0;\n        for (let i = 1; i <= this.flags.length; i++)\n            if (flags & (1 << i))\n                spec++;\n        for (let type = tag >> this.typeShift; type; type = this.parents[type])\n            spec += /#/.test(this.typeNames[type]) ? 500 : 1000;\n        return spec;\n    }\n}\n/// The set of highlighting tags used by regular language packages and\n/// themes.\nconst defaultTags = new TagSystem({\n    flags: [\"invalid\", \"meta\", \"standard\",\n        \"definition\", \"constant\", \"local\", \"control\",\n        \"link\", \"strong\", \"emphasis\", \"monospace\",\n        \"changed\", \"inserted\", \"deleted\"],\n    subtypes: 7,\n    types: [\n        \"comment\",\n        \"lineComment=comment\",\n        \"blockComment=comment\",\n        \"docComment=comment\",\n        \"name\",\n        \"variableName=name\",\n        \"typeName=name\",\n        \"propertyName=name\",\n        \"className=name\",\n        \"labelName=name\",\n        \"functionName=name\",\n        \"namespace=name\",\n        \"literal\",\n        \"string=literal\",\n        \"docString=string\",\n        \"character=string\",\n        \"number=literal\",\n        \"integer=number\",\n        \"float=number\",\n        \"bool=literal\",\n        \"regexp=literal\",\n        \"escape=literal\",\n        \"color=literal\",\n        \"content\",\n        \"heading=content\",\n        \"list=content\",\n        \"quote=content\",\n        \"keyword\",\n        \"self=keyword\",\n        \"null=keyword\",\n        \"atom=keyword\",\n        \"unit=keyword\",\n        \"modifier=keyword\",\n        \"operatorKeyword=keyword\",\n        \"operator\",\n        \"derefOperator=operator\",\n        \"arithmeticOperator=operator\",\n        \"logicOperator=operator\",\n        \"bitwiseOperator=operator\",\n        \"compareOperator=operator\",\n        \"updateOperator=operator\",\n        \"typeOperator=operator\",\n        \"punctuation\",\n        \"separator=punctuation\",\n        \"bracket=punctuation\",\n        \"angleBracket=bracket\",\n        \"squareBracket=bracket\",\n        \"paren=bracket\",\n        \"brace=bracket\"\n    ]\n});\nconst noContext = [];\nclass Rule {\n    constructor(tag, mode, context, next) {\n        this.tag = tag;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    sort(other) {\n        if (!other || other.context.length < this.context.length) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n}\n/// Used to add a set of tags to a language syntax via\n/// [`Parser.withProps`](https://lezer.codemirror.net/docs/ref#lezer.Parser.withProps).\n///\n/// The argument object maps node selectors to [tag\n/// names](#highlight.TagSystem), optionally prefixed with:\n///\n///  - `+`, to make the style apply not just to the node itself, but\n///    also to child nodes (which by default replace the styles\n///    assigned by their parent nodes)\n///\n///  - `!` to make a node _opaque_, meaning its child nodes are\n///    ignored for styling purposes.\n///\n/// Node selectors can be [node\n/// names](https://lezer.codemirror.net/docs/ref#tree.NodeType.name),\n/// or groups of node names separated by spaces. It is possible to\n/// combine multiple node names with slashes, as in\n/// `\"Block/Declaration/VariableName\"`, to match the final node but\n/// only if its direct parent nodes are the other nodes mentioned. A\n/// `*` can be used as a wildcard in such a path. (But only matches a\n/// single parent—wildcards that match multiple parents aren't\n/// supported, both for efficiency reasons and because Lezer trees\n/// make it rather hard to reason about what they would match.)\n///\n/// For example:\n///\n/// ```javascript\n/// parser.withProps(\n///   styleTags({\n///     // Style Number and BigNumber nodes\n///     \"Number BigNumber\": \"number\",\n///     // Style Escape nodes whose parent is String\n///     \"String/Escape\": \"escape\",\n///     // Style anything inside Attributes nodes\n///     \"Attributes\": \"!meta\",\n///     // Add a style to all content inside Italic nodes\n///     \"Italic\": \"+emphasis\"\n///   })\n/// )\n/// ```\nconst styleTags = (tags) => defaultTags.add(tags);\n/// Create a highlighter theme that adds the given styles to the given\n/// tags. The spec's property names must be [tag\n/// names](#highlight.defaultTags) or comma-separated lists of tag\n/// names. The values should be\n/// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n/// style objects that define the CSS for that tag.\nconst highlighter = (spec) => defaultTags.highlighter(spec);\nclass StyleRule {\n    constructor(type, flags, specificity, cls) {\n        this.type = type;\n        this.flags = flags;\n        this.specificity = specificity;\n        this.cls = cls;\n    }\n}\nclass Styling {\n    constructor(tags, spec) {\n        this.tags = tags;\n        this.cache = Object.create(null);\n        let modSpec = Object.create(null);\n        let rules = [];\n        for (let prop in spec) {\n            let cls = StyleModule.newName();\n            modSpec[\".\" + cls] = spec[prop];\n            for (let part of prop.split(/\\s*,\\s*/)) {\n                let tag = tags.get(part);\n                rules.push(new StyleRule(tag >> tags.typeShift, tag & tags.flagMask, tags.specificity(tag), cls));\n            }\n        }\n        this.rules = rules.sort((a, b) => b.specificity - a.specificity);\n        this.module = new StyleModule(modSpec);\n    }\n    match(tag) {\n        let known = this.cache[tag];\n        if (known != null)\n            return known;\n        let result = \"\";\n        let type = tag >> this.tags.typeShift, flags = tag & this.tags.flagMask;\n        for (;;) {\n            for (let rule of this.rules) {\n                if (rule.type == type && (rule.flags & flags) == rule.flags) {\n                    if (result)\n                        result += \" \";\n                    result += rule.cls;\n                    flags &= ~rule.flags;\n                    if (type)\n                        break;\n                }\n            }\n            if (type)\n                type = this.tags.parents[type];\n            else\n                break;\n        }\n        return this.cache[tag] = result;\n    }\n}\nclass Highlighter {\n    constructor(view, prop, styling) {\n        this.prop = prop;\n        this.styling = styling;\n        // Reused stacks for buildDeco\n        this.nodeStack = [\"\"];\n        this.classStack = [\"\"];\n        this.inheritStack = [\"\"];\n        this.tree = view.state.tree;\n        this.decorations = this.buildDeco(view.visibleRanges, this.tree);\n    }\n    update(update) {\n        let syntax = update.state.facet(EditorState.syntax);\n        if (!syntax.length) {\n            this.decorations = Decoration.none;\n        }\n        else if (syntax[0].parsePos(update.state) < update.view.viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else if (this.tree != syntax[0].getTree(update.state) || update.viewportChanged) {\n            this.tree = syntax[0].getTree(update.state);\n            this.decorations = this.buildDeco(update.view.visibleRanges, this.tree);\n        }\n    }\n    buildDeco(ranges, tree) {\n        let builder = new RangeSetBuilder();\n        let start, curClass, depth;\n        function flush(pos, style) {\n            if (pos > start && style)\n                builder.add(start, pos, Decoration.mark({ class: style })); // FIXME cache these\n            start = pos;\n        }\n        let { nodeStack, classStack, inheritStack } = this;\n        for (let { from, to } of ranges) {\n            curClass = \"\";\n            depth = 0;\n            start = from;\n            tree.iterate({\n                from, to,\n                enter: (type, start) => {\n                    depth++;\n                    let inheritedClass = inheritStack[depth - 1];\n                    let cls = inheritedClass;\n                    let rule = type.prop(this.prop), opaque = false;\n                    while (rule) {\n                        if (!rule.context.length || matchContext(rule.context, nodeStack, depth)) {\n                            let style = this.styling.match(rule.tag);\n                            if (style) {\n                                if (cls)\n                                    cls += \" \";\n                                cls += style;\n                                if (rule.mode == 1 /* Inherit */)\n                                    inheritedClass = cls;\n                                else if (rule.mode == 0 /* Opaque */)\n                                    opaque = true;\n                            }\n                            break;\n                        }\n                        rule = rule.next;\n                    }\n                    if (cls != curClass) {\n                        flush(start, curClass);\n                        curClass = cls;\n                    }\n                    if (opaque) {\n                        depth--;\n                        return false;\n                    }\n                    classStack[depth] = cls;\n                    inheritStack[depth] = inheritedClass;\n                    nodeStack[depth] = type.name;\n                    return undefined;\n                },\n                leave: (_t, _s, end) => {\n                    depth--;\n                    let backTo = classStack[depth];\n                    if (backTo != curClass) {\n                        flush(Math.min(to, end), curClass);\n                        curClass = backTo;\n                    }\n                }\n            });\n        }\n        return builder.finish();\n    }\n}\nfunction matchContext(context, stack, depth) {\n    if (context.length > depth - 1)\n        return false;\n    for (let d = depth - 1, i = context.length - 1; i >= 0; i--, d--) {\n        let check = context[i];\n        if (check && check != stack[d])\n            return false;\n    }\n    return true;\n}\n/// A default highlighter (works well with light themes).\nconst defaultHighlighter = highlighter({\n    deleted: { textDecoration: \"line-through\" },\n    inserted: { textDecoration: \"underline\" },\n    link: { textDecoration: \"underline\" },\n    strong: { fontWeight: \"bold\" },\n    emphasis: { fontStyle: \"italic\" },\n    keyword: { color: \"#708\" },\n    \"atom, bool\": { color: \"#219\" },\n    number: { color: \"#164\" },\n    string: { color: \"#a11\" },\n    \"regexp, escape, string#2\": { color: \"#e40\" },\n    \"variableName definition\": { color: \"#00f\" },\n    typeName: { color: \"#085\" },\n    className: { color: \"#167\" },\n    \"name#2\": { color: \"#256\" },\n    \"propertyName definition\": { color: \"#00c\" },\n    comment: { color: \"#940\" },\n    meta: { color: \"#555\" },\n    invalid: { color: \"#f00\" },\n});\n\nexport { TagSystem, defaultHighlighter, defaultTags, highlighter, styleTags };\n","import { EditorView, Decoration, themeClass, ViewPlugin, logException, WidgetType } from '@codemirror/next/view';\nimport { StateEffect, StateField } from '@codemirror/next/state';\nimport { hoverTooltip } from '@codemirror/next/tooltip';\nimport { panels, showPanel, getPanel } from '@codemirror/next/panel';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, diagnostics.length, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state) {\n    return state.field(lintState, false) ? undefined : { append: [\n            lintState,\n            EditorView.decorations.compute([lintState], state => {\n                let { selected, panel } = state.field(lintState);\n                return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                    activeMark.range(selected.from, selected.to)\n                ]);\n            }),\n            panels(),\n            hoverTooltip(lintTooltip),\n            baseTheme\n        ] };\n}\n/// State effect that is used to update the current set of\n/// diagnostics.\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: setDiagnosticsEffect.of(diagnostics),\n        reconfigure: maybeEnableLint(state)\n    };\n}\nconst setDiagnosticsEffect = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst movePanelSelection = StateEffect.define();\nconst lintState = StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let ranges = Decoration.set(effect.value.map((d) => {\n                    return d.from < d.to\n                        ? Decoration.mark({\n                            attributes: { class: themeClass(\"lintRange.\" + d.severity) },\n                            diagnostic: d\n                        }).range(d.from, d.to)\n                        : Decoration.widget({\n                            widget: new DiagnosticWidget(d),\n                            diagnostic: d\n                        }).range(d.from);\n                }));\n                value = new LintState(ranges, value.panel, findDiagnostic(ranges));\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel ? [s.panel] : []),\n        EditorView.decorations.from(s => s.diagnostics)]\n});\nconst activeMark = Decoration.mark({ class: themeClass(\"lintRange.active\") });\nfunction lintTooltip(view, check) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(0, view.state.doc.length, (start, end, { spec }) => {\n        if (check(start, end)) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(start, stackStart);\n            stackEnd = Math.max(end, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        style: \"lint\",\n        create() {\n            let dom = document.createElement(\"ul\");\n            for (let d of found)\n                dom.appendChild(renderDiagnostic(view, d));\n            return { dom };\n        }\n    };\n}\n/// Command to open and focus the lint panel.\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: maybeEnableLint(view.state) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/// Command to close the lint panel, when open.\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Move the selection to the next diagnostic.\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.primary, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/// A set of default key bindings for the lint functionality.\n///\n/// - Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](#lint.openLintPanel)\n/// - F8: [\\`nextDiagnostic\\`](#lint.nextDiagnostic)\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst LintDelay = 500;\n/// Given a diagnostic source, this function returns an extension that\n/// enables linting with that source. It will be called whenever the\n/// editor is idle (after its content changed).\nfunction linter(source) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.lintTime = Date.now() + LintDelay;\n            this.set = true;\n            this.run = this.run.bind(this);\n            setTimeout(this.run, LintDelay);\n        }\n        run() {\n            let now = Date.now();\n            if (now < this.lintTime - 10) {\n                setTimeout(this.run, this.lintTime - now);\n            }\n            else {\n                this.set = false;\n                let { state } = this.view;\n                Promise.resolve(source(this.view)).then(annotations => {\n                    var _a, _b;\n                    if (this.view.state.doc == state.doc &&\n                        (annotations.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations));\n                }, error => { logException(this.view.state, error); });\n            }\n        }\n        update(update) {\n            if (update.docChanged) {\n                this.lintTime = Date.now() + LintDelay;\n                if (!this.set) {\n                    this.set = true;\n                    setTimeout(this.run, LintDelay);\n                }\n            }\n        }\n    });\n}\nfunction renderDiagnostic(view, diagnostic) {\n    let dom = document.createElement(\"li\");\n    dom.textContent = diagnostic.message;\n    dom.className = themeClass(\"diagnostic.\" + diagnostic.severity);\n    if (diagnostic.actions)\n        for (let action of diagnostic.actions) {\n            let button = dom.appendChild(document.createElement(\"button\"));\n            button.className = themeClass(\"diagnosticAction\");\n            button.textContent = action.name;\n            button.onclick = button.onmousedown = e => {\n                e.preventDefault();\n                let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n                if (found)\n                    action.apply(view, found.from, found.to);\n            };\n        }\n    // FIXME render source?\n    return dom;\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        let elt = document.createElement(\"span\");\n        elt.className = themeClass(\"lintPoint.\" + this.diagnostic.severity);\n        return elt;\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic);\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        this.dom = document.createElement(\"div\");\n        this.list = this.dom.appendChild(document.createElement(\"ul\"));\n        this.list.tabIndex = 0;\n        this.list.setAttribute(\"role\", \"listbox\");\n        this.list.setAttribute(\"aria-label\", this.view.state.phrase(\"Diagnostics\"));\n        this.list.addEventListener(\"keydown\", event => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38) { // ArrowUp\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40) { // ArrowDown\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                event.preventDefault();\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                event.preventDefault();\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) {\n                event.preventDefault();\n                this.view.focus();\n            } // FIXME PageDown/PageUp\n        });\n        this.list.addEventListener(\"click\", event => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        });\n        let close = this.dom.appendChild(document.createElement(\"button\"));\n        close.setAttribute(\"name\", \"close\");\n        close.setAttribute(\"aria-label\", this.view.state.phrase(\"close\"));\n        close.textContent = \"×\";\n        close.addEventListener(\"click\", () => closeLintPanel(this.view));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (!this.items.length) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n        if (!this.list.firstChild)\n            this.list.appendChild(renderDiagnostic(this.view, {\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n    }\n    moveSelection(selectedIndex) {\n        // FIXME make actions accessible\n        if (this.items.length == 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    get style() { return \"lint\"; }\n    static open(view) { return new LintPanel(view); }\n}\nfunction underline(color) {\n    if (typeof btoa != \"function\")\n        return \"none\";\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"3\">\n    <path d=\"m0 3 l2 -2 l1 0 l2 2 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>\n  </svg>`;\n    return `url('data:image/svg+xml;base64,${btoa(svg)}')`;\n}\nconst baseTheme = EditorView.baseTheme({\n    $diagnostic: {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\"\n    },\n    \"$diagnostic.error\": { borderLeft: \"5px solid #d11\" },\n    \"$diagnostic.warning\": { borderLeft: \"5px solid orange\" },\n    \"$diagnostic.info\": { borderLeft: \"5px solid #999\" },\n    $diagnosticAction: {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    $lintRange: {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\"\n    },\n    \"$lintRange.error\": { backgroundImage: underline(\"#d11\") },\n    \"$lintRange.warning\": { backgroundImage: underline(\"orange\") },\n    \"$lintRange.info\": { backgroundImage: underline(\"#999\") },\n    \"$lintRange.active\": { backgroundColor: \"#ffdd9980\" },\n    $lintPoint: {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \"$lintPoint.warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \"$lintPoint.info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \"$panel.lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\"\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    },\n    \"$tooltip.lint\": {\n        padding: 0,\n        margin: 0\n    }\n});\n\nexport { closeLintPanel, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics };\n","import { Facet, combineConfig, StateField } from '@codemirror/next/state';\nimport { EditorView, Decoration, themeClass } from '@codemirror/next/view';\nimport { NodeProp } from 'lezer-tree';\n\nconst baseTheme = EditorView.baseTheme({\n    $matchingBracket: { color: \"#0b0\" },\n    $nonmatchingBracket: { color: \"#a22\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist\n        });\n    }\n});\nconst matchingMark = Decoration.mark({ class: themeClass(\"matchingBracket\") }), nonmatchingMark = Decoration.mark({ class: themeClass(\"nonmatchingBracket\") });\nconst bracketMatchingState = StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (!match)\n                continue;\n            let mark = match.matched ? matchingMark : nonmatchingMark;\n            decorations.push(mark.range(match.start.from, match.start.to));\n            if (match.end)\n                decorations.push(mark.range(match.end.from, match.end.to));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: [EditorView.decorations]\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/// Create an extension that enables bracket matching. Whenever the\n/// cursor is next to a bracket, that bracket and the one it matches\n/// are highlighted. Or, when no matching bracket is found, another\n/// highlighting style is used to indicate this.\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\n/// Find the matching bracket for the token at `pos`, scanning\n/// direction `dir`. Only the `brackets` and `maxScanDistance`\n/// properties are used from `config`, if given. Returns null if no\n/// bracket was found at `pos`, or a match result otherwise.\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = state.tree, sub = tree.resolve(pos, dir), matches;\n    if (matches = matchingNodes(sub.type, dir, brackets))\n        return matchMarkedBrackets(state, pos, dir, sub, matches, brackets);\n    else\n        return matchPlainBrackets(state, pos, dir, tree, sub.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {\n    let parent = token.parent, firstToken = { from: token.from, to: token.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor;\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1) {\n                    return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    depth--;\n                    if (depth == 0)\n                        return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: false };\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolve(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\nexport { bracketMatching, matchBrackets };\n","import { ViewPlugin, themeClass, PluginField, EditorView } from '@codemirror/next/view';\nimport { Facet } from '@codemirror/next/state';\n\nconst panelConfig = Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/// Enables the panel-managing extension.\nfunction panels(config) {\n    let ext = [panelPlugin, baseTheme];\n    if (config)\n        ext.push(panelConfig.of(config));\n    return ext;\n}\n/// Opening a panel is done by providing an object describing the\n/// panel through this facet.\nconst showPanel = Facet.define();\n/// Get the active panel created by the given constructor, if any.\n/// This can be useful when you need access to your panels' DOM\n/// structure.\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = view.state.facet(showPanel).indexOf(panel);\n    return plugin && index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.specs = view.state.facet(showPanel);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.className += \" \" + panelClass(p);\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let specs = update.state.facet(showPanel);\n        if (specs != this.specs) {\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.className += \" \" + panelClass(p);\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nfunction panelClass(panel) {\n    return themeClass(panel.style ? `panel.${panel.style}` : \"panel\");\n}\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = themeClass(this.top ? \"panels.top\" : \"panels.bottom\");\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - this.view.scrollDOM.getBoundingClientRect().top\n                : this.view.scrollDOM.getBoundingClientRect().bottom - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = EditorView.baseTheme({\n    $panels: {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"$$light $panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"$$light $panels.top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"$$light $panels.bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"$$dark $panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n\nexport { getPanel, panels, showPanel };\n","import { MapMode } from '@codemirror/next/state';\n\n/// Each range is associated with a value, which must inherit from\n/// this class.\nclass RangeValue {\n    /// Compare this value with another value. The default\n    /// implementation compares by identity.\n    eq(other) { return this == other; }\n    /// Create a [range](#rangeset.Range) with this value.\n    range(from, to = from) { return new Range(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/// A range associates a value with a range of positions.\nclass Range {\n    /// @internal\n    constructor(\n    /// The range's start position.\n    from, \n    /// Its end position.\n    to, \n    /// The value associated with this range.\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\n// The maximum amount of ranges to store in a single chunk\nconst ChunkSize = 250, \n// Chunks with points of this size are never skipped during\n// compare, since moving past those points is likely to speed\n// up, rather than slow down, the comparison.\nBigPointSize = 500, \n// A large (fixnum) value to use for max/min values.\nFar = 1e9;\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // With side == -1, return the first index where to >= pos. When\n    // side == 1, the first index where from > pos.\n    findIndex(pos, end, side = end * Far, startAt = 0) {\n        if (pos <= 0)\n            return startAt;\n        let arr = end < 0 ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end < 0 ? this.value[mid].startSide : this.value[mid].endSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1), e = this.findIndex(to, 1, undefined, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/// A range set stores a collection of [ranges](#rangeset.Range) in a\n/// way that makes them efficient to [map](#rangeset.RangeSet.map) and\n/// [update](#rangeset.RangeSet.update). This is an immutable data\n/// structure.\nclass RangeSet {\n    /// @internal\n    constructor(\n    /// @internal\n    chunkPos, \n    /// @internal\n    chunk, \n    /// @internal\n    nextLayer = RangeSet.empty, \n    /// @internal\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /// @internal\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /// @internal\n    get size() {\n        if (this == RangeSet.empty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /// @internal\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /// Update the range set, optionally adding new ranges or filtering\n    /// out existing ones.\n    update(updateSpec) {\n        let { add = [], sort = false, filter, filterFrom = 0, filterTo = this.length } = updateSpec;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add.slice().sort(cmpRange);\n        if (this == RangeSet.empty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(new Range(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer == RangeSet.empty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /// Map this range set through a set of changes, return the new set.\n    map(changes) {\n        if (changes.length == 0 || this == RangeSet.empty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next, maxPoint);\n    }\n    /// Iterate over the ranges that touch the region `from` to `to`,\n    /// calling `f` for each. There is no guarantee that the ranges will\n    /// be reported in any order. When the callback returns `false`,\n    /// iteration stops.\n    between(from, to, f) {\n        if (this == RangeSet.empty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /// Iterate over the ranges in this set, in order, including all\n    /// ranges that end at or after `from`.\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /// Iterate over the given sets, starting from `from`.\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /// Iterate over two groups of sets, calling methods on `comparator`\n    /// to notify it of possible differences. `textDiff` indicates how\n    /// the underlying data changed between these ranges, and is needed\n    /// to synchronize the iteration. `from` and `to` are coordinates in\n    /// the _new_ space, after these changes.\n    static compare(oldSets, newSets, textDiff, comparator) {\n        var _a;\n        let minPoint = (_a = comparator.minPointSize) !== null && _a !== void 0 ? _a : -1;\n        let a = oldSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && newSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let b = newSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && oldSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, minPoint);\n        let sideB = new SpanCursor(b, sharedChunks, minPoint);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /// Iterate over a group of range sets at the same time, notifying\n    /// the iterator about the ranges covering every given piece of\n    /// content. Returns the open count (see\n    /// [`SpanIterator.range`](#rangeset.SpanIterator.range)) at the end\n    /// of the iteration.\n    static spans(sets, from, to, iterator) {\n        var _a;\n        let cursor = new SpanCursor(sets, null, (_a = iterator.minPointSize) !== null && _a !== void 0 ? _a : -1).goto(from), pos = from;\n        let open = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open);\n                open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, open);\n                open = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                break;\n            pos = cursor.to;\n            cursor.next();\n        }\n        return open;\n    }\n    /// Create a range set for the given range or array of ranges. By\n    /// default, this expects the ranges to be _sorted_ (by start\n    /// position and, if two start at the same position,\n    /// `value.startSide`). You can pass `true` as second argument to\n    /// cause the method to sort them.\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? ranges.slice().sort(cmpRange) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/// The empty set of ranges.\nRangeSet.empty = new RangeSet([], [], null, -1);\nRangeSet.empty.nextLayer = RangeSet.empty;\n/// A range set builder is a data structure that helps build up a\n/// [range set](#rangeset.RangeSet) directly, without first allocating\n/// an array of [`Range`](#rangeset.Range) objects.\nclass RangeSetBuilder {\n    /// Create an empty builder.\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -Far;\n        this.lastTo = -Far;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /// Add a range. Ranges should be added in sorted (by `from` and\n    /// `value.startSide`) order.\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /// @internal\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == ChunkSize)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /// @internal\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /// Finish the range set. Returns the new set. The builder can't be\n    /// used anymore after this has been called.\n    finish() { return this.finishInner(RangeSet.empty); }\n    /// @internal\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = new RangeSet(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint < BigPointSize)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (inA.get(set.chunk[i]) == set.chunkPos[i])\n                shared.add(set.chunk[i]);\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -Far) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        let rangeIndex = this.chunkIndex == this.layer.chunk.length ? 0\n            : this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], -1, side);\n        if (!forward || this.rangeIndex < rangeIndex)\n            this.rangeIndex = rangeIndex;\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = Far;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                if (++this.rangeIndex == chunk.value.length) {\n                    this.chunkIndex++;\n                    if (this.skip) {\n                        while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                            this.chunkIndex++;\n                    }\n                    this.rangeIndex = 0;\n                }\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; cur != RangeSet.empty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -Far) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = Far;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -Far;\n        this.endSide = 0;\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -Far) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = Far;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    if (this.cursor.from < from)\n                        trackExtra = 1;\n                    this.cursor.next();\n                    if (this.to > from)\n                        this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            let openStart = 0;\n            while (openStart < trackOpen.length && trackOpen[openStart] < from)\n                openStart++;\n            this.openStart = openStart + trackExtra;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = 0; i < this.active.length; i++) {\n            if (this.activeRank[i] > this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide > this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active;\n    }\n    openEnd(to) {\n        let open = 0;\n        while (open < this.activeTo.length && this.activeTo[open] > to)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = Far;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\nexport { Range, RangeSet, RangeSetBuilder, RangeValue };\n","import { Text, countColumn } from '@codemirror/next/text';\nexport { Text } from '@codemirror/next/text';\nimport { NodeProp, Tree } from 'lezer-tree';\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/// Distinguishes different ways in which positions can be mapped.\nvar MapMode;\n(function (MapMode) {\n    /// Map a position to a valid new position, even when its context\n    /// was deleted.\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /// Return null if deletion happens across the position.\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /// Return null if the character _before_ the position is deleted.\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /// Return null if the character _after_ the position is deleted.\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\n})(MapMode || (MapMode = {}));\n/// A change description is a variant of [change set](#state.ChangeSet)\n/// that doesn't store the inserted text. As such, it can't be\n/// applied, but is cheaper to store and manipulate.\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /// @internal\n    constructor(sections) {\n        this.sections = sections;\n    }\n    /// The length of the document before the change.\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /// The length of the document after the change.\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /// False when there are actual changes in this set.\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /// Iterate over the unchanged parts left by these changes.\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /// Iterate over the ranges changed by these changes. (See\n    /// [`ChangeSet.iterChanges`](#state.ChangeSet.iterChanges) for a\n    /// variant that also provides you with the inserted text.)\n    ///\n    /// When `individual` is true, adjacent changes (which are kept\n    /// separate for [position mapping](#state.ChangeDesc.mapPos)) are\n    /// reported separately.\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a description of the inverted form of these changes.\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /// Compute the combined effect of applying another set of changes\n    /// after this one. The length of the document after this set should\n    /// match the length before `other`.\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /// Map this description, which should start with the same document\n    /// as `other`, over another set of changes, so that it can be\n    /// applied after it.\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /// Check whether these changes touch a given range. When one of the\n    /// changes entirely covers the range, the string `\"cover\"` is\n    /// returned.\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /// @internal\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n}\n/// A change set represents a group of modifications to a document. It\n/// stores the document length, and can only be applied to documents\n/// with exactly that length.\nclass ChangeSet extends ChangeDesc {\n    /// @internal\n    constructor(sections, \n    /// @internal\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /// Apply the changes to a document, returning the modified\n    /// document.\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    /// Map this set, which should start with the same document as\n    /// `other`, over another set of changes, so that it can be applied\n    /// after it. When `before` is true, map as if the changes in\n    /// `other` happened before the ones in `this`.\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /// Given the document as it existed _before_ the changes, return a\n    /// change set that represents the inverse of this set, which could\n    /// be used to go from the document created by the changes back to\n    /// the document as it existed before the changes.\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /// Combine two subsequent change sets into a single set. `other`\n    /// must start in the document produced by `this`. If `this` goes\n    /// `docA` → `docB` and `other` represents `docB` → `docC`, the\n    /// returned value will represent the change `docA` → `docC`.\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /// Given another change set starting in the same document, maps this\n    /// change set over the other, producing a new change set that can be\n    /// applied to the document produced by applying `other`. When\n    /// `before` is `true`, order changes as if `this` comes before\n    /// `other`, otherwise (the default) treat `other` as coming first.\n    ///\n    /// Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    /// `B.compose(A.map(B, true))` will produce the same document. This\n    /// provides a basic form of [operational\n    /// transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    /// and can be used for collaborative editing.\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /// Iterate over the changed ranges in the document, calling `f` for\n    /// each.\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a [change description](#state.ChangeDesc) for this change\n    /// set.\n    get desc() { return new ChangeDesc(this.sections); }\n    /// @internal\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: new ChangeDesc(filteredSections) };\n    }\n    /// Serialize this change set to a JSON-representable value.\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len, this.inserted[i >> 1].toJSON()]);\n        }\n        return parts;\n    }\n    /// Create a change set for the given changes, for a document of the\n    /// given length, using `lineSep` as line separator.\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /// Create an empty changeset of the given length.\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /// Create a changeset from its JSON representation (as produced by\n    /// [`toJSON`](#state.ChangeSet.toJSON).\n    static fromJSON(json) {\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part[1]);\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let posA = 0, posB = 0;;) {\n        if (a.ins == -1) {\n            posA += a.len;\n            a.next();\n        }\n        else if (b.ins == -1 && posB < posA) {\n            let skip = Math.min(b.len, posA - posB);\n            b.forward(skip);\n            addSection(sections, skip, -1);\n            posB += skip;\n        }\n        else if (b.ins >= 0 && (a.done || posB < posA || posB == posA && (b.len < a.len || b.len == a.len && !before))) {\n            addSection(sections, b.ins, -1);\n            while (posA > posB && !a.done && posA + a.len < posB + b.len) {\n                posA += a.len;\n                a.next();\n            }\n            posB += b.len;\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            let len = 0, end = posA + a.len;\n            for (;;) {\n                if (b.ins >= 0 && posB > posA && posB + b.len < end) {\n                    len += b.ins;\n                    posB += b.len;\n                    b.next();\n                }\n                else if (b.ins == -1 && posB < end) {\n                    let skip = Math.min(b.len, end - posB);\n                    len += skip;\n                    b.forward(skip);\n                    posB += skip;\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, a.ins);\n            if (insert)\n                addInsert(insert, sections, a.text);\n            posA = end;\n            a.next();\n        }\n        else if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/// A single selection range. When\n/// [`allowMultipleSelections`](#state.EditorState^allowMultipleSelections)\n/// is enabled, a [selection](#state.EditorSelection) may hold\n/// multiple ranges. By default, selections hold exactly one range.\nclass SelectionRange {\n    // @internal\n    constructor(\n    /// The lower side of the range.\n    from, \n    /// The upper side of the range.\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /// The anchor of the range—the side that doesn't move when you\n    /// extend it.\n    get anchor() { return this.flags & 16 /* Inverted */ ? this.to : this.from; }\n    /// The head of the range, which is moved when the range is\n    /// [extended](#state.SelectionRange.extend).\n    get head() { return this.flags & 16 /* Inverted */ ? this.from : this.to; }\n    /// True when `anchor` and `head` are at the same position.\n    get empty() { return this.from == this.to; }\n    /// If this is a cursor that is explicitly associated with the\n    /// character on one of its sides, this returns the side. -1 means\n    /// the character before its position, 1 the character after, and 0\n    /// means no association.\n    get assoc() { return this.flags & 4 /* AssocBefore */ ? -1 : this.flags & 8 /* AssocAfter */ ? 1 : 0; }\n    /// The bidirectional text level associated with this cursor.\n    get bidiLevel() {\n        let level = this.flags & 3 /* BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    get goalColumn() {\n        let value = this.flags >> 5 /* GoalColumnOffset */;\n        return value == 33554431 /* NoGoalColumn */ ? undefined : value;\n    }\n    /// Map this range through a mapping.\n    map(mapping) {\n        let from = mapping.mapPos(this.from), to = mapping.mapPos(this.to);\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /// Extend this range to cover at least `from` to `to`.\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /// Compare this range to another range.\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /// Return a JSON-serializable object representing the range.\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /// Convert a JSON representation of a range to a `SelectionRange`\n    /// instance.\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n}\n/// An editor selection holds one or more selection ranges.\nclass EditorSelection {\n    /// @internal\n    constructor(\n    /// The ranges in the selection, sorted by position. Ranges cannot\n    /// overlap (but they may touch, if they aren't empty).\n    ranges, \n    /// The index of the _primary_ range in the selection (which is\n    /// usually the range that was added last).\n    primaryIndex = 0) {\n        this.ranges = ranges;\n        this.primaryIndex = primaryIndex;\n    }\n    /// Map a selection through a mapping. Mostly used to adjust the\n    /// selection position for changes.\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(mapping)), this.primaryIndex);\n    }\n    /// Compare this selection to another selection.\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.primaryIndex != other.primaryIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /// Get the primary selection range. Usually, you should make sure\n    /// your code applies to _all_ ranges, by using methods like\n    /// [`changeByRange`](#state.EditorState.changeByRange).\n    get primary() { return this.ranges[this.primaryIndex]; }\n    /// Make sure the selection only has one range. Returns a selection\n    /// holding only the primary range from this selection.\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.primary]);\n    }\n    /// Extend this selection with an extra range.\n    addRange(range, primary = true) {\n        return EditorSelection.create([range].concat(this.ranges), primary ? 0 : this.primaryIndex + 1);\n    }\n    /// Replace a given range with another range, and then normalize the\n    /// selection to merge and sort ranges if necessary.\n    replaceRange(range, which = this.primaryIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.primaryIndex);\n    }\n    /// Convert this selection to an object that can be serialized to\n    /// JSON.\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), primaryIndex: this.primaryIndex };\n    }\n    /// Create a selection from a JSON representation.\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.primaryIndex != \"number\" || json.primaryIndex >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.primaryIndex);\n    }\n    /// Create a selection holding a single range.\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /// Sort and merge the given set of ranges, creating a valid\n    /// selection.\n    static create(ranges, primaryIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return normalized(ranges.slice(), primaryIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, primaryIndex);\n    }\n    /// Create a cursor selection range at the given position. You can\n    /// probably ignore [association](#state.SelectionRange.assoc) and\n    /// [bidi level](#state.SelectionRange.bidiLevel) in most\n    /// situations.\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return new SelectionRange(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* AssocBefore */ : 8 /* AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */));\n    }\n    /// Create a selection range.\n    static range(anchor, head, goalColumn) {\n        let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */;\n        return head < anchor ? new SelectionRange(head, anchor, 16 /* Inverted */ | goal) : new SelectionRange(anchor, head, goal);\n    }\n}\nfunction normalized(ranges, primaryIndex = 0) {\n    let primary = ranges[primaryIndex];\n    ranges.sort((a, b) => a.from - b.from);\n    primaryIndex = ranges.indexOf(primary);\n    for (let i = 1; i < ranges.length; i++) {\n        let range = ranges[i], prev = ranges[i - 1];\n        if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n            let from = prev.from, to = Math.max(range.to, prev.to);\n            if (i <= primaryIndex)\n                primaryIndex--;\n            ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n        }\n    }\n    return new EditorSelection(ranges, primaryIndex);\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/// A facet is a value that is assicated with a state and can be\n/// influenced by any number of extensions. Extensions can provide\n/// input values for the facet, and the facet combines those into an\n/// output value.\n///\n/// Examples of facets are the theme styles associated with an editor\n/// (which are all stored) or the tab size (which is reduced to a\n/// single value, using the input with the hightest precedence).\nclass Facet {\n    constructor(\n    /// @internal\n    combine, \n    /// @internal\n    compareInput, \n    /// @internal\n    compare, isStatic) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /// @internal\n        this.id = nextID++;\n        this.default = combine([]);\n    }\n    /// Define a new facet.\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static);\n    }\n    /// Returns an extension that adds the given value for this facet.\n    of(value) {\n        return new FacetProvider([], this, 0 /* Static */, value);\n    }\n    /// Create an extension that computes a value for the facet from a\n    /// state. You must take care to declare the parts of the state that\n    /// this value depends on, since your function is only called again\n    /// for a new state when one of those parts changed.\n    ///\n    /// In most cases, you'll want to use the\n    /// [`provide`](#state.StateField^define^config.provide) option when\n    /// defining a field instead.\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Single */, get);\n    }\n    /// Create an extension that computes zero or more values for this\n    /// facet from a state.\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Multi */, get);\n    }\n    /// Helper method for registering a facet source with a state field\n    /// via its [`provide`](#state.StateField^define^config.provide) option.\n    /// Returns a value that can be passed to that option to make the\n    /// field automatically provide a value for this facet.\n    from(get, prec) {\n        return field => maybePrec(prec, this.compute([field], state => get(state.field(field))));\n    }\n    /// Helper for [providing](#state.StateField^define^config.provide)\n    /// a dynamic number of values for this facet from a state field.\n    nFrom(get, prec) {\n        return field => maybePrec(prec, this.computeN([field], state => get(state.field(field))));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let idx = addresses[this.id] >> 1, multi = this.type == 2 /* Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((addresses[dep.id] & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return (state, tr) => {\n            if (!tr || tr.reconfigure) {\n                state.values[idx] = getter(state);\n                return 1 /* Changed */;\n            }\n            else {\n                let depChanged = (depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) ||\n                    depAddrs.some(addr => (ensureAddr(state, addr) & 1 /* Changed */) > 0);\n                if (!depChanged)\n                    return 0;\n                let newVal = getter(state), oldVal = tr.startState.values[idx];\n                if (multi ? compareArray(newVal, oldVal, compare) : compare(newVal, oldVal))\n                    return 0;\n                state.values[idx] = newVal;\n                return 1 /* Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    return (state, tr) => {\n        let oldAddr = !tr ? null : tr.reconfigure ? tr.startState.config.address[facet.id] : idx << 1;\n        let changed = oldAddr == null;\n        for (let dynAddr of dynamic) {\n            if (ensureAddr(state, dynAddr) & 1 /* Changed */)\n                changed = true;\n        }\n        if (!changed)\n            return 0;\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        let newVal = facet.combine(values);\n        if (oldAddr != null && facet.compare(newVal, getAddr(tr.startState, oldAddr)))\n            return 0;\n        state.values[idx] = newVal;\n        return 1 /* Changed */;\n    };\n}\nfunction maybeIndex(state, id) {\n    let found = state.config.address[id];\n    return found == null ? null : found >> 1;\n}\n/// Fields can store additional information in an editor state, and\n/// keep it in sync with the rest of the state.\nclass StateField {\n    constructor(\n    /// @internal\n    id, createF, updateF, compareF, \n    /// @internal\n    facets) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.facets = facets;\n    }\n    /// Define a state field.\n    static define(config) {\n        let facets = [];\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), facets);\n        if (config.provide)\n            for (let p of config.provide) {\n                if (p instanceof Facet)\n                    facets.push(p.compute([field], state => state.field(field)));\n                else\n                    facets.push(p(field));\n            }\n        return field;\n    }\n    /// @internal\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return (state, tr) => {\n            if (!tr) {\n                state.values[idx] = this.createF(state);\n                return 1 /* Changed */;\n            }\n            let oldVal, changed = 0;\n            if (tr.reconfigure) {\n                let oldIdx = maybeIndex(tr.startState, this.id);\n                oldVal = oldIdx == null ? this.createF(tr.startState) : tr.startState.values[oldIdx];\n                changed = 1 /* Changed */;\n            }\n            else {\n                oldVal = tr.startState.values[idx];\n            }\n            let value = this.updateF(oldVal, tr);\n            if (!changed && !this.compareF(oldVal, value))\n                changed = 1 /* Changed */;\n            if (changed)\n                state.values[idx] = value;\n            return changed;\n        };\n    }\n}\nconst Prec = { fallback: 3, default: 2, extend: 1, override: 0 };\n/// By default extensions are registered in the order they are found\n/// the flattened form of nested array that was provided. Individual\n/// extension values can be assigned a precedence to override this.\n/// Extensions that do not have a precedence set get the precedence of\n/// the nearest parent with a precedence, or\n/// [`\"default\"`](#state.Precedence) if there is no such parent. The\n/// final ordering of extensions is determined by first sorting by\n/// precedence and then by order within each precedence.\nfunction precedence(extension, value) {\n    if (!Prec.hasOwnProperty(value))\n        throw new RangeError(`Invalid precedence: ${value}`);\n    return new PrecExtension(extension, Prec[value]);\n}\nfunction maybePrec(prec, ext) {\n    return prec ? precedence(ext, prec) : ext;\n}\nclass PrecExtension {\n    constructor(e, prec) {\n        this.e = e;\n        this.prec = prec;\n    }\n}\nclass TaggedExtension {\n    constructor(tag, extension) {\n        this.tag = tag;\n        this.extension = extension;\n    }\n}\n/// Tagged extensions can be used to make a configuration dynamic.\n/// Tagging an extension allows you to later\n/// [replace](#state.TransactionSpec.reconfigure) it with\n/// another extension. A given tag may only occur once within a given\n/// configuration.\nfunction tagExtension(tag, extension) {\n    return new TaggedExtension(tag, extension);\n}\nclass Configuration {\n    constructor(source, replacements, dynamicSlots, address, staticValues) {\n        this.source = source;\n        this.replacements = replacements;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < staticValues.length)\n            this.statusTemplate.push(0 /* Uninitialized */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(extension, replacements = Object.create(null), oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        for (let ext of flatten(extension, replacements)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            if (providers.every(p => p.type == 0 /* Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                let value = facet.combine(providers.map(p => p.value));\n                let oldAddr = oldState ? oldState.config.address[facet.id] : null;\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (facet.compare(value, oldVal))\n                        value = oldVal;\n                }\n                staticValues.push(value);\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        return new Configuration(extension, replacements, dynamicSlots.map(f => f(address)), address, staticValues);\n    }\n}\nfunction allKeys(obj) {\n    return (Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(obj) : []).concat(Object.keys(obj));\n}\nfunction flatten(extension, replacements) {\n    let result = [[], [], [], []];\n    let seen = new Map();\n    let tagsSeen = Object.create(null);\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known >= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof TaggedExtension) {\n            if (ext.tag in tagsSeen)\n                throw new RangeError(`Duplicate use of tag '${String(ext.tag)}' in extensions`);\n            tagsSeen[ext.tag] = true;\n            inner(replacements[ext.tag] || ext.extension, prec);\n        }\n        else if (ext.extension) {\n            inner(ext.extension, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.e, ext.prec);\n        }\n        else {\n            result[prec].push(ext);\n            if (ext instanceof StateField)\n                inner(ext.facets, prec);\n        }\n    }\n    inner(extension, Prec.default);\n    for (let key of allKeys(replacements))\n        if (!(key in tagsSeen) && key != \"full\" && replacements[key]) {\n            tagsSeen[key] = true;\n            inner(replacements[key], Prec.default);\n        }\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* Computed */)\n        return status;\n    state.status[idx] = 4 /* Computing */;\n    let changed = state.config.dynamicSlots[idx](state, state.applying);\n    return state.status[idx] = 2 /* Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst allowMultipleSelections = Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = Facet.define();\nconst transactionFilter = Facet.define();\n/// A node prop stored on a grammar's top node to indicate the facet\n/// used to store [language data](#state.EditorState.languageDataAt)\n/// related to that language.\nconst languageDataProp = new NodeProp();\nconst globalLanguageData = Facet.define();\n/// Indentation contexts are used when calling\n/// [`EditorState.indentation`](#state.EditorState^indentation). They\n/// provide helper utilities useful in indentation logic, and can\n/// selectively override the indentation reported for some\n/// lines.\nclass IndentContext {\n    /// Create an indent context.\n    constructor(\n    /// The editor state.\n    state, \n    /// @internal\n    options = {}) {\n        this.state = state;\n        this.options = options;\n    }\n    /// The indent unit (number of columns per indentation level).\n    get unit() { return this.state.indentUnit; }\n    /// Get the text directly after `pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    textAfterPos(pos) {\n        var _a, _b;\n        let sim = (_a = this.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n        if (pos == sim && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak))\n            return \"\";\n        return this.state.sliceDoc(pos, Math.min(pos + 100, sim != null && sim > pos ? sim : 1e9, this.state.doc.lineAt(pos).to));\n    }\n    /// find the column position (taking tabs into account) of the given\n    /// position in the given string.\n    countColumn(line, pos) {\n        return countColumn(pos < 0 ? line : line.slice(0, pos), 0, this.state.tabSize);\n    }\n    /// Find the indentation column of the given document line.\n    lineIndent(line) {\n        var _a;\n        let override = (_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation;\n        if (override) {\n            let overriden = override(line.from);\n            if (overriden > -1)\n                return overriden;\n        }\n        let text = line.slice(0, Math.min(100, line.length));\n        return this.countColumn(text, text.search(/\\S/));\n    }\n    /// Find the column for the given position.\n    column(pos) {\n        var _a;\n        let line = this.state.doc.lineAt(pos), text = line.slice(0, pos - line.from);\n        let result = this.countColumn(text, pos - line.from);\n        let override = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation) ? this.options.overrideIndentation(line.from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S/));\n        return result;\n    }\n}\n\n/// Annotations are tagged values that are used to add metadata to\n/// transactions in an extensible way. They should be used to model\n/// things that effect the entire transaction (such as its [time\n/// stamp](#state.Transaction^time) or information about its\n/// [origin](#state.Transaction^userEvent)). For effects that happen\n/// _alongside_ the other changes made by the transaction, [state\n/// effects](#state.StateEffect) are more appropriate.\nclass Annotation {\n    /// @internal\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Define a new type of annotation.\n    static define() { return new AnnotationType(); }\n}\n/// Marker that identifies a type of [annotation](#state.Annotation).\nclass AnnotationType {\n    of(value) { return new Annotation(this, value); }\n}\n/// State effects can be used to represent additional effects\n/// associated with a [transaction](#state.Transaction.effects). They\n/// are often useful to model changes to custom [state\n/// fields](#state.StateField), when those changes aren't implicit in\n/// document or selection changes.\nclass StateEffect {\n    /// @internal\n    constructor(\n    /// @internal\n    type, \n    /// The value of this effect.\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Map this effect through a position mapping. Will return\n    /// `undefined` when that ends up deleting the effect.\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /// Tells you whether this effect object is of a given\n    /// [type](#state.StateEffectType).\n    is(type) { return this.type == type; }\n    /// Define a new effect type. The type parameter indicates the type\n    /// of values that his effect holds.\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /// Map an array of effects through a change set.\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/// Representation of a type of state effect. Defined with\n/// [`StateEffect.define`](#state.StateEffect^define).\nclass StateEffectType {\n    /// @internal\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /// @internal\n    map) {\n        this.map = map;\n    }\n    /// Create a [state effect](#state.StateEffect) instance of this\n    /// type.\n    of(value) { return new StateEffect(this, value); }\n}\n/// Changes to the editor state are grouped into transactions.\n/// Typically, a user action creates a single transaction, which may\n/// contain any number of document changes, may change the selection,\n/// or have other effects. Create a transaction by calling\n/// [`EditorState.update`](#state.EditorState.update).\nclass Transaction {\n    /// @internal\n    constructor(\n    /// The state from which the transaction starts.\n    startState, \n    /// The document changes made by this transaction.\n    changes, \n    /// The selection set by this transaction, or undefined if it\n    /// doesn't explicitly set a selection.\n    selection, \n    /// The effects added to the transaction.\n    effects, \n    /// @internal\n    annotations, \n    /// Holds an object when this transaction\n    /// [reconfigures](#state.ReconfigurationSpec) the state.\n    reconfigure, \n    /// Whether the selection should be scrolled into view after this\n    /// transaction is dispatched.\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.reconfigure = reconfigure;\n        this.scrollIntoView = scrollIntoView;\n        /// @internal\n        this._doc = null;\n        /// @internal\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /// The new document produced by the transaction. (Mostly exposed so\n    /// that [transaction filters](#state.EditorState^transactionFilter)\n    /// can look at the new document without forcing an entire new state\n    /// to be computed by accessing\n    /// [`.state`](#state.Transaction.state).\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /// The new selection produced by the transaction. If\n    /// [`this.selection`](#state.Transaction.selection) is undefined,\n    /// this will [map](#state.EditorSelection.map) the start state's\n    /// current selection through the changes made by the transaction.\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /// The new state created by the transaction.\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /// Get the value of the given annotation type, if any.\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /// Indicates whether the transaction changed the document.\n    get docChanged() { return !this.changes.empty; }\n}\n/// Annotation used to store transaction timestamps.\nTransaction.time = Annotation.define();\n/// Annotation used to associate a transaction with a user interface\n/// event. The view will set this to...\n///\n///  - `\"input\"` when the user types text\n///  - `\"delete\"` when the user deletes the selection or text near the selection\n///  - `\"keyboardselection\"` when moving the selection via the keyboard\n///  - `\"pointerselection\"` when moving the selection through the pointing device\n///  - `\"paste\"` when pasting content\n///  - `\"cut\"` when cutting\n///  - `\"drop\"` when content is inserted via drag-and-drop\nTransaction.userEvent = Annotation.define();\n/// Annotation indicating whether a transaction should be added to\n/// the undo history or not.\nTransaction.addToHistory = Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView,\n        reconfigure: !b.reconfigure ? a.reconfigure : b.reconfigure.full || !a.reconfigure ? b.reconfigure\n            : Object.assign({}, a.reconfigure, b.reconfigure)\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let reconf = spec.reconfigure;\n    if (reconf && reconf.append) {\n        reconf = Object.assign({}, reconf);\n        let tag = typeof Symbol == \"undefined\" ? \"__append\" + Math.floor(Math.random() * 0xffffffff) : Symbol(\"appendConf\");\n        reconf[tag] = reconf.append;\n        reconf.append = undefined;\n    }\n    let sel = spec.selection;\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: !spec.effects ? none : Array.isArray(spec.effects) ? spec.effects : [spec.effects],\n        annotations: !spec.annotations ? none : Array.isArray(spec.annotations) ? spec.annotations : [spec.annotations],\n        scrollIntoView: !!spec.scrollIntoView,\n        reconfigure: reconf\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = new Transaction(state, s.changes, s.selection, s.effects, s.annotations, s.reconfigure, s.scrollIntoView);\n    return filter ? filterTransaction(tr) : tr;\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.invertedDesc;\n        }\n        tr = new Transaction(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.reconfigure, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, Array.isArray(filtered) ? filtered : [filtered], false);\n    }\n    return tr;\n}\nconst none = [];\n\n/// This is used to [categorize](#state.EditorState.charCategorizer)\n/// characters into three categories—word characters, whitespace, and\n/// anything else. It is used do things like selecting by word.\nvar CharCategory;\n(function (CharCategory) {\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\n})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/// The editor state class is a persistent (immutable) data structure.\n/// To update a state, you [create](#state.EditorState.update) a\n/// [transaction](#state.Transaction), which produces a _new_ state\n/// instance, without modifying the original object.\n///\n/// As such, _never_ mutate properties of a state directly. That'll\n/// just break things.\nclass EditorState {\n    /// @internal\n    constructor(\n    /// @internal\n    config, \n    /// The current document.\n    doc, \n    /// The current selection.\n    selection, tr = null) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        /// @internal\n        this.applying = null;\n        this.status = config.statusTemplate.slice();\n        if (tr && !tr.reconfigure) {\n            this.values = tr.startState.values.slice();\n        }\n        else {\n            this.values = config.dynamicSlots.map(_ => null);\n            // Copy over old values for shared facets/fields if this is a reconfigure\n            if (tr)\n                for (let id in config.address) {\n                    let cur = config.address[id], prev = tr.startState.config.address[id];\n                    if (prev != null && (cur & 1) == 0)\n                        this.values[cur >> 1] = getAddr(tr.startState, prev);\n                }\n        }\n        this.applying = tr;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.applying = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Create a [transaction](#state.Transaction) that updates this\n    /// state. Any number of [transaction specs](#state.TransactionSpec)\n    /// can be passed. The [changes](#state.TransactionSpec.changes) (if\n    /// any) of each spec are assumed to start in the _current_ document\n    /// (not the document produced by previous specs), and its\n    /// [selection](#state.TransactionSpec.selection) and\n    /// [effects](#state.TransactionSpec.effects) are assumed to refer\n    /// to the document created by its _own_ changes. The resulting\n    /// transaction contains the combined effect of all the different\n    /// specs. For things like\n    /// [selection](#state.TransactionSpec.selection) or\n    /// [reconfiguration](#state.TransactionSpec.reconfigure), later\n    /// specs take precedence over earlier ones.\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /// @internal\n    applyTransaction(tr) {\n        let conf = this.config;\n        if (tr.reconfigure)\n            conf = Configuration.resolve(tr.reconfigure.full || conf.source, Object.assign(conf.replacements, tr.reconfigure, { full: undefined }), this);\n        new EditorState(conf, tr.newDoc, tr.newSelection, tr);\n    }\n    /// Create a [transaction](#state.Transaction) that replaces every\n    /// selection range with the given content.\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /// Create a set of changes and a new selection by running the given\n    /// function for each range in the active selection. The function\n    /// can return an optional set of changes (in the coordinate space\n    /// of the start document), plus an updated range (in the coordinate\n    /// space of the document produced by the call's own changes). This\n    /// method will merge all the changes and ranges into a single\n    /// changeset and selection, and return it as a [transaction\n    /// spec](#state.TransactionSpec), which can be passed to\n    /// [`update`](#state.EditorState.update).\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            ranges.push(result.range.map(changes.mapDesc(newChanges, true)));\n            changes = changes.compose(newMapped);\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.primaryIndex)\n        };\n    }\n    /// Create a [change set](#state.ChangeSet) from the given change\n    /// description, taking the state's document length and line\n    /// separator into account.\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /// Using the state's [line\n    /// separator](#state.EditorState^lineSeparator), create a\n    /// [`Text`](#text.Text) instance from the given string.\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /// Return the given range of the document as a string.\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /// Get the value of a state [facet](#state.Facet).\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Convert this state to a JSON-serializable object.\n    toJSON() {\n        // FIXME plugin state serialization\n        return {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n    }\n    /// Deserialize a state from its JSON representation.\n    static fromJSON(json, config = {}) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions\n        });\n    }\n    /// Create a new state. You'll usually only need this when\n    /// initializing an editor—updated states are created by applying\n    /// transactions.\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || []);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection);\n    }\n    /// The size (in columns) of a tab in the document, determined by\n    /// the [`tabSize`](#state.EditorState^tabSize) facet.\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /// Get the proper [line-break](#state.EditorState^lineSeparator)\n    /// string for this state.\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /// The _column width_ of an indent unit in the document. Determined\n    /// by the [`indentUnit`](#state.EditorState^indentUnit) facet, and\n    /// [`tabSize`](#state.EditorState^tabSize) when that contains tabs.\n    get indentUnit() {\n        let unit = this.facet(EditorState.indentUnit);\n        return unit.charCodeAt(0) == 9 ? this.tabSize * unit.length : unit.length;\n    }\n    /// Create an indentation string that covers columns 0 to `cols`.\n    /// Will use tabs for as much of the columns as possible when the\n    /// [`indentUnit`](#state.EditorState^indentUnit) facet contains\n    /// tabs.\n    indentString(cols) {\n        let result = \"\";\n        if (this.facet(EditorState.indentUnit).charCodeAt(0) == 9)\n            while (cols >= this.tabSize) {\n                result += \"\\t\";\n                cols -= this.tabSize;\n            }\n        for (let i = 0; i < cols; i++)\n            result += \" \";\n        return result;\n    }\n    /// Look up a translation for the given phrase (via the\n    /// [`phrases`](#state.EditorState^phrases) facet), or return the\n    /// original string if no translation is found.\n    phrase(phrase) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase))\n                return map[phrase];\n        return phrase;\n    }\n    /// Return a function that can categorize strings (expected to\n    /// represent a single [grapheme cluster](#text.nextClusterBreak))\n    /// into one of:\n    ///\n    ///  - Word (contains an alphanumeric character or a character\n    ///    explicitly listed in the local language's `\"wordChars\"`\n    ///    language data, which should be a string)\n    ///  - Space (contains only whitespace)\n    ///  - Other (anything else)\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /// Get the syntax tree for this state, which is the current\n    /// (possibly incomplete) parse tree of the [syntax](#state.Syntax)\n    /// with the highest precedence, or the empty tree if there is no\n    /// syntax available.\n    get tree() {\n        let syntax = this.facet(EditorState.syntax);\n        return syntax.length ? syntax[0].getTree(this) : Tree.empty;\n    }\n    /// Find the values for a given language data field, either provided\n    /// by the [syntax](#syntax.LezerSyntax.languageData) or through the\n    /// [`globalLanguageData`](#state.EditorState^globalLanguageData) facet,\n    /// for the [language](#state.Syntax.languageDataFacetAt) at the\n    /// given position. Values provided by the facet, in precedence\n    /// order, will appear before those provided by the syntax.\n    languageDataAt(name, pos) {\n        let values = [];\n        let syntax = this.facet(EditorState.syntax);\n        for (let i = syntax.length ? 0 : 1; i < 2; i++) {\n            let source = this.facet(i ? globalLanguageData : syntax[0].languageDataFacetAt(this, pos));\n            for (let obj of source)\n                if (Object.prototype.hasOwnProperty.call(obj, name))\n                    values.push(obj[name]);\n        }\n        return values;\n    }\n}\n/// A facet that, when enabled, causes the editor to allow multiple\n/// ranges to be selected. Be careful though, because by default the\n/// editor relies on the native DOM selection, which cannot handle\n/// multiple selections. An extension like\n/// [`drawSelection`](#view.drawSelection) can be used to make\n/// secondary selections visible to the user.\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/// Facet that defines a way to query for automatic indentation\n/// depth at the start of a given line.\nEditorState.indentation = Facet.define();\n/// Configures the tab size to use in this state. The first\n/// (highest-precedence) value of the facet is used. If no value is\n/// given, this defaults to 4.\nEditorState.tabSize = Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/// The line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\n/// and `\"\\r\"` is treated as a separator when splitting lines, and\n/// lines are joined with `\"\\n\"`.\n///\n/// When you configure a value here, only that precise separator\n/// will be used, allowing you to round-trip documents through the\n/// editor without normalizing line separators.\nEditorState.lineSeparator = lineSeparator;\n/// Facet for overriding the unit by which indentation happens.\n/// Should be a string consisting either entirely of spaces or\n/// entirely of tabs. When not set, this defaults to 2 spaces.\nEditorState.indentUnit = Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        if (!/^(?: +|\\t+)$/.test(values[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return values[0];\n    }\n});\n/// Registers translation phrases. The\n/// [`phrase`](#state.EditorState.phrase) method will look through\n/// all objects registered with this facet to find translations for\n/// its argument.\nEditorState.phrases = Facet.define();\n/// Facet that registers a parsing service for the state.\nEditorState.syntax = Facet.define();\n/// A facet used to register [language\n/// data](#state.EditorState.languageDataAt) that should apply\n/// throughout the document, regardless of language.\nEditorState.globalLanguageData = globalLanguageData;\n/// A facet that registers a code folding service. When called with\n/// the extent of a line, such a function should return a range\n/// object when a foldable that starts on that line (but continues\n/// beyond it), if one can be found.\nEditorState.foldable = Facet.define();\n/// Facet used to register change filters, which are called for each\n/// transaction (unless explicitly\n/// [disabled](#state.TransactionSpec.filter)), and can suppress\n/// part of the transaction's changes.\n///\n/// Such a function can return `true` to indicate that it doesn't\n/// want to do anything, `false` to completely stop the changes in\n/// the transaction, or a set of ranges in which changes should be\n/// suppressed. Such ranges are represented as an array of numbers,\n/// with each pair of two number indicating the start and end of a\n/// range. So for example `[10, 20, 100, 110]` suppresses changes\n/// between 10 and 20, and between 100 and 110.\nEditorState.changeFilter = changeFilter;\n/// Facet used to register a hook that gets a chance to update or\n/// replace transaction specs before they are applied. This will\n/// only be applied for transactions that don't have\n/// [`filter`](#state.TransactionSpec.filter) set to `false`. You\n/// can either return a single (possibly the input transaction), or\n/// an array of specs (which will be combined in the same way as the\n/// arguments to [`EditorState.update`](#state.EditorState.update)).\n///\n/// When possible, it is recommended to avoid accessing\n/// [`Transaction.state`](#state.Transaction.state) in a filter,\n/// since it will force creation of a state that will then be\n/// discarded again, if the transaction is actually filtered.\n///\n/// (This functionality should be used with care. Indiscriminately\n/// modifying transaction is likely to break something or degrade\n/// the user experience.)\nEditorState.transactionFilter = transactionFilter;\n\n/// Utility function for combining behaviors to fill in a config\n/// object from an array of provided configs. Will, by default, error\n/// when a field gets two values that aren't ===-equal, but you can\n/// provide combine functions per field to do something else.\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, EditorSelection, EditorState, Facet, IndentContext, MapMode, SelectionRange, StateEffect, StateEffectType, StateField, Transaction, combineConfig, languageDataProp, precedence, tagExtension };\n","import { NodeProp, Tree } from 'lezer-tree';\nimport { IndentContext, EditorState, StateEffect, StateField, Facet, languageDataProp } from '@codemirror/next/state';\nimport { ViewPlugin } from '@codemirror/next/view';\n\n/// A syntax tree node prop used to associate indentation strategies\n/// with node types. Such a strategy is a function from an indentation\n/// context to a number. That number may be -1, to indicate that no\n/// definitive indentation can be determined, or a column number to\n/// which the given line should be indented.\nconst indentNodeProp = new NodeProp();\nfunction syntaxIndentation(syntax) {\n    return EditorState.indentation.of((cx, pos) => {\n        return computeIndentation(cx, syntax.getTree(cx.state), pos);\n    });\n}\n// Compute the indentation for a given position from the syntax tree.\nfunction computeIndentation(cx, ast, pos) {\n    let tree = ast.resolve(pos);\n    // Enter previous nodes that end in empty error terms, which means\n    // they were broken off by error recovery, so that indentation\n    // works even if the constructs haven't been finished.\n    for (let scan = tree, scanPos = pos;;) {\n        let last = scan.childBefore(scanPos);\n        if (!last)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            tree = scan;\n            scanPos = last.from;\n        }\n        else {\n            scan = last;\n            scanPos = scan.to + 1;\n        }\n    }\n    for (; tree; tree = tree.parent) {\n        let strategy = indentStrategy(tree);\n        if (strategy)\n            return strategy(new TreeIndentContext(cx, pos, tree));\n    }\n    return -1;\n}\nfunction ignoreClosed(cx) {\n    var _a, _b;\n    return cx.pos == ((_a = cx.options) === null || _a === void 0 ? void 0 : _a.simulateBreak) && ((_b = cx.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak);\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/// Objects of this type provide context information and helper\n/// methods to indentation functions.\nclass TreeIndentContext extends IndentContext {\n    /// @internal\n    constructor(base, \n    /// The position at which indentation is being computed.\n    pos, \n    /// The syntax tree node for which the indentation strategy is\n    /// registered.\n    node) {\n        super(base.state, base.options);\n        this.pos = pos;\n        this.node = node;\n    }\n    /// Get the text directly after `this.pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /// Get the indentation at the reference line for `this.node`, which\n    /// is the line on which it starts, unless there is a node that is\n    /// _not_ a parent of this node covering the start of that line. If\n    /// so, the line at the start of that node is tried, again skipping\n    /// on if it is covered by another such node.\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    var _a;\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = (_a = context.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/// An indentation strategy for delimited (usually bracketed) nodes.\n/// Will, by default, indent one unit more than the parent's base\n/// indent unless the line starts with a closing token. When `align`\n/// is true and there are non-skipped nodes on the node's opening\n/// line, the content of the node will be aligned with the end of the\n/// opening node, like this:\n///\n///     foo(bar,\n///         baz)\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/// An indentation strategy that aligns a node content to its base\n/// indentation.\nconst flatIndent = (context) => context.baseIndent;\n/// Creates an indentation strategy that, by default, indents\n/// continued lines one unit more than the node's base indentation.\n/// You can provide `except` to prevent indentation of lines that\n/// match a pattern (for example `/^else\\b/` in `if`/`else`\n/// constructs), and you can change the amount of units used with the\n/// `units` option.\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\n\n/// This node prop is used to associate folding information with node\n/// types. Given a syntax node, it should check whether that tree is\n/// foldable and return the range that can be collapsed when it is.\nconst foldNodeProp = new NodeProp();\nfunction syntaxFolding(syntax) {\n    return EditorState.foldable.of((state, start, end) => {\n        let inner = syntax.getTree(state).resolve(end);\n        let found = null;\n        for (let cur = inner; cur; cur = cur.parent) {\n            if (cur.to <= end || cur.from > end)\n                continue;\n            if (found && cur.from < start)\n                break;\n            let prop = cur.type.prop(foldNodeProp);\n            if (prop) {\n                let value = prop(cur, state);\n                if (value && value.from <= end && value.from >= start && value.to > end)\n                    found = value;\n            }\n        }\n        return found;\n    });\n}\n\n/// A [syntax provider](#state.Syntax) based on a\n/// [Lezer](https://lezer.codemirror.net) parser.\nclass LezerSyntax {\n    /// @internal\n    constructor(\n    /// The Lezer parser used by this syntax.\n    parser, \n    /// The dialect enabled for the parser.\n    dialect, \n    /// The [language data](#state.EditorState.languageDataAt) data\n    /// facet used for this language.\n    languageData) {\n        this.parser = parser;\n        this.dialect = dialect;\n        this.languageData = languageData;\n        let setSyntax = StateEffect.define();\n        this.field = StateField.define({\n            create: state => SyntaxState.advance(Tree.empty, this, state.doc),\n            update: (value, tr) => value.apply(tr, this, setSyntax)\n        });\n        this.extension = [\n            EditorState.syntax.of(this),\n            this.field,\n            ViewPlugin.define(view => new HighlightWorker(view, this, setSyntax)),\n            syntaxIndentation(this),\n            syntaxFolding(this)\n        ];\n    }\n    /// Create a syntax instance for the given parser. You'll usually\n    /// want to use the\n    /// [`withProps`](https://lezer.codemirror.net/docs/ref/#lezer.Parser.withProps)\n    /// method to register CodeMirror-specific syntax node props in the\n    /// parser, before passing it to this constructor.\n    static define(parser, config = {}) {\n        let languageData = Facet.define({\n            combine: config.languageData ? values => values.concat(config.languageData) : undefined\n        });\n        return new LezerSyntax(parser.withProps(languageDataProp.add({ [parser.topType.name]: languageData })), config.dialect || \"\", languageData);\n    }\n    withDialect(dialect) {\n        return new LezerSyntax(this.parser, dialect, this.languageData);\n    }\n    getTree(state) {\n        return state.field(this.field).tree;\n    }\n    parsePos(state) {\n        return state.field(this.field).upto;\n    }\n    ensureTree(state, upto, timeout = 100) {\n        let field = state.field(this.field);\n        if (field.upto >= upto)\n            return field.updatedTree;\n        if (!field.parse)\n            field.startParse(this, state.doc);\n        if (field.parse.pos < upto) {\n            let done = work(field.parse, timeout, upto);\n            if (done)\n                return field.stopParse(done, state.doc.length);\n        }\n        return field.parse.pos < upto ? null : field.stopParse();\n    }\n    languageDataFacetAt(state, pos) {\n        if (this.parser.hasNested) {\n            let tree = this.getTree(state);\n            let target = tree.resolve(pos, -1);\n            while (target) {\n                let facet = target.type.prop(languageDataProp);\n                if (facet)\n                    return facet;\n                target = target.parent;\n            }\n        }\n        return this.languageData;\n    }\n}\nclass DocStream {\n    constructor(doc, length = doc.length) {\n        this.doc = doc;\n        this.length = length;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get(pos) {\n        if (pos >= this.length)\n            return -1;\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos) {\n            if (pos < this.cursorPos) { // Reset the cursor if we have to go back\n                this.cursor = this.doc.iter();\n                this.cursorPos = 0;\n            }\n            this.string = this.cursor.next(pos - this.cursorPos).value;\n            this.cursorPos = pos + this.string.length;\n            stringStart = this.cursorPos - this.string.length;\n        }\n        return this.string.charCodeAt(pos - stringStart);\n    }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n    clip(at) {\n        return new DocStream(this.doc, at);\n    }\n}\nfunction work(parse, time, upto = 5000000 /* MaxPos */) {\n    let endTime = Date.now() + time;\n    for (;;) {\n        let done = parse.advance();\n        if (done)\n            return done;\n        if (parse.pos > upto || Date.now() > endTime)\n            return null;\n    }\n}\nfunction takeTree(parse, base) {\n    let parsed = parse.forceFinish();\n    let cache = parsed.applyChanges([{ fromA: parse.pos, toA: parsed.length, fromB: parse.pos, toB: parsed.length }])\n        .append(base.applyChanges([{ fromA: 0, toA: parse.pos, fromB: 0, toB: parse.pos }]));\n    return { parsed, cache };\n}\nclass SyntaxState {\n    constructor(\n    // The current tree. Immutable, because directly accessible from\n    // the editor state.\n    tree, \n    // The point upto which the document has been parsed.\n    upto, \n    // The tree that can be used as cache for further incremental\n    // parsing. May differ from tree/updatedTree if a parse is broken\n    // off halfway—in that case, this one will have nodes that touch\n    // the break-off point dropped/decomposed so that they don't get\n    // incorrectly reused. The other properties will have those nodes,\n    // since they may be useful for code consuming the tree.\n    cache) {\n        this.tree = tree;\n        this.upto = upto;\n        this.cache = cache;\n        // In-progress parse, if any\n        this.parse = null;\n        this.updatedTree = tree;\n    }\n    static advance(cache, syntax, doc) {\n        let parse = syntax.parser.startParse(new DocStream(doc), { cache, dialect: syntax.dialect });\n        let done = work(parse, 25 /* Apply */);\n        if (done)\n            return new SyntaxState(done, doc.length, done);\n        let result = takeTree(parse, cache);\n        return new SyntaxState(result.parsed, parse.pos, result.cache);\n    }\n    apply(tr, syntax, effect) {\n        for (let e of tr.effects)\n            if (e.is(effect))\n                return e.value;\n        if (!tr.docChanged)\n            return this;\n        let ranges = [];\n        tr.changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n        return SyntaxState.advance((this.parse ? takeTree(this.parse, this.updatedTree).cache : this.cache).applyChanges(ranges), syntax, tr.state.doc);\n    }\n    startParse(syntax, doc) {\n        this.parse = syntax.parser.startParse(new DocStream(doc), { cache: this.cache, dialect: syntax.dialect });\n    }\n    stopParse(tree, upto) {\n        if (!tree)\n            ({ parsed: tree, cache: this.cache } = takeTree(this.parse, this.updatedTree));\n        else\n            this.cache = tree;\n        this.updatedTree = tree;\n        this.upto = upto !== null && upto !== void 0 ? upto : this.parse.pos;\n        this.parse = null;\n        return tree;\n    }\n}\nlet requestIdle = typeof window != \"undefined\" && window.requestIdleCallback ||\n    ((callback, { timeout }) => setTimeout(callback, timeout));\nlet cancelIdle = typeof window != \"undefined\" && window.cancelIdleCallback || clearTimeout;\n// FIXME figure out some way to back off from full re-parses when the\n// document is large—you could waste a lot of battery re-parsing a\n// multi-megabyte document every time you insert a backtick, even if\n// it happens in the background.\nclass HighlightWorker {\n    constructor(view, syntax, setSyntax) {\n        this.view = view;\n        this.syntax = syntax;\n        this.setSyntax = setSyntax;\n        this.working = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        if (update.docChanged)\n            this.scheduleWork();\n    }\n    scheduleWork() {\n        if (this.working > -1)\n            return;\n        let { state } = this.view, field = state.field(this.syntax.field);\n        if (field.upto >= state.doc.length)\n            return;\n        this.working = requestIdle(this.work, { timeout: 200 /* Pause */ });\n    }\n    work(deadline) {\n        this.working = -1;\n        let { state } = this.view, field = state.field(this.syntax.field);\n        if (field.upto >= state.doc.length)\n            return;\n        if (!field.parse)\n            field.startParse(this.syntax, state.doc);\n        let done = work(field.parse, deadline ? Math.max(25 /* MinSlice */, deadline.timeRemaining()) : 100 /* Slice */);\n        if (done || field.parse.badness > .8) {\n            let tree = field.stopParse(done, state.doc.length);\n            this.view.dispatch({\n                effects: this.setSyntax.of(new SyntaxState(tree, state.doc.length, field.cache))\n            });\n        }\n        else {\n            this.scheduleWork();\n        }\n    }\n    destroy() {\n        if (this.working >= 0)\n            cancelIdle(this.working);\n    }\n}\n\nexport { LezerSyntax, TreeIndentContext, continuedIndent, delimitedIndent, flatIndent, foldNodeProp, indentNodeProp };\n","// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = \"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/// Returns a grapheme cluster end _after_ (not equal to) `pos`, if\n/// possible. Moves across surrogate pairs, extending characters,\n/// characters joined with zero-width joiners, and flag emoji.\nfunction nextClusterBreak(str, pos) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\n/// Returns a grapheme cluster end _before_ `pos`, if possible.\nfunction prevClusterBreak(str, pos) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/// Find the code point at the given position in a string (as in the\n/// [`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\n/// string method).\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/// Given a Unicode codepoint, return the JavaScript string that\n/// respresents it (as in\n/// [`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint).\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/// The first character that takes up two positions in a JavaScript\n/// string. It is often useful to compare with this after calling\n/// `codePointAt`, to figure out whether your character takes up 1 or\n/// 2 index positions.\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\n/// Count the column position at the given offset into the string,\n/// taking extending characters and tab size into account.\nfunction countColumn(string, n, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = nextClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/// Find the offset that corresponds to the given column position in a\n/// string, taking extending characters and tab size into account.\nfunction findColumn(string, n, col, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (n >= col)\n            return { offset: i, leftOver: 0 };\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = nextClusterBreak(string, i);\n    }\n    return { offset: string.length, leftOver: col - n };\n}\n\n/// The document tree type.\nclass Text {\n    /// @internal\n    constructor() { }\n    /// Get the line description around the given position.\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.from <= pos && line.to >= pos)\n                return line;\n        }\n        return cacheLine(this.lineInner(pos, false, 1, 0).finish(this));\n    }\n    /// Get the description for the given (1-based) line number.\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.number == n)\n                return line;\n        }\n        return cacheLine(this.lineInner(n, true, 1, 0).finish(this));\n    }\n    /// Replace a range of the text with the given lines. `text` should\n    /// have a length of at least one.\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts);\n        parts.push(text);\n        this.decompose(to, this.length, parts);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /// Append another document to this one.\n    append(text) {\n        return this.length == 0 ? text : text.length == 0 ? this : TextNode.from([this, text], this.length + text.length);\n    }\n    /// Retrieve the text between the given points.\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts);\n        return TextNode.from(parts, to - from);\n    }\n    /// Test whether this text is equal to another instance.\n    eq(other) { return this == other || eqContent(this, other); }\n    /// Iterate over the text. When `dir` is `-1`, iteration happens\n    /// from end to start. This will return lines and the breaks between\n    /// them as separate strings, and for long lines, might split lines\n    /// themselves into multiple chunks as well.\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /// Iterate over a range of the text. When `from` > `to`, the\n    /// iterator will run in reverse.\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /// Iterate over lines in the text, starting at position (_not_ line\n    /// number) `from`. An iterator returned by this combines all text\n    /// on a line into a single string (which may be expensive for very\n    /// long lines), and skips line breaks (its\n    /// [`lineBreak`](#text.TextIterator.lineBreak) property is always\n    /// false).\n    iterLines(from = 0) { return new LineCursor(this, from); }\n    /// @internal\n    toString() { return this.sliceString(0); }\n    /// Convert the document to an array of lines (which can be\n    /// deserialized again via [`Text.of`](#text.Text^of).\n    toJSON() {\n        let lines = [];\n        for (let iter = this.iterLines(); !iter.next().done;)\n            lines.push(iter.value);\n        return lines;\n    }\n    /// Create a `Text` instance for the given array of lines.\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0] && Text.empty)\n            return Text.empty;\n        let length = textLength(text);\n        return length < 1024 /* MaxLeaf */ ? new TextLeaf(text, length) : TextNode.from(TextLeaf.split(text, []), length);\n    }\n}\nif (typeof Symbol != \"undefined\")\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\nlet lineCache = [], lineCachePos = -1, lineCacheSize = 10;\nfunction cacheLine(line) {\n    return lineCache[lineCachePos = (lineCachePos + 1) % lineCacheSize] = line;\n}\n// Leaves store an array of strings. There are always line breaks\n// between these strings (though not between adjacent Text nodes).\n// These are limited in length, so that bigger documents are\n// constructed as a tree structure. Long lines will be broken into a\n// number of single-line leaves.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target) {\n        target.push(new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from)));\n    }\n    lastLineLength() { return this.text[this.text.length - 1].length; }\n    firstLineLength() { return this.text[0].length; }\n    replace(from, to, text) {\n        let newLen = this.length + text.length - (to - from);\n        if (newLen >= 1024 /* MaxLeaf */ || !(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        return new TextLeaf(appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        target[target.length - 1] += this.text[0];\n        for (let i = 1; i < this.text.length; i++)\n            target.push(this.text[i]);\n    }\n    static split(text, target) {\n        let part = [], length = -1;\n        for (let line of text) {\n            for (;;) {\n                let newLength = length + line.length + 1;\n                if (newLength < 512 /* BaseLeaf */) {\n                    length = newLength;\n                    part.push(line);\n                    break;\n                }\n                let cut = 512 /* BaseLeaf */ - length - 1, after = line.charCodeAt(cut);\n                if (after >= 0xdc00 && after < 0xe000)\n                    cut++;\n                part.push(line.slice(0, cut));\n                target.push(new TextLeaf(part, 512 /* BaseLeaf */));\n                line = line.slice(cut);\n                length = -1;\n                part = [];\n            }\n        }\n        if (length != -1)\n            target.push(new TextLeaf(part, length));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance itself on\n// changes.\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 1;\n        for (let child of children)\n            this.lines += child.lines - 1;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target) {\n                let inner = child.lineInner(target, isLine, line, offset), add;\n                if (inner.from == offset && (add = this.lineLengthTo(i))) {\n                    inner.from -= add;\n                    inner.content = null;\n                }\n                if (inner.to == end && (add = this.lineLengthFrom(i + 1))) {\n                    inner.to += add;\n                    inner.content = null;\n                }\n                return inner;\n            }\n            offset = end;\n            line = endLine;\n        }\n    }\n    decompose(from, to, target) {\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                if (pos >= from && end <= to)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target);\n            }\n            pos = end;\n        }\n    }\n    lineLengthTo(to) {\n        let length = 0;\n        for (let i = to - 1; i >= 0; i--) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.lastLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    lastLineLength() { return this.lineLengthTo(this.children.length); }\n    lineLengthFrom(from) {\n        let length = 0;\n        for (let i = from; i < this.children.length; i++) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.firstLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    firstLineLength() { return this.lineLengthFrom(0); }\n    replace(from, to, text) {\n        // Looks like a small change, try to optimize\n        if (text.length < 512 /* BaseLeaf */ && to - from < 512 /* BaseLeaf */) {\n            let lengthDiff = text.length - (to - from);\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end &&\n                    child.length + lengthDiff < (this.length + lengthDiff) >> (3 /* BranchShift */ - 1) &&\n                    child.length + lengthDiff > 0) {\n                    let copy = this.children.slice();\n                    copy[i] = child.replace(from - pos, to - pos, text);\n                    return new TextNode(copy, this.length + lengthDiff);\n                }\n                pos = end;\n            }\n        }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                let part = child.sliceString(from - pos, to - pos, lineSep);\n                if (from >= pos && to <= end)\n                    return part;\n                result += part;\n            }\n            pos = end;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    static from(children, length) {\n        if (!children.every(ch => ch instanceof Text))\n            throw new Error(\"NOP\");\n        if (length < 1024 /* MaxLeaf */) {\n            let text = [\"\"];\n            for (let child of children)\n                child.flatten(text);\n            return new TextLeaf(text, length);\n        }\n        let chunkLength = Math.max(512 /* BaseLeaf */, length >> 3 /* BranchShift */), maxLength = chunkLength << 1, minLength = chunkLength >> 1;\n        let chunked = [], currentLength = 0, currentChunk = [];\n        function add(child) {\n            let childLength = child.length, last;\n            if (!childLength)\n                return;\n            if (childLength > maxLength && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (childLength > minLength && (currentLength > minLength || currentLength == 0)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLength > 0 &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.length + last.length <= 512 /* BaseLeaf */) {\n                currentLength += childLength;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(appendText(child.text, last.text.slice()), child.length + last.length);\n            }\n            else {\n                if (currentLength + childLength > chunkLength)\n                    flush();\n                currentLength += childLength;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLength == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLength));\n            currentLength = 0;\n            currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = Text.of([\"\"]);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nfunction eqContent(a, b) {\n    if (a.length != b.length || a.lines != b.lines)\n        return false;\n    let iterA = new RawTextCursor(a), iterB = new RawTextCursor(b);\n    for (let offA = 0, offB = 0;;) {\n        if (iterA.lineBreak != iterB.lineBreak || iterA.done != iterB.done) {\n            return false;\n        }\n        else if (iterA.done) {\n            return true;\n        }\n        else if (iterA.lineBreak) {\n            iterA.next();\n            iterB.next();\n            offA = offB = 0;\n        }\n        else {\n            let strA = iterA.value.slice(offA), strB = iterB.value.slice(offB);\n            if (strA.length == strB.length) {\n                if (strA != strB)\n                    return false;\n                iterA.next();\n                iterB.next();\n                offA = offB = 0;\n            }\n            else if (strA.length > strB.length) {\n                if (strA.slice(0, strB.length) != strB)\n                    return false;\n                offA += strB.length;\n                iterB.next();\n                offB = 0;\n            }\n            else {\n                if (strB.slice(0, strA.length) != strA)\n                    return false;\n                offB += strA.length;\n                iterA.next();\n                offA = 0;\n            }\n        }\n    }\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 0 : text instanceof TextLeaf ? text.text.length : text.children.length];\n    }\n    next(skip = 0) {\n        for (;;) {\n            let last = this.nodes.length - 1;\n            if (last < 0) {\n                this.done = true;\n                this.value = \"\";\n                this.lineBreak = false;\n                return this;\n            }\n            let top = this.nodes[last];\n            let offset = this.offsets[last];\n            if (top instanceof TextLeaf) {\n                // Internal offset with lineBreak == false means we have to\n                // count the line break at this position\n                if (offset != (this.dir > 0 ? 0 : top.text.length) && !this.lineBreak) {\n                    this.lineBreak = true;\n                    if (skip == 0) {\n                        this.value = \"\\n\";\n                        return this;\n                    }\n                    skip--;\n                    continue;\n                }\n                // Otherwise, move to the next string\n                let next = top.text[offset - (this.dir < 0 ? 1 : 0)];\n                this.offsets[last] = (offset += this.dir);\n                if (offset == (this.dir > 0 ? top.text.length : 0)) {\n                    this.nodes.pop();\n                    this.offsets.pop();\n                }\n                this.lineBreak = false;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : this.dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else if (offset == (this.dir > 0 ? top.children.length : 0)) {\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else {\n                let next = top.children[this.dir > 0 ? offset : offset - 1], len = next.length;\n                this.offsets[last] = offset + this.dir;\n                if (skip > len) {\n                    skip -= len;\n                }\n                else {\n                    this.nodes.push(next);\n                    this.offsets.push(this.dir > 0 ? 0 : next instanceof TextLeaf ? next.text.length : next.children.length);\n                }\n            }\n        }\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        if (start > end) {\n            this.skip = text.length - start;\n            this.limit = start - end;\n        }\n        else {\n            this.skip = start;\n            this.limit = end - start;\n        }\n    }\n    next() {\n        if (this.limit <= 0) {\n            this.limit = -1;\n        }\n        else {\n            let { value, lineBreak, done } = this.cursor.next(this.skip);\n            this.skip = 0;\n            this.value = value;\n            let len = lineBreak ? 1 : value.length;\n            if (len > this.limit)\n                this.value = this.cursor.dir > 0 ? value.slice(0, this.limit) : value.slice(len - this.limit);\n            if (done || this.value.length == 0)\n                this.limit = -1;\n            else\n                this.limit -= this.value.length;\n        }\n        return this;\n    }\n    get lineBreak() { return this.cursor.lineBreak; }\n    get done() { return this.limit < 0; }\n}\nclass LineCursor {\n    constructor(text, from = 0) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = text.iter();\n        this.skip = from;\n    }\n    next() {\n        if (this.cursor.done) {\n            this.done = true;\n            this.value = \"\";\n            return this;\n        }\n        for (this.value = \"\";;) {\n            let { value, lineBreak, done } = this.cursor.next(this.skip);\n            this.skip = 0;\n            if (done || lineBreak)\n                return this;\n            this.value += value;\n        }\n    }\n    get lineBreak() { return false; }\n}\n// FIXME rename start/end to from/to for consistency with other types?\n/// This type describes a line in the document. It is created\n/// on-demand when lines are [queried](#text.Text.lineAt).\nclass Line {\n    /// @internal\n    constructor(\n    /// The position of the start of the line.\n    from, \n    /// The position at the end of the line (_before_ the line break,\n    /// if this isn't the last line).\n    to, \n    /// This line's line number (1-based).\n    number, \n    /// @internal\n    content) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.content = content;\n    }\n    /// The length of the line (not including any line break after it).\n    get length() { return this.to - this.from; }\n    /// Retrieve a part of the content of this line. This is a method,\n    /// rather than, say, a string property, to avoid concatenating long\n    /// lines whenever they are accessed. Try to write your code, if it\n    /// is going to be doing a lot of line-reading, to read only the\n    /// parts it needs.\n    slice(from = 0, to = this.length) {\n        if (from == to)\n            return \"\";\n        if (typeof this.content == \"string\")\n            return this.content.slice(from, to);\n        if (!this.content)\n            this.content = new LineContent(this.doc, this.from);\n        let result = this.content.slice(from, to);\n        if (from == 0 && to == this.length)\n            this.content = result;\n        return result;\n    }\n    /// @internal\n    finish(text) {\n        this.doc = text;\n        return this;\n    }\n    /// Find the next (or previous if `forward` is false) grapheme\n    /// cluster break from the given start position (as an offset inside\n    /// the line, not the document). Will return a position greater than\n    /// (or less than if `forward` is false) `start` unless there is no\n    /// such index in the string.\n    findClusterBreak(start, forward) {\n        if (start < 0 || start > this.length)\n            throw new RangeError(\"Invalid position given to Line.findClusterBreak\");\n        let contextStart, context;\n        if (this.content == \"string\") {\n            contextStart = this.from;\n            context = this.content;\n        }\n        else {\n            contextStart = Math.max(0, start - 256);\n            context = this.slice(contextStart, Math.min(this.length, contextStart + 512));\n        }\n        return (forward ? nextClusterBreak : prevClusterBreak)(context, start - contextStart) + contextStart;\n    }\n}\nclass LineContent {\n    constructor(doc, start) {\n        this.doc = doc;\n        this.start = start;\n        this.cursor = null;\n        this.strings = null;\n    }\n    // FIXME quadratic complexity (somewhat) when iterating long lines in small pieces\n    slice(from, to) {\n        if (!this.cursor) {\n            this.cursor = this.doc.iter();\n            this.strings = [this.cursor.next(this.start).value];\n        }\n        for (let result = \"\", pos = 0, i = 0;; i++) {\n            if (i == this.strings.length) {\n                let next = this.cursor.next().value;\n                if (!next)\n                    return result;\n                this.strings.push(next);\n            }\n            let string = this.strings[i], start = pos;\n            pos += string.length;\n            if (pos <= from)\n                continue;\n            result += string.slice(Math.max(0, from - start), Math.min(string.length, to - start));\n            if (pos >= to)\n                return result;\n        }\n    }\n}\n\nexport { Line, Text, codePointAt, codePointSize, countColumn, findColumn, fromCodePoint, nextClusterBreak, prevClusterBreak };\n","import { ViewPlugin, themeClass, Direction, EditorView } from '@codemirror/next/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/next/state';\n\nconst Outside = \"-10000px\";\nconst tooltipPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.tooltips = view.state.facet(showTooltip);\n        this.tooltipViews = this.tooltips.map(tp => this.createTooltip(tp));\n    }\n    update(update) {\n        let tooltips = update.state.facet(showTooltip);\n        if (tooltips == this.tooltips) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n        }\n        else {\n            let views = [];\n            for (let i = 0; i < tooltips.length; i++) {\n                let tip = tooltips[i], known = -1;\n                for (let i = 0; i < this.tooltips.length; i++)\n                    if (this.tooltips[i].create == tip.create)\n                        known = i;\n                if (known < 0) {\n                    views[i] = this.createTooltip(tip);\n                }\n                else {\n                    let tooltipView = views[i] = this.tooltipViews[known];\n                    if (tooltipView.update)\n                        tooltipView.update(update);\n                }\n            }\n            for (let t of this.tooltipViews)\n                if (views.indexOf(t) < 0)\n                    t.dom.remove();\n            this.tooltips = tooltips;\n            this.tooltipViews = views;\n            this.maybeMeasure();\n        }\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.className = themeClass(\"tooltip\" + (tooltip.style ? \".\" + tooltip.style : \"\"));\n        this.view.dom.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        for (let { dom } of this.tooltipViews)\n            dom.remove();\n    }\n    readMeasure() {\n        return {\n            editor: this.view.dom.getBoundingClientRect(),\n            pos: this.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n            size: this.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight\n        };\n    }\n    writeMeasure(measured) {\n        let { editor } = measured;\n        for (let i = 0; i < this.tooltipViews.length; i++) {\n            let tooltip = this.tooltips[i], tView = this.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= editor.top || pos.top >= editor.bottom || pos.right <= editor.left || pos.left >= editor.right) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let left = this.view.textDirection == Direction.LTR ? Math.min(pos.left, measured.innerWidth - width)\n                : Math.max(0, pos.left - width);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide &&\n                (above ? pos.top - (size.bottom - size.top) < 0 : pos.bottom + (size.bottom - size.top) > measured.innerHeight))\n                above = !above;\n            dom.style.top = (above ? pos.top - height : pos.bottom) + \"px\";\n            dom.style.left = left + \"px\";\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.tooltips.length) {\n            if (this.view.inView || this.inView)\n                this.view.requestMeasure(this.measureReq);\n            this.inView = this.view.inView;\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = EditorView.baseTheme({\n    $tooltip: {\n        position: \"fixed\",\n        border: \"1px solid #ddd\",\n        backgroundColor: \"#f5f5f5\",\n        zIndex: 100\n    }\n});\n/// Supporting extension for displaying tooltips. Allows\n/// [`showTooltip`](#tooltip.showTooltip) to be used to define\n/// tooltips.\nfunction tooltips() {\n    return [tooltipPlugin, baseTheme];\n}\n/// Behavior by which an extension can provide a tooltip to be shown.\nconst showTooltip = Facet.define();\nconst HoverTime = 750, HoverMaxDist = 10;\nclass HoverPlugin {\n    constructor(view, source, field, setHover) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.lastMouseMove = null;\n        this.hoverTimeout = -1;\n        this.mouseInside = false;\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseenter\", this.mouseenter = this.mouseenter.bind(this));\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (!this.mouseInside || this.active)\n            return;\n        let now = Date.now(), lastMove = this.lastMouseMove;\n        if (now - lastMove.timeStamp < HoverTime) {\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime - (now - lastMove.timeStamp));\n            return;\n        }\n        let pos = this.view.contentDOM.contains(lastMove.target)\n            ? this.view.posAtCoords({ x: lastMove.clientX, y: lastMove.clientY }) : -1;\n        let open = pos == null ? null : this.source(this.view, (from, to) => {\n            return from <= pos && to >= pos && (from == to || isOverRange(this.view, from, to, lastMove.clientX, lastMove.clientY));\n        });\n        if (open)\n            this.view.dispatch({ effects: this.setHover.of(open) });\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMouseMove = event;\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(event.target)) {\n            let { pos } = tooltip, end = (_a = tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords({ x: event.clientX, y: event.clientY }) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, HoverMaxDist)))\n                this.view.dispatch({ effects: this.setHover.of(null) });\n        }\n    }\n    mouseenter() {\n        this.mouseInside = true;\n    }\n    mouseleave() {\n        this.mouseInside = false;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        this.view.dom.removeEventListener(\"mouseenter\", this.mouseenter);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin = 0) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/// Enable a hover tooltip, which shows up when the pointer hovers\n/// over ranges of text. The callback should, for each hoverable\n/// range, call its `check` argument to see if that range is being\n/// hovered over, and return a tooltip description when it is.\nfunction hoverTooltip(source, options = {}) {\n    const setHover = StateEffect.define();\n    const hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection)))\n                return null;\n            for (let effect of tr.effects)\n                if (effect.is(setHover))\n                    return effect.value;\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                return copy;\n            }\n            return value;\n        },\n        provide: [showTooltip.nFrom(v => v ? [v] : [])]\n    });\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover)),\n        tooltips()\n    ];\n}\n\nexport { hoverTooltip, showTooltip, tooltips };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { MapMode, Facet, Text as Text$1, EditorSelection, ChangeSet, Transaction, CharCategory, EditorState, precedence, combineConfig, IndentContext } from '@codemirror/next/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nexport { Range } from '@codemirror/next/rangeset';\nimport { Text, countColumn, findColumn, codePointAt } from '@codemirror/next/text';\nimport { keyName, base } from 'w3c-keyname';\n\nlet [nav, doc] = typeof navigator != \"undefined\"\n    ? [navigator, document]\n    : [{ userAgent: \"\", vendor: \"\", platform: \"\" }, { documentElement: { style: {} } }];\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nvar browser = {\n    mac: /Mac/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n    android: /Android\\b/.test(nav.userAgent),\n    webkit,\n    safari: /Apple Computer/.test(nav.vendor),\n    webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nfunction getSelection(root) {\n    return (root.getSelection ? root.getSelection() : document.getSelection());\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nfunction selectionCollapsed(domSel) {\n    let collapsed = domSel.isCollapsed;\n    if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n        collapsed = false;\n    return collapsed;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return dom.contains(selection.anchorNode.nodeType == 3 ? selection.anchorNode.parentNode : selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3) {\n        let range = tempRange();\n        range.setEnd(dom, dom.nodeValue.length);\n        range.setStart(dom, 0);\n        return range.getClientRects();\n    }\n    else if (dom.nodeType == 1) {\n        return dom.getClientRects();\n    }\n    else {\n        return [];\n    }\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nconst ScrollSpace = 5;\nfunction scrollRectIntoView(dom, rect) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == document.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (rect.top < bounding.top)\n                moveY = -(bounding.top - rect.top + ScrollSpace);\n            else if (rect.bottom > bounding.bottom)\n                moveY = rect.bottom - bounding.bottom + ScrollSpace;\n            if (rect.left < bounding.left)\n                moveX = -(bounding.left - rect.left + ScrollSpace);\n            else if (rect.right > bounding.right)\n                moveX = rect.right - bounding.right + ScrollSpace;\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelection {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    set(domSel) {\n        this.anchorNode = domSel.anchorNode;\n        this.anchorOffset = domSel.anchorOffset;\n        this.focusNode = domSel.focusNode;\n        this.focusOffset = domSel.focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction tempRange() { return scratchRange || (scratchRange = document.createRange()); }\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst none = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom, pos = null;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    let next = pos ? pos.nextSibling : parent.firstChild;\n                    if (next && !child.dom && !ContentView.get(next))\n                        child.reuseDOM(next);\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                if (track && track.node == parent && pos != child.dom)\n                    track.written = true;\n                syncNodeInto(parent, pos, child.dom);\n                pos = child.dom;\n            }\n            let next = pos ? pos.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm(next);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { return false; }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (end >= to && end != pos && toI == -1) {\n                toI = i;\n                toEnd = end;\n                break;\n            }\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd, startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: toI < this.children.length - 1 && toI >= 0 ? this.children[toI + 1].dom : null };\n    }\n    // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n    markDirty(andParent = false) {\n        if (this.dirty & 2 /* Node */)\n            return;\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = none) {\n        this.markDirty();\n        for (let i = from; i < to; i++)\n            this.children[i].parent = null;\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nfunction syncNodeInto(parent, after, dom) {\n    let next = after ? after.nextSibling : parent.firstChild;\n    if (dom.parentNode == parent)\n        while (next != dom)\n            next = rm(next);\n    else\n        parent.insertBefore(dom, next);\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\n\nconst none$1 = [];\nclass InlineView extends ContentView {\n    /// Return true when this view is equivalent to `other` and can take\n    /// on its role.\n    become(_other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // negative number to indicate it is before its position, or a\n    // positive number when after its position.\n    getSide() { return 0; }\n}\nInlineView.prototype.children = none$1;\nconst MaxJoinLen = 256;\nclass TextView extends InlineView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType != 3)\n            return false;\n        this.createDOM(dom);\n        return true;\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new TextView(this.text.slice(from));\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side, this.length);\n    }\n}\nclass MarkView extends InlineView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    createDOM() {\n        let dom = document.createElement(this.mark.tagName);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        this.setDOM(dom);\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        super.sync(track);\n    }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeInlineChildren(this, from, to, source ? source.children : none$1, openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new MarkView(this.mark, sliceInlineChildren(this.children, from), this.length - from);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side, length) {\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else\n            to++;\n    }\n    let range = tempRange();\n    range.setEnd(text, to);\n    range.setStart(text, from);\n    let rect = range.getBoundingClientRect();\n    return flatten ? flattenRect(rect, flatten < 0) : rect;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends InlineView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    slice(from) { return WidgetView.create(this.widget, this.length - from, this.side); }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, _side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return rect;\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) { return new DOMPos(this.widget.text, pos); }\n    sync() { if (!this.dom)\n        this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) { return textCoords(this.widget.text, pos, side, this.length); }\n}\nfunction mergeInlineChildren(parent, from, to, elts, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of elts)\n        dLen += view.length;\n    parent.length += dLen;\n    let { children } = parent;\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n        let start = children[fromI];\n        // Maybe just update that view and be done\n        if (elts.length == 1 && start.merge(fromOff, toOff, elts[0], openStart, openEnd))\n            return;\n        if (elts.length == 0) {\n            start.merge(fromOff, toOff, null, openStart, openEnd);\n            return;\n        }\n        // Otherwise split it, so that we don't have to worry about aliasing front/end afterwards\n        let after = start.slice(toOff);\n        if (after.merge(0, 0, elts[elts.length - 1], 0, openEnd))\n            elts[elts.length - 1] = after;\n        else\n            elts.push(after);\n        toI++;\n        openEnd = toOff = 0;\n    }\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n        let end = children[toI];\n        if (elts.length && end.merge(0, toOff, elts[elts.length - 1], 0, openEnd)) {\n            elts.pop();\n            openEnd = 0;\n        }\n        else {\n            end.merge(0, toOff, null, 0, 0);\n        }\n    }\n    else if (toI < children.length && elts.length &&\n        children[toI].merge(0, 0, elts[elts.length - 1], 0, openEnd)) {\n        elts.pop();\n        openEnd = 0;\n    }\n    if (fromOff) {\n        let start = children[fromI];\n        if (elts.length && start.merge(fromOff, start.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n        else {\n            start.merge(fromOff, start.length, null, 0, 0);\n        }\n        fromI++;\n    }\n    else if (fromI && elts.length) {\n        let end = children[fromI - 1];\n        if (end.merge(end.length, end.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n    }\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && children[toI - 1].become(elts[elts.length - 1])) {\n        elts.pop();\n        toI--;\n        openEnd = 0;\n    }\n    while (fromI < toI && elts.length && children[fromI].become(elts[0])) {\n        elts.shift();\n        fromI++;\n        openStart = 0;\n    }\n    if (!elts.length && fromI && toI < children.length && openStart && openEnd &&\n        children[toI].merge(0, 0, children[fromI - 1], openStart, openEnd))\n        fromI--;\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI)\n        parent.replaceChildren(fromI, toI, elts);\n}\nfunction sliceInlineChildren(children, from) {\n    let result = [], off = 0;\n    for (let elt of children) {\n        let end = off + elt.length;\n        if (end > from)\n            result.push(off < from ? elt.slice(from - off) : elt);\n        off = end;\n    }\n    return result;\n}\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (side <= 0 || end == view.length ? end >= pos : end > pos)\n            return child.coordsAt(pos - off, side);\n        off = end;\n    }\n    return (view.dom.lastChild || view.dom).getBoundingClientRect();\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(name, attrs[name]);\n}\n\n/// Widgets added to the content are described by subclasses of this\n/// class. This makes it possible to delay creating of the DOM\n/// structure for a widget until it is needed, and to avoid redrawing\n/// widgets even when the decorations that define them are recreated.\n/// `T` can be a type of value passed to instances of the widget type.\nclass WidgetType {\n    /// Compare this instance to another instance of the same type.\n    /// (TypeScript can't express this, but only instances of the same\n    /// specific class will be passed to this method.) This is used to\n    /// avoid redrawing widgets when they are replace by a new\n    /// decoration of the same type. The default implementation just\n    /// returns `false`, which may be wasteful.\n    eq(_widget) { return false; }\n    /// Update a DOM element created by a widget of the same type (but\n    /// different, non-`eq` content) to reflect this widget. May return\n    /// true to indicate that it could update, false to indicate it\n    /// couldn't (in which case the widget will be redrawn). The default\n    /// implementation just returns false.\n    updateDOM(_dom) { return false; }\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// The estimated height this widget will have, to be used when\n    /// estimating the height of content that hasn't been drawn. May\n    /// return -1 to indicate you don't know. The default implementation\n    /// returns -1.\n    get estimatedHeight() { return -1; }\n    /// Can be used to configure which kinds of events inside the widget\n    /// should be ignored by the editor. The default is to ignore all\n    /// events.\n    ignoreEvent(_event) { return true; }\n    //// @internal\n    get customView() { return null; }\n}\n/// The different types of blocks that can occur in an editor view.\nvar BlockType;\n(function (BlockType) {\n    /// A line of text.\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /// A block widget associated with the position after it.\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /// A block widget associated with the position before it.\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /// A block widget [replacing](#view.Decoration^replace) a range of content.\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\n})(BlockType || (BlockType = {}));\n/// A decoration provides information on how to draw or style a piece\n/// of content. You'll usually use it wrapped in a\n/// [`Range`](#rangeset.Range), which adds a start and end position.\nclass Decoration extends RangeValue {\n    /// @internal\n    constructor(\n    /// @internal\n    startSide, \n    /// @internal\n    endSide, \n    /// @internal\n    widget, \n    /// The config object used to create this decoration.\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /// @internal\n    get heightRelevant() { return false; }\n    /// Create a mark decoration, which influences the styling of the\n    /// content in its range. Nested mark decorations will cause nested\n    /// DOM elements to be created. Nesting order is determined by\n    /// precedence of the [facet](#view.EditorView^decorations) or\n    /// (below the facet-provided decorations) [view\n    /// plugin](#view.ViewPlugin.decorations). Such elements are broken\n    /// on line boundaries and on the boundaries of higher-precedence\n    /// decorations.\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /// Create a widget decoration, which adds an element at the given\n    /// position.\n    static widget(spec) {\n        let side = spec.side || 0;\n        if (spec.block)\n            side += (200000000 /* BigBlock */ + 1) * (side > 0 ? 1 : -1);\n        return new PointDecoration(spec, side, side, !!spec.block, spec.widget || null, false);\n    }\n    /// Create a replace decoration which replaces the given range with\n    /// a widget, or simply hides it.\n    static replace(spec) {\n        let block = !!spec.block;\n        let { start, end } = getInclusive(spec);\n        let startSide = block ? -200000000 /* BigBlock */ * (start ? 2 : 1) : 100000000 /* BigInline */ * (start ? -1 : 1);\n        let endSide = block ? 200000000 /* BigBlock */ * (end ? 2 : 1) : 100000000 /* BigInline */ * (end ? 1 : -1);\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /// Create a line decoration, which can add DOM attributes to the\n    /// line starting at the given position.\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /// Build a [`DecorationSet`](#view.DecorationSet) from the given\n    /// decorated range or ranges.\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /// @internal\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/// The empty set of decorations.\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(100000000 /* BigInline */ * (start ? -1 : 1), 100000000 /* BigInline */ * (end ? 1 : -1), null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-100000000 /* BigInline */, -100000000 /* BigInline */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide < 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide < 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide < 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start || false, end: end || false };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nconst MinRangeGap = 4;\nfunction addRange(from, to, ranges) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + MinRangeGap > from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nconst theme = Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = StyleModule.newName();\nfunction expandThemeClasses(sel) {\n    return sel.replace(/\\$\\w[\\w\\.]*/g, cls => {\n        let parts = cls.slice(1).split(\".\"), result = \"\";\n        for (let i = 1; i <= parts.length; i++)\n            result += \".cm-\" + parts.slice(0, i).join(\"-\");\n        return result;\n    });\n}\nfunction buildTheme(main, spec) {\n    return new StyleModule(spec, {\n        process(sel) {\n            sel = expandThemeClasses(sel);\n            return /\\$/.test(sel) ? sel.replace(/\\$/, main) : main + \" \" + sel;\n        },\n        extend(template, sel) {\n            template = expandThemeClasses(template);\n            return sel.slice(0, main.length + 1) == main + \" \"\n                ? main + \" \" + template.replace(/&/, sel.slice(main.length + 1))\n                : template.replace(/&/, sel);\n        }\n    });\n}\n/// Create a set of CSS class names for the given theme class, which\n/// can be added to a DOM element within an editor to make themes able\n/// to style it. Theme classes can be single words or words separated\n/// by dot characters. In the latter case, the returned classes\n/// combine those that match the full name and those that match some\n/// prefix—for example `\"panel.search\"` will match both the theme\n/// styles specified as `\"panel.search\"` and those with just\n/// `\"panel\"`. More specific theme classes (with more dots) take\n/// precedence over less specific ones.\nfunction themeClass(selector) {\n    if (selector.indexOf(\".\") < 0)\n        return \"cm-\" + selector;\n    let parts = selector.split(\".\"), result = \"\";\n    for (let i = 1; i <= parts.length; i++)\n        result += (result ? \" \" : \"\") + \"cm-\" + parts.slice(0, i).join(\"-\");\n    return result;\n}\nconst baseTheme = buildTheme(\".\" + baseThemeID, {\n    $: {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&$focused\": {\n            // FIXME it would be great if we could directly use the browser's\n            // default focus outline, but it appears we can't, so this tries to\n            // approximate that\n            outline_fallback: \"1px dotted #212121\",\n            outline: \"5px auto -webkit-focus-ring-color\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    $scroller: {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    $content: {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\"\n    },\n    \"$$light $content\": { caretColor: \"black\" },\n    \"$$dark $content\": { caretColor: \"white\" },\n    $line: {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    $selectionLayer: {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    $selectionBackground: {\n        position: \"absolute\",\n    },\n    \"$$light $selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"$$dark $selectionBackground\": {\n        background: \"#222\"\n    },\n    \"$$focused$light $selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"$$focused$dark $selectionBackground\": {\n        background: \"#233\"\n    },\n    $cursorLayer: {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"$$focused $cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    $cursor: {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid #aaa\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\"\n    },\n    \"$$focused $cursor\": {\n        borderLeft: \"1.2px solid black\",\n    },\n    $placeholder: {\n        color: \"#888\",\n        display: \"inline-block\"\n    },\n    $button: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"3px\"\n    },\n    \"$$light $button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"$$dark $button\": {\n        backgroundImage: \"linear-gradient(#555, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    $textfield: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"$$light $textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"$$dark $textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n});\n\nconst LineClass = themeClass(\"line\");\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, takeDeco, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (takeDeco)\n            this.setDeco(source ? source.attrs : null);\n        mergeInlineChildren(this, from, to, source ? source.children : none$2, openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].slice(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0) {\n            this.children[i - 1].parent = null;\n            i--;\n        }\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    // Only called when building a line view in ContentBuilder\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    // FIXME might need another hack to work around Firefox's behavior\n    // of not actually displaying the cursor even though it's there in\n    // the DOM\n    sync(track) {\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = LineClass;\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(LineClass);\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        if (!last || (last.nodeName != \"BR\" && (ContentView.get(last) instanceof WidgetView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height, charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    match(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0;; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (block.length)\n                    return null;\n            }\n            off = end + block.breakAfter;\n        }\n    }\n}\nconst none$2 = [];\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        return new BlockWidgetView(this.widget, len, this.type);\n    }\n    get children() { return none$2; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n    }\n    domBoundsAround() { return null; }\n    match(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine)\n            this.content.push(this.curLine = new LineView);\n        return this.curLine;\n    }\n    addWidget(view) {\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish() {\n        if (!this.posCovered())\n            this.getLine();\n    }\n    wrapMarks(view, active) {\n        for (let i = active.length - 1; i >= 0; i--)\n            view = new MarkView(active[i], [view], view.length);\n        return view;\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length);\n            this.getLine().append(this.wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            length -= take;\n            this.textOff += take;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart) {\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let widget = this.wrapMarks(WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide), active);\n                this.getLine().append(widget, openStart);\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations) {\n        let builder = new ContentBuilder(text, from, to);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish();\n        return builder;\n    }\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\n/// Used to indicate [text direction](#view.EditorView.textDirection).\nvar Direction;\n(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\n})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\nclass BidiSpan {\n    constructor(from, to, level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = line.findClusterBreak(startIndex, indexForward);\n    movedOver = line.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, 0, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, 0, span.level);\n}\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.direction = Direction.LTR;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefresh(lineHeights, whiteSpace, direction) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight || (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction;\n    }\n    refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n            this.lineWrapping != lineWrapping ||\n            this.direction != direction;\n        this.lineWrapping = lineWrapping;\n        this.direction = direction;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/// Record used to represent information about a block-level element\n/// in the editor view.\nclass BlockInfo {\n    /// @internal\n    constructor(\n    /// The start of the element in the document.\n    from, \n    /// The length of the element.\n    length, \n    /// The top position of the element.\n    top, \n    /// Its height.\n    height, \n    /// The type of element this is. When querying lines, this may be\n    /// an array of all the blocks that make up the line.\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /// The end of the element as a document position.\n    get to() { return this.from + this.length; }\n    /// The bottom position of the element.\n    get bottom() { return this.top + this.height; }\n    /// @internal\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n}\nvar QueryType;\n(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\n})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-4;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(_from, _to, doc, top, offset, f) {\n        f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = from; pos < to;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, top += lineHeight, BlockType.Text));\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from);\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let line = new HeightMapText(len, measured.heights[measured.index++]);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            oracle.heightChanged = true;\n            return HeightMap.of(nodes);\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid || this.right.height == 0 ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop || this.right.height == 0 : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? Math.max(0, deco.widget.estimatedHeight) : 0;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder);\n        return builder.finish(from);\n    }\n    get minPointSize() { return 0; }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator();\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes);\n    }\n    get minPointSize() { return 0; }\n}\n\nconst none$3 = [];\nconst clickAddsSelectionRange = Facet.define();\nconst dragMovesSelection = Facet.define();\nconst mouseSelectionStyle = Facet.define();\nconst exceptionSink = Facet.define();\nconst updateListener = Facet.define();\nconst inputHandler = Facet.define();\n/// Log or report an unhandled exception in client code. Should\n/// probably only be used by extension code that allows client code to\n/// provide functions, and calls those functions in a context where an\n/// exception can't be propagated to calling code in a reasonable way\n/// (for example when in an event handler).\n///\n/// Either calls a handler registered with\n/// [`EditorView.exceptionSink`](#view.EditorView^exceptionSink),\n/// `window.onerror`, if defined, or `console.error` (in which case\n/// it'll pass `context`, when given, as first argument).\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = Facet.define({ combine: values => values.length ? values[0] : true });\n/// Used to [declare](#view.PluginSpec.provide) which\n/// [fields](#view.PluginValue) a [view plugin](#view.ViewPlugin)\n/// provides.\nclass PluginFieldProvider {\n    /// @internal\n    constructor(\n    /// @internal\n    field, \n    /// @internal\n    get) {\n        this.field = field;\n        this.get = get;\n    }\n}\n/// Plugin fields are a mechanism for allowing plugins to provide\n/// values that can be retrieved through the\n/// [`pluginField`](#view.EditorView.pluginField) view method.\nclass PluginField {\n    from(get) {\n        return new PluginFieldProvider(this, get);\n    }\n    /// Define a new plugin field.\n    static define() { return new PluginField(); }\n}\n/// Plugins can provide additional scroll margins (space around the\n/// sides of the scrolling element that should be considered\n/// invisible) through this field. This can be useful when the\n/// plugin introduces elements that cover part of that element (for\n/// example a horizontally fixed gutter).\nPluginField.scrollMargins = PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = Facet.define();\n/// View plugins associate stateful values with a view. They can\n/// influence the way the content is drawn, and are notified of things\n/// that happen in the view.\nclass ViewPlugin {\n    constructor(\n    /// @internal\n    id, \n    /// @internal\n    create, \n    /// @internal\n    fields) {\n        this.id = id;\n        this.create = create;\n        this.fields = fields;\n        this.extension = viewPlugin.of(this);\n    }\n    /// Define a plugin from a constructor function that creates the\n    /// plugin's value, given an editor view.\n    static define(create, spec) {\n        let { eventHandlers, provide, decorations } = spec || {};\n        let fields = [];\n        if (provide)\n            for (let provider of Array.isArray(provide) ? provide : [provide])\n                fields.push(provider);\n        if (eventHandlers)\n            fields.push(domEventHandlers.from((value) => ({ plugin: value, handlers: eventHandlers })));\n        if (decorations)\n            for (let get of Array.isArray(decorations) ? decorations : [decorations])\n                fields.push(pluginDecorations.from(get));\n        return new ViewPlugin(nextPluginID++, create, fields);\n    }\n    /// Create a plugin for a class whose constructor takes a single\n    /// editor view as argument.\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\n// FIXME somehow ensure that no replacing decorations end up in here\nconst pluginDecorations = PluginField.define();\nconst domEventHandlers = PluginField.define();\nclass PluginInstance {\n    constructor(value, spec) {\n        this.value = value;\n        this.spec = spec;\n    }\n    static create(spec, view) {\n        let value;\n        try {\n            value = spec.create(view);\n        }\n        catch (e) {\n            logException(view.state, e, \"CodeMirror plugin crashed\");\n            return PluginInstance.dummy;\n        }\n        return new PluginInstance(value, spec);\n    }\n    takeField(type, target) {\n        for (let { field, get } of this.spec.fields)\n            if (field == type)\n                target.push(get(this.value));\n    }\n    update(update) {\n        if (!this.value.update)\n            return this;\n        try {\n            this.value.update(update);\n            return this;\n        }\n        catch (e) {\n            logException(update.state, e, \"CodeMirror plugin crashed\");\n            if (this.value.destroy)\n                try {\n                    this.value.destroy();\n                }\n                catch (_) { }\n            return PluginInstance.dummy;\n        }\n    }\n    destroy(view) {\n        if (this.value.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n}\nPluginInstance.dummy = new PluginInstance({}, ViewPlugin.define(() => ({})));\nconst editorAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\nconst contentAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\n// Provide decorations\nconst decorations = Facet.define();\nconst styleModule = Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/// View [plugins](#view.ViewPlugin) are given instances of this\n/// class, which describe what happened, whenever the view is updated.\nclass ViewUpdate {\n    /// @internal\n    constructor(\n    /// The editor view that the update is associated with.\n    view, \n    /// The new editor state.\n    state, \n    /// The transactions involved in the update. May be empty.\n    transactions = none$3) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /// @internal\n        this.flags = 0;\n        this.prevState = view.state;\n        this.changes = ChangeSet.empty(this.prevState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags != 1 /* Focus */;\n        }\n        if (this.docChanged)\n            this.flags |= 2 /* Height */;\n    }\n    /// Tells you whether the viewport changed in this update.\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /// Indicates whether the line height in the editor changed in this update.\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /// Returns true when the document changed or the size of the editor\n    /// or the lines or characters within it has changed.\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (16 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /// True when this update indicates a focus change.\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /// Whether the document changed in this update.\n    get docChanged() {\n        return this.transactions.some(tr => tr.docChanged);\n    }\n    /// Whether the selection was explicitly set in this update.\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /// @internal\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent;) { // (Cast to any because TypeScript is useless with Node types)\n        if (parent.nodeType == 1) {\n            if ((parent.scrollHeight > parent.clientHeight || parent.scrollWidth > parent.clientWidth) &&\n                window.getComputedStyle(parent).overflow != \"visible\") {\n                let parentRect = parent.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = parent.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: right - rect.left,\n        top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentWidth = 0;\n        this.heightOracle = new HeightOracle;\n        this.heightMap = HeightMap.empty();\n        this.scrollTo = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be signficant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.heightMap = this.heightMap.applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    update(update, scrollTo = null) {\n        let prev = this.state;\n        this.state = update.state;\n        let newDeco = this.state.facet(decorations);\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.prevState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTo && (scrollTo.head < viewport.from || scrollTo.head > viewport.to) || !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTo);\n        if (!viewport.eq(this.viewport)) {\n            this.viewport = viewport;\n            update.flags |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            update.flags |= this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        this.computeVisibleRanges();\n        if (scrollTo)\n            this.scrollTo = scrollTo;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.primary.empty && update.state.selection.primary.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(docView, repeated) {\n        let dom = docView.dom, whiteSpace = \"\", direction = Direction.LTR;\n        if (!repeated) {\n            // Vertical padding\n            let style = window.getComputedStyle(dom);\n            whiteSpace = style.whiteSpace, direction = (style.direction == \"rtl\" ? Direction.RTL : Direction.LTR);\n            this.paddingTop = parseInt(style.paddingTop) || 0;\n            this.paddingBottom = parseInt(style.paddingBottom) || 0;\n        }\n        // Pixel viewport\n        let pixelViewport = this.printing ? { top: -1e8, bottom: 1e8, left: -1e8, right: 1e8 } : visiblePixelRange(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        this.inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (!this.inView)\n            return 0;\n        let lineHeights = docView.measureVisibleLineHeights();\n        let refresh = false, bias = 0, result = 0, oracle = this.heightOracle;\n        if (!repeated) {\n            let contentWidth = docView.dom.clientWidth;\n            if (oracle.mustRefresh(lineHeights, whiteSpace, direction) ||\n                oracle.lineWrapping && Math.abs(contentWidth - this.contentWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    docView.minWidth = 0;\n                    result |= 16 /* Geometry */;\n                }\n            }\n            if (this.contentWidth != contentWidth) {\n                this.contentWidth = contentWidth;\n                result |= 16 /* Geometry */;\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n        }\n        oracle.heightChanged = false;\n        this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n        if (oracle.heightChanged)\n            result |= 2 /* Height */;\n        if (!this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTo && (this.scrollTo.head < this.viewport.from || this.scrollTo.head > this.viewport.to)) {\n            this.viewport = this.getViewport(bias, this.scrollTo);\n            result |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            result |= this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    getViewport(bias, scrollTo) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { top, bottom } = this.pixelViewport;\n        let viewport = new Viewport(map.lineAt(top - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(bottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTo is given, make sure the viewport includes that position\n        if (scrollTo) {\n            if (scrollTo.head < viewport.from) {\n                let { top: newTop } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newTop - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newTop + (bottom - top) + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n            else if (scrollTo.head > viewport.to) {\n                let { bottom: newBottom } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newBottom - (bottom - top) - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newBottom + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        return (from == 0 || top <= this.pixelViewport.top - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= this.pixelViewport.bottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > this.pixelViewport.top - 2 * 1000 /* Margin */ && bottom < this.pixelViewport.bottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.heightOracle.direction != Direction.LTR)\n            return gaps;\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, line => {\n            if (line.length < 10000 /* Margin */)\n                return;\n            let structure = lineStructure(line.from, line.to, this.state);\n            if (structure.total < 10000 /* Margin */)\n                return;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                if (line.from != this.viewport.from)\n                    viewFrom = line.from;\n                else\n                    viewFrom = findPosition(structure, (this.pixelViewport.top - line.top) / line.height);\n                if (line.to != this.viewport.to)\n                    viewTo = line.to;\n                else\n                    viewTo = findPosition(structure, (this.pixelViewport.bottom - line.top) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, this.pixelViewport.left / totalWidth);\n                viewTo = findPosition(structure, this.pixelViewport.right / totalWidth);\n            }\n            let sel = this.state.selection.primary;\n            // Make sure the gap doesn't cover a selection end\n            if (sel.from <= viewFrom && sel.to >= line.from)\n                viewFrom = sel.from;\n            if (sel.from <= line.to && sel.to >= viewTo)\n                viewTo = sel.to;\n            let gapTo = viewFrom - 10000 /* Margin */, gapFrom = viewTo + 10000 /* Margin */;\n            if (gapTo > line.from + 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.from == line.from && gap.to > gapTo - 5000 /* HalfMargin */ && gap.to < gapTo + 5000 /* HalfMargin */) ||\n                    new LineGap(line.from, gapTo, this.gapSize(line, gapTo, true, structure)));\n            if (gapFrom < line.to - 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.to == line.to && gap.from > gapFrom - 5000 /* HalfMargin */ &&\n                    gap.from < gapFrom + 5000 /* HalfMargin */) ||\n                    new LineGap(gapFrom, line.to, this.gapSize(line, gapFrom, false, structure)));\n        });\n        return gaps;\n    }\n    gapSize(line, pos, start, structure) {\n        if (this.heightOracle.lineWrapping) {\n            let height = line.height * findFraction(structure, pos);\n            return start ? height : line.height - height;\n        }\n        else {\n            let ratio = findFraction(structure, pos);\n            return structure.total * this.heightOracle.charWidth * (start ? ratio : 1 - ratio);\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n            return 8 /* LineGaps */;\n        }\n        return 0;\n    }\n    computeVisibleRanges() {\n        let deco = this.state.facet(decorations);\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { },\n            minPointSize: 20\n        });\n        this.visibleRanges = ranges;\n    }\n    lineAt(pos, editorTop) {\n        return this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    lineAtHeight(height, editorTop) {\n        return this.heightMap.lineAt(height, QueryType.ByHeight, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    blockAtHeight(height, editorTop) {\n        return this.heightMap.blockAt(height, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    forEachLine(from, to, f, editorTop) {\n        return this.heightMap.forEachLine(from, to, this.state.doc, editorTop + this.paddingTop, 0, f);\n    }\n}\n/// Indicates the range of the document that is in the visible\n/// viewport.\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n    eq(b) { return this.from == b.from && this.to == b.to; }\n}\nfunction lineStructure(from, to, state) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(state.facet(decorations), from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        },\n        minPointSize: 20 // We're only interested in collapsed ranges of a significant size\n    });\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n\nconst none$4 = [];\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.viewports = none$4;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // checkLayout, this is updated to point at the width of a given\n        // element and its extent in the document. When a change happens in\n        // that range, these are reset. That way, once we've seen a\n        // line/element of a given length, we keep the editor wide enough to\n        // fit at least that element, until it is changed, at which point we\n        // forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], this.updateDeco(), 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        var _a;\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (!((_a = this.view.inputState) === null || _a === void 0 ? void 0 : _a.composing))\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        let forceSelection = (browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.prevState.doc.lines;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        let pointerSel = update.transactions.some(tr => tr.annotation(Transaction.userEvent) == \"pointerselection\");\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0 &&\n            !(update.flags & (4 /* Viewport */ | 8 /* LineGaps */)) &&\n            update.state.selection.primary.from >= this.view.viewport.from &&\n            update.state.selection.primary.to <= this.view.viewport.to) {\n            this.updateSelection(forceSelection, pointerSel);\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, deco, update.prevState.doc.length, forceSelection, pointerSel);\n            return true;\n        }\n    }\n    // Used both by update and checkLayout do perform the actual DOM\n    // update\n    updateInner(changes, deco, oldLength, forceSelection = false, pointerSel = false) {\n        this.updateChildren(changes, deco, oldLength);\n        this.view.observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.heightMap.height + \"px\";\n            this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome ? { node: getSelection(this.view.root).focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track === null || track === void 0 ? void 0 : track.written)\n                forceSelection = true;\n            this.updateSelection(forceSelection, pointerSel);\n            this.dom.style.height = \"\";\n        });\n    }\n    updateChildren(changes, deco, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, deco);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            this.replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd) {\n        let before = this.children[fromI], last = content.length ? content[content.length - 1] : null;\n        let breakAtEnd = last ? last.breakAfter : breakAtStart;\n        // Change within a single line\n        if (fromI == toI && !breakAtStart && !breakAtEnd && content.length < 2 &&\n            before.merge(fromOff, toOff, content.length ? last : null, fromOff == 0, openStart, openEnd))\n            return;\n        let after = this.children[toI];\n        // Make sure the end of the line after the update is preserved in `after`\n        if (toOff < after.length || after.children.length && after.children[after.children.length - 1].length == 0) {\n            // If we're splitting a line, separate part of the start line to\n            // avoid that being mangled when updating the start line.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                content[content.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff || after.children.length && after.children[0].length == 0)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                content.push(after);\n            }\n        }\n        else if (after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && content.length && before.merge(fromOff, before.length, content[0], false, openStart, 0)) {\n                before.breakAfter = content.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n        // Try to merge widgets on the boundaries of the replacement\n        while (fromI < toI && content.length) {\n            if (this.children[toI - 1].match(content[content.length - 1]))\n                toI--, content.pop();\n            else if (this.children[fromI].match(content[0]))\n                fromI++, content.shift();\n            else\n                break;\n        }\n        if (fromI < toI || content.length)\n            this.replaceChildren(fromI, toI, content);\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(force = false, fromPointer = false) {\n        if (!(fromPointer || this.mayControlSelection()))\n            return;\n        let primary = this.view.state.selection.primary;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(primary.anchor);\n        let head = this.domAtPos(primary.head);\n        let domSel = getSelection(this.root);\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            (browser.gecko && primary.empty && nextToUneditable(domSel.focusNode, domSel.focusOffset)) ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                if (primary.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    domSel.collapse(anchor.node, anchor.offset);\n                    if (primary.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = primary.bidiLevel;\n                }\n                else if (domSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    domSel.collapse(anchor.node, anchor.offset);\n                    domSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (primary.anchor > primary.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    domSel.removeAllRanges();\n                    domSel.addRange(range);\n                }\n            });\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        let cursor = this.view.state.selection.primary;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head); // FIXME provide view-line-range finding helper\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom : hasSelection(this.dom, getSelection(this.root));\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos >= start && child.type != BlockType.WidgetAfter)\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights() {\n        let result = [], { from, to } = this.view.viewState.viewport;\n        let minWidth = Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                result.push(child.dom.getBoundingClientRect().height);\n                let width = child.dom.scrollWidth;\n                if (width > minWidth) {\n                    this.minWidth = minWidth = width;\n                    this.minWidthFrom = pos;\n                    this.minWidthTo = end;\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let visible = this.view.viewState.viewport, viewports = [visible];\n        let { head, anchor } = this.view.state.selection.primary;\n        if (head < visible.from || head > visible.to) {\n            let { from, to } = this.view.viewState.lineAt(head, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        if (!viewports.some(({ from, to }) => anchor >= from && anchor <= to)) {\n            let { from, to } = this.view.viewState.lineAt(anchor, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        let deco = [];\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == viewports.length ? null : viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = this.view.viewState.lineAt(end, 0).bottom - this.view.viewState.lineAt(pos, 0).top;\n                deco.push(Decoration.replace({ widget: new BlockGapWidget(height), block: true, inclusive: true }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        return this.decorations = [\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco,\n            this.compositionDeco,\n            ...this.view.state.facet(decorations),\n            ...this.view.pluginField(pluginDecorations)\n        ];\n    }\n    scrollPosIntoView(pos, side) {\n        let rect = this.coordsAt(pos, side);\n        if (!rect)\n            return;\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.pluginField(PluginField.scrollMargins))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        scrollRectIntoView(this.dom, {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        });\n    }\n}\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MaxNodeHeight = 1e7;\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        if (this.height < MaxNodeHeight) {\n            while (elt.lastChild)\n                elt.lastChild.remove();\n            elt.style.height = this.height + \"px\";\n        }\n        else {\n            elt.style.height = \"\";\n            for (let remaining = this.height; remaining > 0; remaining -= MaxNodeHeight) {\n                let fill = elt.appendChild(document.createElement(\"div\"));\n                fill.style.height = Math.min(remaining, MaxNodeHeight) + \"px\";\n            }\n        }\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction computeCompositionDeco(view, changes) {\n    let sel = getSelection(view.root);\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return Decoration.none;\n    let cView = view.docView.nearest(textNode);\n    let from, to, topNode = textNode;\n    if (cView instanceof InlineView) {\n        while (cView.parent instanceof InlineView)\n            cView = cView.parent;\n        from = cView.posAtStart;\n        to = from + cView.length;\n        topNode = cView.dom;\n    }\n    else if (cView instanceof LineView) {\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        from = to = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n    }\n    else {\n        return Decoration.none;\n    }\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let text = textNode.nodeValue, { state } = view;\n    if (newTo - newFrom < text.length) {\n        if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.sliceDoc(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(topNode, textNode) }).range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text) {\n        super();\n        this.top = top;\n        this.text = text;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = line.findClusterBreak(linePos, false);\n    else\n        to = line.findClusterBreak(linePos, true);\n    let cat = categorize(line.slice(from, to));\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (categorize(line.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (categorize(line.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length, range = tempRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rects = range.getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (rect.left - 1 <= x && rect.right + 1 >= x &&\n                rect.top - 1 <= y && rect.bottom + 1 >= y) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    range.setEnd(node, i);\n                    let rectBefore = range.getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                return { node, offset: i + (after ? 1 : 0) };\n            }\n        }\n    }\n    return { node, offset: 0 };\n}\nfunction posAtCoords(view, { x, y }, bias = -1) {\n    let content = view.contentDOM.getBoundingClientRect(), block;\n    let halfLine = view.defaultLineHeight / 2;\n    for (let bounced = false;;) {\n        block = view.blockAtHeight(y, content.top);\n        if (block.top > y || block.bottom < y) {\n            bias = block.top > y ? -1 : 1;\n            y = Math.min(block.bottom - halfLine, Math.max(block.top + halfLine, y));\n            if (bounced)\n                return -1;\n            else\n                bounced = true;\n        }\n        if (block.type == BlockType.Text)\n            break;\n        y = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n    }\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : null;\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length : null;\n    // Clip x to the viewport sides\n    x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n    let root = view.root, element = root.elementFromPoint(x, y);\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n        if (root.caretPositionFromPoint) {\n            let pos = root.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (root.caretRangeFromPoint) {\n            let range = root.caretRangeFromPoint(x, y);\n            if (range)\n                ({ startContainer: node, startOffset: offset } = range);\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let pos = view.posAtCoords({ x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, view.textDirection, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    var _a;\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos);\n    let startCoords = view.coordsAtPos(startPos);\n    if (startCoords) {\n        let rect = view.dom.getBoundingClientRect();\n        let goal = (_a = start.goalColumn) !== null && _a !== void 0 ? _a : startCoords.left - rect.left;\n        let resolvedGoal = rect.left + goal;\n        let dist = distance !== null && distance !== void 0 ? distance : 5;\n        for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, extra = 0; extra < 50; extra += 10) {\n            let pos = posAtCoords(view, { x: resolvedGoal, y: startY + (dist + extra) * dir }, dir);\n            if (pos == null)\n                break;\n            if (pos != startPos)\n                return EditorSelection.cursor(pos, undefined, undefined, goal);\n        }\n    }\n    // Outside of the drawn viewport, use a crude column-based approach\n    let { doc } = view.state, line = doc.lineAt(startPos), tabSize = view.state.tabSize;\n    let goal = start.goalColumn, goalCol = 0;\n    if (goal == null) {\n        for (const iter = doc.iterRange(line.from, startPos); !iter.next().done;)\n            goalCol = countColumn(iter.value, goalCol, tabSize);\n        goal = goalCol * view.defaultCharacterWidth;\n    }\n    else {\n        goalCol = Math.round(goal / view.defaultCharacterWidth);\n    }\n    if (dir < 0 && line.from == 0)\n        return EditorSelection.cursor(0);\n    else if (dir > 0 && line.to == doc.length)\n        return EditorSelection.cursor(line.to);\n    let otherLine = doc.line(line.number + dir);\n    let result = otherLine.from;\n    let seen = 0;\n    for (const iter = doc.iterRange(otherLine.from, otherLine.to); seen >= goalCol && !iter.next().done;) {\n        const { offset, leftOver } = findColumn(iter.value, seen, goalCol, tabSize);\n        seen = goalCol - leftOver;\n        result += offset;\n    }\n    return EditorSelection.cursor(result, undefined, undefined, goal);\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        this.composing = false;\n        this.compositionEndedAt = 0;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        // Must always run, even if a custom handler handled the event\n        view.contentDOM.addEventListener(\"keydown\", (event) => {\n            view.inputState.lastKeyCode = event.keyCode;\n            view.inputState.lastKeyTime = Date.now();\n        });\n        this.notifiedFocused = view.hasFocus;\n        this.ensureHandlers(view);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view) {\n        let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n        for (let set of handlers) {\n            for (let type in set.handlers)\n                if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                    this.registeredEvents.push(type);\n                    view.contentDOM.addEventListener(type, (event) => {\n                        if (!eventBelongsToEditor(view, event))\n                            return;\n                        if (this.runCustomHandlers(type, view, event))\n                            event.preventDefault();\n                    });\n                }\n        }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && event.timeStamp - this.compositionEndedAt < 500) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return event.type == \"keydown\" || event.type == \"compositionend\";\n    }\n    startMouseSelection(view, event, style) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = new MouseSelection(this, view, event, style);\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nclass MouseSelection {\n    constructor(inputState, view, startEvent, style) {\n        this.inputState = inputState;\n        this.view = view;\n        this.startEvent = startEvent;\n        this.style = style;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection$1(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.startEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (!selection.eq(this.view.state.selection) || selection.primary.assoc != this.view.state.selection.primary.assoc)\n            this.view.dispatch({\n                selection,\n                annotations: Transaction.userEvent.of(\"pointerselection\"),\n                scrollIntoView: true\n            });\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        this.style.update(update);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection$1(view, event) {\n    let facet = view.state.facet(dragMovesSelection);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { primary } = view.state.selection;\n    if (primary.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        changes = {\n            changes: state.selection.ranges.map(r => state.doc.lineAt(r.from))\n                .filter((l, i, a) => i == 0 || a[i - 1] != l)\n                .map(line => ({ from: line.from, insert: (byLine ? text.line(i++).slice() : input) + state.lineBreak }))\n        };\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.slice() },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        annotations: Transaction.userEvent.of(\"paste\"),\n        scrollIntoView: true\n    });\n}\nfunction mustCapture(event) {\n    let mods = (event.ctrlKey ? 1 /* Ctrl */ : 0) | (event.metaKey ? 8 /* Meta */ : 0) |\n        (event.altKey ? 2 /* Alt */ : 0) | (event.shiftKey ? 4 /* Shift */ : 0);\n    let code = event.keyCode, macCtrl = browser.mac && mods == 1 /* Ctrl */;\n    return code == 8 || (macCtrl && code == 72) || // Backspace, Ctrl-h on Mac\n        code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n        code == 27 || // Esc\n        (mods == (browser.mac ? 8 /* Meta */ : 1 /* Ctrl */) && // Ctrl/Cmd-[biyz]\n            (code == 66 || code == 73 || code == 89 || code == 90));\n}\nhandlers.keydown = (view, event) => {\n    if (mustCapture(event))\n        event.preventDefault();\n    view.inputState.setSelectionOrigin(\"keyboardselection\");\n};\nhandlers.touchdown = handlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"pointerselection\");\n};\nhandlers.mousedown = (view, event) => {\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        if (view.root.activeElement != view.contentDOM)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(view, event, style);\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let line = LineView.find(view.docView, pos);\n        if (line)\n            return EditorSelection.range(line.posAtStart, line.posAtEnd);\n        let { from, to } = view.state.doc.lineAt(pos);\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (pos == null)\n        return null;\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown;\n    lastMouseDown = event;\n    return lastMouseDownCount = !last || (last.timeStamp > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.changes) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.primary.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { primary } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = primary;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(primary.from, primary.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    let text = event.dataTransfer.getData(\"Text\");\n    if (dropPos == null || !text)\n        return;\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        annotations: Transaction.userEvent.of(\"drop\")\n    });\n};\nhandlers.paste = (view, event) => {\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let text = data && data.getData(\"text/plain\");\n    if (text) {\n        doPaste(view, text);\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.slice());\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\")\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            annotations: Transaction.userEvent.of(\"cut\")\n        });\n};\nhandlers.focus = handlers.blur = view => {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n};\nhandlers.beforeprint = view => {\n    view.viewState.printing = true;\n    view.requestMeasure();\n    setTimeout(() => {\n        view.viewState.printing = false;\n        view.requestMeasure();\n    }, 2000);\n};\nfunction forceClearComposition(view) {\n    if (view.docView.compositionDeco.size)\n        view.update([]);\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (!view.inputState.composing) {\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view);\n        }\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = true;\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = false;\n    view.inputState.compositionEndedAt = Date.now();\n    setTimeout(() => {\n        if (!view.inputState.composing)\n            forceClearComposition(view);\n    }, 50);\n};\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        this.ignoreSelection = new DOMSelection;\n        this.delayedFlush = -1;\n        this.queue = [];\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.intersecting = false;\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM\n            if (browser.ie && browser.ie_version <= 11 &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = () => {\n            if (this.view.root.activeElement != this.dom)\n                return;\n            // Deletions on IE11 fire their events in the wrong order, giving\n            // us a selection change event before the DOM changes are\n            // reported.\n            if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.primary.empty) {\n                let sel = getSelection(this.view.root);\n                // Selection.isCollapsed isn't reliable on IE\n                if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                    return this.flushSoon();\n            }\n            this.flush();\n        };\n        this.start();\n        this.onScroll = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScroll);\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n        }\n        this.listenForScroll();\n    }\n    onScroll(e) {\n        if (this.intersecting) {\n            this.flush();\n            this.onScrollChanged(e);\n        }\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        // FIXME is this shadow-root safe?\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    clearSelection() {\n        this.ignoreSelection.set(getSelection(this.view.root));\n    }\n    // Throw away any pending changes\n    clear() {\n        this.observer.takeRecords();\n        this.queue.length = 0;\n        this.clearSelection();\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    // Apply pending changes, if any\n    flush() {\n        if (this.delayedFlush >= 0)\n            return;\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let selection = getSelection(this.view.root);\n        let newSel = !this.ignoreSelection.eq(selection) && hasSelection(this.dom, selection);\n        if (records.length == 0 && !newSel)\n            return;\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        let startState = this.view.state;\n        if (from > -1 || newSel)\n            this.onChange(from, to, typeOver);\n        if (this.view.state == startState) { // The view wasn't updated\n            if (this.view.docView.dirty) {\n                this.ignore(() => this.view.docView.sync());\n                this.view.docView.dirty = 0 /* Not */;\n            }\n            this.view.docView.updateSelection();\n        }\n        this.clearSelection();\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty();\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else { // \"characterData\"\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this.intersection)\n            this.intersection.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        clearTimeout(this.parentCheck);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.primary, bounds;\n    if (start > -1 && (bounds = view.docView.domBoundsAround(start, end, 0))) {\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view.contentDOM, view.root);\n        let reader = new DOMReader(selPoints, view.state.lineBreak);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        newSel = selectionFromPoints(selPoints, from);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n        if (diff)\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: view.state.toText(reader.text.slice(diff.from, diff.toB)) };\n    }\n    else if (view.hasFocus) {\n        let domSel = getSelection(view.root);\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ? view.state.selection.primary.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset\n            ? view.state.selection.primary.anchor\n            : selectionCollapsed(domSel) ? head : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.primary.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    if (change) {\n        let startState = view.state;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events.\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view, \"Enter\", 10)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view, \"Delete\", 46))))\n            return;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) +\n                after));\n        }\n        else {\n            let changes = startState.changes(change);\n            tr = {\n                changes,\n                selection: newSel && !startState.selection.primary.eq(newSel.primary) && newSel.primary.to <= changes.newLength\n                    ? startState.selection.replaceRange(newSel.primary) : undefined\n            };\n        }\n        view.dispatch(tr, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") });\n    }\n    else if (newSel && !newSel.primary.eq(sel)) {\n        let scrollIntoView = false, annotations;\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"keyboardselection\")\n                scrollIntoView = true;\n            else\n                annotations = Transaction.userEvent.of(view.inputState.lastSelectionOrigin);\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, annotations });\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nclass DOMReader {\n    constructor(points, lineSep) {\n        this.points = points;\n        this.lineSep = lineSep;\n        this.text = \"\";\n    }\n    readRange(start, end) {\n        if (!start)\n            return;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if ((view ? view.breakAfter : isBlockElement(cur)) ||\n                ((nextView ? nextView.breakAfter : isBlockElement(next)) && !(cur.nodeName == \"BR\" && !cur.cmIgnore)))\n                this.text += this.lineSep;\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        let text;\n        if (fromView != null)\n            text = fromView.sliceString(0, undefined, this.lineSep);\n        else if (node.nodeType == 3)\n            text = node.nodeValue;\n        else if (node.nodeName == \"BR\")\n            text = node.nextSibling ? this.lineSep : \"\";\n        else if (node.nodeType == 1)\n            this.readRange(node.firstChild, null);\n        if (text != null) {\n            this.findPointIn(node, text.length);\n            this.text += text;\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointIn(node, maxLen) {\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, maxLen);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\nfunction selectionPoints(dom, root) {\n    let result = [];\n    if (root.activeElement != dom)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = getSelection(root);\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\nfunction dispatchKey(view, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    view.contentDOM.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    view.contentDOM.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/// An editor view represents the editor's user interface. It holds\n/// the editable DOM surface, and possibly other elements such as the\n/// line number gutter. It handles events and dispatches state\n/// transactions for editing actions.\nclass EditorView {\n    /// Construct a new view. You'll usually want to put `view.dom` into\n    /// your document after creating a view, so that the user can see\n    /// it.\n    constructor(\n    /// Configuration options.\n    config = {}) {\n        this.plugins = [];\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        /// @internal\n        this.updateState = 2 /* Updating */;\n        /// @internal\n        this.measureScheduled = -1;\n        /// @internal\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.className = themeClass(\"scroller\");\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n        this.observer = new DOMObserver(this, (from, to, typeOver) => applyDOMChange(this, from, to, typeOver), event => { this.inputState.runScrollHandlers(this, event); this.measure(); });\n        this.docView = new DocView(this);\n        this.inputState = new InputState(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        ensureGlobalHandler();\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /// The current editor state.\n    get state() { return this.viewState.state; }\n    /// To be able to display large documents without consuming too much\n    /// memory or overloading the browser, CodeMirror only draws the\n    /// code that is visible (plus a margin around it) to the DOM. This\n    /// property tells you the extent of the current drawn viewport, in\n    /// document positions.\n    get viewport() { return this.viewState.viewport; }\n    /// When there are, for example, large collapsed ranges in the\n    /// viewport, its size can be a lot bigger than the actual visible\n    /// content. Thus, if you are doing something like styling the\n    /// content in the viewport, it is preferable to only do so for\n    /// these ranges, which are the subset of the viewport that is\n    /// actually drawn.\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /// Returns false when the editor is entirely scrolled out of view\n    /// or otherwise hidden.\n    get inView() { return this.viewState.inView; }\n    /// Indicates whether the user is currently composing text via\n    /// [IME](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide).\n    get composing() { return this.inputState.composing; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /// Update the view for the given array of transactions. This will\n    /// update the visible document and selection to match the state\n    /// produced by the transactions, and notify view plugins of the\n    /// change. You should usually call\n    /// [`dispatch`](#view.EditorView.dispatch) instead, which uses this\n    /// as a primitive.\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        this.updateState = 2 /* Updating */;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        let update = new ViewUpdate(this, state, transactions);\n        let scrollTo = transactions.some(tr => tr.scrollIntoView) ? state.selection.primary : null;\n        this.viewState.update(update, scrollTo);\n        this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n        if (!update.empty)\n            this.updatePlugins(update);\n        let redrawn = this.docView.update(update);\n        if (this.state.facet(styleModule) != this.styleModules)\n            this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        if (redrawn || scrollTo || this.viewState.mustEnforceCursorAssoc)\n            this.requestMeasure();\n        for (let listener of this.state.facet(updateListener))\n            listener(update);\n    }\n    /// Reset the view to the given state. (This will cause the entire\n    /// document to be redrawn and all view plugins to be reinitialized,\n    /// so you should probably only use it when the new state isn't\n    /// derived from the old state. Otherwise, use\n    /// [`update`](#view.EditorView.update) instead.)\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        this.updateState = 2 /* Updating */;\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.viewState = new ViewState(newState);\n        this.plugins = newState.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n        this.docView = new DocView(this);\n        this.inputState.ensureHandlers(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.bidiCache = [];\n        this.updateState = 0 /* Idle */;\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.prevState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [], reused = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(PluginInstance.create(spec, this));\n                }\n                else {\n                    let plugin = this.plugins[found].update(update);\n                    reused.push(plugin);\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (reused.indexOf(plugin) < 0)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.inputState.ensureHandlers(this);\n        }\n        else {\n            for (let i = 0; i < this.plugins.length; i++)\n                this.plugins[i] = this.plugins[i].update(update);\n        }\n    }\n    /// @internal\n    measure() {\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = -1; // Prevent requestMeasure calls from scheduling another animation frame\n        let updated = null;\n        for (let i = 0;; i++) {\n            this.updateState = 1 /* Measuring */;\n            let changed = this.viewState.measure(this.docView, i > 0);\n            let measuring = this.measureRequests;\n            if (!changed && !measuring.length && this.viewState.scrollTo == null)\n                break;\n            this.measureRequests = [];\n            if (i > 5) {\n                console.warn(\"Viewport failed to stabilize\");\n                break;\n            }\n            let measured = measuring.map(m => {\n                try {\n                    return m.read(this);\n                }\n                catch (e) {\n                    logException(this.state, e);\n                    return BadMeasure;\n                }\n            });\n            let update = new ViewUpdate(this, this.state);\n            update.flags |= changed;\n            if (!updated)\n                updated = update;\n            else\n                updated.flags |= changed;\n            this.updateState = 2 /* Updating */;\n            this.updatePlugins(update);\n            this.updateAttrs();\n            if (changed)\n                this.docView.update(update);\n            for (let i = 0; i < measuring.length; i++)\n                if (measured[i] != BadMeasure) {\n                    try {\n                        measuring[i].write(measured[i], this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                    }\n                }\n            if (this.viewState.scrollTo) {\n                this.docView.scrollPosIntoView(this.viewState.scrollTo.head, this.viewState.scrollTo.assoc);\n                this.viewState.scrollTo = null;\n            }\n            if (!(changed & 4 /* Viewport */) && this.measureRequests.length == 0)\n                break;\n        }\n        this.updateState = 0 /* Idle */;\n        this.measureScheduled = -1;\n        if (updated)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /// Get the CSS classes for the currently active editor themes.\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? \"cm-dark\" : \"cm-light\") + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = combineAttrs(this.state.facet(editorAttributes), {\n            class: themeClass(\"wrap\") + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n        this.editorAttrs = editorAttrs;\n        let contentAttrs = combineAttrs(this.state.facet(contentAttributes), {\n            spellcheck: \"false\",\n            contenteditable: String(this.state.facet(editable)),\n            class: themeClass(\"content\"),\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        });\n        updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n        this.contentAttrs = contentAttrs;\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n    }\n    /// Find the DOM parent node and offset (child offset if `node` is\n    /// an element, character offset when it is a text node) at the\n    /// given document position.\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /// Find the document position at the given DOM node. Can be useful\n    /// for associating positions with DOM events. Will raise an error\n    /// when `node` isn't part of the editor content.\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure();\n    }\n    /// Make sure plugins get a chance to measure the DOM before the\n    /// next frame. Calling this is preferable to messing with the DOM\n    /// directly from, for example, an even handler, because it'll make\n    /// sure measuring and drawing done by other components is\n    /// synchronized, avoiding unnecessary DOM layout computations.\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /// Collect all values provided by the active plugins for a given\n    /// field.\n    pluginField(field) {\n        // FIXME make this error when called during plugin updating\n        let result = [];\n        for (let plugin of this.plugins)\n            plugin.takeField(field, result);\n        return result;\n    }\n    /// Get the value of a specific plugin, if present. Note that\n    /// plugins that crash can be dropped from a view, so even when you\n    /// know you registered a given plugin, it is recommended to check\n    /// the return value of this method.\n    plugin(plugin) {\n        for (let inst of this.plugins)\n            if (inst.spec == plugin)\n                return inst.value;\n        return null;\n    }\n    /// Find the line or block widget at the given vertical position.\n    /// `editorTop`, if given, provides the vertical position of the top\n    /// of the editor. It defaults to the editor's screen position\n    /// (which will force a DOM layout).\n    blockAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.blockAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find information for the visual line (see\n    /// [`visualLineAt`](#view.EditorView.visualLineAt)) at the given\n    /// vertical position. The resulting block info might hold another\n    /// array of block info structs in its `type` field if this line\n    /// consists of more than one block.\n    ///\n    /// Heights are interpreted relative to the given `editorTop`\n    /// position. When not given, the top position of the editor's\n    /// [content element](#view.EditorView.contentDOM) is taken.\n    visualLineAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.lineAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find the extent and height of the visual line (the content shown\n    /// in the editor as a line, which may be smaller than a document\n    /// line when broken up by block widgets, or bigger than a document\n    /// line when line breaks are covered by replaced decorations) at\n    /// the given position.\n    ///\n    /// Vertical positions are computed relative to the `editorTop`\n    /// argument. You can pass `view.dom.getBoundingClientRect().top`\n    /// here to get screen coordinates.\n    visualLineAt(pos, editorTop = 0) {\n        return this.viewState.lineAt(pos, editorTop);\n    }\n    /// Iterate over the height information of the lines in the\n    /// viewport.\n    viewportLines(f, editorTop) {\n        let { from, to } = this.viewport;\n        this.viewState.forEachLine(from, to, f, ensureTop(editorTop, this.contentDOM));\n    }\n    /// The editor's total content height.\n    get contentHeight() {\n        return this.viewState.heightMap.height + this.viewState.paddingTop + this.viewState.paddingBottom;\n    }\n    /// Move a cursor position by [grapheme\n    /// cluster](#text.nextClusterBreak). `forward` determines whether\n    /// the motion is away from the line start, or towards it. Motion in\n    /// bidirectional text is in visual order, in the editor's [text\n    /// direction](#view.EditorView.textDirection). When the start\n    /// position was the last one on the line, the returned position\n    /// will be across the line break. If there is no further line, the\n    /// original position is returned.\n    moveByChar(start, forward, by) {\n        return moveByChar(this, start, forward, by);\n    }\n    /// Move a cursor position across the next group of either\n    /// [letters](#state.EditorState.charCategorizer) or non-letter\n    /// non-whitespace characters.\n    moveByGroup(start, forward) {\n        return moveByChar(this, start, forward, initial => byGroup(this, start.head, initial));\n    }\n    /// Move to the next line boundary in the given direction. If\n    /// `includeWrap` is true, line wrapping is on, and there is a\n    /// further wrap point on the current line, the wrap point will be\n    /// returned. Otherwise this function will return the start or end\n    /// of the line.\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /// Move a cursor position vertically. When `distance` isn't given,\n    /// it defaults to moving to the next line (including wrapped\n    /// lines). Otherwise, `distance` should provide a positive distance\n    /// in pixels.\n    ///\n    /// When `start` has a\n    /// [`goalColumn`](#state.SelectionRange.goalColumn), the vertical\n    /// motion will use that as a target horizontal position. Otherwise,\n    /// the cursor's own horizontal position is used. The returned\n    /// cursor will have its goal column set to whichever column was\n    /// used.\n    moveVertically(start, forward, distance) {\n        return moveVertically(this, start, forward, distance);\n    }\n    /// Scroll the given document position into view.\n    scrollPosIntoView(pos) {\n        this.viewState.scrollTo = EditorSelection.cursor(pos);\n        this.requestMeasure();\n    }\n    /// Get the document position at the given screen coordinates.\n    /// Returns null if no valid position could be found.\n    posAtCoords(coords) {\n        this.readMeasured();\n        return posAtCoords(this, coords);\n    }\n    /// Get the screen coordinates at the given document position.\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /// The default width of a character in the editor. May not\n    /// accurately reflect the width of all characters.\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /// The default height of a line in the editor.\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /// The text direction (`direction` CSS property) of the editor.\n    get textDirection() { return this.viewState.heightOracle.direction; }\n    /// Whether this editor [wraps lines](#view.EditorView.lineWrapping)\n    /// (as determined by the `white-space` CSS property of its content\n    /// element).\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /// Returns the bidirectional text structure of the given line\n    /// (which should be in the current document) as an array of span\n    /// objects. The order of these spans matches the [text\n    /// direction](#view.EditorView.textDirection)—if that is\n    /// left-to-right, the leftmost spans come first, otherwise the\n    /// rightmost spans come first.\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirection;\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.slice(), this.textDirection);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /// Check whether the editor has focus.\n    get hasFocus() {\n        return this.root.activeElement == this.contentDOM;\n    }\n    /// Put focus on the editor.\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /// Clean up this editor view, removing its element from the\n    /// document, unregistering event handlers, and notifying\n    /// plugins. The view instance can no longer be used after\n    /// calling this.\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n    }\n    /// Facet that can be used to add DOM event handlers. The value\n    /// should be an object mapping event names to handler functions. The\n    /// first such function to return true will be assumed to have handled\n    /// that event, and no other handlers or built-in behavior will be\n    /// activated for it.\n    /// These are registered on the [content\n    /// element](#view.EditorView.contentDOM), except for `scroll`\n    /// handlers, which will be called any time the editor's [scroll\n    /// element](#view.EditorView.scrollDOM) or one of its parent nodes\n    /// is scrolled.\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /// Create a theme extension. The first argument can be a\n    /// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    /// style spec providing the styles for the theme. These will be\n    /// prefixed with a generated class for the style.\n    ///\n    /// It is highly recommended you use _theme classes_, rather than\n    /// regular CSS classes, in your selectors. These are prefixed with\n    /// a `$` instead of a `.`, and will be expanded (as with\n    /// [`themeClass`](#view.themeClass)) to one or more prefixed class\n    /// names. So for example `$content` targets the editor's [content\n    /// element](#view.EditorView.contentDOM).\n    ///\n    /// Because the selectors will be prefixed with a scope class,\n    /// directly matching the editor's [wrapper\n    /// element](#view.EditorView.dom), which is the element on which\n    /// the scope class will be added, needs to be explicitly\n    /// differentiated by adding an additional `$` to the front of the\n    /// pattern. For example `$$focused $panel` will expand to something\n    /// like `.[scope].cm-focused .cm-panel`.\n    ///\n    /// When `dark` is set to true, the theme will be marked as dark,\n    /// which will add the `$dark` selector to the wrapper element (as\n    /// opposed to `$light` when a light theme is active).\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${baseThemeID}.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /// Create an extension that adds styles to the base theme. The\n    /// given object works much like the one passed to\n    /// [`theme`](#view.EditorView^theme). You'll often want to qualify\n    /// base styles with `$dark` or `$light` so they only apply when\n    /// there is a dark or light theme active. For example `\"$$dark\n    /// $myHighlight\"`.\n    static baseTheme(spec) {\n        return precedence(styleModule.of(buildTheme(\".\" + baseThemeID, spec)), \"fallback\");\n    }\n}\n/// Facet to add a [style\n/// module](https://github.com/marijnh/style-mod#documentation) to\n/// an editor view. The view will ensure that the module is\n/// registered in its [document\n/// root](#view.EditorView.constructor^config.root).\nEditorView.styleModule = styleModule;\n/// An input handler can be used to override the way changes to the\n/// content are handled. A handler is passed the document positions\n/// between which the change was found, and the new content. When it\n/// returns true, no further input handlers are called and the\n/// default behavior is prevented.\nEditorView.inputHandler = inputHandler;\n/// Allows you to provide a function that should be called when the\n/// library catches an exception from an extension (mostly from view\n/// plugins, but may be used by other extensions to route exceptions\n/// from user-code-provided callbacks). This is mostly useful for\n/// debugging and logging. See [`logException`](#view.logException).\nEditorView.exceptionSink = exceptionSink;\n/// A facet that can be used to have a listener function be notified\n/// every time the view updates.\nEditorView.updateListener = updateListener;\n/// Facet that controls whether the editor content is editable. When\n/// its the highest-precedence value is `false`, editing is\n/// disabled, and the content element will no longer have its\n/// `contenteditable` attribute set to `true`. (Note that this\n/// doesn't affect API calls that change the editor content, even\n/// when those are bound to keys or buttons.)\nEditorView.editable = editable;\n/// Facet used to configure whether a given selection drag event\n/// should move or copy the selection. The given predicate will be\n/// called with the `mousedown` event, and can return `true` when\n/// the drag should move the content.\nEditorView.dragMovesSelection = dragMovesSelection;\n/// Facet used to configure whether a given selecting click adds\n/// a new range to the existing selection or replaces it entirely.\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/// Allows you to influence the way mouse selection happens. The\n/// functions in this facet will be called for a `mousedown` event\n/// on the editor, and can return an object that overrides the way a\n/// selection is computed from that mouse click or drag.\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/// A facet that determines which [decorations](#view.Decoration)\n/// are shown in the view. See also [view\n/// plugins](#view.EditorView^decorations), which have a separate\n/// mechanism for providing decorations.\nEditorView.decorations = decorations;\n/// An extension that enables line wrapping in the editor.\nEditorView.lineWrapping = EditorView.theme({ $content: { whiteSpace: \"pre-wrap\" } });\n/// Facet that provides attributes for the editor's editable DOM\n/// element.\nEditorView.contentAttributes = contentAttributes;\n/// Facet that provides editor DOM attributes for the editor's\n/// outer element.\nEditorView.editorAttributes = editorAttributes;\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nfunction ensureTop(given, dom) {\n    return given == null ? dom.getBoundingClientRect().top : given;\n}\nlet resizeDebounce = -1;\nfunction ensureGlobalHandler() {\n    window.addEventListener(\"resize\", () => {\n        if (resizeDebounce == -1)\n            resizeDebounce = setTimeout(handleResize, 50);\n    });\n}\nfunction handleResize() {\n    resizeDebounce = -1;\n    let found = document.querySelectorAll(\".cm-content\");\n    for (let i = 0; i < found.length; i++) {\n        let docView = ContentView.get(found[i]);\n        if (docView)\n            docView.editorView.requestMeasure();\n    }\n}\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\n\nconst currentPlatform = typeof navigator == \"undefined\" ? \"key\"\n    : /Mac/.test(navigator.platform) ? \"mac\"\n        : /Win/.test(navigator.platform) ? \"win\"\n            : /Linux|X11/.test(navigator.platform) ? \"linux\"\n                : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst keymaps = Facet.define();\nconst handleKeyEvents = EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(view.state.facet(keymaps), event, view, \"editor\");\n    }\n});\n/// Create a view extension that registers a keymap.\n///\n/// You can add multiple keymap extensions to an editor. Their\n/// priorities determine their precedence (the ones specified early or\n/// with high priority get checked first). When a handler has returned\n/// `true` for a given key, no further handlers are called.\n///\n/// When a key is bound multiple times (either in a single keymap or\n/// in separate maps), the bound commands all get a chance to handle\n/// the key stroke, in order of precedence, until one of them returns\n/// true.\nfunction keymap(bindings, platform) {\n    return [handleKeyEvents, keymaps.of(buildKeymap(bindings, platform))];\n}\n/// Run the key handlers registered for a given scope. Returns true if\n/// any of them handled the event.\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(view.state.facet(keymaps), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(maps, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\";\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        storedPrefix = null;\n    }\n    let fallthrough = !!prefix;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    for (let map of maps) {\n        let scopeObj = map[scope], baseName;\n        if (!scopeObj)\n            continue;\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/// Returns an extension that hides the browser's native selection and\n/// cursor, replacing the selection with a background behind the text\n/// (labeled with the `$selectionBackground` theme class), and the\n/// cursors with elements overlaid over the code (using\n/// `$cursor.primary` and `$cursor.secondary`).\n///\n/// This allows the editor to display secondary selection ranges, and\n/// tends to produce a type of selection more in line with that users\n/// expect in a text editor (the native selection styling will often\n/// leave gaps between lines and won't fill the horizontal space after\n/// a line when the selection continues past it).\n///\n/// It does have a performance cost, in that it requires an extra DOM\n/// layout cycle for many updates (the selection is drawn based on DOM\n/// layout information that's only available after laying out the\n/// content).\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n        return elt;\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = themeClass(\"selectionLayer\");\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = themeClass(\"cursorLayer\");\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.prevState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.primary;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            this.cursorLayer.textContent = \"\";\n            for (let c of cursors)\n                this.cursorLayer.appendChild(c.draw());\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    $content: {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec.$content.caretColor = \"transparent !important\";\nconst hideNativeSelection = precedence(EditorView.theme(themeSpec), \"override\");\nconst selectionClass = themeClass(\"selectionBackground\");\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    return { left: rect.left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft);\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let visualStart = view.visualLineAt(from), visualEnd = view.visualLineAt(to);\n    if (visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to));\n    }\n    else {\n        let top = drawForLine(range.from, null);\n        let bottom = drawForLine(null, range.to);\n        let between = [];\n        if (visualStart.to < visualEnd.from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && bottom.top - top.bottom < 4)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top, right - left, bottom - top, selectionClass);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            let fromCoords = view.coordsAtPos(from, 1), toCoords = view.coordsAtPos(to, -1);\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : view.moveToLineBoundary(EditorSelection.cursor(to, 1), false).head;\n        let end = to !== null && to !== void 0 ? to : view.moveToLineBoundary(EditorSelection.cursor(from, -1), true).head;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0) {\n            let coords = view.coordsAtPos(start, -1);\n            top = Math.min(coords.top, top);\n            bottom = Math.max(coords.bottom, bottom);\n        }\n        return { top, bottom, horizontal };\n    }\n}\nconst primaryCursorClass = themeClass(\"cursor.primary\");\nconst cursorClass = themeClass(\"cursor.secondary\");\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? primaryCursorClass : cursorClass);\n}\n\nconst Specials = /[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200c\\u200e\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/gu;\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = (styles.tabSize || styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst specialCharConfig = Facet.define({\n    combine(configs) {\n        // FIXME make configurations compose properly\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/// Returns an extension that installs highlighting of special\n/// characters.\nfunction highlightSpecialChars(\n/// Configuration options.\nconfig = {}) {\n    let ext = [specialCharConfig.of(config), specialCharPlugin];\n    if (!supportsTabSize())\n        ext.push(tabStyle);\n    return ext;\n}\nconst specialCharPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = Decoration.none;\n        this.decorationCache = Object.create(null);\n        this.recompute();\n    }\n    update(update) {\n        let confChange = update.prevState.facet(specialCharConfig) != update.state.facet(specialCharConfig);\n        if (confChange)\n            this.decorationCache = Object.create(null);\n        if (confChange || update.changes.length || update.viewportChanged)\n            this.recompute();\n    }\n    recompute() {\n        let decorations = [];\n        for (let { from, to } of this.view.visibleRanges)\n            this.getDecorationsFor(from, to, decorations);\n        this.decorations = Decoration.set(decorations);\n    }\n    getDecorationsFor(from, to, target) {\n        let config = this.view.state.facet(specialCharConfig);\n        let { doc } = this.view.state;\n        for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n            if (!cursor.lineBreak) {\n                while (m = config.specialChars.exec(cursor.value)) {\n                    let code = codePointAt(m[0], 0), deco;\n                    if (code == null)\n                        continue;\n                    if (code == 9) {\n                        let line = doc.lineAt(pos + m.index);\n                        let size = this.view.state.tabSize, col = countColumn(doc.sliceString(line.from, pos + m.index), 0, size);\n                        deco = Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    else {\n                        deco = this.decorationCache[code] ||\n                            (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(config, code) }));\n                    }\n                    target.push(deco.range(pos + m.index, pos + m.index + m[0].length));\n                }\n            }\n            pos += cursor.value.length;\n        }\n    }\n}, {\n    decorations: v => v.decorations\n});\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code) {\n    if (code >= 32)\n        return null;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nconst DefaultPlaceholder = \"\\u2022\";\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM() {\n        let ph = placeHolder(this.code) || DefaultPlaceholder;\n        let desc = \"Control character \" + (Names[this.code] || this.code);\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.style.color = \"red\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = tab;\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nconst tab = StyleModule.newName(), tabStyle = EditorView.styleModule.of(new StyleModule({\n    [\".\" + tab]: {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    }\n}));\n\nconst DontIndentBeyond = 200;\n/// Enables reindentation on input. When a language defines an\n/// `indentOnInput` field in its [language\n/// data](#state.EditorState.languageDataAt), which must hold a\n/// regular expression, the line at the cursor will be reindented\n/// whenever new text is typed and the input from the start of the\n/// line up to the cursor matches that regexp.\n///\n/// To avoid unneccesary reindents, it is recommended to start the\n/// regexp with `^` (usually followed by `\\s*`), and end it with `$`.\n/// For example, `/^\\s*\\}$` will reindent when a closing brace is\n/// added at the start of a line.\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || tr.annotation(Transaction.userEvent) != \"input\")\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.primary.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.primary, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = Math.max(...state.facet(EditorState.indentation).map(f => f(new IndentContext(state), line.from)));\n            if (indent < 0)\n                continue;\n            let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, DontIndentBeyond)))[0];\n            let norm = state.indentString(indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes }] : tr;\n    });\n}\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = themeClass(\"placeholder\");\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n/// @internal\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, highlightSpecialChars, indentOnInput, keymap, logException, placeholder, runScopeHandlers, themeClass };\n","import * as N3 from \"n3.ts\"\n\nnamespace APG {\n\texport type Schema = Readonly<{ [key: string]: Type }>\n\n\texport type Type = Unit | Uri | Literal | Product | Coproduct | Reference\n\texport type Reference = Readonly<{ type: \"reference\"; value: string }>\n\texport type Unit = Readonly<{ type: \"unit\" }>\n\texport type Uri = Readonly<{ type: \"uri\" }>\n\texport type Literal = Readonly<{ type: \"literal\"; datatype: string }>\n\texport type Product = Readonly<{\n\t\ttype: \"product\"\n\t\tcomponents: Readonly<{ [key: string]: Type }>\n\t}>\n\texport type Coproduct = Readonly<{\n\t\ttype: \"coproduct\"\n\t\toptions: Readonly<{ [key: string]: Type }>\n\t}>\n\n\texport type Instance = Readonly<{ [key: string]: Value[] }>\n\n\texport type Value =\n\t\t| N3.BlankNode\n\t\t| N3.NamedNode\n\t\t| N3.Literal\n\t\t| Record\n\t\t| Variant\n\t\t| Pointer\n\n\texport class Pointer {\n\t\tconstructor(readonly index: number) {\n\t\t\tObject.freeze(this)\n\t\t}\n\t\tpublic get termType(): \"Pointer\" {\n\t\t\treturn \"Pointer\"\n\t\t}\n\t}\n\n\texport class Record extends Array<Value> {\n\t\tpublic get termType(): \"Record\" {\n\t\t\treturn \"Record\"\n\t\t}\n\n\t\tconstructor(\n\t\t\treadonly components: readonly string[],\n\t\t\tvalues: Iterable<Value>\n\t\t) {\n\t\t\tsuper(...values)\n\t\t\tObject.freeze(this)\n\t\t}\n\n\t\tget(key: string): Value {\n\t\t\tconst index = this.components.indexOf(key)\n\t\t\tif (index in this) {\n\t\t\t\treturn this[index]\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Index out of range: ${index}`)\n\t\t\t}\n\t\t}\n\n\t\tmap<T>(f: (value: Value, index: number, record: Record) => T): T[] {\n\t\t\tconst result = new Array<T>(this.length)\n\t\t\tfor (const [i, value] of this.entries()) {\n\t\t\t\tresult[i] = f(value, i, this)\n\t\t\t}\n\t\t\treturn result\n\t\t}\n\t}\n\n\texport class Variant {\n\t\tconstructor(readonly option: string, readonly value: Value) {\n\t\t\tObject.freeze(this)\n\t\t}\n\t\tpublic get termType(): \"Variant\" {\n\t\t\treturn \"Variant\"\n\t\t}\n\t}\n\n\texport type Expression =\n\t\t| Identity\n\t\t| Initial\n\t\t| Terminal\n\t\t| Identifier\n\t\t| Constant\n\t\t| Dereference\n\t\t| Projection\n\t\t| Injection\n\t\t| Tuple\n\t\t| Match\n\n\texport type Identity = Readonly<{ type: \"identity\" }>\n\texport type Initial = Readonly<{ type: \"initial\" }>\n\texport type Terminal = Readonly<{ type: \"terminal\" }>\n\texport type Identifier = Readonly<{ type: \"identifier\"; value: string }>\n\texport type Constant = Readonly<{\n\t\ttype: \"constant\"\n\t\tvalue: string\n\t\tdatatype: string\n\t}>\n\texport type Dereference = Readonly<{ type: \"dereference\"; key: string }>\n\texport type Projection = Readonly<{ type: \"projection\"; key: string }>\n\texport type Injection = Readonly<{\n\t\ttype: \"injection\"\n\t\tkey: string\n\t\tvalue: Expression[]\n\t}>\n\texport type Tuple = Readonly<{\n\t\ttype: \"tuple\"\n\t\tslots: Readonly<{ [key: string]: Expression[] }>\n\t}>\n\texport type Match = Readonly<{\n\t\ttype: \"match\"\n\t\tcases: Readonly<{ [key: string]: Expression[] }>\n\t}>\n\n\texport type Map = Readonly<{\n\t\ttype: \"map\"\n\t\tsource: string\n\t\ttarget: Path\n\t\tvalue: readonly APG.Expression[]\n\t}>\n\n\texport type Path = readonly {\n\t\treadonly type: \"component\" | \"option\"\n\t\treadonly key: string\n\t}[]\n\n\texport type Mapping = Readonly<{ [key: string]: Map }>\n}\n\nexport default APG\n","export const label = \"http://underlay.org/ns/label\",\n\treference = \"http://underlay.org/ns/reference\",\n\tunit = \"http://underlay.org/ns/unit\",\n\turi = \"http://underlay.org/ns/uri\",\n\tliteral = \"http://underlay.org/ns/literal\",\n\tdatatype = \"http://underlay.org/ns/datatype\",\n\tproduct = \"http://underlay.org/ns/product\",\n\tcoproduct = \"http://underlay.org/ns/coproduct\",\n\tcomponent = \"http://underlay.org/ns/component\",\n\toption = \"http://underlay.org/ns/option\",\n\tkey = \"http://underlay.org/ns/key\",\n\tvalue = \"http://underlay.org/ns/value\",\n\tsource = \"http://underlay.org/ns/source\",\n\ttarget = \"http://underlay.org/ns/target\",\n\tnone = \"http://underlay.org/ns/none\",\n\tsome = \"http://underlay.org/ns/some\",\n\thead = \"http://underlay.org/ns/head\",\n\ttail = \"http://underlay.org/ns/tail\",\n\texpression = \"http://underlay.org/ns/expression\",\n\tidentity = \"http://underlay.org/ns/identity\",\n\tinitial = \"http://underlay.org/ns/initial\",\n\tterminal = \"http://underlay.org/ns/terminal\",\n\tidentifier = \"http://underlay.org/ns/identifier\",\n\tconstant = \"http://underlay.org/ns/constant\",\n\tdereference = \"http://underlay.org/ns/dereference\",\n\tprojection = \"http://underlay.org/ns/injection\",\n\tinjection = \"http://underlay.org/ns/injection\",\n\ttuple = \"http://underlay.org/ns/tuple\",\n\tslot = \"http://underlay.org/ns/slot\",\n\tmatch = \"http://underlay.org/ns/match\",\n\tCASE = \"http://underlay.org/ns/case\",\n\tpath = \"http://underlay.org/ns/path\",\n\tmap = \"http://underlay.org/ns/map\"\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import { BlankNode } from \"n3.ts\"\nimport { v4 as uuid } from \"uuid\"\nimport APG from \"./apg\"\n\nconst keyMap = new WeakMap<\n\tReadonly<{ [key: string]: any }>,\n\treadonly string[]\n>()\n\nexport function* getEntries<T>(\n\tobject: Readonly<{ [key: string]: T }>\n): Generator<[string, T], void, undefined> {\n\tfor (const key of getKeys(object)) {\n\t\tyield [key, object[key]]\n\t}\n}\n\nexport function getKeys(\n\tobject: Readonly<{ [key: string]: any }>\n): readonly string[] {\n\tif (keyMap.has(object)) {\n\t\treturn keyMap.get(object)!\n\t} else {\n\t\tconst keys = Object.keys(object).sort()\n\t\tObject.freeze(keys)\n\t\tkeyMap.set(object, keys)\n\t\treturn keys\n\t}\n}\n\nexport function getKeyIndex(\n\tobject: Readonly<{ [key: string]: any }>,\n\tkey: string\n) {\n\tif (keyMap.has(object)) {\n\t\tconst index = keyMap.get(object)!.indexOf(key)\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Key not found: ${key}`)\n\t\t}\n\t\treturn index\n\t} else {\n\t\tconst keys = Object.keys(object).sort()\n\t\tObject.freeze(keys)\n\t\tkeyMap.set(object, keys)\n\t\tconst index = keys.indexOf(key)\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Key not found: ${key}`)\n\t\t}\n\t\treturn index\n\t}\n}\n\nexport function mapKeys<S, T>(\n\tobject: Readonly<{ [key: string]: S }>,\n\tmap: (value: S, key: string) => T\n) {\n\tconst keys = getKeys(object)\n\tconst result = Object.fromEntries(\n\t\tkeys.map((key) => [key, map(object[key], key)])\n\t)\n\tkeyMap.set(result, keys)\n\tObject.freeze(result)\n\treturn result\n}\n\nexport function signalInvalidType(type: never): never {\n\tconsole.error(type)\n\tthrow new Error(\"Invalid type\")\n}\n\nexport const rootId = uuid()\n\nexport type ID = () => BlankNode\nexport function getID(): ID {\n\tlet id = 0\n\treturn () => new BlankNode(`b${id++}`)\n}\n\nexport function freezeType(type: APG.Type) {\n\tif (type.type === \"product\") {\n\t\tfor (const [_, value] of getEntries(type.components)) {\n\t\t\tfreezeType(value)\n\t\t}\n\t\tObject.freeze(type.components)\n\t} else if (type.type === \"coproduct\") {\n\t\tfor (const [_, value] of getEntries(type.options)) {\n\t\t\tfreezeType(value)\n\t\t}\n\t\tObject.freeze(type.options)\n\t}\n\tObject.freeze(type)\n}\n","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\nimport { getKeys } from \"./utils.js\"\n\nexport function* forType(\n\ttype: APG.Type,\n\tstack?: APG.Type[]\n): Generator<[APG.Type, APG.Type[]], void, undefined> {\n\tif (stack === undefined) {\n\t\tstack = []\n\t} else if (stack.includes(type)) {\n\t\tthrow new Error(\"Recursive type\")\n\t}\n\n\tyield [type, stack]\n\tif (type.type === \"product\") {\n\t\tstack.push(type)\n\t\tfor (const key of getKeys(type.components)) {\n\t\t\tyield* forType(type.components[key], stack)\n\t\t}\n\t\tstack.pop()\n\t} else if (type.type === \"coproduct\") {\n\t\tstack.push(type)\n\t\tfor (const key of getKeys(type.options)) {\n\t\t\tyield* forType(type.options[key], stack)\n\t\t}\n\t\tstack.pop()\n\t}\n}\n\nexport function isTypeEqual(a: APG.Type, b: APG.Type) {\n\tif (a === b) {\n\t\treturn true\n\t} else if (a.type !== b.type) {\n\t\treturn false\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\treturn a.value === b.value\n\t} else if (a.type === \"unit\" && b.type === \"unit\") {\n\t\treturn true\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn true\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\treturn a.datatype === b.datatype\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tconst A = getKeys(a.components)\n\t\tconst B = getKeys(b.components)\n\t\tif (A.length !== B.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\t\tif (keyA !== keyB) {\n\t\t\t\treturn false\n\t\t\t} else if (isTypeEqual(a.components[keyA], a.components[keyB])) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tconst A = getKeys(a.options)\n\t\tconst B = getKeys(b.options)\n\t\tif (A.length !== B.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\t\tif (keyA !== keyB) {\n\t\t\t\treturn false\n\t\t\t} else if (isTypeEqual(a.options[keyA], b.options[keyB])) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function isTypeAssignable(a: APG.Type, b: APG.Type): boolean {\n\tif (a === b) {\n\t\treturn true\n\t} else if (a.type !== b.type) {\n\t\treturn false\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\treturn a.value === b.value\n\t} else if (a.type === \"unit\" && b.type === \"unit\") {\n\t\treturn true\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn true\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\treturn a.datatype === b.datatype\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tfor (const key of getKeys(b.components)) {\n\t\t\tif (\n\t\t\t\tkey in a.components &&\n\t\t\t\tisTypeAssignable(a.components[key], b.components[key])\n\t\t\t) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tfor (const key of getKeys(a.options)) {\n\t\t\tif (\n\t\t\t\tkey in b.options &&\n\t\t\t\tisTypeAssignable(a.options[key], b.options[key])\n\t\t\t) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function unify(a: APG.Type, b: APG.Type): APG.Type {\n\tif (a === b) {\n\t\treturn b\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\tif (a.value === b.value) {\n\t\t\treturn b\n\t\t}\n\t} else if (a.type === \"unit\" && b.type === \"unit\") {\n\t\treturn b\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn b\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\tif (a.datatype === b.datatype) {\n\t\t\treturn b\n\t\t}\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tconst components = Object.fromEntries(unifyComponents(a, b))\n\t\tObject.freeze(components)\n\t\treturn Object.freeze({ type: \"product\", components })\n\t}\n\tif (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tconst options = Object.fromEntries(unifyOptions(a, b))\n\t\tObject.freeze(options)\n\t\treturn Object.freeze({ type: \"coproduct\", options })\n\t} else {\n\t\tthrow new Error(\"Cannot unify unequal types\")\n\t}\n}\n\nfunction* unifyComponents(\n\ta: APG.Product,\n\tb: APG.Product\n): Generator<[string, APG.Type], void, undefined> {\n\tconst A = getKeys(a.components)\n\tconst B = getKeys(b.components)\n\tif (A.length !== B.length) {\n\t\tthrow new Error(\"Cannot unify unequal products\")\n\t}\n\n\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\tif (keyA !== keyB) {\n\t\t\tthrow new Error(\"Cannot unify unequal types\")\n\t\t} else {\n\t\t\tyield [keyA, unify(a.components[keyA], b.components[keyB])]\n\t\t}\n\t}\n}\n\nfunction* unifyOptions(\n\ta: APG.Coproduct,\n\tb: APG.Coproduct\n): Generator<[string, APG.Type], void, undefined> {\n\tconst keys = Array.from(\n\t\tnew Set([...getKeys(a.options), ...getKeys(b.options)])\n\t).sort()\n\tfor (const key of keys) {\n\t\tconst A = a.options[key]\n\t\tconst B = b.options[key]\n\t\tif (A !== undefined && B === undefined) {\n\t\t\tyield [key, A]\n\t\t} else if (A === undefined && B !== undefined) {\n\t\t\tyield [key, B]\n\t\t} else if (A !== undefined && B !== undefined) {\n\t\t\tyield [key, unify(A, B)]\n\t\t} else {\n\t\t\tthrow new Error(\"Error unifying options\")\n\t\t}\n\t}\n}\n","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\n\nimport { isTypeAssignable, unify } from \"./type.js\"\nimport { getEntries, getKeys, mapKeys, signalInvalidType } from \"./utils.js\"\n\nexport const applyExpressions = (\n\tS: APG.Schema,\n\texpressions: readonly APG.Expression[],\n\tsource: APG.Type\n) =>\n\texpressions.reduce(\n\t\t(type: APG.Type, expression: APG.Expression) => apply(S, expression, type),\n\t\tsource\n\t)\n\nexport function apply(\n\tS: APG.Schema,\n\texpression: APG.Expression,\n\tsource: APG.Type\n): APG.Type {\n\tif (expression.type === \"identity\") {\n\t\treturn source\n\t} else if (expression.type === \"initial\") {\n\t\tthrow new Error(\"Not implemented\")\n\t} else if (expression.type === \"terminal\") {\n\t\treturn Object.freeze({ type: \"unit\" })\n\t} else if (expression.type === \"identifier\") {\n\t\treturn Object.freeze({ type: \"uri\" })\n\t} else if (expression.type === \"constant\") {\n\t\treturn Object.freeze({ type: \"literal\", datatype: expression.datatype })\n\t} else if (expression.type === \"dereference\") {\n\t\tif (\n\t\t\tsource.type === \"reference\" &&\n\t\t\tsource.value in S &&\n\t\t\tsource.value === expression.key\n\t\t) {\n\t\t\treturn S[source.value]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid dereference morphism\")\n\t\t}\n\t} else if (expression.type === \"projection\") {\n\t\tif (source.type === \"product\" && expression.key in source.components) {\n\t\t\treturn source.components[expression.key]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid projection morphism\")\n\t\t}\n\t} else if (expression.type === \"injection\") {\n\t\tconst { key, value } = expression\n\t\treturn Object.freeze({\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: Object.freeze({\n\t\t\t\t[key]: value.reduce(\n\t\t\t\t\t(type, expression) => apply(S, expression, type),\n\t\t\t\t\tsource\n\t\t\t\t),\n\t\t\t}),\n\t\t})\n\t} else if (expression.type === \"tuple\") {\n\t\treturn Object.freeze({\n\t\t\ttype: \"product\",\n\t\t\tcomponents: mapKeys(expression.slots, (value) =>\n\t\t\t\tapplyExpressions(S, value, source)\n\t\t\t),\n\t\t})\n\t} else if (expression.type === \"match\") {\n\t\tif (source.type === \"coproduct\") {\n\t\t\tconst cases = Array.from(applyCases(S, source, expression))\n\t\t\tif (cases.length === 0) {\n\t\t\t\tthrow new Error(\"Empty case analysis\")\n\t\t\t} else {\n\t\t\t\treturn cases.reduce(unify)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid match morphism\")\n\t\t}\n\t} else {\n\t\tsignalInvalidType(expression)\n\t}\n}\n\nfunction* applyCases(\n\tS: APG.Schema,\n\tsource: APG.Coproduct,\n\t{ cases }: APG.Match\n): Generator<APG.Type, void, undefined> {\n\tfor (const key of getKeys(source.options)) {\n\t\tif (key in cases) {\n\t\t\tyield applyExpressions(S, cases[key], source.options[key])\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid case analysis\")\n\t\t}\n\t}\n}\n\nexport function validateExpressions(\n\tS: APG.Schema,\n\texpressions: readonly APG.Expression[],\n\tsource: APG.Type,\n\ttarget: APG.Type\n): boolean {\n\tlet type: APG.Type\n\ttry {\n\t\ttype = applyExpressions(S, expressions, source)\n\t} catch (e) {\n\t\treturn false\n\t}\n\n\treturn isTypeAssignable(type, target)\n}\n","import APG from \"./apg.js\"\nimport { getKeyIndex } from \"./utils.js\"\n\nexport function getType(\n\tschema: APG.Schema,\n\tsource: string,\n\ttarget: APG.Path\n): APG.Type {\n\tif (!(source in schema)) {\n\t\tthrow new Error(`Path source not found in schema: ${source}`)\n\t}\n\n\treturn target.reduce((t: APG.Type, { type, key: value }): APG.Type => {\n\t\tif (t.type === \"product\" && value in t.components) {\n\t\t\treturn t.components[value]\n\t\t} else if (t.type === \"coproduct\" && value in t.options) {\n\t\t\treturn t.options[value]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid type index\")\n\t\t}\n\t}, schema[source])\n}\n\nexport function* getValues(\n\tschema: APG.Schema,\n\tinstance: APG.Instance,\n\tsource: string,\n\ttarget: APG.Path\n): Generator<APG.Value, void, undefined> {\n\tif (!(source in schema)) {\n\t\tthrow new Error(`Path source not found in schema: ${source}`)\n\t}\n\n\tfor (const element of instance[source]) {\n\t\tconst token = target.reduce(\n\t\t\t(\n\t\t\t\ttoken: [APG.Type, APG.Value] | null,\n\t\t\t\tp\n\t\t\t): [APG.Type, APG.Value] | null => {\n\t\t\t\tif (token === null) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst [type, value] = token\n\t\t\t\tif (\n\t\t\t\t\ttype.type === \"product\" &&\n\t\t\t\t\tp.key in type.components &&\n\t\t\t\t\tvalue.termType === \"Record\"\n\t\t\t\t) {\n\t\t\t\t\treturn [type.components[p.key], value.get(p.key)]\n\t\t\t\t} else if (\n\t\t\t\t\ttype.type === \"coproduct\" &&\n\t\t\t\t\tp.key in type.options &&\n\t\t\t\t\tvalue.termType === \"Variant\" &&\n\t\t\t\t\tvalue.option === p.key\n\t\t\t\t) {\n\t\t\t\t\treturn [type.options[p.key], value.value]\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Invalid target path\")\n\t\t\t\t}\n\t\t\t},\n\t\t\t[schema[source], element]\n\t\t)\n\n\t\tif (token !== null) {\n\t\t\tconst [{}, value] = token\n\t\t\tyield value\n\t\t}\n\t}\n}\n","import * as N3 from \"n3.ts\"\nimport zip from \"ziterable\"\n\nimport APG from \"./apg.js\"\nimport { validateExpressions } from \"./morphism.js\"\nimport { getType, getValues } from \"./path.js\"\n\nimport {\n\trootId,\n\tsignalInvalidType,\n\tgetKeys,\n\tgetEntries,\n\tmapKeys,\n} from \"./utils.js\"\n\ntype Expressions = readonly APG.Expression[]\ntype M = [APG.Path[], Expressions[]]\n\nexport function validateMapping(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema\n): boolean {\n\tfor (const key of getKeys(S)) {\n\t\tconst value = S[key]\n\t\tif (!(key in M)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst source = getType(T, M[key].source, M[key].target)\n\t\tconst target = fold(M, S, T, value)\n\n\t\tif (validateExpressions(S, M[key].value, source, target)) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n\nexport function fold(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema,\n\ttype: APG.Type\n): APG.Type {\n\tif (type.type === \"reference\") {\n\t\tconst { source, target } = M[type.value]\n\t\tconst value = getType(T, source, target)\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(\"Invalid reference index\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"unit\") {\n\t\treturn type\n\t} else if (type.type === \"uri\") {\n\t\treturn type\n\t} else if (type.type === \"literal\") {\n\t\treturn type\n\t} else if (type.type === \"product\") {\n\t\treturn Object.freeze({\n\t\t\ttype: \"product\",\n\t\t\tcomponents: mapKeys(type.components, (value) => fold(M, S, T, value)),\n\t\t})\n\t} else if (type.type === \"coproduct\") {\n\t\treturn Object.freeze({\n\t\t\ttype: \"coproduct\",\n\t\t\toptions: mapKeys(type.options, (value) => fold(M, S, T, value)),\n\t\t})\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nexport const mapExpressions = (\n\texpressions: readonly APG.Expression[],\n\tvalue: APG.Value,\n\tinstance: APG.Instance,\n\tschema: APG.Schema\n) =>\n\texpressions.reduce(\n\t\t(value: APG.Value, expression: APG.Expression) =>\n\t\t\tmap(expression, value, instance, schema),\n\t\tvalue\n\t)\n\nexport function map(\n\texpression: APG.Expression,\n\tvalue: APG.Value,\n\tinstance: APG.Instance,\n\tschema: APG.Schema\n): APG.Value {\n\tif (expression.type === \"identity\") {\n\t\treturn value\n\t} else if (expression.type === \"initial\") {\n\t\tthrow new Error(\"Not implemented\")\n\t} else if (expression.type === \"terminal\") {\n\t\tif (value.termType === \"BlankNode\") {\n\t\t\treturn value\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid terminal expression\")\n\t\t}\n\t} else if (expression.type === \"identifier\") {\n\t\treturn new N3.NamedNode(expression.value)\n\t} else if (expression.type === \"constant\") {\n\t\treturn new N3.Literal(\n\t\t\texpression.value,\n\t\t\t\"\",\n\t\t\tnew N3.NamedNode(expression.datatype)\n\t\t)\n\t} else if (expression.type === \"dereference\") {\n\t\tif (value.termType === \"Pointer\") {\n\t\t\tconst { key } = expression\n\t\t\tif (key in instance && value.index in instance[key]) {\n\t\t\t\treturn instance[key][value.index]\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid pointer dereference\")\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid pointer dereference\")\n\t\t}\n\t} else if (expression.type === \"projection\") {\n\t\tif (value.termType === \"Record\") {\n\t\t\treturn value.get(expression.key)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid projection\")\n\t\t}\n\t} else if (expression.type === \"match\") {\n\t\tif (value.termType === \"Variant\") {\n\t\t\tif (value.option in expression.cases) {\n\t\t\t\tconst c = expression.cases[value.option]\n\t\t\t\treturn mapExpressions(c, value.value, instance, schema)\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid case analysis\")\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid match morphism\")\n\t\t}\n\t} else if (expression.type === \"tuple\") {\n\t\tconst keys = getKeys(expression.slots)\n\t\treturn new APG.Record(\n\t\t\tkeys,\n\t\t\tkeys.map((key) =>\n\t\t\t\tmapExpressions(expression.slots[key], value, instance, schema)\n\t\t\t)\n\t\t)\n\t} else if (expression.type === \"injection\") {\n\t\treturn new APG.Variant(\n\t\t\texpression.key,\n\t\t\tmapExpressions(expression.value, value, instance, schema)\n\t\t)\n\t} else {\n\t\tsignalInvalidType(expression)\n\t}\n}\n\nexport function delta(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema,\n\tTI: APG.Instance\n): APG.Instance {\n\tconst SI: APG.Instance = mapKeys(S, () => [])\n\n\tconst indices = mapKeys(S, () => new Map<APG.Value, number>())\n\n\tfor (const [key, type] of getEntries(S)) {\n\t\tif (!(key in M) || !(key in indices)) {\n\t\t\tthrow new Error(\"Invalid mapping\")\n\t\t}\n\t\tfor (const value of getValues(T, TI, M[key].source, M[key].target)) {\n\t\t\tif (indices[key].has(value)) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\tconst imageValue = mapExpressions(M[key].value, value, TI, T)\n\n\t\t\t\tconst i = SI[key].push(placeholder) - 1\n\t\t\t\tindices[key].set(value, i)\n\t\t\t\tSI[key][i] = pullback({ M, S, T, SI, TI, indices }, type, imageValue)\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key of getKeys(S)) {\n\t\tObject.freeze(SI[key])\n\t}\n\n\tObject.freeze(SI)\n\n\treturn SI\n}\n\nconst placeholder = new N3.NamedNode(rootId)\n\ntype State = {\n\tM: APG.Mapping\n\tS: APG.Schema\n\tT: APG.Schema\n\tSI: APG.Instance\n\tTI: APG.Instance\n\tindices: Readonly<{ [key: string]: Map<APG.Value, number> }>\n}\n\nfunction pullback(\n\tstate: State,\n\ttype: APG.Type, // in source\n\tvalue: APG.Value // of image\n): APG.Value {\n\tif (type.type === \"reference\") {\n\t\t// Here we actually know that value is an instance of M1[type.value]\n\t\t// So now what?\n\t\t// First we check to see if the value is in the index cache.\n\t\t// (We're ultimately going to return a Pointer for sure)\n\t\tconst index = state.indices[type.value].get(value)\n\t\tif (index !== undefined) {\n\t\t\treturn new APG.Pointer(index)\n\t\t} else {\n\t\t\t// Otherwise, we map value along the morphism M2[type.value].\n\t\t\t// This gives us a value that is an instance of the image of the referenced type\n\t\t\t// - ie an instance of fold(M1, T, S[type.value].value)\n\t\t\tconst t = state.S[type.value]\n\t\t\tconst m = state.M[type.value]\n\t\t\tconst v = mapExpressions(m.value, value, state.TI, state.T)\n\t\t\tconst index = state.SI[type.value].push(placeholder) - 1\n\t\t\tstate.indices[type.value].set(value, index)\n\t\t\tconst p = pullback(state, t, v)\n\t\t\tstate.SI[type.value][index] = p\n\t\t\treturn new APG.Pointer(index)\n\t\t}\n\t} else if (type.type === \"unit\") {\n\t\tif (value.termType !== \"BlankNode\") {\n\t\t\tthrow new Error(\"Invalid image value: expected blank node\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"uri\") {\n\t\tif (value.termType !== \"NamedNode\") {\n\t\t\tthrow new Error(\"Invalid image value: expected iri\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"literal\") {\n\t\tif (value.termType !== \"Literal\") {\n\t\t\tthrow new Error(\"Invalid image value: expected literal\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"product\") {\n\t\tif (value.termType !== \"Record\") {\n\t\t\tthrow new Error(\"Invalid image value: expected record\")\n\t\t} else {\n\t\t\treturn new APG.Record(\n\t\t\t\tvalue.components,\n\t\t\t\tpullbackComponents(state, type, value)\n\t\t\t)\n\t\t}\n\t} else if (type.type === \"coproduct\") {\n\t\tif (value.termType !== \"Variant\") {\n\t\t\tthrow new Error(\"Invalid image value: expected variant\")\n\t\t} else if (value.option in type.options) {\n\t\t\treturn new APG.Variant(\n\t\t\t\tvalue.option,\n\t\t\t\tpullback(state, type.options[value.option], value.value)\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid image variant\")\n\t\t}\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nfunction* pullbackComponents(\n\tstate: State,\n\ttype: APG.Product,\n\tvalue: APG.Record\n) {\n\tfor (const [k1, k2, field] of zip(\n\t\tgetKeys(type.components),\n\t\tvalue.components,\n\t\tvalue\n\t)) {\n\t\tif (k1 === k2) {\n\t\t\tyield pullback(state, type.components[k1], field)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid image record\")\n\t\t}\n\t}\n}\n","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\nimport { getKeys, signalInvalidType } from \"./utils.js\"\n\nexport function validateValue(type: APG.Type, value: APG.Value): boolean {\n\tif (type.type === \"reference\") {\n\t\treturn value.termType === \"Pointer\"\n\t} else if (type.type === \"unit\") {\n\t\treturn value.termType === \"BlankNode\"\n\t} else if (type.type === \"uri\") {\n\t\treturn value.termType === \"NamedNode\"\n\t} else if (type.type === \"literal\") {\n\t\treturn (\n\t\t\tvalue.termType === \"Literal\" && value.datatype.value === type.datatype\n\t\t)\n\t} else if (type.type === \"product\") {\n\t\tif (value.termType === \"Record\") {\n\t\t\tconst keys = getKeys(type.components)\n\t\t\tif (keys.length !== value.length) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tfor (const [k, v] of zip(keys, value)) {\n\t\t\t\tif (validateValue(type.components[k], v)) {\n\t\t\t\t\tcontinue\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} else if (type.type === \"coproduct\") {\n\t\tif (value.termType === \"Variant\" && value.option in type.options) {\n\t\t\treturn validateValue(type.options[value.option], value.value)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nexport function* forValue(\n\tvalue: APG.Value\n): Generator<[APG.Value], void, undefined> {\n\tyield [value]\n\tif (value.termType === \"Record\") {\n\t\tfor (const leaf of value) {\n\t\t\tyield* forValue(leaf)\n\t\t}\n\t} else if (value.termType === \"Variant\") {\n\t\tyield* forValue(value.value)\n\t}\n}\n","/// The default maximum length of a `TreeBuffer` node.\nexport const DefaultBufferLength = 1024\n\n/// The `unchanged` method expects changed ranges in this format.\nexport interface ChangedRange {\n  /// The start of the change in the start document\n  fromA: number\n  /// The end of the change in the start document\n  toA: number\n  /// The start of the replacement in the new document\n  fromB: number\n  /// The end of the replacement in the new document\n  toB: number\n}\n\nlet nextPropID = 0\n\nconst CachedNode = new WeakMap<Tree, TreeNode>()\n\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nexport class NodeProp<T> {\n  /// @internal\n  id: number\n\n  /// A method that deserializes a value of this prop from a string.\n  /// Can be used to allow a prop to be directly written in a grammar\n  /// file. Defaults to raising an error.\n  deserialize: (str: string) => T\n\n  /// Create a new node prop type. You can optionally pass a\n  /// `deserialize` function.\n  constructor({deserialize}: {deserialize?: (str: string) => T} = {}) {\n    this.id = nextPropID++\n    this.deserialize = deserialize || (() => {\n      throw new Error(\"This node type doesn't define a deserialize function\")\n    })\n  }\n\n  /// Create a string-valued node prop whose deserialize function is\n  /// the identity function.\n  static string() { return new NodeProp<string>({deserialize: str => str}) }\n\n  /// Create a number-valued node prop whose deserialize function is\n  /// just `Number`.\n  static number() { return new NodeProp<number>({deserialize: Number}) }\n\n  /// Creates a boolean-valued node prop whose deserialize function\n  /// returns true for any input.\n  static flag() { return new NodeProp<boolean>({deserialize: () => true}) }\n\n  /// Store a value for this prop in the given object. This can be\n  /// useful when building up a prop object to pass to the\n  /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n  /// argument.\n  set(propObj: {[prop: number]: any}, value: T) {\n    propObj[this.id] = value\n    return propObj\n  }\n\n  /// This is meant to be used with\n  /// [`NodeGroup.extend`](#tree.NodeGroup.extend) or\n  /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n  /// values for each node type in the group. Takes a [match\n  /// object](#tree.NodeType^match) or function that returns undefined\n  /// if the node type doesn't get this prop, and the prop's value if\n  /// it does.\n  add(match: {[selector: string]: T} | ((type: NodeType) => T | undefined)): NodePropSource {\n    if (typeof match != \"function\") match = NodeType.match(match)\n    return (type) => {\n      let result = (match as (type: NodeType) => T | undefined)(type)\n      return result === undefined ? null : [this, result]\n    }\n  }\n\n  /// Prop that is used to describe matching delimiters. For opening\n  /// delimiters, this holds an array of node names (written as a\n  /// space-separated string when declaring this prop in a grammar)\n  /// for the node types of closing delimiters that match it.\n  static closedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n  /// attached to closing delimiters, holding an array of node names\n  /// of types of matching opening delimiters.\n  static openedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// Used to assign node types to groups (for example, all node\n  /// types that represent an expression could be tagged with an\n  /// `\"Expression\"` group).\n  static group = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n}\n\n/// Type returned by [`NodeProp.add`](#tree.NodeProp.add). Describes\n/// the way a prop should be added to each node type in a node group.\nexport type NodePropSource = (type: NodeType) => null | [NodeProp<any>, any]\n\n/// Each node in a syntax tree has a node type associated with it.\nexport class NodeType {\n  /// @internal\n  constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node group should play the same semantic\n    /// role.\n    readonly name: string,\n    /// @internal\n    readonly props: {readonly [prop: number]: any},\n    /// The id of this node in its group. Corresponds to the term ids\n    /// used in the parser.\n    readonly id: number,\n    /// @internal\n    readonly flags: number = 0) {}\n\n  /// Retrieves a node prop for this type. Will return `undefined` if\n  /// the prop isn't present on this node.\n  prop<T>(prop: NodeProp<T>): T | undefined { return this.props[prop.id] }\n\n  /// True when this is the top node of a grammar.\n  get isTop() { return (this.flags & 1) > 0 }\n\n  /// True when this node is produced by a skip rule.\n  get isSkipped() { return (this.flags & 2) > 0 }\n\n  /// Indicates whether this is an error node.\n  get isError() { return (this.flags & 4) > 0 }\n\n  /// When true, this node type is used to cache repetition, and is\n  /// not a user-defined named node.\n  get isRepeated() { return (this.flags & 8) > 0 }\n\n  /// Returns true when this node's name or one of its\n  /// [groups](#tree.NodeProp^group) matches the given string.\n  is(name: string) {\n    if (this.name == name) return true\n    let group = this.prop(NodeProp.group)\n    return group ? group.indexOf(name) > -1 : false\n  }\n\n  /// An empty dummy node type to use when no actual type is available.\n  static none: NodeType = new NodeType(\"\", Object.create(null), 0)\n\n  /// Create a function from node types to arbitrary values by\n  /// specifying an object whose property names are node or\n  /// [group](#tree.NodeProp^group) names. Often useful with\n  /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n  /// names, separated by spaces, in a single property name to map\n  /// multiple node names to a single value.\n  static match<T>(map: {[selector: string]: T}): (node: NodeType) => T | undefined {\n    let direct = Object.create(null)\n    for (let prop in map)\n      for (let name of prop.split(\" \")) direct[name] = map[prop]\n    return (node: NodeType) => {\n      for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n        let found = direct[i < 0 ? node.name : groups![i]]\n        if (found) return found\n      }\n    }\n  }\n}\n\n/// A node group holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.group) a node group, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same group. A group can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nexport class NodeGroup {\n  /// Create a group with the given types. The `id` property of each\n  /// type should correspond to its position within the array.\n  constructor(\n    /// The node types in this group, by id.\n    readonly types: readonly NodeType[]\n  ) {\n    for (let i = 0; i < types.length; i++) if (types[i].id != i)\n      throw new RangeError(\"Node type ids should correspond to array positions when creating a node group\")\n  }\n\n  /// Create a copy of this group with some node properties added. The\n  /// arguments to this method should be created with\n  /// [`NodeProp.add`](#tree.NodeProp.add).\n  extend(...props: NodePropSource[]): NodeGroup {\n    let newTypes: NodeType[] = []\n    for (let type of this.types) {\n      let newProps = null\n      for (let source of props) {\n        let add = source(type)\n        if (add) {\n          if (!newProps) newProps = Object.assign({}, type.props)\n          add[0].set(newProps, add[1])\n        }\n      }\n      newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type)\n    }\n    return new NodeGroup(newTypes)\n  }\n}\n\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nexport class Tree {\n  /// Construct a new tree. You usually want to go through\n  /// [`Tree.build`](#tree.Tree^build) instead.\n  constructor(\n    readonly type: NodeType,\n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    readonly children: readonly (Tree | TreeBuffer)[],\n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    readonly positions: readonly number[],\n    /// The total length of this tree\n    readonly length: number\n  ) {}\n\n  /// @internal\n  toString(): string {\n    let children = this.children.map(c => c.toString()).join()\n    return !this.type.name ? children :\n      (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n      (children.length ? \"(\" + children + \")\" : \"\")\n  }\n\n  private partial(start: number, end: number, offset: number, children: (Tree | TreeBuffer)[], positions: number[]) {\n    for (let i = 0; i < this.children.length; i++) {\n      let from = this.positions[i]\n      if (from > end) break\n      let child = this.children[i], to = from + child.length\n      if (to < start) continue\n      if (start <= from && end >= to) {\n        children.push(child)\n        positions.push(from + offset)\n      } else if (child instanceof Tree) {\n        child.partial(start - from, end - from, offset + from, children, positions)\n      }\n    }\n  }\n\n  /// Apply a set of edits to a tree, removing all nodes that were\n  /// touched by the edits, and moving remaining nodes so that their\n  /// positions are updated for insertions/deletions before them. This\n  /// is likely to destroy a lot of the structure of the tree, and\n  /// mostly useful for extracting the nodes that can be reused in a\n  /// subsequent incremental re-parse.\n  applyChanges(changes: readonly ChangedRange[]) {\n    if (changes.length == 0) return this\n    let children: (Tree | TreeBuffer)[] = [], positions: number[] = []\n\n    function cutAt(tree: Tree, pos: number, side: 1 | -1) {\n      let cursor: TreeCursor = tree.cursor(pos, -side as 1 | -1)\n      for (;;) {\n        if (!cursor.enter(side, pos)) for (;;) {\n          if ((side < 0 ? cursor.to <= pos : cursor.from >= pos) && !cursor.type.isError)\n            return side < 0 ? Math.min(pos, cursor.to - 1) : Math.max(pos, cursor.from + 1)\n          if (cursor.sibling(side)) break\n          if (!cursor.parent()) return side < 0 ? 0 : tree.length\n        }\n      }\n    }\n\n    let off = 0\n    for (let i = 0, pos = 0;; i++) {\n      let next = i == changes.length ? null : changes[i]\n      let nextPos = next ? cutAt(this, next.fromA, -1) : this.length\n      if (nextPos > pos) this.partial(pos, nextPos, off, children, positions)\n      if (!next) break\n      pos = cutAt(this, next.toA, 1)\n      off += (next.toB - next.fromB) - (next.toA - next.fromA)\n    }\n    return new Tree(NodeType.none, children, positions, this.length + off)\n  }\n\n  /// Take the part of the tree up to the given position.\n  cut(at: number): Tree {\n    if (at >= this.length) return this\n    let children: (Tree | TreeBuffer)[] = [], positions: number[] = []\n    for (let i = 0; i < this.children.length; i++) {\n      let from = this.positions[i]\n      if (from >= at) break\n      let child = this.children[i], to = from + child.length\n      children.push(to <= at ? child : child.cut(at - from))\n      positions.push(from)\n    }\n    return new Tree(this.type, children, positions, at)\n  }\n\n  /// The empty tree\n  static empty = new Tree(NodeType.none, [], [], 0)\n\n  /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n  /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n  /// to the given position and side.\n  cursor(pos?: number, side: -1 | 0 | 1 = 0): TreeCursor {\n    let scope = (pos != null && CachedNode.get(this)) || (this.topNode as TreeNode)\n    let cursor = new TreeCursor(scope)\n    if (pos != null) {\n      cursor.moveTo(pos, side)\n      CachedNode.set(this, cursor.tree)\n    }\n    return cursor\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n  /// tree.\n  get topNode(): SyntaxNode {\n    return new TreeNode(this, 0, 0, null)\n  }\n\n  /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n  /// If `side` is -1, this will move into nodes that end at the\n  /// position. If 1, it'll move into nodes that start at the\n  /// position. With 0, it'll only enter nodes that cover the position\n  /// from both sides.\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor(pos, side).node\n  }\n\n  /// Iterate over the tree and its children, calling `enter` for any\n  /// node that touches the `from`/`to` region (if given) before\n  /// running over such a node's children, and `leave` (if given) when\n  /// leaving the node. When `enter` returns `false`, the given node\n  /// will not have its children iterated over (or `leave` called).\n  iterate(spec: {\n    enter(type: NodeType, from: number, to: number): false | void,\n    leave?(type: NodeType, from: number, to: number): void,\n    from?: number,\n    to?: number\n  }) {\n    let {enter, leave, from = 0, to = this.length} = spec\n    for (let c = this.cursor();;) {\n      let mustLeave = false\n      if (c.from <= to && c.to >= from && (c.type.isRepeated || enter(c.type, c.from, c.to) !== false)) {\n        if (c.firstChild()) continue\n        mustLeave = true\n      }\n      for (;;) {\n        if (mustLeave && leave) leave(c.type, c.from, c.to)\n        if (c.nextSibling()) break\n        if (!c.parent()) return\n        mustLeave = true\n      }\n    }\n  }\n\n  /// Append another tree to this tree. `other` must have empty space\n  /// big enough to fit this tree at its start.\n  append(other: Tree) {\n    if (!other.children.length) return this\n    if (other.positions[0] < this.length) throw new Error(\"Can't append overlapping trees\")\n    return new Tree(this.type, this.children.concat(other.children), this.positions.concat(other.positions), other.length)\n  }\n\n  /// Balance the direct children of this tree.\n  balance(maxBufferLength = DefaultBufferLength) {\n    return this.children.length <= BalanceBranchFactor ? this\n      : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0,\n                     maxBufferLength, this.length)\n  }\n\n  /// Build a tree from a postfix-ordered buffer of node information,\n  /// or a cursor over such a buffer.\n  static build(data: BuildData) { return buildTree(data) }\n}\n\ntype BuildData = {\n  /// The buffer or buffer cursor to read the node data from.\n  ///\n  /// When this is an array, it should contain four values for every\n  /// node in the tree.\n  ///\n  ///  - The first holds the node's type, as a node ID pointing into\n  ///    the given `NodeGroup`.\n  ///  - The second holds the node's start offset.\n  ///  - The third the end offset.\n  ///  - The fourth the amount of space taken up in the array by this\n  ///    node and its children. Since there's four values per node,\n  ///    this is the total number of nodes inside this node (children\n  ///    and transitive children) plus one for the node itself, times\n  ///    four.\n  ///\n  /// Parent nodes should appear _after_ child nodes in the array. As\n  /// an example, a node of type 10 spanning positions 0 to 4, with\n  /// two children, of type 11 and 12, might look like this:\n  ///\n  ///     [11, 0, 1, 4, 12, 2, 4, 4, 10, 0, 4, 12]\n  buffer: BufferCursor | readonly number[],\n  /// The node types to use.\n  group: NodeGroup,\n  /// The id of the top node type, if any.\n  topID?: number,\n  /// The maximum buffer length to use. Defaults to\n  /// [`DefaultBufferLength`](#tree.DefaultBufferLength).\n  maxBufferLength?: number,\n  /// An optional set of reused nodes that the buffer can refer to.\n  reused?: (Tree | TreeBuffer)[],\n  /// The first node type that indicates repeat constructs in this\n  /// grammar.\n  minRepeatType?: number\n}\n\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nexport class TreeBuffer {\n  /// Create a tree buffer @internal\n  constructor(\n    /// @internal\n    readonly buffer: Uint16Array,\n    // The total length of the group of nodes in the buffer.\n    readonly length: number,\n    /// @internal\n    readonly group: NodeGroup,\n    readonly type = NodeType.none\n  ) {}\n\n  /// @internal\n  toString() {\n    let result: string[] = []\n    for (let index = 0; index < this.buffer.length;) {\n      result.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result.join(\",\")\n  }\n\n  /// @internal\n  childString(index: number): string {\n    let id = this.buffer[index], endIndex = this.buffer[index + 3]\n    let type = this.group.types[id], result = type.name\n    if (/\\W/.test(result) && !type.isError) result = JSON.stringify(result)\n    index += 4\n    if (endIndex == index) return result\n    let children: string[] = []\n    while (index < endIndex) {\n      children.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result + \"(\" + children.join(\",\") + \")\"\n  }\n\n  /// @internal\n  cut(at: number) {\n    let cutPoint = 0\n    while (cutPoint < this.buffer.length && this.buffer[cutPoint + 1] < at) cutPoint += 4\n    let newBuffer = new Uint16Array(cutPoint)\n    for (let i = 0; i < cutPoint; i += 4) {\n      newBuffer[i] = this.buffer[i]\n      newBuffer[i + 1] = this.buffer[i + 1]\n      newBuffer[i + 2] = Math.min(at, this.buffer[i + 2])\n      newBuffer[i + 3] = Math.min(this.buffer[i + 3], cutPoint)\n    }\n    return new TreeBuffer(newBuffer, Math.min(at, this.length), this.group)\n  }\n\n  /// @internal\n  findChild(startIndex: number, endIndex: number, dir: 1 | -1, after: number) {\n    let {buffer} = this, pick = -1\n    for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n      if (after != After.None) {\n        let start = buffer[i + 1], end = buffer[i + 2]\n        if (dir > 0) {\n          if (end > after) pick = i\n          if (end > after) break\n        } else {\n          if (start < after) pick = i\n          if (end >= after) break\n        }\n      } else {\n        pick = i\n        if (dir > 0) break\n      }\n    }\n    return pick\n  }\n}\n\nconst enum After { None = -1e8 }\n\n/// A syntax node provides an immutable pointer at a give node in a\n/// tree. When iterating over large amounts of nodes, you may want to\n/// use a mutable [cursor](#tree.TreeCursor) instead, which is more\n/// efficient.\nexport interface SyntaxNode {\n  /// The type of the node.\n  type: NodeType\n  /// The name of the node (`.type.name`).\n  name: string\n  /// The start position of the node.\n  from: number\n  /// The end position of the node.\n  to: number\n\n  /// The node's parent node, if any.\n  parent: SyntaxNode | null\n  /// The first child, if the node has children.\n  firstChild: SyntaxNode | null\n  /// The node's last child, if available.\n  lastChild: SyntaxNode | null\n  /// The first child that starts at or after `pos`.\n  childAfter(pos: number): SyntaxNode | null\n  /// The last child that ends at or before `pos`.\n  childBefore(pos: number): SyntaxNode | null\n  /// This node's next sibling, if any.\n  nextSibling: SyntaxNode | null\n  /// This node's previous sibling.\n  prevSibling: SyntaxNode | null\n  /// A [tree cursor](#tree.TreeCursor) starting at this node.\n  cursor: TreeCursor\n  /// Find the node around, before (if `side` is -1), or after (`side`\n  /// is 1) the given position. Will look in parent nodes if the\n  /// position is outside this node.\n  resolve(pos: number, side?: -1 | 0 | 1): SyntaxNode\n\n  /// Get the first child of the given type (which may be a [node\n  /// name](#tree.NodeProp.name) or a [group\n  /// name](#tree.NodeProp^group)). If `before` is non-null, only\n  /// return children that occur somewhere after a node with that name\n  /// or group. If `after` is non-null, only return children that\n  /// occur somewhere before a node with that name or group.\n  getChild(type: string, before?: string | null, after?: string | null): SyntaxNode | null\n\n  /// Like [`getChild`](#tree.SyntaxNode.getChild), but return all\n  /// matching children, not just the first.\n  getChildren(type: string, before?: string | null, after?: string | null): SyntaxNode[]\n}\n\nclass TreeNode implements SyntaxNode {\n  constructor(readonly node: Tree,\n              readonly from: number,\n              readonly index: number,\n              readonly _parent: TreeNode | null) {}\n\n  get type() { return this.node.type }\n\n  get name() { return this.node.type.name }\n\n  get to() { return this.from + this.node.length }\n\n  nextChild(i: number, dir: 1 | -1, after: number): TreeNode | BufferNode | null {\n    for (let parent: TreeNode = this;;) {\n      for (let {children, positions} = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n        let next = children[i], start = positions[i] + parent.from\n        if (after != After.None && (dir < 0 ? start >= after : start + next.length <= after))\n          continue\n        if (next instanceof TreeBuffer) {\n          let index = next.findChild(0, next.buffer.length, dir, after == After.None ? After.None : after - start)\n          if (index > -1) return new BufferNode(new BufferContext(parent, next, i, start), null, index)\n        } else if (!next.type.isRepeated || hasChild(next)) {\n          let inner = new TreeNode(next, start, i, parent)\n          return !inner.type.isRepeated ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after)\n        }\n      }\n      if (!parent.type.isRepeated) return null\n      i = parent.index + dir\n      parent = parent._parent!\n    }\n  }\n\n  get firstChild() { return this.nextChild(0, 1, After.None) }\n  get lastChild() { return this.nextChild(this.node.children.length - 1, -1, After.None) }\n\n  childAfter(pos: number) { return this.nextChild(0, 1, pos) }\n  childBefore(pos: number) { return this.nextChild(this.node.children.length - 1, -1, pos) }\n\n  nextSignificant() {\n    let val: TreeNode = this\n    while (val.type.isRepeated) val = val._parent!\n    return val\n  }\n\n  get parent() {\n    return this._parent ? this._parent.nextSignificant() : null\n  }\n\n  get nextSibling() {\n    return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null\n  }\n  get prevSibling() {\n    return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  getChild(type: string, before: string | null = null, after: string | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string, before: string | null = null, after: string | null = null) {\n    return getChildren(this, type, before, after)\n  }\n\n  /// @internal\n  toString() { return this.node.toString() }\n}\n\nfunction getChildren(node: SyntaxNode, type: string, before: string | null, after: string | null): SyntaxNode[] {\n  let cur = node.cursor, result: SyntaxNode[] = []\n  if (!cur.firstChild()) return result\n  if (before != null) while (!cur.type.is(before)) if (!cur.nextSibling()) return result\n  for (;;) {\n    if (after != null && cur.type.is(after)) return result\n    if (cur.type.is(type)) result.push(cur.node)\n    if (!cur.nextSibling()) return after == null ? result : []\n  }\n}\n\nclass BufferContext {\n  constructor(readonly parent: TreeNode,\n              readonly buffer: TreeBuffer,\n              readonly index: number,\n              readonly start: number) {}\n}\n\nclass BufferNode implements SyntaxNode {\n  type: NodeType\n\n  get name() { return this.type.name }\n\n  get from() { return this.context.start + this.context.buffer.buffer[this.index + 1] }\n\n  get to() { return this.context.start + this.context.buffer.buffer[this.index + 2] }\n\n  constructor(readonly context: BufferContext,\n              readonly _parent: BufferNode | null,\n              readonly index: number) {\n    this.type = context.buffer.group.types[context.buffer.buffer[index]]\n  }\n\n  child(dir: 1 | -1, after: number): BufferNode | null {\n    let {buffer} = this.context\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.context.start)\n    return index < 0 ? null : new BufferNode(this.context, this, index)\n  }\n\n  get firstChild() { return this.child(1, After.None) }\n  get lastChild() { return this.child(-1, After.None) }\n\n  childAfter(pos: number) { return this.child(1, pos) }\n  childBefore(pos: number) { return this.child(-1, pos) }\n\n  get parent() {\n    return this._parent || this.context.parent.nextSignificant()\n  }\n\n  externalSibling(dir: 1 | -1) {\n    return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1)\n  }\n\n  get nextSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let after = buffer.buffer[this.index + 3]\n    if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n      return new BufferNode(this.context, this._parent, after)\n    return this.externalSibling(1)\n  }\n\n  get prevSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let parentStart = this._parent ? this._parent.index + 4 : 0\n    if (this.index == parentStart) return this.externalSibling(-1)\n    return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, After.None))\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  /// @internal\n  toString() { return this.context.buffer.childString(this.index) }\n\n  getChild(type: string, before: string | null = null, after: string | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string, before: string | null = null, after: string | null = null) {\n    return getChildren(this, type, before, after)\n  }\n}\n\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nexport class TreeCursor {\n  /// The node's type.\n  type!: NodeType\n\n  /// Shorthand for `.type.name`.\n  get name() { return this.type.name }\n\n  /// The start source offset of this node.\n  from!: number\n\n  /// The end source offset.\n  to!: number\n\n  /// @internal\n  tree!: TreeNode\n  private buffer: BufferContext | null = null\n  private stack: number[] = []\n  private index: number = 0\n  private bufferNode: BufferNode | null = null\n\n  /// @internal\n  constructor(node: TreeNode | BufferNode) {\n    if (node instanceof TreeNode) {\n      this.yieldNode(node)\n    } else {\n      this.tree = node.context.parent\n      this.buffer = node.context\n      for (let n: BufferNode | null = node._parent; n; n = n._parent) this.stack.unshift(n.index)\n      this.bufferNode = node\n      this.yieldBuf(node.index)\n    }\n  }\n\n  private yieldNode(node: TreeNode | null) {\n    if (!node) return false\n    this.tree = node\n    this.type = node.type\n    this.from = node.from\n    this.to = node.to\n    return true\n  }\n\n  private yieldBuf(index: number, type?: NodeType) {\n    this.index = index\n    let {start, buffer} = this.buffer!\n    this.type = type || buffer.group.types[buffer.buffer[index]]\n    this.from = start + buffer.buffer[index + 1]\n    this.to = start + buffer.buffer[index + 2]\n    return true\n  }\n\n  private yield(node: TreeNode | BufferNode | null) {\n    if (!node) return false\n    if (node instanceof TreeNode) {\n      this.buffer = null\n      return this.yieldNode(node)\n    }\n    this.buffer = node.context\n    return this.yieldBuf(node.index, node.type)\n  }\n\n  /// @internal\n  toString() {\n    return this.buffer ? this.buffer.buffer.childString(this.index) : this.tree.toString()\n  }\n\n  /// @internal\n  enter(dir: 1 | -1, after: number) {\n    if (!this.buffer)\n      return this.yield(this.tree.nextChild(dir < 0 ? this.tree.node.children.length - 1 : 0, dir, after))\n\n    let {buffer} = this.buffer\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.buffer.start)\n    if (index < 0) return false\n    this.stack.push(this.index)\n    return this.yieldBuf(index)\n  }\n\n  /// Move the cursor to this node's first child. When this returns\n  /// false, the node has no child, and the cursor has not been moved.\n  firstChild() { return this.enter(1, After.None) }\n\n  /// Move the cursor to this node's last child.\n  lastChild() { return this.enter(-1, After.None) }\n\n  /// Move the cursor to the first child that starts at or after `pos`.\n  childAfter(pos: number) { return this.enter(1, pos) }\n\n  /// Move to the last child that ends at or before `pos`.\n  childBefore(pos: number) { return this.enter(-1, pos) }\n\n  /// Move the node's parent node, if this isn't the top node.\n  parent() {\n    if (!this.buffer) return this.yieldNode(this.tree.parent)\n    if (this.stack.length) return this.yieldBuf(this.stack.pop()!)\n    let parent = this.buffer.parent.nextSignificant()\n    this.buffer = null\n    return this.yieldNode(parent)\n  }\n\n  /// @internal\n  sibling(dir: 1 | -1) {\n    if (!this.buffer)\n      return this.tree._parent ? this.yield(this.tree._parent.nextChild(this.tree.index + dir, dir, After.None)) : false\n\n    let {buffer} = this.buffer, d = this.stack.length - 1\n    if (dir < 0) {\n      let parentStart = d < 0 ? 0 : this.stack[d] + 4\n      if (this.index != parentStart)\n        return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, After.None))\n    } else {\n      let after = buffer.buffer[this.index + 3]\n      if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n        return this.yieldBuf(after)\n    }\n    return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, After.None)) : false\n  }\n\n  /// Move to this node's next sibling, if any.\n  nextSibling() { return this.sibling(1) }\n\n  /// Move to this node's previous sibling, if any.\n  prevSibling() { return this.sibling(-1) }\n\n  private atLastNode(dir: 1 | -1) {\n    let index, parent: TreeNode | null, {buffer} = this\n    if (buffer) {\n      if (dir > 0) {\n        if (this.index < buffer.buffer.buffer.length) return false\n      } else {\n        for (let i = 0; i < this.index; i++) if (buffer.buffer.buffer[i + 3] < this.index) return false\n      }\n      ;({index, parent} = buffer)\n    } else {\n      ({index, _parent: parent} = this.tree)\n    }\n    for (; parent; {index, _parent: parent} = parent) {\n      for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n        let child = parent.node.children[i]\n        if (!child.type.isRepeated || child instanceof TreeBuffer || hasChild(child)) return false\n      }\n    }\n    return true\n  }\n\n  private move(dir: 1 | -1) {\n    if (this.enter(dir, After.None)) return true\n    for (;;) {\n      if (this.sibling(dir)) return true\n      if (this.atLastNode(dir) || !this.parent()) return false\n    }\n  }\n\n  /// Move to the next node in a\n  /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n  /// traversal, going from a node to its first child or, if the\n  /// current node is empty, its next sibling or the next sibling of\n  /// the first parent node that has one.\n  next() { return this.move(1) }\n\n  /// Move to the next node in a last-to-first pre-order traveral. A\n  /// node is followed by ist last child or, if it has none, its\n  /// previous sibling or the previous sibling of the first parent\n  /// node that has one.\n  prev() { return this.move(-1) }\n\n  /// Move the cursor to the innermost node that covers `pos`. If\n  /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n  /// it will enter nodes that start at `pos`.\n  moveTo(pos: number, side: -1 | 0 | 1 = 0) {\n    // Move up to a node that actually holds the position, if possible\n    while (this.from == this.to ||\n           (side < 1 ? this.from >= pos : this.from > pos) ||\n           (side > -1 ? this.to <= pos : this.to < pos))\n      if (!this.parent()) break\n\n    // Then scan down into child nodes as far as possible\n    for (;;) {\n      if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos)) break\n      if (this.from == this.to ||\n          (side < 1 ? this.from >= pos : this.from > pos) ||\n          (side > -1 ? this.to <= pos : this.to < pos)) {\n        this.parent()\n        break\n      }\n    }\n    return this\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n  /// position.\n  get node(): SyntaxNode {\n    if (!this.buffer) return this.tree\n    \n    let cache = this.bufferNode, result: BufferNode | null = null, depth = 0\n    if (cache && cache.context == this.buffer) {\n      scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n        for (let c: BufferNode | null = cache; c; c = c._parent) if (c.index == index) {\n          if (index == this.index) return c\n          result = c\n          depth = d + 1\n          break scan\n        }\n        index = this.stack[--d]\n      }\n    }\n    for (let i = depth; i < this.stack.length; i++) result = new BufferNode(this.buffer, result, this.stack[i])\n    return this.bufferNode = new BufferNode(this.buffer, result, this.index)\n  }\n}\n\nfunction hasChild(tree: Tree): boolean {\n  return tree.children.some(ch => !ch.type.isRepeated || ch instanceof TreeBuffer || hasChild(ch))\n}\n\n/// This is used by `Tree.build` as an abstraction for iterating over\n/// a tree buffer. A cursor initially points at the very last element\n/// in the buffer. Every time `next()` is called it moves on to the\n/// previous one.\nexport interface BufferCursor {\n  /// The current buffer position (four times the number of nodes\n  /// remaining).\n  pos: number\n  /// The node ID of the next node in the buffer.\n  id: number\n  /// The start position of the next node in the buffer.\n  start: number\n  /// The end position of the next node.\n  end: number\n  /// The size of the next node (the number of nodes inside, counting\n  /// the node itself, times 4).\n  size: number\n  /// Moves `this.pos` down by 4.\n  next(): void\n  /// Create a copy of this cursor.\n  fork(): BufferCursor\n}\n\nclass FlatBufferCursor implements BufferCursor {\n  constructor(readonly buffer: readonly number[], public index: number) {}\n\n  get id() { return this.buffer[this.index - 4] }\n  get start() { return this.buffer[this.index - 3] }\n  get end() { return this.buffer[this.index - 2] }\n  get size() { return this.buffer[this.index - 1] }\n\n  get pos() { return this.index }\n\n  next() { this.index -= 4 }\n\n  fork() { return new FlatBufferCursor(this.buffer, this.index) }\n}\n\nconst BalanceBranchFactor = 8\n\nfunction buildTree(data: BuildData) {\n  let {buffer, group, topID = 0,\n       maxBufferLength = DefaultBufferLength,\n       reused = [],\n       minRepeatType = group.types.length} = data as BuildData\n  let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer as BufferCursor\n  let types = group.types\n  function takeNode(parentStart: number, minPos: number,\n                    children: (Tree | TreeBuffer)[], positions: number[],\n                    inRepeat: number) {\n    let {id, start, end, size} = cursor\n    while (id == inRepeat) { cursor.next(); ({id, start, end, size} = cursor) }\n\n    let startPos = start - parentStart\n    if (size < 0) { // Reused node\n      children.push(reused[id])\n      positions.push(startPos)\n      cursor.next()\n      return\n    }\n\n    let type = types[id], node, buffer: {size: number, start: number, skip: number} | undefined\n    if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n      // Small enough for a buffer, and no reused nodes inside\n      let data = new Uint16Array(buffer.size - buffer.skip)\n      let endPos = cursor.pos - buffer.size, index = data.length\n      while (cursor.pos > endPos)\n        index = copyToBuffer(buffer.start, data, index, inRepeat)\n      node = new TreeBuffer(data, end - buffer.start, group, inRepeat < 0 ? NodeType.none : types[inRepeat])\n      startPos = buffer.start - parentStart\n    } else { // Make it a node\n      let endPos = cursor.pos - size\n      cursor.next()\n      let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n      let localInRepeat = id >= minRepeatType ? id : -1\n      while (cursor.pos > endPos)\n        takeNode(start, endPos, localChildren, localPositions, localInRepeat)\n      localChildren.reverse(); localPositions.reverse()\n\n      if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n        node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start)\n      else\n        node = new Tree(type, localChildren, localPositions, end - start)\n    }\n\n    children.push(node)\n    positions.push(startPos)\n  }\n\n  function findBufferSize(maxSize: number, inRepeat: number) {\n    // Scan through the buffer to find previous siblings that fit\n    // together in a TreeBuffer, and don't contain any reused nodes\n    // (which can't be stored in a buffer).\n    // If `inRepeat` is > -1, ignore node boundaries of that type for\n    // nesting, but make sure the end falls either at the start\n    // (`maxSize`) or before such a node.\n    let fork = cursor.fork()\n    let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength\n    let result = {size: 0, start: 0, skip: 0}\n    scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n      // Pretend nested repeat nodes of the same type don't exist\n      if (fork.id == inRepeat) {\n        // Except that we store the current state as a valid return\n        // value.\n        result.size = size; result.start = start; result.skip = skip\n        skip += 4; size += 4\n        fork.next()\n        continue\n      }\n      let nodeSize = fork.size, startPos = fork.pos - nodeSize\n      if (nodeSize < 0 || startPos < minPos || fork.start < minStart) break\n      let localSkipped = fork.id >= minRepeatType ? 4 : 0\n      let nodeStart = fork.start\n      fork.next()\n      while (fork.pos > startPos) {\n        if (fork.size < 0) break scan\n        if (fork.id >= minRepeatType) localSkipped += 4\n        fork.next()\n      }\n      start = nodeStart\n      size += nodeSize\n      skip += localSkipped\n    }\n    if (inRepeat < 0 || size == maxSize) {\n      result.size = size; result.start = start; result.skip = skip\n    }\n    return result.size > 4 ? result : undefined\n  }\n\n  function copyToBuffer(bufferStart: number, buffer: Uint16Array, index: number, inRepeat: number): number {\n    let {id, start, end, size} = cursor\n    cursor.next()\n    if (id == inRepeat) return index\n    let startIndex = index\n    if (size > 4) {\n      let endPos = cursor.pos - (size - 4)\n      while (cursor.pos > endPos)\n        index = copyToBuffer(bufferStart, buffer, index, inRepeat)\n    }\n    if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n      buffer[--index] = startIndex\n      buffer[--index] = end - bufferStart\n      buffer[--index] = start - bufferStart\n      buffer[--index] = id\n    }\n    return index\n  }\n\n  let children: (Tree | TreeBuffer)[] = [], positions: number[] = []\n  while (cursor.pos > 0) takeNode(0, 0, children, positions, -1)\n  let length = children.length ? positions[0] + children[0].length : 0\n  return new Tree(group.types[topID], children.reverse(), positions.reverse(), length)\n}\n\nfunction balanceRange(outerType: NodeType, innerType: NodeType,\n                      children: readonly (Tree | TreeBuffer)[], positions: readonly number[],\n                      from: number, to: number,\n                      start: number, maxBufferLength: number, length: number): Tree {\n  let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n  if (length <= maxBufferLength) {\n    for (let i = from; i < to; i++) {\n      localChildren.push(children[i])\n      localPositions.push(positions[i] - start)\n    }\n  } else {\n    let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor))\n    for (let i = from; i < to;) {\n      let groupFrom = i, groupStart = positions[i]\n      i++\n      for (; i < to; i++) {\n        let nextEnd = positions[i] + children[i].length\n        if (nextEnd - groupStart > maxChild) break\n      }\n      if (i == groupFrom + 1) {\n        let only = children[groupFrom]\n        if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n          for (let j = 0; j < only.children.length; j++) {\n            localChildren.push(only.children[j])\n            localPositions.push(only.positions[j] + groupStart - start)\n          }\n          continue\n        }\n        localChildren.push(only)\n      } else if (i == groupFrom + 1) {\n        localChildren.push(children[groupFrom])\n      } else {\n        let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart,\n                                 maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart)\n        if (innerType != NodeType.none && !containsType(inner.children, innerType))\n          inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length)\n        localChildren.push(inner)\n      }\n      localPositions.push(groupStart - start)\n    }\n  }\n  return new Tree(outerType, localChildren, localPositions, length)\n}\n\nfunction containsType(nodes: readonly (Tree | TreeBuffer)[], type: NodeType) {\n  for (let elt of nodes) if (elt.type == type) return true\n  return false\n}\n","const xsdDecimal = \"http://www.w3.org/2001/XMLSchema#decimal\";\nconst xsdBoolean = \"http://www.w3.org/2001/XMLSchema#boolean\";\nconst xsdDouble = \"http://www.w3.org/2001/XMLSchema#double\";\nconst xsdInteger = \"http://www.w3.org/2001/XMLSchema#integer\";\nconst xsdString = \"http://www.w3.org/2001/XMLSchema#string\";\nconst xsdDate = \"http://www.w3.org/2001/XMLSchema#date\";\nconst xsdDateTime = \"http://www.w3.org/2001/XMLSchema#dateTime\";\nconst xsdHexBinary = \"http://www.w3.org/2001/XMLSchema#hexBinary\";\nconst xsdBase64Binary = \"http://www.w3.org/2001/XMLSchema#base64Binary\";\nconst rdfType = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nconst rdfNil = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\";\nconst rdfFirst = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\";\nconst rdfRest = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\";\nconst rdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\nconst rdfJSON = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON\";\nexport const xsd = {\n    decimal: xsdDecimal,\n    boolean: xsdBoolean,\n    double: xsdDouble,\n    integer: xsdInteger,\n    string: xsdString,\n    date: xsdDate,\n    dateTime: xsdDateTime,\n    hexBinary: xsdHexBinary,\n    base64Binary: xsdBase64Binary,\n};\nexport const rdf = {\n    type: rdfType,\n    nil: rdfNil,\n    first: rdfFirst,\n    rest: rdfRest,\n    langString: rdfLangString,\n    JSON: rdfJSON,\n};\n","import { rdf, xsd } from \"./IRIs.js\";\nlet _blankNodeCounter = 0;\nexport class NamedNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get termType() {\n        return \"NamedNode\";\n    }\n    get id() {\n        return `<${this.value}>`;\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return other.termType === \"NamedNode\" && other.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nconst xsdString = new NamedNode(xsd.string);\nconst rdfLangString = new NamedNode(rdf.langString);\nexport class Literal {\n    constructor(value, language, datatype) {\n        this.value = value;\n        this.language = language;\n        this.datatype = datatype;\n        if (datatype.value === xsd.string) {\n            this.id = `\"${JSON.stringify(value)}\"`;\n        }\n        else if (datatype.value === rdf.langString && language !== \"\") {\n            this.id = `\"${JSON.stringify(value)}\"@${this.language}`;\n        }\n        else {\n            this.id = `\"${JSON.stringify(value)}\"^^<${datatype.value}>`;\n        }\n    }\n    get termType() {\n        return \"Literal\";\n    }\n    get datatypeString() {\n        return this.datatype.value;\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return (this.termType === term.termType &&\n                this.value === term.value &&\n                this.language === term.language &&\n                this.datatype.equals(term.datatype));\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n            language: this.language,\n            datatype: { termType: \"NamedNode\", value: this.datatype.value },\n        };\n    }\n}\nexport class BlankNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `_:${this.value}`;\n    }\n    get termType() {\n        return \"BlankNode\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class Variable {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `?${this.value}`;\n    }\n    get termType() {\n        return \"Variable\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class DefaultGraph {\n    get termType() {\n        return \"DefaultGraph\";\n    }\n    get id() {\n        return \"\";\n    }\n    get value() {\n        return \"\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: \"\",\n        };\n    }\n}\nexport const Default = new DefaultGraph();\nexport function fromId(id) {\n    if (id === \"\") {\n        return Default;\n    }\n    switch (id[0]) {\n        case \"_\":\n            return new BlankNode(id.slice(2));\n        case \"?\":\n            return new Variable(id.slice(1));\n        case '\"':\n            const i = id.lastIndexOf('\"');\n            if (i === -1) {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n            const value = id.slice(1, i);\n            if (id.length === i + 1) {\n                return new Literal(value, \"\", xsdString);\n            }\n            else if (id[i + 1] === \"@\") {\n                return new Literal(value, id.slice(i + 2), rdfLangString);\n            }\n            else if (id.slice(i, i + 4) === '\"^^<' && id[id.length - 1] === \">\") {\n                const datatype = new NamedNode(id.slice(i + 4, -1));\n                return new Literal(value, \"\", datatype);\n            }\n            else {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n        case \"<\":\n            return new NamedNode(id.slice(1, -1));\n        default:\n            throw new Error(`Invalid term id ${id}`);\n    }\n}\nexport function toId(term) {\n    if (typeof term === \"string\") {\n        return term;\n    }\n    switch (term.termType) {\n        case \"NamedNode\":\n            return `<${term.value}>`;\n        case \"BlankNode\":\n            return \"_:\" + term.value;\n        case \"Variable\":\n            return \"?\" + term.value;\n        case \"DefaultGraph\":\n            return \"\";\n        case \"Literal\":\n            return ('\"' +\n                term.value +\n                '\"' +\n                (term.language\n                    ? \"@\" + term.language\n                    : term.datatype && term.datatype.value !== xsd.string\n                        ? \"^^<\" + term.datatype.value + \">\"\n                        : \"\"));\n        default:\n            throw new Error(\"Invalid term: \" + term);\n    }\n}\n// TODO: think about it\nexport class Quad extends Array {\n    constructor(subject, predicate, object, graph) {\n        super(subject, predicate, object, graph || Default);\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph || Default;\n    }\n    get termType() {\n        return \"Quad\";\n    }\n    get value() {\n        return \"\";\n    }\n    get id() {\n        if (this.graph.equals(Default)) {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} .`;\n        }\n        else {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} ${this.graph.id} .`;\n        }\n    }\n    toJSON() {\n        return {\n            termType: \"Quad\",\n            value: \"\",\n            subject: this.subject.toJSON(),\n            predicate: this.predicate.toJSON(),\n            object: this.object.toJSON(),\n            graph: this.graph.toJSON(),\n        };\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return (other.termType === \"Quad\" &&\n                this.subject.equals(other.subject) &&\n                this.predicate.equals(other.predicate) &&\n                this.object.equals(other.object) &&\n                this.graph.equals(other.graph));\n        }\n    }\n}\nfunction namedNode(iri) {\n    return new NamedNode(iri);\n}\nfunction blankNode(name) {\n    return new BlankNode(name || `b${_blankNodeCounter++}`);\n}\nfunction literal(value, languageOrDataType) {\n    if (languageOrDataType === undefined) {\n        return new Literal(value, \"\", xsdString);\n    }\n    else if (typeof languageOrDataType === \"string\") {\n        return new Literal(value, languageOrDataType, rdfLangString);\n    }\n    else {\n        const datatype = new NamedNode(languageOrDataType.value);\n        return new Literal(value, \"\", datatype);\n    }\n}\nfunction variable(name) {\n    return new Variable(name);\n}\nfunction defaultGraph() {\n    return Default;\n}\nfunction quad(subject, predicate, object, graph) {\n    return new Quad(subject, predicate, object, graph);\n}\n// export function getTerm(\n// \tterm: null | string | Term\n// ): null | NamedNode | BlankNode | Literal | Variable | DefaultGraph {\n// \tif (term === null) {\n// \t\treturn null\n// \t} else if (typeof term === \"string\") {\n// \t\treturn fromId(term)\n// \t} else if (term instanceof BaseTerm) {\n// \t\treturn term\n// \t} else {\n// \t\tswitch (term.termType) {\n// \t\t\tcase \"NamedNode\":\n// \t\t\t\treturn new NamedNode(term.value)\n// \t\t\tcase \"BlankNode\":\n// \t\t\t\treturn new BlankNode(term.value)\n// \t\t\tcase \"Literal\":\n// \t\t\t\treturn new Literal(\n// \t\t\t\t\tterm.value,\n// \t\t\t\t\tterm.language || new NamedNode(term.datatype.value)\n// \t\t\t\t)\n// \t\t\tcase \"DefaultGraph\":\n// \t\t\t\treturn Default\n// \t\t\tcase \"Variable\":\n// \t\t\t\treturn new Variable(term.value)\n// \t\t}\n// \t}\n// }\nconst DataFactory = {\n    namedNode,\n    blankNode,\n    variable,\n    literal,\n    defaultGraph,\n    quad,\n};\nexport default DataFactory;\n","import DataFactory, { toId, fromId, Quad } from \"./DataFactory.js\";\nconst SPO = [\"subject\", \"predicate\", \"object\"];\nconst POS = [\"predicate\", \"object\", \"subject\"];\nconst OSP = [\"object\", \"subject\", \"predicate\"];\nexport default class Store {\n    constructor(quads) {\n        this.sizeCache = 0;\n        this.graphMap = new Map();\n        this.id = 0;\n        this.ids = new Map([[\"><\", 0]]);\n        this.entities = new Map();\n        this.blankNodeIndex = 0;\n        // Add quads if passed\n        if (quads !== undefined) {\n            this.addQuads(quads);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.quads(null, null, null, null);\n    }\n    get size() {\n        if (this.sizeCache !== null) {\n            return this.sizeCache;\n        }\n        // Calculate the number of quads by counting to the deepest level\n        let size = 0;\n        for (const { subjects } of this.graphMap.values()) {\n            for (const predicates of subjects.values()) {\n                for (const objects of predicates.values()) {\n                    size += objects.size;\n                }\n            }\n        }\n        this.sizeCache = size;\n        return size;\n    }\n    // ## Private methods\n    // Returns if the index has changed, if the entry did not already exist.\n    addToIndex(index0, key0, key1, key2) {\n        // Create layers as necessary\n        let existed = false;\n        const index1 = index0.get(key0);\n        if (index1 === undefined) {\n            index0.set(key0, new Map([[key1, new Set([key2])]]));\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 === undefined) {\n                index1.set(key1, new Set([key2]));\n            }\n            else {\n                existed = index2.has(key2);\n                index2.add(key2);\n            }\n        }\n        return existed;\n    }\n    // ### `_removeFromIndex` removes a quad from a three-layered index\n    removeFromIndex(index0, key0, key1, key2) {\n        // Remove the quad from the index\n        const index1 = index0.get(key0);\n        const index2 = index1.get(key1);\n        index2.delete(key2);\n        if (index2.size === 0) {\n            index1.delete(key1);\n            if (index1.size === 0) {\n                index0.delete(key0);\n            }\n        }\n    }\n    *generateIndex(index0, key0, key1, key2, rotation, graph) {\n        const entities = [\"\", \"\", \"\"];\n        if (key0) {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                entities[0] = this.entities.get(key0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n        else {\n            for (const [value0, index1] of index0) {\n                entities[0] = this.entities.get(value0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n    }\n    *generateIndex1(e, index1, key1, key2, r, graph) {\n        if (key1) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                e[1] = this.entities.get(key1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n        else {\n            for (const [value1, index2] of index1) {\n                e[1] = this.entities.get(value1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n    }\n    *generateIndex2(e, key2, index2, r, graph) {\n        if (key2) {\n            if (index2.has(key2)) {\n                e[2] = this.entities.get(key2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n        else {\n            for (const value2 of index2) {\n                e[2] = this.entities.get(value2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n    }\n    makeQuad([entity0, entity1, entity2], [name0, name1, name2], graph) {\n        const parts = { subject: null, predicate: null, object: null };\n        parts[name0] = fromId(entity0);\n        parts[name1] = fromId(entity1);\n        parts[name2] = fromId(entity2);\n        return new Quad(parts.subject, parts.predicate, parts.object, fromId(graph));\n    }\n    *loopByKey0(index0, key0) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            yield* index1.keys();\n        }\n    }\n    *loopByKey1(index0, key1) {\n        for (const [key0, index1] of index0) {\n            if (index1.has(key1)) {\n                yield key0;\n            }\n        }\n    }\n    *loopBy2Keys(index0, key0, key1) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                yield* index2.keys();\n            }\n        }\n    }\n    // ### `countInIndex` counts matching quads in a three-layered index.\n    // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n    // Any of these keys can be undefined, which is interpreted as a wildcard.\n    countInIndex(index0, key0, key1, key2) {\n        let count = 0;\n        if (key0 === null) {\n            for (const index1 of index0.values()) {\n                count += this.countInIndex1(index1, key1, key2);\n            }\n        }\n        else {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                count = this.countInIndex1(index1, key1, key2);\n            }\n        }\n        return count;\n    }\n    countInIndex1(index1, key1, key2) {\n        let count = 0;\n        if (key1 === null) {\n            for (const index2 of index1.values()) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        return count;\n    }\n    // ### `getGraphIndices` returns an array with the given graph,\n    // or all graphs if the argument is null or undefined.\n    getGraphIndices(graph) {\n        if (graph === undefined || graph === null) {\n            return this.graphMap;\n        }\n        else {\n            const graphIndex = this.graphMap.get(graph);\n            return new Map([[graph, graphIndex]]);\n        }\n    }\n    getGraphIndex(graph) {\n        const graphIndex = this.graphMap.get(graph);\n        if (graphIndex !== undefined) {\n            return graphIndex;\n        }\n        const newGraphIndex = Object.freeze({\n            subjects: new Map(),\n            predicates: new Map(),\n            objects: new Map(),\n        });\n        this.graphMap.set(graph, newGraphIndex);\n        return newGraphIndex;\n    }\n    addQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            if (args[3] === undefined) {\n                graph = \"\";\n            }\n            else {\n                graph = toId(args[3]);\n            }\n        }\n        const graphIndex = this.getGraphIndex(graph);\n        // Since entities can often be long IRIs, we avoid storing them in every index.\n        // Instead, we have a separate index that maps entities to numbers,\n        // which are then used as keys in the other indexes.\n        if (!this.ids.has(subject)) {\n            const id = ++this.id;\n            this.entities.set(id, subject);\n            this.ids.set(subject, id);\n        }\n        const s = this.ids.get(subject);\n        if (!this.ids.has(predicate)) {\n            const id = ++this.id;\n            this.entities.set(id, predicate);\n            this.ids.set(predicate, id);\n        }\n        const p = this.ids.get(predicate);\n        if (!this.ids.has(object)) {\n            const id = ++this.id;\n            this.entities.set(id, object);\n            this.ids.set(object, id);\n        }\n        const o = this.ids.get(object);\n        const changed = this.addToIndex(graphIndex.subjects, s, p, o);\n        this.addToIndex(graphIndex.predicates, p, o, s);\n        this.addToIndex(graphIndex.objects, o, s, p);\n        // The cached quad count is now invalid\n        this.sizeCache = null;\n        return changed;\n    }\n    // ### `addQuads` adds multiple quads to the store\n    addQuads(quads) {\n        for (const quad of quads) {\n            this.addQuad(quad);\n        }\n    }\n    removeQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else if (args.length === 3) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = \"\";\n        }\n        else if (args.length === 4) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = toId(args[3]);\n        }\n        // Find internal identifiers for all components\n        // and verify the quad exists.\n        const index = this.graphMap.get(graph);\n        if (index === undefined) {\n            return false;\n        }\n        if (!this.ids.has(subject) ||\n            !this.ids.has(predicate) ||\n            !this.ids.has(object)) {\n            return false;\n        }\n        const [s, p, o] = [\n            this.ids.get(subject),\n            this.ids.get(predicate),\n            this.ids.get(object),\n        ];\n        const subjects = index.subjects.get(s);\n        if (subjects === undefined) {\n            return false;\n        }\n        const predicates = subjects.get(p);\n        if (predicates === undefined || !predicates.has(o)) {\n            return false;\n        }\n        // Remove it from all indexes\n        this.removeFromIndex(index.subjects, s, p, o);\n        this.removeFromIndex(index.predicates, p, o, s);\n        this.removeFromIndex(index.objects, o, s, p);\n        if (this.sizeCache !== null) {\n            this.sizeCache--;\n        }\n        if (index.subjects.size === 0) {\n            this.graphMap.delete(graph);\n        }\n        return true;\n    }\n    // ### `remove` removes a stream of quads from the store\n    remove(stream) {\n        for (const quad of stream) {\n            this.removeQuad(quad);\n        }\n    }\n    // ### `removeMatches` removes all matching quads from the store\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    removeMatches(subject, predicate, object, graph) {\n        return this.remove(this.quads(subject, predicate, object, graph));\n    }\n    // ### `deleteGraph` removes all triples with the given graph from the store\n    deleteGraph(graph) {\n        return this.removeMatches(null, null, null, graph);\n    }\n    getGraphId(graph) {\n        const graphId = toId(graph);\n        if (this.graphMap.has(graphId)) {\n            return graphId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    // TODO::::::\n    getIds(s, p, o, graph) {\n        return [\n            s === null ? null : this.ids.get(toId(s)),\n            p === null ? null : this.ids.get(toId(p)),\n            o === null ? null : this.ids.get(toId(o)),\n            graph === null ? null : this.getGraphId(graph),\n        ];\n    }\n    *q(s, p, o, g) {\n        const graphs = this.getGraphIndices(g);\n        for (const [graphId, { subjects, predicates, objects }] of graphs) {\n            // Choose the optimal index, based on what fields are present\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    yield* this.generateIndex(objects, o, s, p, OSP, graphId);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    yield* this.generateIndex(subjects, s, p, null, SPO, graphId);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                yield* this.generateIndex(predicates, p, o, null, POS, graphId);\n            }\n            else if (o) {\n                // If only object is given, the object index will be the fastest\n                yield* this.generateIndex(objects, o, null, null, OSP, graphId);\n            }\n            else {\n                // If nothing is given, iterate subjects and predicates first\n                yield* this.generateIndex(subjects, null, null, null, SPO, graphId);\n            }\n        }\n    }\n    // ### `match` returns a stream of quads matching a pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    *quads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return;\n        }\n        yield* this.q(s, p, o, g);\n    }\n    getQuads(subject, predicate, object, graph) {\n        return Array.from(this.quads(subject, predicate, object, graph));\n    }\n    countQuads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return 0;\n        }\n        const graphs = this.getGraphIndices(g);\n        let count = 0;\n        for (const content of graphs.values()) {\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    count += this.countInIndex(content.objects, o, s, p);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    count += this.countInIndex(content.subjects, s, p, o);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                count += this.countInIndex(content.predicates, p, o, s);\n            }\n            else {\n                // If only object is possibly given, the object index will be the fastest\n                count += this.countInIndex(content.objects, o, s, p);\n            }\n        }\n        return count;\n    }\n    getSubjects(predicate, object, graph) {\n        return Array.from(this.subjects(predicate, object, graph));\n    }\n    *subjects(predicate, object, graph) {\n        const [_, p, o, g] = this.getIds(null, predicate, object, graph);\n        if (p === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (p) {\n                if (o) {\n                    // If predicate and object are given, the POS index is best.\n                    iterator = this.loopBy2Keys(predicates, p, o);\n                }\n                else {\n                    // If only predicate is given, the SPO index is best.\n                    iterator = this.loopByKey1(subjects, p);\n                }\n            }\n            else if (o) {\n                // If only object is given, the OSP index is best.\n                iterator = this.loopByKey0(objects, o);\n            }\n            else {\n                // If no params given, iterate all the subjects\n                iterator = subjects.keys();\n            }\n            for (const s of iterator) {\n                yield* this.unique(s, ids);\n            }\n        }\n    }\n    getPredicates(subject, object, graph) {\n        return Array.from(this.predicates(subject, object, graph));\n    }\n    *predicates(subject, object, graph) {\n        const [s, _, o, g] = this.getIds(subject, null, object, graph);\n        if (s === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the OSP index is best.\n                    iterator = this.loopBy2Keys(objects, o, s);\n                }\n                else {\n                    // If only subject is given, the SPO index is best.\n                    iterator = this.loopByKey0(subjects, s);\n                }\n            }\n            else if (o) {\n                // If only object is given, the POS index is best.\n                iterator = this.loopByKey1(predicates, o);\n            }\n            else {\n                // If no params given, iterate all the predicates.\n                iterator = predicates.keys();\n            }\n            for (const p of iterator) {\n                yield* this.unique(p, ids);\n            }\n        }\n    }\n    // ### `getObjects` returns all objects that match the pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    getObjects(subject, predicate, graph) {\n        return Array.from(this.objects(subject, predicate, graph));\n    }\n    *objects(subject, predicate, graph) {\n        const [s, p, _, g] = this.getIds(subject, predicate, null, graph);\n        if (s === undefined || p === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            if (s) {\n                if (p) {\n                    // If subject and predicate are given, the SPO index is best.\n                    for (const o of this.loopBy2Keys(subjects, s, p)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n                else {\n                    // If only subject is given, the OSP index is best.\n                    for (const o of this.loopByKey1(objects, s)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n            }\n            else if (p) {\n                // If only predicate is given, the POS index is best.\n                for (const o of this.loopByKey0(predicates, p)) {\n                    yield* this.unique(o, ids);\n                }\n            }\n            else {\n                // If no params given, iterate all the objects.\n                for (const o of objects.keys()) {\n                    yield* this.unique(o, ids);\n                }\n            }\n        }\n    }\n    getGraphs(subject, predicate, object) {\n        return Array.from(this.graphs(subject, predicate, object));\n    }\n    *graphs(subject, predicate, object) {\n        const [s, p, o, _] = this.getIds(subject, predicate, object, null);\n        if (s === undefined || p === undefined || o === undefined) {\n            return;\n        }\n        for (const g of this.graphMap.keys()) {\n            const graph = fromId(g);\n            for (const _ of this.q(s, p, o, g)) {\n                yield graph;\n                break;\n            }\n        }\n    }\n    *unique(id, ids) {\n        if (!ids.has(id)) {\n            ids.add(id);\n            yield fromId(this.entities.get(id));\n        }\n    }\n    createBlankNode(suggestedName) {\n        let name = \"\";\n        if (suggestedName) {\n            // Generate a name based on the suggested name\n            name = \"_:\" + suggestedName;\n            for (let index = 1; this.ids.has(name); index++) {\n                name = \"_:\" + suggestedName + index;\n            }\n        }\n        else {\n            // Generate a generic blank node name\n            do {\n                name = \"_:b\" + this.blankNodeIndex++;\n            } while (this.ids.has(name));\n        }\n        // Add the blank node to the entities, avoiding the generation of duplicates\n        const id = ++this.id;\n        this.ids.set(name, id);\n        this.entities.set(id, name);\n        return DataFactory.blankNode(name.substr(2));\n    }\n}\n","import { Quad, NamedNode, BlankNode, Literal, Default, } from \"./DataFactory.js\";\nconst nnClosingTagError = () => new Error(`named node without closing angle bracket`);\nconst bnOpenTagError = () => new Error(`invalid blank node label`);\nconst unexpectedCharError = (identifier) => new Error(`Unexpected character '${identifier}'`);\nconst quadClosingPeriodError = (line) => new Error(`quad without closing period ${line}`);\nconst nnOpeningToken = \"<\";\nconst nnOpeningTokenOffset = nnOpeningToken.length;\nconst nnClosingToken = \">\";\nconst nnClosingPostfix = \"> \";\nconst nnClosingPostfixOffset = nnClosingPostfix.length;\nconst bnOpeningToken = \"_\";\nconst bnOpeningPrefix = \"_:\";\nconst bnOpeningPrefixOffset = bnOpeningPrefix.length;\nconst bnClosingToken = \" \";\nconst bnClosingTokenOffset = bnClosingToken.length;\nconst ltOpeningToken = '\"';\nconst ltOpeningTokenOffset = ltOpeningToken.length;\nconst quadClosingPostfix = \".\";\nconst ltReservedReplace = /\\\\(.)/g;\nconst ltReservedReplaceFn = (match) => {\n    switch (match) {\n        case \"\\\\n\":\n            return \"\\n\";\n        case \"\\\\r\":\n            return \"\\r\";\n        case '\\\\\"':\n            return '\"';\n        case \"\\\\\\\\\":\n            return \"\\\\\";\n        default:\n            throw new Error(`Unknown token ${match}`);\n    }\n};\n// const lgOpeningToken: string = \"@\"\n// const lgOpeningTokenOffset: number = lgOpeningToken.length\nconst lgOpeningPrefix = '\"@';\nconst lgOpeningPrefixOffset = lgOpeningPrefix.length;\nconst lgClosingToken = \" \";\nconst dtSplitPrefix = '\"^^<';\nconst dtSplitPrefixOffset = dtSplitPrefix.length;\nconst xsdString = new NamedNode(\"http://www.w3.org/2001/XMLSchema#string\");\nconst rdfLangString = new NamedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\");\nexport default function* Parse(input) {\n    if (!input || input.length === 0) {\n        return;\n    }\n    let rightBoundary, leftBoundary;\n    let lang, datatype;\n    let subject, predicate, object, graph;\n    for (const line of input.split(\"\\n\")) {\n        if (line === \"\") {\n            continue;\n        }\n        rightBoundary = -1;\n        leftBoundary = -1;\n        /*\n         * Parse the subject\n         */\n        switch (line.charAt(0)) {\n            case nnOpeningToken:\n                rightBoundary = line.indexOf(nnClosingPostfix);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                const namedNodeValue = line.substring(nnOpeningTokenOffset, rightBoundary);\n                subject = new NamedNode(namedNodeValue);\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                rightBoundary = line.indexOf(bnClosingToken);\n                const blankNodeValue = line.substring(bnOpeningPrefixOffset, rightBoundary);\n                subject = new BlankNode(blankNodeValue);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(0));\n        }\n        /*\n         * Parse the predicate\n         */\n        // We currently assume blank nodes can't be predicates\n        rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n        if (rightBoundary === -1) {\n            throw nnClosingTagError();\n        }\n        leftBoundary =\n            line.indexOf(nnOpeningToken, leftBoundary) + nnOpeningTokenOffset;\n        predicate = new NamedNode(line.substring(leftBoundary, rightBoundary));\n        leftBoundary = rightBoundary + nnClosingPostfixOffset;\n        /*\n         * Parse the object\n         */\n        switch (line.charAt(leftBoundary)) {\n            case nnOpeningToken:\n                leftBoundary = leftBoundary + nnOpeningTokenOffset;\n                // When parsing ntriples, the space of the nnClosingPostfix might not exist, so it can't be used\n                rightBoundary = line.indexOf(nnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                object = new NamedNode(line.substring(leftBoundary, rightBoundary));\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                leftBoundary =\n                    line.indexOf(bnOpeningPrefix, leftBoundary) + bnOpeningPrefixOffset;\n                rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw quadClosingPeriodError(line);\n                }\n                const value = line.substring(leftBoundary, rightBoundary);\n                object = new BlankNode(value);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            case '\"':\n                leftBoundary = leftBoundary + ltOpeningTokenOffset;\n                const objEndIndex = line.lastIndexOf(ltOpeningToken);\n                const literalValue = line\n                    .substring(leftBoundary, objEndIndex)\n                    .replace(ltReservedReplace, ltReservedReplaceFn);\n                leftBoundary = objEndIndex;\n                // dtOrLgBoundary = line.indexOf(dtSplitPrefix, leftBoundary)\n                if (line.substring(leftBoundary, leftBoundary + dtSplitPrefixOffset) ===\n                    dtSplitPrefix) {\n                    // Typed literal\n                    rightBoundary = line.indexOf(nnClosingToken, leftBoundary + dtSplitPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw nnClosingTagError();\n                    }\n                    const value = line.substring(leftBoundary + dtSplitPrefixOffset, rightBoundary);\n                    lang = null;\n                    datatype = new NamedNode(value);\n                    leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                }\n                else if (line.substring(leftBoundary, leftBoundary + lgOpeningPrefixOffset) ===\n                    lgOpeningPrefix) {\n                    rightBoundary = line.indexOf(lgClosingToken, leftBoundary + lgOpeningPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw quadClosingPeriodError(line);\n                    }\n                    lang = line.substring(leftBoundary + lgOpeningPrefixOffset, rightBoundary);\n                    datatype = rdfLangString;\n                    leftBoundary = rightBoundary;\n                }\n                else {\n                    // Implicit literals are strings\n                    lang = null;\n                    datatype = xsdString;\n                    leftBoundary += ltOpeningTokenOffset + 1;\n                }\n                object =\n                    lang === null\n                        ? new Literal(literalValue, \"\", datatype)\n                        : new Literal(literalValue, lang, rdfLangString);\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(leftBoundary));\n        }\n        /*\n         * Parse the graph, if any\n         */\n        if (line[leftBoundary] === nnOpeningToken) {\n            leftBoundary += nnOpeningTokenOffset;\n            rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n            if (rightBoundary === -1) {\n                throw nnClosingTagError();\n            }\n            else if (line.substring(rightBoundary, rightBoundary + nnClosingPostfixOffset) !== nnClosingPostfix) {\n                throw nnClosingTagError();\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            leftBoundary = rightBoundary + nnClosingPostfixOffset;\n            graph = new NamedNode(value);\n        }\n        else if (line[leftBoundary] === bnOpeningToken) {\n            if (line.substring(leftBoundary, leftBoundary + bnOpeningPrefixOffset) !==\n                bnOpeningPrefix) {\n                throw bnOpenTagError();\n            }\n            leftBoundary = leftBoundary + bnOpeningPrefixOffset;\n            rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n            if (rightBoundary === -1) {\n                throw quadClosingPeriodError(line);\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            graph = new BlankNode(value);\n            leftBoundary = rightBoundary + bnClosingTokenOffset;\n        }\n        else {\n            graph = Default;\n        }\n        if (line.substring(leftBoundary) === quadClosingPostfix) {\n            yield new Quad(subject, predicate, object, graph);\n        }\n        else {\n            throw quadClosingPeriodError(line);\n        }\n    }\n}\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof global == \"undefined\" ? window : global\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{process: (string) → string, extend: (string, string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `process` is given, it is called on regular (non-`@`)\n  // selector properties to provide the actual selector. When `extend`\n  // is given, it is called when a property containing an `&` is\n  // found, and should somehow combine the `&`-template (its first\n  // argument) with the selector (its second argument) to produce an\n  // extended selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {process, extend} = options || {}\n\n    function processSelector(selector) {\n      if (/^@/.test(selector)) return [selector]\n      let selectors = selector.split(\",\")\n      return process ? selectors.map(process) : selectors\n    }\n\n    function render(selectors, spec, target) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0])\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(selectors.map(s => extend ? extend(prop, s) : prop.replace(/&/, s)), value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(isAt[1] == \"keyframes\" ? [prop] : processSelector(prop), value, local)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || isAt && isAt[1] == \"keyframes\") target.push(selectors.join(\",\") + \" {\" + local.join(\" \") + \"}\")\n    }\n\n    for (let prop in spec) render(processSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = null\n\nclass StyleSet {\n  constructor(root) {\n    if (root.adoptedStyleSheets && typeof CSSStyleSheet != \"undefined\") {\n      if (adoptedSet) {\n        root.adoptedStyleSheets = [adoptedSet.sheet].concat(root.adoptedStyleSheets)\n        return root[SET] = adoptedSet\n      }\n      this.sheet = new CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet].concat(root.adoptedStyleSheets)\n      adoptedSet = this\n    } else {\n      this.styleTag = (root.ownerDocument || root).createElement(\"style\")\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].rules.join(\"\\n\") + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst zip = (...args) => ({\n    [Symbol.iterator]() {\n        const iterators = args.map((arg) => arg[Symbol.iterator]());\n        let i = 0;\n        return {\n            next() {\n                const results = iterators.map((iter) => iter.next());\n                if (results.some(({ done }) => done)) {\n                    return { done: true, value: undefined };\n                }\n                else {\n                    const values = results.map(({ value }) => value);\n                    return { done: false, value: [...values, i++] };\n                }\n            },\n        };\n    },\n});\nexports.default = zip;\n","import {\n\tEditorState,\n\tEditorView,\n\tbasicSetup,\n} from \"@codemirror/next/basic-setup\"\nimport { keymap } from \"@codemirror/next/view\"\nimport {\n\tdefaultKeymap,\n\tindentMore,\n\tindentLess,\n} from \"@codemirror/next/commands\"\nimport { commentKeymap } from \"@codemirror/next/comment\"\nimport { linter } from \"@codemirror/next/lint\"\n\nimport { schemaLinter, schemaSyntax } from \"../lib/index.js\"\n\nconst main = document.querySelector(\"main\")!\n\nconst extensions = [\n\tbasicSetup,\n\tschemaSyntax,\n\tEditorState.indentUnit.of(\"  \"),\n\tkeymap([\n\t\t...defaultKeymap,\n\t\t...commentKeymap,\n\t\t{\n\t\t\tkey: \"Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentMore,\n\t\t},\n\t\t{\n\t\t\tkey: \"Shift-Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentLess,\n\t\t},\n\t]),\n\tlinter(schemaLinter(() => {})),\n]\n\nconst state = EditorState.create({\n\textensions,\n\tdoc: `# Welcome to the schema editor!\n# If you're new, you probably want to read\n# the schema language documentation here:\n# http://r1.underlay.org/docs/schemas\n\nnamespace ex http://example.com#\nnamespace ul http://underlay.org/ns/\n\ntype foo {\n  ex:a -> ? uri ;\n  ex:b -> string ;\n  ex:c -> dateTime ;\n}\n\nedge ex:cool ==/ ex:map /=> ex:wau\n\nclass ex:cool unit\n\nclass ex:wau {\n  ex:bar -> foo ;\n  ex:age -> integer ;\n  ex:self -> * ex:wau ;\n}\n\n\n\n\n\n\n`,\n})\n\n;(window as any).view = new EditorView({ state, parent: main })\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(439);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}