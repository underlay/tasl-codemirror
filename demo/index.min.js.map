{"version":3,"sources":["webpack://@underlay/tasl-codemirror/./src/config.ts","webpack://@underlay/tasl-codemirror/./src/error.ts","webpack://@underlay/tasl-codemirror/./src/index.ts","webpack://@underlay/tasl-codemirror/./src/lint.ts","webpack://@underlay/tasl-codemirror/./src/syntax.ts","webpack://@underlay/tasl-codemirror/./node_modules/lezer/dist/index.cjs","webpack://@underlay/tasl-codemirror/./node_modules/lezer/node_modules/lezer-tree/dist/tree.cjs","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/history/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/fold/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/closebrackets/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/autocomplete/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/rectangular-selection/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/goto-line/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/basic-setup/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/commands/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/comment/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/gutter/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/highlight-selection/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/highlight/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/language/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/lint/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/matchbrackets/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/panel/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/rangeset/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/search/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/state/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/text/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/tooltip/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/w3c-keyname/index.es.js","webpack://@underlay/tasl-codemirror/./node_modules/@codemirror/next/view/dist/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/apg.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/namespace.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/rng.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/regex.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/validate.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/stringify.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/utils.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/node_modules/uuid/dist/esm-browser/v4.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/type.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/morphism.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/mapping.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/apg/src/value.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/grammar/index.js","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/index.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/parse.ts","webpack://@underlay/tasl-codemirror/./node_modules/@underlay/tasl-lezer/src/stdlib.ts","webpack://@underlay/tasl-codemirror/./node_modules/lezer-tree/src/tree.ts","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/IRIs.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/DataFactory.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/Store.js","webpack://@underlay/tasl-codemirror/./node_modules/n3.ts/es6/Parse.js","webpack://@underlay/tasl-codemirror/./node_modules/style-mod/src/style-mod.js","webpack://@underlay/tasl-codemirror/./node_modules/ziterable/index.js","webpack://@underlay/tasl-codemirror/webpack/bootstrap","webpack://@underlay/tasl-codemirror/webpack/runtime/compat get default export","webpack://@underlay/tasl-codemirror/webpack/runtime/define property getters","webpack://@underlay/tasl-codemirror/webpack/runtime/hasOwnProperty shorthand","webpack://@underlay/tasl-codemirror/webpack/runtime/make namespace object","webpack://@underlay/tasl-codemirror/./demo/index.js"],"names":["EditorView","EditorState","readOnlyConfig","editable","of","lineNumbers","defaultHighlightStyle","highlightSelectionMatches","schemaSyntax","editableConfig","basicSetup","keymap","defaultKeymap","commentKeymap","key","preventDefault","run","indentMore","indentLess","errorUnit","APG","product","openLintPanel","lintView","state","cursor","syntaxTree","parseState","slice","from","to","doc","sliceString","namespaces","references","types","defaultTypes","schema","diagnostics","name","push","message","severity","errors","firstChild","type","isError","namespace","term","node","getChild","uriPattern","test","namespacePattern","source","identifier","prefix","expression","getType","uri","getURI","terms","getChildren","uris","map","length","sourceNode","labelNode","targetNode","label","target","components","ns","reference","value","head","coproduct","none","some","tail","reportChildErrors","nextSibling","Object","entries","filter","sorted","sort","a","c","b","d","defaultNamespaces","fromEntries","parseURI","e","LintError","datatype","literal","component","options","option","Error","parent","makeSchemaLinter","onChange","linter","view","props","undefined","LezerLanguage","define","parser","configure","indentNodeProp","add","Product","continuedIndent","except","Coproduct","foldNodeProp","subtree","styleTags","Comment","tags","comment","Prefix","TypeName","typeName","Variable","Uri","className","Prop","propertyName","Iri","string","Unit","Literal","Pointer","operator","Optional","bracket","separator","keyword","class","edge","list","languageData","closeBrackets","brackets","indentOnInput","commentTokens","line","defineProperty","exports","Recover","lezerTree","Stack","cx","stack","reducePos","pos","score","buffer","bufferBase","this","_","i","concat","start","action","depth","dPrec","dynamicPrecedence","minRepeatTerm","storeNode","pushState","getGoto","base","count","stateFlag","baseStateID","pop","end","size","isReduce","cur","top","index","next","nextEnd","nextState","maxNode","reduce","shift","reused","off","isNode","sim","SimulatedStack","stateSlot","hasAction","force","before","frame","indexOf","nextStates","best","s","result","split","validAction","forceReduce","data","other","dialectID","dialect","flags","rest","offset","goto","StackBufferCursor","maybeNext","Token","TokenGroup","id","input","token","group","groupMask","scan","accEnd","allows","overrides","accept","get","low","high","mid","readToken","decodeArray","Type","Uint16Array","array","out","charCodeAt","stop","digit","prototype","contextual","fallback","extend","verbose","process","env","LOG","stackIDs","cutAt","tree","side","childBefore","childAfter","prevSibling","FragmentCursor","fragments","fragment","safeFrom","safeTo","trees","nextFragment","fr","openStart","openEnd","nextStart","last","children","positions","TreeBuffer","CachedToken","super","arguments","extended","mask","dummyToken","TokenCache","tokens","mainToken","actions","tokenizers","actionIndex","main","tokenizer","updateCachedToken","startIndex","addActions","eofTerm","clear","specialized","specializers","read","set","putAction","pair","Rec","Parse","startPos","context","recovering","nextStackID","nested","nestEnd","nestWrap","topTerm","stacks","advance","finishNested","stopped","stoppedTokens","maybeNest","newStacks","nest","checkNest","advanceStack","tok","startNested","finished","findFinished","stackToTree","strict","console","log","getName","SyntaxError","runRecovery","forceAll","maxRemaining","outer","j","sameState","splice","stackID","cached","nodeAt","match","nodeSet","useNode","Tree","inner","defaultReduce","getActions","localStack","apply","pushStackDedup","restarted","tokenEnd","deadEnd","restart","done","advanceFully","forceBase","insert","recoverByInsert","recoverByDelete","forceFinish","build","create","topID","maxBufferLength","bufferLength","minRepeatType","info","findNested","spec","scanForNestEnd","filterEnd","wrapType","startParse","clip","endToken","NodeType","placeholder","WeakMap","String","fromCodePoint","Dialect","disabled","Parser","DefaultBufferLength","nextStateCache","cachedDialect","version","RangeError","tokenArray","tokenData","nodeNames","repeatNodeCount","nodeProps","setProp","nodeID","prop","deserialize","propSpec","states","Uint32Array","stateData","topTerms","keys","topRules","r","NodeSet","error","skipped","skippedNodes","maxTerm","dialects","dynamicPrecedences","tokenPrecTable","tokenPrec","termNames","l","parseDialect","stringInput","loose","table","groupTag","terminal","slot","flag","max","prev","iPrev","findOffset","config","copy","assign","t","found","find","obj","hasOwnProperty","call","prec","values","part","Uint8Array","NodeProp","TreeCursor","ExternalTokenizer","nextPropID","CachedNode","str","Number","propObj","closedBy","openedBy","noProps","src","Array","isArray","direct","groups","newTypes","newProps","toString","join","JSON","stringify","scope","topNode","moveTo","_tree","TreeNode","enter","leave","mustLeave","isAnonymous","BalanceBranchFactor","balanceRange","_a","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","maxSize","fork","skip","minStart","nodeSize","localSkipped","nodeStart","findBufferSize","endPos","copyToBuffer","localChildren","localPositions","localInRepeat","reverse","bufferStart","buildTree","empty","childString","endIndex","dir","after","pick","_parent","full","findChild","BufferNode","BufferContext","hasChild","nextChild","val","nextSignificantParent","is","child","externalSibling","bufferNode","yieldNode","n","unshift","yieldBuf","yield","sibling","atLastNode","move","cache","ch","outerType","innerType","maxChild","Math","ceil","groupFrom","groupStart","only","containsType","nodes","elt","TreeFragment","open","changes","minGap","fI","nextF","cI","nextC","nextPos","fromA","cut","fFrom","fTo","min","toA","toB","partial","f","StringInput","at","fromHistory","Annotation","isolateHistory","invertedEffects","Facet","historyConfig","combine","configs","combineConfig","minDepth","newGroupDelay","historyField","StateField","HistoryState","tr","facet","fromHist","annotation","item","HistEvent","fromTransaction","undone","updateBranch","addSelection","startState","selection","isolate","Transaction","addMapping","desc","event","time","userEvent","addChanges","cmd","dispatch","historyState","field","undo","redo","undoSelection","redoSelection","histState","branch","effects","mapped","startSelection","selectionsAfter","invert","selections","maxLen","newEvent","newBranch","conc","lastEvent","sels","eq","setSelAfter","popSelection","addMappingToBranch","mapping","mapEvent","extraSelections","mappedChanges","mapDesc","fullMapping","composeDesc","StateEffect","prevTime","prevUserEvent","ranges","isAdjacent","iterChangedRanges","_f","_t","compose","update","annotations","historyKeymap","mac","mapRange","range","mapPos","foldEffect","unfoldEffect","selectedLines","lines","visualLineAt","foldState","Decoration","folded","foldExists","foldWidget","filterFrom","filterTo","onSelection","primary","between","provide","foldInside","maybeEnable","append","codeFolding","foldKeymap","foldable","reconfigure","defaultConfig","placeholderDOM","placeholderText","foldConfig","baseTheme","widget","WidgetType","conf","element","document","createElement","textContent","setAttribute","phrase","title","themeClass","onclick","posAtDOM","foldGutterDefaults","openText","closedText","FoldMarker","GutterMarker","span","$foldPlaceholder","backgroundColor","border","color","borderRadius","margin","padding","defaults","closeBracketEffect","MapMode","skipBracketEffect","closedBracket","startSide","endSide","bracketState","lineStart","lineAt","prevLineStart","effect","definedClosing","closing","charAt","languageDataAt","closeBracketsKeymap","dont","changeByRange","prevChar","nextChar","EditorSelection","scrollIntoView","closedBracketAt","handleOpen","close","closeBefore","anchor","handleClose","_open","moved","primaryIndex","handleSame","allowTriple","isTriple","sliceDoc","charCategorizer","CharCategory","resolve","CompletionContext","explicit","abortListeners","text","expr","search","ensureAnchor","_type","listener","Option","completion","addStart","addEnd","RegExp","ignoreCase","applyCompletion","FuzzyMatcher","pattern","chars","any","precise","byWord","p","char","upper","toUpperCase","toLowerCase","astral","word","first","len","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","prevType","completionConfig","activateOnTyping","override","maxRenderedOptions","fontFamily","overflowY","whiteSpace","maxHeight","listStyle","lineHeight","background_fallback","color_fallback","content","opacity","display","textAlign","position","width","maxWidth","MaxInfoWidth","right","left","verticalAlign","height","borderLeft","$completionMatchedText","textDecoration","$completionDetail","marginLeft","fontStyle","$completionIcon","fontSize","paddingRight","createListBox","ul","li","appendChild","icon","labelElt","detail","createTextNode","detailElt","classList","rangeAroundSelected","total","selected","floor","CompletionTooltip","stateField","placeInfo","measureInfo","write","positionInfo","cState","dom","addEventListener","parentNode","nodeName","exec","requestMeasure","updateSel","prevState","remove","updateSelectedOption","createInfoDialog","opt","hasAttribute","removeAttribute","container","getBoundingClientRect","self","scrollTop","bottom","sel","querySelector","rect","clientHeight","textDirection","Direction","spaceLeft","spaceRight","innerWidth","style","toggle","CompletionDialog","attrs","tooltip","timestamp","makeAttrs","active","hasResult","matcher","boost","cmpOption","sortOptions","selectedValue","completionState","Date","now","CompletionState","random","ActiveSource","every","touchesRange","iA","iB","endA","endB","sameResults","docChanged","setSelectedEffect","setSelected","baseAttrs","dScore","lA","lB","handleUserEvent","handleChange","startCompletionEffect","closeCompletionEffect","setActiveEffect","_tr","ActiveResult","sources","moveCompletionSelection","forward","by","step","offsetHeight","acceptCompletion","RunningQuery","updates","completionPlugin","ViewPlugin","debounceUpdate","running","debounceAccept","composing","startQuery","selectionSet","doesReset","transactions","query","handler","logException","clearTimeout","q","setTimeout","startUpdate","pending","Promise","then","aborted","scheduleAccept","err","updated","current","eventHandlers","fieldMarker","fieldRange","ActiveSnippet","deco","setActive","moveToField","snippetState","selectionInsideField","moveField","precedence","completionKeymap","MaxOff","getPos","posAtCoords","x","clientX","y","clientY","col","ref","coordsAtPos","viewport","round","abs","defaultCharacterWidth","absoluteColumn","tabSize","number","extTag","Symbol","createLineDialog","innerHTML","go","parseInt","isNaN","focus","keyCode","gotoLineKeymap","panel","highlightSpecialChars","fullConfig","canFold","canUnfold","gutter","lineMarker","initialSpacer","domEventHandlers","click","foldGutter","drawSelection","closed","handleInsertion","autocompletion","eventFilter","altKey","button","startSel","newStart","newLine","_extend","multiple","startLine","endLine","startOff","endOff","startCol","endCol","leftOver","rectangleFor","rectangleSelectionStyle","rectangularSelection","highlightActiveLine","lintKeymap","setSel","moveSel","how","rangeEnd","cursorByChar","moveByChar","cursorCharLeft","cursorCharRight","cursorCharForward","cursorCharBackward","cursorByGroup","moveByGroup","cursorGroupLeft","cursorGroupRight","cursorGroupForward","cursorGroupBackward","interestingNode","bracketProp","moveBySyntax","newPos","matched","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","moveVertically","cursorLineUp","cursorLineDown","cursorByPage","cursorPageUp","cursorPageDown","moveByLineBoundary","moveToLineBoundary","space","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineStart","cursorLineEnd","toMatchingBracket","matching","cursorMatchingBracket","selectMatchingBracket","extendSel","goalColumn","selectByChar","selectCharLeft","selectCharRight","selectCharForward","selectCharBackward","selectByGroup","selectGroupLeft","selectGroupRight","selectGroupForward","selectGroupBackward","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineStart","selectLineEnd","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","selectAll","selectLine","selectedLineBlocks","selectParentSyntax","simplifySelection","deleteBy","towards","deleteByChar","codePoint","drop","getIndentUnit","findClusterBreak","deleteCodePointBackward","deleteCodePointForward","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","cat","nextCat","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","lineEnd","deleteTrailingWhitespace","iter","lineBreak","trailing","splitLine","transposeChars","blocks","upto","moveLine","block","nextLine","moveLineUp","moveLineDown","copyLine","copyLineUp","copyLineDown","deleteLine","insertNewline","replaceSelection","insertNewlineAndIndent","explode","isBetweenBrackets","IndentContext","simulateBreak","simulateDoubleBreak","indent","getIndentation","indentString","lineIndent","changeBySelectedLine","atLine","changeSet","indentSelection","overrideIndentation","norm","indentUnit","keep","emacsStyleKeymap","standardKeymap","toggleLineComment","toggleLineCommentWithOption","CommentOption","Toggle","lineComment","OnlyComment","lineUncomment","OnlyUncomment","toggleBlockComment","toggleBlockCommentWithOption","blockComment","blockUncomment","getConfig","BlockCommenter","LineCommenter","selectionCommented","isSelectionCommented","isRangeCommented","startText","endText","textBefore","SearchMargin","textAfter","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","lineCommentToken","linesAcrossSelection","linesAcrossRange","getLinesInRange","column","isRangeLineSkipped","isLineSkipped","minCol","posAfter","marginLen","_state","Infinity","isRangeLineDiscarded","constructor","_view","elementClass","mapMode","renderEmptyElements","elementStyle","markers","updateSpacer","activeGutters","gutters","$gutters","boxSizing","borderRight","$gutter","flexDirection","flexShrink","overflow","$gutterElement","minWidth","unfixGutters","gutterView","fixed","SingleGutterView","scrollDOM","insertBefore","contentDOM","updateGutters","contexts","UpdateContext","viewportLines","BlockType","finish","minHeight","contentHeight","change","heightChanged","viewportChanged","known","g","PluginField","offsetWidth","localMarkers","forLine","above","elements","newElt","GutterElement","compare","sameMarkers","removeChild","spacer","visualLineAtHeight","cssText","prevMarkers","eltClass","cssClass","marginTop","lastChild","cls","m","toDOM","lineNumberMarkers","lineNumberConfig","formatNumber","exists","NumberMarker","lineNumberGutter","others","maxLineNumber","defaultTheme","activeLineHighlighter","lineDeco","attributes","decorations","getDeco","lastLineStart","v","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","ext","matchHighlighter","matchDeco","mainMatchDeco","check","wordAt","trim","visibleRanges","nextTagID","Tag","modified","tag","mod","Modifier","nextModifierID","instances","mods","permute","byName","pieces","mode","parse","rule","Rule","ruleNodeProp","highlightStyleProp","stylings","highlightStyle","specs","styling","Styling","module","modSpec","treeHighlighter","language","TreeHighlighter","nodeStack","classStack","inheritStack","markCache","getTree","buildDeco","curClass","builder","flush","mark","iterate","inheritedClass","opaque","matchContext","st","_s","backTo","heading","punctuation","meta","docComment","variableName","labelName","macroName","docString","character","integer","float","bool","regexp","escape","url","null","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","quote","emphasis","strong","link","monospace","inserted","deleted","changed","invalid","documentMeta","processingInstruction","definition","defineModifier","constant","function","standard","local","special","fontWeight","languageDataProp","defineLanguageFacet","baseData","Language","extraExtensions","setState","EditorParseContext","work","takeTree","LanguageState","extension","ParseWorker","languageDataFacetAt","timeout","isTop","hasNested","lang","DocInput","cursorPos","prevString","stringStart","syncTo","skippedUntil","endTime","newState","fromB","startLen","cutFragments","until","requestIdle","window","requestIdleCallback","callback","cancelIdle","cancelIdleCallback","working","bind","scheduleWork","updateViewport","reset","takeSkipped","deadline","timeRemaining","indentService","cols","ts","service","ast","scanPos","strategy","indentStrategy","TreeIndentContext","syntaxIndentation","_b","overriden","countColumn","delimitedStrategy","ignoreClosed","topIndent","textAfterPos","atBreak","isParent","delimitedIndent","align","units","closedAt","aligned","openToken","openLine","isSkipped","bracketedAligned","baseIndent","flatIndent","matchExcept","rules","newDoc","newSelection","foldService","syntaxFolding","SelectedDiagnostic","diagnostic","LintState","findDiagnostic","maybeEnableLint","lintState","activeMark","lintTooltip","setDiagnostics","setDiagnosticsEffect","togglePanel","movePanelSelection","selPos","DiagnosticWidget","LintPanel","stackStart","stackEnd","renderDiagnostic","closeLintPanel","nextDiagnostic","LintDelay","lintTime","onmousedown","PanelItem","items","tabIndex","moveSelection","selectedIndex","contains","needsSync","newSelectedItem","_start","_end","sync","domPos","rm","underline","btoa","$diagnostic","$diagnosticAction","font","$lintRange","backgroundPosition","backgroundRepeat","backgroundImage","$lintPoint","borderBottom","borderBottomColor","background","$matchingBracket","$nonmatchingBracket","DefaultBrackets","bracketMatchingConfig","afterCursor","maxScanDistance","matchingMark","nonmatchingMark","bracketMatchingUnique","matchBrackets","bracketMatching","matchingNodes","byProp","matches","sub","_pos","firstToken","matchMarkedBrackets","tokenType","startCh","startToken","iterRange","distance","basePos","matchPlainBrackets","panelConfig","topContainer","bottomContainer","panels","panelPlugin","showPanel","getPanel","plugin","PanelGroup","panelClass","mount","syncClasses","scrollMargin","classes","syncDOM","curDOM","themeClasses","$panels","borderTop","RangeValue","Range","point","cmpRange","Far","Chunk","maxPoint","startAt","arr","lo","hi","diff","findIndex","newFrom","newTo","curFrom","curTo","RangeSet","chunkPos","chunk","nextLayer","chunkEnd","updateSpec","LayerCursor","spill","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPoint","minPointSize","sharedChunks","inA","Map","shared","Set","findSharedChunks","sideA","SpanCursor","sideB","iterGaps","iterator","activeForPoint","chunkStart","lastFrom","lastTo","setMaxPoint","newArrays","finishChunk","layer","rank","gotoInner","has","heap","heapBubble","childIndex","activeTo","activeRank","minActive","pointFrom","pointRank","removeActive","findMinIndex","trackOpen","trackExtra","nextVal","addActive","startA","startB","dPos","clipEnd","comparePoint","sameValues","compareRange","foundPos","basicNormalize","normalize","SearchCursor","bufferPos","peek","fromCharCode","code","Query","replace","caseInsensitive","setQuery","searchState","SearchState","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","highlight","valid","searchCommand","openSearchPanel","findNextMatch","findNext","maybeAnnounceMatch","findPrevInRange","findPrevious","selectMatches","replaceNext","replaceAll","buildPanel","select","searchExtensions","closeSearchPanel","root","activeElement","searchKeymap","searchField","onchange","onkeyup","replaceField","caseField","checked","updateQuery","onkeydown","runScopeHandlers","shiftKey","Break","DefaultSplit","ChangeDesc","sections","ins","posA","posB","individual","iterChanges","composeSets","mapSet","assoc","Simple","TrackDel","TrackBefore","TrackAfter","ChangeSet","_toB","resultSections","resultInserted","filteredSections","SectionIter","addSection","addInsert","filtered","parts","toJSON","lineSep","insText","insLen","json","forceJoin","setA","setB","mkSet","len2","sectionLen","insB","textBit","forward2","SelectionRange","level","which","fromJSON","normalized","bidiLevel","goal","checkSelection","docLength","nextID","compareInput","isStatic","default","sameArray","static","FacetProvider","deps","maybePrec","compute","computeN","dependencies","addresses","getter","idx","multi","depDoc","depSel","depAddrs","dep","addr","ensureAddr","newVal","oldVal","compareArray","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","oldAddr","address","dynAddr","getAddr","createF","updateF","compareF","facets","oldIdx","maybeIndex","Prec","PrecExtension","TaggedExtension","tagExtension","Configuration","replacements","dynamicSlots","staticValues","statusTemplate","oldState","fields","seen","tagsSeen","getOwnPropertySymbols","flatten","dynamicSlot","status","applying","allowMultipleSelections","lineSeparator","changeFilter","transactionFilter","transactionExtender","AnnotationType","StateEffectType","_doc","newLength","applyTransaction","ann","joinRanges","mergeTransaction","sequential","mapForA","mapForB","mapEffects","resolveTransactionInner","docSize","reconf","single","asArray","resolveTransaction","seq","extenders","extendTransaction","back","invertedDesc","filters","filterTransaction","addToHistory","nonASCIISingleCaseWordChar","wordChar","require","toText","result1","newChanges","newMapped","mapBy","extensions","configuration","staticFacet","asSingle","phrases","provider","wordChars","Space","hasWordChar","Word","Other","isExtendingChar","isRegionalIndicator","nextClusterBreak","surrogateLow","surrogateHigh","codePointAt","codePointSize","countBefore","prevClusterBreak","code0","code1","findColumn","Text","lineCache","cacheLine","lineInner","decompose","TextNode","iterA","RawTextCursor","iterB","offA","offB","strA","strB","eqContent","PartialTextCursor","LineCursor","iterLines","textLength","TextLeaf","lineCachePos","isLine","Line","sliceText","newLen","appendText","lineLengthTo","lineLengthFrom","lastLineLength","firstLineLength","lengthDiff","chunkLength","maxLength","minLength","chunked","currentLength","currentChunk","childLength","offsets","limit","LineContent","contextStart","strings","tooltipPlugin","inView","measureReq","readMeasure","writeMeasure","tooltips","showTooltip","tooltipViews","tp","createTooltip","views","tip","tooltipView","maybeMeasure","editor","innerHeight","measured","tView","strictSide","positioned","$tooltip","zIndex","HoverPlugin","setHover","lastMouseMove","hoverTimeout","mouseInside","checkHover","mouseenter","mouseleave","mousemove","lastMove","timeStamp","isOverRange","nodeType","isInTooltip","removeEventListener","createRange","fromDOM","domAtPos","setEnd","setStart","rects","getClientRects","hoverTooltip","hoverState","hideOnChange","nFrom","8","9","10","12","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","44","45","46","59","61","91","92","106","107","108","109","110","111","144","145","160","161","162","163","164","165","173","186","187","188","189","190","191","192","219","220","221","222","229","48","49","50","51","52","53","54","55","56","57","chrome","navigator","userAgent","safari","vendor","gecko","platform","ie","brokenModifierNames","nav","documentElement","ie_edge","ie_upto10","ie_11up","webkit","browser","ie_version","documentMode","gecko_version","chrome_version","ios","android","webkit_version","getSelection","hasSelection","anchorNode","clientRectsFor","tempRange","nodeValue","isEquivalentPosition","targetOff","scanFor","domIndex","previousSibling","maxOffset","childNodes","flattenRect","windowRect","win","DOMSelection","anchorOffset","focusNode","focusOffset","domSel","scratchRange","preventScrollSupported","focusPreventScroll","scrollLeft","ownerDocument","preventScroll","DOMPos","ContentView","dirty","editorView","posBefore","posAtStart","breakAfter","_side","track","reuseDOM","written","syncNodeInto","_dom","bias","fromI","fromStart","toI","toEnd","domBoundsAround","startDOM","endDOM","andParent","markParentsDirty","childList","cmView","markDirty","setParent","_rec","_event","ChildCursor","childCursor","findPos","none$1","InlineView","_other","TextView","textDOM","setDOM","createDOM","_from","_to","textCoords","MarkView","tagName","mergeInlineChildren","sliceInlineChildren","inlineDOMAtPos","coordsInChildren","WidgetView","customView","updateDOM","contentEditable","ignoreEvent","CompositionView","elts","toOff","fromOff","dLen","merge","become","replaceChildren","getSide","joinInlineInto","coordsAt","combineAttrs","attrsEq","keysA","keysB","updateAttrs","_widget","MarkDecoration","PointDecoration","getInclusive","LineDecoration","estimatedHeight","isReplace","WidgetRange","WidgetBefore","WidgetAfter","inclusiveStart","inclusiveEnd","inclusive","addRange","theme","strs","darkTheme","baseThemeID","expandThemeClasses","buildTheme","template","selector","$","outline_fallback","outline","$scroller","alignItems","overflowX","$content","flexGrow","caretColor","$line","$selectionLayer","contain","$selectionBackground","$cursorLayer","pointerEvents","animation","visibility","$cursor","borderLeftColor","$placeholder","$button","$textfield","LineClass","LineView","prevAttrs","takeDeco","transferDOM","setDeco","none$2","childPos","hack","cmIgnore","totalWidth","charWidth","docView","BlockWidgetView","_takeDeco","posAtEnd","ContentBuilder","curLine","breakAtStart","textOff","posCovered","getLine","take","wrapMarks","buildText","addWidget","NullWidget","addLineDeco","LTR","RTL","dec","LowTypes","ArabicTypes","BidiRE","BidiSpan","order","maybe","computeOrder","direction","trivialOrder","prevStrong","beforeL","rtl","movedOver","moveVisually","spanI","indexForward","nextIndex","nextSpan","wrappingWhiteSpace","HeightOracle","lineWrapping","heightSamples","lineLength","lineHeights","newHeight","h","knownHeights","MeasuredHeights","heights","BlockInfo","QueryType","HeightMap","oracle","oldDoc","me","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","_height","_value","blockAt","_force","more","setHeight","outdated","collapsed","widgetHeight","HeightMapGap","heightForLine","firstLine","lastLine","ByHeight","heightForGap","rightTop","rightOffset","subQuery","ByPos","forEachLine","rightStart","balanced","decomposeLeft","mergeGaps","decomposeRight","rebalance","around","covering","writtenTo","isCovered","heightRelevant","addBlock","blankContent","gap","enterLine","ensureLine","DecorationComparator","none$3","clickAddsSelectionRange","dragMovesSelection","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","exception","onerror","PluginFieldProvider","scrollMargins","nextPluginID","viewPlugin","handlers","pluginDecorations","PluginInstance","dummy","destroy","editorAttributes","contentAttributes","styleModule","ChangedRange","dI","rI","addToSet","ViewUpdate","changedRanges","hasFocus","inputState","notifiedFocused","LineGap","gA","gB","wrapping","LineGapWidget","vertical","ViewState","pixelViewport","paddingTop","paddingBottom","contentWidth","heightOracle","heightMap","scrollTo","printing","mustEnforceCursorAssoc","applyChanges","setDoc","getViewport","lineGaps","ensureLineGaps","lineGapDeco","draw","computeVisibleRanges","newDeco","contentChanges","heightChanges","extendWithRanges","comp","heightRelevantDecoChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLineGaps","mapLineGaps","repeated","getComputedStyle","scrollHeight","scrollWidth","clientWidth","parentRect","host","visiblePixelRange","dTop","dBottom","measureVisibleLineHeights","refresh","mustRefresh","measureTextSize","enforceCursorAssoc","Viewport","newTop","newBottom","gaps","viewFrom","viewTo","structure","lineStructure","findPosition","gapTo","gapFrom","gapSize","findFraction","ratio","same","editorTop","dist","counted","none$4","DocView","viewports","compositionDeco","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","updateInner","updateDeco","textNode","nearbyTextNode","cView","nearest","CompositionWidget","computeCompositionDeco","forceSelection","prevDeco","decoDiff","DecorationComparator$1","findChangedDeco","pointerSel","updateSelection","oldLength","updateChildren","observer","ignore","viewState","replaceRange","breakAtEnd","fromPointer","mayControlSelection","nextToUneditable","nextTo","collapse","cursorBidiLevel","removeAllRanges","modify","domView","rootView","localPosFromDOM","measure","visible","BlockGapWidget","computeBlockGapDeco","pluginField","mLeft","mRight","mTop","mBottom","margins","defaultView","bounding","body","moveX","moveY","scrollBy","scrollRectIntoView","MaxNodeHeight","remaining","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","halfLine","defaultLineHeight","bounced","blockAtHeight","elementFromPoint","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","posFromDOM","spans","bidiSpans","InputState","lastKeyCode","lastKeyTime","lastSelectionOrigin","lastSelectionTime","scrollHandlers","registeredEvents","customHandlers","compositionEndedAt","mouseSelection","eventBelongsToEditor","ignoreDuringComposition","mustFlushObserver","forceFlush","runCustomHandlers","ensureHandlers","origin","defaultPrevented","scroll","MouseSelection","startEvent","up","metaKey","ctrlKey","addsSelectionRange","dragMove","dragMovesSelection$1","dragging","rangeCount","getRangeAt","isInPrimarySelection","buttons","bubbles","brokenClipboardAPI","doPaste","byLine","lastLinewiseCopy","rangeForClick","linePos","groupAt","keydown","macCtrl","mustCapture","setSelectionOrigin","touchdown","touchmove","mousedown","makeStyle","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","getClickType","startRange","basicMouseSelection","startMouseSelection","insideY","inside","findPositionSide","dragstart","dataTransfer","setData","effectAllowed","dropPos","getData","del","paste","clipboardData","capturePaste","forceClearComposition","linewise","copiedRange","clearData","selectionEnd","selectionStart","captureCopy","blur","beforeprint","compositionstart","compositionupdate","compositionend","observeOptions","characterData","characterDataOldValue","useCharData","DOMObserver","onScrollChanged","ignoreSelection","delayedFlush","queue","scrollTargets","intersection","intersecting","parentCheck","MutationObserver","mutations","mut","removedNodes","oldValue","flushSoon","onCharData","prevValue","onSelectionChange","onScroll","IntersectionObserver","listenForScroll","intersectionRatio","createEvent","observe","disconnect","takeRecords","clearSelection","records","newSel","typeOver","record","readMutation","rec","ignoreMutation","curView","DOMReader","points","findPointBefore","readNode","nextView","isBlockElement","fromView","overrideDOMText","readRange","findPointIn","DOMPoint","dispatchKey","cancelable","down","KeyboardEvent","dispatchEvent","plugins","editorAttrs","contentAttrs","bidiCache","updateState","measureScheduled","measureRequests","_dispatch","bounds","selPoints","selectionPoints","reader","selectionFromPoints","preferredPos","preferredSide","minLen","findDiff","iHead","iAnchor","isCollapsed","selectionCollapsed","applyDOMChange","runScrollHandlers","mountStyles","resizeDebounce","handleResize","redrawn","CachedOrder","updatePlugins","styleModules","prevSpecs","newPlugins","cancelAnimationFrame","measuring","warn","BadMeasure","scrollPosIntoView","spellcheck","contenteditable","role","request","requestAnimationFrame","takeField","inst","readMeasured","ensureTop","lineAtHeight","initial","byGroup","includeWrap","coords","editorRect","lineView","startCoords","resolvedGoal","startY","extra","goalCol","otherLine","MaxBidiLine","entry","dark","given","querySelectorAll","lastDir","currentPlatform","modifiers","keymaps","handleKeyEvents","runHandlers","bindings","buildKeymap","storedPrefix","bound","isPrefix","checkPrefix","command","scopeObj","k","alt","ctrl","normalizeKeyName","commands","ourObj","binding","maps","keyName","isChar","fallthrough","runFor","baseName","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelectionPlugin","hideNativeSelection","Piece","fromClass","rangePieces","cursors","readPos","drawSel","selectionLayer","cursorLayer","setBlinkRate","animationDuration","confChanged","geometryChanged","animationName","ltr","contentRect","getBase","lineStyle","leftSide","paddingLeft","rightSide","visualStart","visualEnd","wrappedLine","drawForLine","piece","selectionClass","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","docLine","spanFrom","spanTo","measureRange","prim","measureCursor","themeSpec","primaryCursorClass","cursorClass","Specials","Names","0","7","11","8203","8204","8205","8206","8207","8232","8233","65279","65532","_supportsTabSize","supportsTabSize","styles","MozTabSize","UnicodeRegexpSupport","unicode","specialCharConfig","render","specialChars","addSpecialChars","replaceTabs","specialCharPlugin","tabStyle","decorationCache","recompute","confChange","getDecorationsFor","TabWidget","SpecialCharWidget","ph","placeHolder","custom","tab","Placeholder","wrap","__test","labels","freeze","Record","unitKeys","unitValues","Variant","identity","dereference","projection","injection","tuple","slots","cases","CASE","path","getRandomValues","rnds8","rng","crypto","msCrypto","uuid","byteToHex","substr","keyMap","forEntries","object","getKeys","getKeyIndex","mapKeys","signalInvalidType","rootId","buf","rnds","TypeError","forType","includes","isTypeEqual","A","B","keyA","keyB","isTypeAssignable","unify","unifyComponents","unifyOptions","applyExpressions","S","expressions","applyCases","validateExpressions","validateMapping","M","T","fold","mapExpressions","instance","termType","delta","TI","SI","indices","imageValue","pullback","k1","k2","pullbackComponents","validateValue","forValue","leaf","_lezer","spec_identifier","__proto__","parseType","names","printSyntax","xsd","boolean","double","date","dateTime","base64Binary","rdf","decimal","dateTimeStamp","hexBinary","nil","langString","_blankNodeCounter","NamedNode","equals","BlankNode","DefaultGraph","Default","fromId","lastIndexOf","toId","Quad","subject","predicate","graph","namedNode","iri","blankNode","variable","languageOrDataType","defaultGraph","quad","SPO","POS","OSP","Store","quads","sizeCache","graphMap","ids","entities","blankNodeIndex","addQuads","subjects","predicates","objects","index0","key0","key1","key2","existed","index1","index2","delete","rotation","generateIndex1","value0","generateIndex2","value1","makeQuad","value2","entity0","entity1","entity2","name0","name1","name2","countInIndex1","graphIndex","newGraphIndex","args","getGraphIndex","o","addToIndex","addQuad","removeFromIndex","stream","removeQuad","removeMatches","graphId","getGraphId","graphs","getGraphIndices","generateIndex","getIds","countInIndex","loopBy2Keys","loopByKey1","loopByKey0","unique","suggestedName","nnClosingTagError","unexpectedCharError","quadClosingPeriodError","nnOpeningToken","nnOpeningTokenOffset","nnClosingPostfix","nnClosingPostfixOffset","bnOpeningPrefix","bnOpeningPrefixOffset","bnClosingToken","bnClosingTokenOffset","ltOpeningTokenOffset","ltReservedReplace","ltReservedReplaceFn","lgOpeningPrefixOffset","dtSplitPrefix","dtSplitPrefixOffset","rightBoundary","leftBoundary","namedNodeValue","substring","blankNodeValue","objEndIndex","literalValue","COUNT","for","SET","globalThis","StyleModule","processSelector","selectors","isAt","modules","StyleSet","adoptedSet","adoptedStyleSheets","CSSStyleSheet","sheet","styleTag","insertRule","getRules","iterators","arg","results","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","__esModule","enumerable","toStringTag","getElementById"],"mappings":"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","file":"index.min.js","sourcesContent":["import { basicSetup } from \"@codemirror/next/basic-setup\"\nimport {\n\tdefaultKeymap,\n\tindentMore,\n\tindentLess,\n} from \"@codemirror/next/commands\"\nimport { EditorView, keymap } from \"@codemirror/next/view\"\nimport { commentKeymap } from \"@codemirror/next/comment\"\n\nimport { Extension } from \"@codemirror/next/state\"\n\nimport { lineNumbers } from \"@codemirror/next/gutter\"\nimport { highlightSelectionMatches } from \"@codemirror/next/highlight-selection\"\nimport { defaultHighlightStyle } from \"@codemirror/next/highlight\"\n\nimport { schemaSyntax } from \"./syntax.js\"\n\nexport * from \"@codemirror/next/state\"\n\nexport { EditorView } from \"@codemirror/next/view\"\nexport { EditorState } from \"@codemirror/next/state\"\n\nexport const readOnlyConfig: Extension[] = [\n\tEditorView.editable.of(false),\n\tlineNumbers(),\n\tdefaultHighlightStyle,\n\thighlightSelectionMatches(),\n\tschemaSyntax,\n]\n\nexport const editableConfig: Extension[] = [\n\tbasicSetup,\n\tschemaSyntax,\n\tkeymap([\n\t\t...defaultKeymap,\n\t\t...commentKeymap,\n\t\t{\n\t\t\tkey: \"Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentMore,\n\t\t},\n\t\t{\n\t\t\tkey: \"Shift-Tab\",\n\t\t\tpreventDefault: true,\n\t\t\trun: indentLess,\n\t\t},\n\t]),\n]\n","import { APG } from \"@underlay/apg\"\n\nexport const errorUnit = APG.product({})\n","export * from \"./syntax.js\"\nexport * from \"./lint.js\"\nexport * from \"./config.js\"\nexport * from \"./error.js\"\n\nexport { openLintPanel } from \"@codemirror/next/lint\"\n","import { EditorState, Extension } from \"@codemirror/next/state\"\nimport { Diagnostic, linter } from \"@codemirror/next/lint\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { syntaxTree } from \"@codemirror/next/language\"\nimport { SyntaxNode, TreeCursor } from \"lezer-tree\"\n\nimport { APG, ns } from \"@underlay/apg\"\n\nimport {\n\tdefaultTypes,\n\tdefaultNamespaces,\n\tLintError,\n\tnamespacePattern,\n\tParseState,\n\tparseURI,\n\turiPattern,\n} from \"@underlay/tasl-lezer\"\nimport { errorUnit } from \"./error.js\"\n\nexport interface UpdateProps {\n\terrors: number\n\tstate: EditorState\n\tschema: APG.Schema\n\tnamespaces: Record<string, string>\n}\n\nexport function lintView({\n\tstate,\n}: EditorView): UpdateProps & { diagnostics: Diagnostic[] } {\n\tconst cursor = syntaxTree(state).cursor()\n\n\tconst parseState: ParseState = {\n\t\tslice: ({ from, to }) => state.doc.sliceString(from, to),\n\t\tnamespaces: {},\n\t\treferences: [],\n\t\ttypes: { ...defaultTypes },\n\t\tschema: {},\n\t}\n\n\tconst diagnostics: Diagnostic[] = []\n\n\tif (cursor.name === \"Schema\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tdiagnostics.push({\n\t\t\tfrom: cursor.from,\n\t\t\tto: cursor.to,\n\t\t\tmessage: \"Syntax error: invalid document\",\n\t\t\tseverity: \"error\",\n\t\t})\n\t\treturn { errors: 1, state, schema: {}, namespaces: {}, diagnostics }\n\t}\n\n\tdo {\n\t\tif (cursor.type.isError) {\n\t\t} else if (cursor.type.name === \"Namespace\") {\n\t\t\tlet namespace = \"\"\n\n\t\t\tconst term = cursor.node.getChild(\"Term\")\n\t\t\tif (term !== null) {\n\t\t\t\tnamespace = parseState.slice(term)\n\t\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\t\tconst { from, to } = term\n\t\t\t\t\tconst message = `Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\t\tconst { from, to } = term\n\t\t\t\t\tconst message = \"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst prefix = parseState.slice(identifier)\n\t\t\t\tif (prefix in parseState.namespaces) {\n\t\t\t\t\tconst { from, to } = identifier\n\t\t\t\t\tconst message = `Duplicate namespace: ${prefix}`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tparseState.namespaces[prefix] = namespace\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Type\") {\n\t\t\tconst identifier = cursor.node.getChild(\"TypeName\")\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst type =\n\t\t\t\texpression === null\n\t\t\t\t\t? errorUnit\n\t\t\t\t\t: getType(parseState, diagnostics, expression)\n\t\t\tif (identifier !== null) {\n\t\t\t\tconst name = parseState.slice(identifier)\n\t\t\t\tif (name in parseState.types) {\n\t\t\t\t\tconst { from, to } = identifier\n\t\t\t\t\tconst message = `Invalid type declaration: type ${name} has already been declared`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t} else {\n\t\t\t\t\tparseState.types[name] = type\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Class\") {\n\t\t\tconst term = cursor.node.getChild(\"Term\")\n\t\t\tif (term !== null) {\n\t\t\t\tconst uri = getURI(parseState, diagnostics, term)\n\t\t\t\tif (uri !== null) {\n\t\t\t\t\tif (uri in parseState.schema) {\n\t\t\t\t\t\tconst { from, to } = term\n\t\t\t\t\t\tconst message = `Invalid class declaration: class ${uri} has already been declared`\n\t\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\t\t\t\tparseState.schema[uri] =\n\t\t\t\t\t\t\texpression === null\n\t\t\t\t\t\t\t\t? errorUnit\n\t\t\t\t\t\t\t\t: getType(parseState, diagnostics, expression)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Edge\") {\n\t\t\tconst terms = cursor.node.getChildren(\"Term\")\n\t\t\tconst uris = terms.map((uri) => getURI(parseState, diagnostics, uri))\n\t\t\tif (terms.length === 3 && uris.length === 3) {\n\t\t\t\tconst [sourceNode, labelNode, targetNode] = terms\n\t\t\t\tconst [source, label, target] = uris\n\t\t\t\tif (label in parseState.schema) {\n\t\t\t\t\tconst { from, to } = labelNode\n\t\t\t\t\tconst message = `Invalid edge declaration: class ${label} has already been declared`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\n\t\t\t\tif (!(source in parseState.schema)) {\n\t\t\t\t\tconst { from, to } = sourceNode\n\t\t\t\t\tparseState.references.push({ from, to, key: source })\n\t\t\t\t}\n\n\t\t\t\tif (!(target in parseState.schema)) {\n\t\t\t\t\tconst { from, to } = targetNode\n\t\t\t\t\tparseState.references.push({ from, to, key: target })\n\t\t\t\t}\n\n\t\t\t\tconst components: Record<string, APG.Type> = {\n\t\t\t\t\t[ns.source]: APG.reference(source),\n\t\t\t\t\t[ns.target]: APG.reference(target),\n\t\t\t\t}\n\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\t\tif (expression !== null) {\n\t\t\t\t\tcomponents[ns.value] = getType(parseState, diagnostics, expression)\n\t\t\t\t}\n\n\t\t\t\tparseState.schema[label] = APG.product(components)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"List\") {\n\t\t\tconst term = cursor.node.getChild(\"Term\")\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst head =\n\t\t\t\texpression === null\n\t\t\t\t\t? errorUnit\n\t\t\t\t\t: getType(parseState, diagnostics, expression)\n\n\t\t\tif (term !== null) {\n\t\t\t\tconst uri = getURI(parseState, diagnostics, term)\n\t\t\t\tif (uri in parseState.schema) {\n\t\t\t\t\tconst { from, to } = term\n\t\t\t\t\tconst message = `Invalid list declaration: class ${uri} has already been declared`\n\t\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t\t}\n\n\t\t\t\tparseState.schema[uri] = APG.coproduct({\n\t\t\t\t\t[ns.none]: APG.product({}),\n\t\t\t\t\t[ns.some]: APG.coproduct({\n\t\t\t\t\t\t[ns.head]: head,\n\t\t\t\t\t\t[ns.tail]: APG.reference(uri),\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\treportChildErrors(diagnostics, cursor)\n\t} while (cursor.nextSibling())\n\n\tconst namespaces: [string, string][] = Object.entries(\n\t\tparseState.namespaces\n\t).filter(([_, base]) => base !== null) as [string, string][]\n\n\tfor (const { from, to, key } of parseState.references) {\n\t\tif (key in parseState.schema) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tconst message = `Reference error: class ${key} is not defined`\n\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t}\n\t}\n\n\tconst sorted = diagnostics.sort(({ from: a, to: c }, { from: b, to: d }) =>\n\t\ta < b ? -1 : b < a ? 1 : c < d ? -1 : d < c ? 1 : 0\n\t)\n\n\treturn {\n\t\terrors: sorted.length,\n\t\tstate: state,\n\t\tschema: parseState.schema,\n\t\tnamespaces: { ...defaultNamespaces, ...Object.fromEntries(namespaces) },\n\t\tdiagnostics: sorted,\n\t}\n}\n\nexport const makeSchemaLinter = (\n\tonChange?: (props: UpdateProps) => void\n): Extension =>\n\tlinter((view: EditorView) => {\n\t\tconst { diagnostics, ...props } = lintView(view)\n\t\tif (onChange !== undefined) {\n\t\t\tonChange(props)\n\t\t}\n\t\treturn diagnostics\n\t})\n\nfunction getURI(\n\tstate: ParseState,\n\tdiagnostics: Diagnostic[],\n\tnode: SyntaxNode\n): string {\n\ttry {\n\t\treturn parseURI(state, node)\n\t} catch (e) {\n\t\tif (e instanceof LintError) {\n\t\t\tconst { from, to, message, value } = e\n\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn value\n\t\t} else {\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\n// Variable | Optional | Reference | Unit | Iri | Literal | Product | Coproduct\nfunction getType(\n\tstate: ParseState,\n\tdiagnostics: Diagnostic[],\n\tnode: SyntaxNode\n): APG.Type {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.types) {\n\t\t\treturn state.types[value]\n\t\t} else {\n\t\t\tconst { from, to } = node\n\t\t\tconst message = `Type ${value} is not defined`\n\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\treturn errorUnit\n\t\t}\n\t} else if (node.name === \"Optional\") {\n\t\tconst expression = node.getChild(\"Expression\")\n\t\tconst type =\n\t\t\texpression === null ? errorUnit : getType(state, diagnostics, expression)\n\t\treturn APG.coproduct({ [ns.none]: APG.product({}), [ns.some]: type })\n\t} else if (node.name === \"Reference\") {\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn errorUnit\n\t\t}\n\n\t\tconst key = getURI(state, diagnostics, term)\n\t\tif (!(key in state.schema)) {\n\t\t\tconst { from, to } = term\n\t\t\tstate.references.push({ from, to, key })\n\t\t}\n\n\t\treturn APG.reference(key)\n\t} else if (node.name === \"Uri\") {\n\t\treturn APG.uri()\n\t} else if (node.name === \"Literal\") {\n\t\tconst term = node.getChild(\"Term\")\n\t\tif (term === null) {\n\t\t\treturn errorUnit\n\t\t}\n\t\tconst datatype = getURI(state, diagnostics, term)\n\t\treturn APG.literal(datatype)\n\t} else if (node.name === \"Product\") {\n\t\tconst components: Record<string, APG.Type> = {}\n\t\tfor (const component of node.getChildren(\"Component\")) {\n\t\t\tconst term = component.getChild(\"Term\")\n\t\t\tif (term === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, diagnostics, term)\n\t\t\tif (key in components) {\n\t\t\t\tconst { from, to } = term\n\t\t\t\tconst message = `Duplicate product component key`\n\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t}\n\n\t\t\tconst expression = component.getChild(\"Expression\")\n\t\t\tcomponents[key] =\n\t\t\t\texpression === null\n\t\t\t\t\t? errorUnit\n\t\t\t\t\t: getType(state, diagnostics, expression)\n\t\t}\n\n\t\treturn { type: \"product\", components }\n\t} else if (node.name === \"Coproduct\") {\n\t\tconst options: Record<string, APG.Type> = {}\n\t\tfor (const option of node.getChildren(\"Option\")) {\n\t\t\tconst term = option.getChild(\"Term\")\n\t\t\tif (term === null) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconst key = getURI(state, diagnostics, term)\n\t\t\tif (key in options) {\n\t\t\t\tconst { from, to } = term\n\t\t\t\tconst message = `Duplicate coproduct option key`\n\t\t\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t\t\t}\n\n\t\t\tconst expression = option.getChild(\"Expression\")\n\t\t\toptions[key] =\n\t\t\t\texpression === null\n\t\t\t\t\t? APG.product({})\n\t\t\t\t\t: getType(state, diagnostics, expression)\n\t\t}\n\n\t\treturn { type: \"coproduct\", options }\n\t} else {\n\t\tthrow new Error(\"Unexpected Expression node\")\n\t}\n}\n\nfunction reportChildErrors(diagnostics: Diagnostic[], cursor: TreeCursor) {\n\tif (cursor.type.isError) {\n\t\tconst { from, to } = cursor\n\t\tconst message = `Syntax error: unexpected or missing token (that's all we know)`\n\t\tdiagnostics.push({ from, to, message, severity: \"error\" })\n\t}\n\tif (cursor.firstChild()) {\n\t\tdo {\n\t\t\treportChildErrors(diagnostics, cursor)\n\t\t} while (cursor.nextSibling())\n\t\tcursor.parent()\n\t}\n}\n","import {\n\tcontinuedIndent,\n\tindentNodeProp,\n\tfoldNodeProp,\n\tLezerLanguage,\n} from \"@codemirror/next/language\"\n\nimport { styleTags, tags } from \"@codemirror/next/highlight\"\nimport { SyntaxNode } from \"lezer-tree\"\n\nimport { parser } from \"@underlay/tasl-lezer/grammar/index.js\"\n\nexport const schemaSyntax = LezerLanguage.define({\n\tparser: parser.configure({\n\t\tprops: [\n\t\t\tindentNodeProp.add({\n\t\t\t\tProduct: continuedIndent({ except: /^\\s*\\}/ }),\n\t\t\t\tCoproduct: continuedIndent({ except: /^\\s*\\]/ }),\n\t\t\t}),\n\t\t\tfoldNodeProp.add({\n\t\t\t\tProduct(subtree: SyntaxNode) {\n\t\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t\t},\n\t\t\t\tCoproduct(subtree: SyntaxNode) {\n\t\t\t\t\treturn { from: subtree.from + 1, to: subtree.to - 1 }\n\t\t\t\t},\n\t\t\t}),\n\t\t\tstyleTags({\n\t\t\t\tComment: tags.comment,\n\t\t\t\tPrefix: tags.namespace,\n\t\t\t\tTypeName: tags.typeName,\n\t\t\t\tVariable: tags.typeName,\n\t\t\t\tUri: tags.name,\n\t\t\t\t\"Class/Uri\": tags.className,\n\t\t\t\t\"Edge/Uri\": tags.className,\n\t\t\t\tProp: tags.propertyName,\n\t\t\t\tIri: tags.string,\n\t\t\t\tUnit: tags.literal,\n\t\t\t\tLiteral: tags.string,\n\t\t\t\t\"Literal/Uri\": tags.string,\n\t\t\t\t\"Reference/Uri\": tags.className,\n\t\t\t\tPointer: tags.operator,\n\t\t\t\tOptional: tags.operator,\n\t\t\t\t\"{ }\": tags.bracket,\n\t\t\t\t\"[ ]\": tags.bracket,\n\t\t\t\t\"->\": tags.separator,\n\t\t\t\t\"<-\": tags.separator,\n\t\t\t\t\";\": tags.separator,\n\t\t\t\t\"Namespace/Uri\": tags.namespace,\n\t\t\t\tnamespace: tags.keyword,\n\t\t\t\ttype: tags.keyword,\n\t\t\t\tclass: tags.keyword,\n\t\t\t\tedge: tags.keyword,\n\t\t\t\tlist: tags.keyword,\n\t\t\t}),\n\t\t],\n\t}),\n\tlanguageData: {\n\t\tcloseBrackets: { brackets: [\"[\", \"{\", \"<\"] },\n\t\tindentOnInput: /^\\s*[\\}\\]]$/,\n\t\tcommentTokens: { line: \"#\" },\n\t},\n})\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar lezerTree = require('lezer-tree');\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack {\n    /// @internal\n    constructor(\n    /// A group of values that the stack will share with all\n    /// split instances\n    ///@internal\n    cx, \n    /// Holds state, pos, value stack pos (15 bits array index, 15 bits\n    /// buffer index) triplets for all but the top state\n    /// @internal\n    stack, \n    /// The current parse state @internal\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    reducePos, \n    /// The input position up to which this stack has parsed.\n    pos, \n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    bufferBase, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    parent) {\n        this.cx = cx;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.parent = parent;\n    }\n    /// @internal\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /// @internal\n    static start(cx, state, pos = 0) {\n        return new Stack(cx, [], state, pos, pos, 0, [], 0, null);\n    }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /// @internal\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /// @internal\n    reduce(action) {\n        let depth = action >> 19 /* ReduceDepthShift */, type = action & 65535 /* ValueMask */;\n        let { parser } = this.cx;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* StayFlag */ ? 6 : 0);\n        let start = this.stack[base - 2];\n        let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n    }\n    // Shift a value into the buffer\n    /// @internal\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Err */) { // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /// @internal\n    shift(action, next, nextEnd) {\n        if (action & 131072 /* GotoFlag */) {\n            this.pushState(action & 65535 /* ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* StayFlag */) == 0) { // Regular shift\n            let start = this.pos, nextState = action, { parser } = this.cx;\n            if (nextEnd > this.pos || next <= parser.maxNode) {\n                this.pos = nextEnd;\n                if (!parser.stateFlag(nextState, 1 /* Skipped */))\n                    this.reducePos = nextEnd;\n            }\n            this.pushState(nextState, start);\n            if (next <= parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            if (next <= this.cx.parser.maxNode)\n                this.buffer.push(next, this.pos, nextEnd, 4);\n            this.pos = nextEnd;\n        }\n    }\n    // Apply an action\n    /// @internal\n    apply(action, next, nextEnd) {\n        if (action & 65536 /* ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextEnd);\n    }\n    // Add a prebuilt node into the buffer. This may be a reused node or\n    // the result of running a nested parser.\n    /// @internal\n    useNode(value, next) {\n        let index = this.cx.reused.length - 1;\n        if (index < 0 || this.cx.reused[index] != value) {\n            this.cx.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size < 0 means this is a reused value */);\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /// @internal\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.cx, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /// @internal\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.cx.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd);\n        this.storeNode(0 /* Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 200 /* Token */;\n    }\n    /// Check if the given term would be able to be shifted (optionally\n    /// after some reductions) on this stack. This can be useful for\n    /// external tokenizers that want to make sure they only provide a\n    /// given token when it applies.\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.cx.parser.stateSlot(sim.top, 4 /* DefaultReduce */) || this.cx.parser.hasAction(sim.top, term);\n            if ((action & 65536 /* ReduceFlag */) == 0)\n                return true;\n            if (action == 0)\n                return false;\n            sim.reduce(action);\n        }\n    }\n    /// Find the start position of the rule that is currently being parsed.\n    get ruleStart() {\n        for (let state = this.state, base = this.stack.length;;) {\n            let force = this.cx.parser.stateSlot(state, 5 /* ForcedReduce */);\n            if (!(force & 65536 /* ReduceFlag */))\n                return 0;\n            base -= 3 * (force >> 19 /* ReduceDepthShift */);\n            if ((force & 65535 /* ValueMask */) < this.cx.parser.minRepeatTerm)\n                return this.stack[base + 1];\n            state = this.stack[base];\n        }\n    }\n    /// Find the start position of an instance of any of the given term\n    /// types, or return `null` when none of them are found.\n    ///\n    /// **Note:** this is only reliable when there is at least some\n    /// state that unambiguously matches the given rule on the stack.\n    /// I.e. if you have a grammar like this, where the difference\n    /// between `a` and `b` is only apparent at the third token:\n    ///\n    ///     a { b | c }\n    ///     b { \"x\" \"y\" \"x\" }\n    ///     c { \"x\" \"y\" \"z\" }\n    ///\n    /// Then a parse state after `\"x\"` will not reliably tell you that\n    /// `b` is on the stack. You _can_ pass `[b, c]` to reliably check\n    /// for either of those two rules (assuming that `a` isn't part of\n    /// some rule that includes other things starting with `\"x\"`).\n    ///\n    /// When `before` is given, this keeps scanning up the stack until\n    /// it finds a match that starts before that position.\n    startOf(types, before) {\n        let state = this.state, frame = this.stack.length, { parser } = this.cx;\n        for (;;) {\n            let force = parser.stateSlot(state, 5 /* ForcedReduce */);\n            let depth = force >> 19 /* ReduceDepthShift */, term = force & 65535 /* ValueMask */;\n            if (types.indexOf(term) > -1) {\n                let base = frame - (3 * (force >> 19 /* ReduceDepthShift */)), pos = this.stack[base + 1];\n                if (before == null || before > pos)\n                    return pos;\n            }\n            if (frame == 0)\n                return null;\n            if (depth == 0) {\n                frame -= 3;\n                state = this.stack[frame];\n            }\n            else {\n                frame -= 3 * (depth - 1);\n                state = parser.getGoto(this.stack[frame - 3], term, true);\n            }\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /// @internal\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.cx.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* MaxNext */ || this.stack.length >= 120 /* DampenInsertStackDepth */) {\n            let best = nextStates.filter(s => s != this.state && this.cx.parser.hasAction(s, next));\n            if (this.stack.length < 120 /* DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* MaxNext */ && i < nextStates.length; i++)\n                    if (best.indexOf(nextStates[i]) < 0)\n                        best.push(nextStates[i]);\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* MaxNext */; i++) {\n            if (nextStates[i] == this.state)\n                continue;\n            let stack = this.split();\n            stack.storeNode(0 /* Err */, stack.pos, stack.pos, 4, true);\n            stack.pushState(nextStates[i], this.pos);\n            stack.score -= 200 /* Token */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /// @internal\n    forceReduce() {\n        let reduce = this.cx.parser.stateSlot(this.state, 5 /* ForcedReduce */);\n        if ((reduce & 65536 /* ReduceFlag */) == 0)\n            return false;\n        if (!this.cx.parser.validAction(this.state, reduce)) {\n            this.storeNode(0 /* Err */, this.reducePos, this.reducePos, 4, true);\n            this.score -= 100 /* Reduce */;\n        }\n        this.reduce(reduce);\n        return true;\n    }\n    /// @internal\n    forceAll() {\n        while (!this.cx.parser.stateFlag(this.state, 2 /* Accepting */) && this.forceReduce()) { }\n        return this;\n    }\n    /// Check whether this state has no further actions (assumed to be a direct descendant of the\n    /// top state, since any other states must be able to continue\n    /// somehow). @internal\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.cx;\n        return parser.data[parser.stateSlot(this.state, 1 /* Actions */)] == 65535 /* End */ &&\n            !parser.stateSlot(this.state, 4 /* DefaultReduce */);\n    }\n    /// Restart the stack (put it back in its start state). Only safe\n    /// when this.stack.length == 3 (state is directly below the top\n    /// state). @internal\n    restart() {\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /// @internal\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /// Get the parser used by this stack.\n    get parser() { return this.cx.parser; }\n    /// Test whether a given dialect (by numeric ID, as exported from\n    /// the terms file) is enabled.\n    dialectEnabled(dialectID) { return this.cx.parser.dialect.flags[dialectID]; }\n}\nvar Recover;\n(function (Recover) {\n    Recover[Recover[\"Token\"] = 200] = \"Token\";\n    Recover[Recover[\"Reduce\"] = 100] = \"Reduce\";\n    Recover[Recover[\"MaxNext\"] = 4] = \"MaxNext\";\n    Recover[Recover[\"MaxInsertStackDepth\"] = 300] = \"MaxInsertStackDepth\";\n    Recover[Recover[\"DampenInsertStackDepth\"] = 120] = \"DampenInsertStackDepth\";\n})(Recover || (Recover = {}));\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(stack) {\n        this.stack = stack;\n        this.top = stack.state;\n        this.rest = stack.stack;\n        this.offset = this.rest.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* ValueMask */, depth = action >> 19 /* ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.rest == this.stack.stack)\n                this.rest = this.rest.slice();\n            this.rest.push(this.top, 0, 0);\n            this.offset += 3;\n        }\n        else {\n            this.offset -= (depth - 1) * 3;\n        }\n        let goto = this.stack.cx.parser.getGoto(this.rest[this.offset - 3], term, true);\n        this.top = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack) {\n        return new StackBufferCursor(stack, stack.bufferBase + stack.buffer.length, stack.buffer.length);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n/// Tokenizers write the tokens they read into instances of this class.\nclass Token {\n    constructor() {\n        /// The start of the token. This is set by the parser, and should not\n        /// be mutated by the tokenizer.\n        this.start = -1;\n        /// This starts at -1, and should be updated to a term id when a\n        /// matching token is found.\n        this.value = -1;\n        /// When setting `.value`, you should also set `.end` to the end\n        /// position of the token. (You'll usually want to use the `accept`\n        /// method.)\n        this.end = -1;\n    }\n    /// Accept a token, setting `value` and `end` to the given values.\n    accept(value, end) {\n        this.value = value;\n        this.end = end;\n    }\n}\n/// @internal\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, token, stack) { readToken(this.data, input, token, stack, this.id); }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// Exports that are used for `@external tokens` in the grammar should\n/// export an instance of this class.\nclass ExternalTokenizer {\n    /// Create a tokenizer. The first argument is the function that,\n    /// given an input stream and a token object,\n    /// [fills](#lezer.Token.accept) the token object if it recognizes a\n    /// token. `token.start` should be used as the start position to\n    /// scan from.\n    constructor(\n    /// @internal\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data, input, token, stack, group) {\n    let state = 0, groupMask = 1 << group, dialect = stack.cx.parser.dialect;\n    scan: for (let pos = token.start;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (token.value == -1 || token.value == term || stack.cx.parser.overrides(term, token.value))) {\n                    token.accept(term, pos);\n                    break;\n                }\n            }\n        let next = input.get(pos++);\n        // Do a binary search on the state's edges\n        for (let low = 0, high = data[state + 2]; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1];\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                continue scan;\n            }\n        }\n        break;\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* BigValCode */) {\n                value = 65535 /* BigVal */;\n                break;\n            }\n            if (next >= 92 /* Gap2 */)\n                next--;\n            if (next >= 34 /* Gap1 */)\n                next--;\n            let digit = next - 32 /* Start */;\n            if (digit >= 46 /* Base */) {\n                digit -= 46 /* Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\n// FIXME find some way to reduce recovery work done when the input\n// doesn't match the grammar at all.\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to <= pos : cursor.from >= pos) && !cursor.type.isError)\n                    return side < 0 ? cursor.to - 1 : cursor.from + 1;\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        this.fragments = fragments;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            else if (start == pos && start + next.length <= this.safeTo) {\n                return start == pos && start >= this.safeFrom ? next : null;\n            }\n            if (next instanceof lezerTree.TreeBuffer) {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n            else {\n                this.index[last]++;\n                if (start + next.length >= pos) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n        }\n    }\n}\nclass CachedToken extends Token {\n    constructor() {\n        super(...arguments);\n        this.extended = -1;\n        this.mask = 0;\n    }\n    clear(start) {\n        this.start = start;\n        this.value = this.extended = -1;\n    }\n}\nconst dummyToken = new Token;\nclass TokenCache {\n    constructor(parser) {\n        this.tokens = [];\n        this.mainToken = dummyToken;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack, input) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.cx, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* TokenizerMask */);\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask) {\n                this.updateCachedToken(token, tokenizer, stack, input);\n                token.mask = mask;\n            }\n            if (token.value != 0 /* Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (!main) {\n            main = dummyToken;\n            main.start = stack.pos;\n            if (stack.pos == input.length)\n                main.accept(stack.cx.parser.eofTerm, stack.pos);\n            else\n                main.accept(0 /* Err */, stack.pos + 1);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    updateCachedToken(token, tokenizer, stack, input) {\n        token.clear(stack.pos);\n        tokenizer.token(input, token, stack);\n        if (token.value > -1) {\n            let { parser } = stack.cx;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](input.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.cx.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else if (stack.pos == input.length) {\n            token.accept(stack.cx.parser.eofTerm, stack.pos);\n        }\n        else {\n            token.accept(0 /* Err */, stack.pos + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.cx, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */);; i += 3) {\n                if (data[i] == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Other */)\n                            index = this.putAction(pair(data, i + 1), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nvar Rec;\n(function (Rec) {\n    Rec[Rec[\"Distance\"] = 5] = \"Distance\";\n    Rec[Rec[\"MaxRemainingPerStep\"] = 3] = \"MaxRemainingPerStep\";\n    Rec[Rec[\"MinBufferLengthPrune\"] = 200] = \"MinBufferLengthPrune\";\n    Rec[Rec[\"ForceReduceLimit\"] = 10] = \"ForceReduceLimit\";\n})(Rec || (Rec = {}));\n/// A parse context can be used for step-by-step parsing. After\n/// creating it, you repeatedly call `.advance()` until it returns a\n/// tree to indicate it has reached the end of the parse.\nclass Parse {\n    constructor(parser, input, startPos, context) {\n        this.parser = parser;\n        this.input = input;\n        this.startPos = startPos;\n        this.context = context;\n        // The position to which the parse has advanced.\n        this.pos = 0;\n        this.recovering = 0;\n        this.nextStackID = 0x2654;\n        this.nested = null;\n        this.nestEnd = 0;\n        this.nestWrap = null;\n        this.reused = [];\n        this.tokens = new TokenCache(parser);\n        this.topTerm = parser.top[1];\n        this.stacks = [Stack.start(this, parser.top[0], this.startPos)];\n        let fragments = context === null || context === void 0 ? void 0 : context.fragments;\n        this.fragments = fragments && fragments.length ? new FragmentCursor(fragments) : null;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        if (this.nested) {\n            let result = this.nested.advance();\n            this.pos = this.nested.pos;\n            if (result) {\n                this.finishNested(this.stacks[0], result);\n                this.nested = null;\n            }\n            return null;\n        }\n        let stacks = this.stacks, pos = this.pos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        let maybeNest;\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], nest;\n            for (;;) {\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (nest = this.checkNest(stack)) {\n                    if (!maybeNest || maybeNest.stack.score < stack.score)\n                        maybeNest = nest;\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.mainToken;\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (maybeNest) {\n            this.startNested(maybeNest);\n            return null;\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished)\n                return this.stackToTree(finished);\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + this.parser.getName(this.tokens.mainToken.value));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished)\n                return this.stackToTree(finished.forceAll());\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 200 /* MinBufferLengthPrune */ && other.buffer.length > 200 /* MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n        }\n        this.pos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.pos)\n                this.pos = newStacks[i].pos;\n        return null;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { input, parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.fragments) {\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof lezerTree.Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof lezerTree.Tree)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* ValueMask */)})`);\n            return true;\n        }\n        let actions = this.tokens.getActions(stack, input);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            localStack.apply(action, term, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            let nest = this.checkNest(stack);\n            if (nest)\n                return nest;\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        let maybeNest;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done) {\n                    if (done !== true)\n                        maybeNest = done;\n                    continue;\n                }\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done) {\n                    if (done !== true)\n                        maybeNest = done;\n                    break;\n                }\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.input.length > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        if (finished)\n            return finished;\n        if (maybeNest)\n            for (let s of this.stacks)\n                if (s.score > maybeNest.stack.score) {\n                    maybeNest = undefined;\n                    break;\n                }\n        if (maybeNest)\n            this.startNested(maybeNest);\n        return null;\n    }\n    forceFinish() {\n        let stack = this.stacks[0].split();\n        if (this.nested)\n            this.finishNested(stack, this.nested.forceFinish());\n        return this.stackToTree(stack.forceAll());\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack, pos = stack.pos) {\n        return lezerTree.Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.startPos,\n            length: pos - this.startPos,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    checkNest(stack) {\n        let info = this.parser.findNested(stack.state);\n        if (!info)\n            return null;\n        let spec = info.value;\n        if (typeof spec == \"function\")\n            spec = spec(this.input, stack);\n        return spec ? { stack, info, spec } : null;\n    }\n    startNested(nest) {\n        let { stack, info, spec } = nest;\n        this.stacks = [stack];\n        this.nestEnd = this.scanForNestEnd(stack, info.end, spec.filterEnd);\n        this.nestWrap = typeof spec.wrapType == \"number\" ? this.parser.nodeSet.types[spec.wrapType] : spec.wrapType || null;\n        if (spec.startParse) {\n            this.nested = spec.startParse(this.input.clip(this.nestEnd), stack.pos, this.context);\n        }\n        else {\n            this.finishNested(stack);\n        }\n    }\n    scanForNestEnd(stack, endToken, filter) {\n        for (let pos = stack.pos; pos < this.input.length; pos++) {\n            dummyToken.start = pos;\n            dummyToken.value = -1;\n            endToken.token(this.input, dummyToken, stack);\n            if (dummyToken.value > -1 && (!filter || filter(this.input.read(pos, dummyToken.end))))\n                return pos;\n        }\n        return this.input.length;\n    }\n    finishNested(stack, tree) {\n        if (this.nestWrap)\n            tree = new lezerTree.Tree(this.nestWrap, tree ? [tree] : [], tree ? [0] : [], this.nestEnd - stack.pos);\n        else if (!tree)\n            tree = new lezerTree.Tree(lezerTree.NodeType.none, [], [], this.nestEnd - stack.pos);\n        let info = this.parser.findNested(stack.state);\n        stack.useNode(tree, this.parser.getGoto(stack.state, info.placeholder, true));\n        if (verbose)\n            console.log(this.stackID(stack) + ` (via unnest)`);\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\n/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nclass Parser {\n    /// @internal\n    constructor(spec) {\n        /// @internal\n        this.bufferLength = lezerTree.DefaultBufferLength;\n        /// @internal\n        this.strict = false;\n        this.nextStateCache = [];\n        this.cachedDialect = null;\n        if (spec.version != 13 /* Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${13 /* Version */})`);\n        let tokenArray = decodeArray(spec.tokenData);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.specialized = new Uint16Array(spec.specialized ? spec.specialized.length : 0);\n        this.specializers = [];\n        if (spec.specialized)\n            for (let i = 0; i < spec.specialized.length; i++) {\n                this.specialized[i] = spec.specialized[i].term;\n                this.specializers[i] = spec.specialized[i].get;\n            }\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        this.nodeSet = new lezerTree.NodeSet(nodeNames.map((name, i) => lezerTree.NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.nested = (spec.nested || []).map(([name, value, endToken, placeholder]) => {\n            return { name, value, end: new TokenGroup(decodeArray(endToken), 0), placeholder };\n        });\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        for (let i = 0, l = this.states.length / 6 /* Size */; i < l; i++)\n            this.nextStateCache[i] = null;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    /// Parse a given string or stream.\n    parse(input, startPos = 0, context = {}) {\n        if (typeof input == \"string\")\n            input = lezerTree.stringInput(input);\n        let cx = new Parse(this, input, startPos, context);\n        for (;;) {\n            let done = cx.advance();\n            if (done)\n                return done;\n        }\n    }\n    /// Start an incremental parse.\n    startParse(input, startPos = 0, context = {}) {\n        if (typeof input == \"string\")\n            input = lezerTree.stringInput(input);\n        return new Parse(this, input, startPos, context);\n    }\n    /// Get a goto table entry @internal\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /// Check if this state has an action for a given terminal @internal\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /// @internal\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* Size */) + slot];\n    }\n    /// @internal\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* Flags */) & flag) > 0;\n    }\n    /// @internal\n    findNested(state) {\n        let flags = this.stateSlot(state, 0 /* Flags */);\n        return flags & 4 /* StartNest */ ? this.nested[flags >> 10 /* NestShift */] : null;\n    }\n    /// @internal\n    validAction(state, action) {\n        if (action == this.stateSlot(state, 4 /* DefaultReduce */))\n            return true;\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    return false;\n            }\n            if (action == pair(this.data, i + 1))\n                return true;\n        }\n    }\n    /// Get the states that can follow this one through shift actions or\n    /// goto jumps. @internal\n    nextStates(state) {\n        let cached = this.nextStateCache[state];\n        if (cached)\n            return cached;\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* ReduceFlag */ >> 16)) == 0 && result.indexOf(this.data[i + 1]) < 0)\n                result.push(this.data[i + 1]);\n        }\n        let table = this.goto, max = table[0];\n        for (let term = 0; term < max; term++) {\n            for (let pos = table[term + 1];;) {\n                let groupTag = table[pos++], target = table[pos++];\n                for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                    if (table[pos] == state && result.indexOf(target) < 0)\n                        result.push(target);\n                if (groupTag & 1)\n                    break;\n            }\n        }\n        return this.nextStateCache[state] = result;\n    }\n    /// @internal\n    overrides(token, prev) {\n        let iPrev = findOffset(this.data, this.tokenPrecTable, prev);\n        return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev;\n    }\n    /// Configure the parser. Returns a new parser instance that has the\n    /// given settings modified. Settings not provided in `config` are\n    /// kept from the original parser.\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(Parser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.nested)\n            copy.nested = this.nested.map(obj => {\n                if (!Object.prototype.hasOwnProperty.call(config.nested, obj.name))\n                    return obj;\n                return { name: obj.name, value: config.nested[obj.name], end: obj.end, placeholder: obj.placeholder };\n            });\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /// Returns the name associated with a given term. This will only\n    /// work for all terms when the parser was generated with the\n    /// `--names` option. By default, only the names of tagged terms are\n    /// stored.\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /// The eof term id is always allocated directly after the node\n    /// types. @internal\n    get eofTerm() { return this.maxNode + 1; }\n    /// Tells you whether this grammar has any nested grammars.\n    get hasNested() { return this.nested.length > 0; }\n    /// @internal\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /// @internal\n    parseDialect(dialect) {\n        if (this.cachedDialect && this.cachedDialect.source == dialect)\n            return this.cachedDialect;\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return this.cachedDialect = new Dialect(dialect, flags, disabled);\n    }\n    /// (used by the output of the parser generator) @internal\n    static deserialize(spec) {\n        return new Parser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        if (stack.pos == stack.cx.input.length &&\n            stack.cx.parser.stateFlag(stack.state, 2 /* Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\n\nexports.NodeProp = lezerTree.NodeProp;\nexports.NodeSet = lezerTree.NodeSet;\nexports.NodeType = lezerTree.NodeType;\nexports.Tree = lezerTree.Tree;\nexports.TreeCursor = lezerTree.TreeCursor;\nexports.ExternalTokenizer = ExternalTokenizer;\nexports.Parser = Parser;\nexports.Stack = Stack;\nexports.Token = Token;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/// The default maximum length of a `TreeBuffer` node.\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nconst CachedNode = new WeakMap();\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type. You can optionally pass a\n    /// `deserialize` function.\n    constructor({ deserialize } = {}) {\n        this.id = nextPropID++;\n        this.deserialize = deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// Create a string-valued node prop whose deserialize function is\n    /// the identity function.\n    static string() { return new NodeProp({ deserialize: str => str }); }\n    /// Create a number-valued node prop whose deserialize function is\n    /// just `Number`.\n    static number() { return new NodeProp({ deserialize: Number }); }\n    /// Creates a boolean-valued node prop whose deserialize function\n    /// returns true for any input.\n    static flag() { return new NodeProp({ deserialize: () => true }); }\n    /// Store a value for this prop in the given object. This can be\n    /// useful when building up a prop object to pass to the\n    /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n    /// argument.\n    set(propObj, value) {\n        propObj[this.id] = value;\n        return propObj;\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#tree.NodeSet.extend) or\n    /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n    /// values for each node type in the set. Takes a [match\n    /// object](#tree.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* Top */ : 0) | (spec.skipped ? 2 /* Skipped */ : 0) |\n            (spec.error ? 4 /* Error */ : 0) | (spec.name == null ? 8 /* Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src)\n                    src[0].set(props, src[1]);\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#tree.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#tree.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.nodeSet) a node set, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method should be created with\n    /// [`NodeProp.add`](#tree.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    add[0].set(newProps, add[1]);\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. You usually want to go through\n    /// [`Tree.build`](#tree.Tree^build) instead.\n    constructor(type, \n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n    }\n    /// @internal\n    toString() {\n        let children = this.children.map(c => c.toString()).join();\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n    /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n    /// to the given position and side.\n    cursor(pos, side = 0) {\n        let scope = (pos != null && CachedNode.get(this)) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        if (pos != null) {\n            cursor.moveTo(pos, side);\n            CachedNode.set(this, cursor._tree);\n        }\n        return cursor;\n    }\n    /// Get a [tree cursor](#tree.TreeCursor) that, unlike regular\n    /// cursors, doesn't skip [anonymous](#tree.NodeType.isAnonymous)\n    /// nodes.\n    fullCursor() {\n        return new TreeCursor(this.topNode, true);\n    }\n    /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    resolve(pos, side = 0) {\n        return this.cursor(pos, side).node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, the given node\n    /// will not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        for (let c = this.cursor();;) {\n            let mustLeave = false;\n            if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to) !== false)) {\n                if (c.firstChild())\n                    continue;\n                if (!c.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(c.type, c.from, c.to);\n                mustLeave = c.type.isAnonymous;\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Balance the direct children of this tree.\n    balance(maxBufferLength = DefaultBufferLength) {\n        return this.children.length <= BalanceBranchFactor ? this\n            : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0, maxBufferLength, this.length);\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nclass TreeBuffer {\n    /// Create a tree buffer @internal\n    constructor(\n    /// @internal\n    buffer, \n    // The total length of the group of nodes in the buffer.\n    length, \n    /// @internal\n    set, type = NodeType.none) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n        this.type = type;\n    }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, after) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (after != -100000000 /* None */) {\n                let start = buffer[i + 1], end = buffer[i + 2];\n                if (dir > 0) {\n                    if (end > after)\n                        pick = i;\n                    if (end > after)\n                        break;\n                }\n                else {\n                    if (start < after)\n                        pick = i;\n                    if (end >= after)\n                        break;\n                }\n            }\n            else {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n}\nclass TreeNode {\n    constructor(node, from, index, _parent) {\n        this.node = node;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this.node.type; }\n    get name() { return this.node.type.name; }\n    get to() { return this.from + this.node.length; }\n    nextChild(i, dir, after, full = false) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (after != -100000000 /* None */ && (dir < 0 ? start >= after : start + next.length <= after))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    let index = next.findChild(0, next.buffer.length, dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - start);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if (full || (!next.type.isAnonymous || hasChild(next))) {\n                    let inner = new TreeNode(next, start, i, parent);\n                    return full || !inner.type.isAnonymous ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after);\n                }\n            }\n            if (full || !parent.type.isAnonymous)\n                return null;\n            i = parent.index + dir;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, -100000000 /* None */); }\n    get lastChild() { return this.nextChild(this.node.children.length - 1, -1, -100000000 /* None */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos); }\n    childBefore(pos) { return this.nextChild(this.node.children.length - 1, -1, pos); }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null;\n    }\n    get prevSibling() {\n        return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null;\n    }\n    get cursor() { return new TreeCursor(this); }\n    resolve(pos, side = 0) {\n        return this.cursor.moveTo(pos, side).node;\n    }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this.node.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor, result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    child(dir, after) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - this.context.start);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, -100000000 /* None */); }\n    get lastChild() { return this.child(-1, -100000000 /* None */); }\n    childAfter(pos) { return this.child(1, pos); }\n    childBefore(pos) { return this.child(-1, pos); }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, -100000000 /* None */));\n    }\n    get cursor() { return new TreeCursor(this); }\n    resolve(pos, side = 0) {\n        return this.cursor.moveTo(pos, side).node;\n    }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// @internal\n    constructor(node, full = false) {\n        this.full = full;\n        this.buffer = null;\n        this.stack = [];\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enter(dir, after) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, after, this.full));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, after == -100000000 /* None */ ? -100000000 /* None */ : after - this.buffer.start);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enter(1, -100000000 /* None */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enter(-1, -100000000 /* None */); }\n    /// Move the cursor to the first child that starts at or after `pos`.\n    childAfter(pos) { return this.enter(1, pos); }\n    /// Move to the last child that ends at or before `pos`.\n    childBefore(pos) { return this.enter(-1, pos); }\n    /// Move the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode(this.full ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = this.full ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree._parent.nextChild(this._tree.index + dir, dir, -100000000 /* None */, this.full));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, -100000000 /* None */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, -100000000 /* None */, this.full)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n                let child = parent.node.children[i];\n                if (this.full || !child.type.isAnonymous || child instanceof TreeBuffer || hasChild(child))\n                    return false;\n            }\n        }\n        return true;\n    }\n    move(dir) {\n        if (this.enter(dir, -100000000 /* None */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty, its next sibling or the next sibling of\n    /// the first parent node that has one.\n    next() { return this.move(1); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by ist last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev() { return this.move(-1); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        for (;;) {\n            if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos))\n                break;\n            if (this.from == this.to ||\n                (side < 1 ? this.from >= pos : this.from > pos) ||\n                (side > -1 ? this.to <= pos : this.to < pos)) {\n                this.parent();\n                break;\n            }\n        }\n        return this;\n    }\n    /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#tree.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#tree.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree.node;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => !ch.type.isAnonymous || ch instanceof TreeBuffer || hasChild(ch));\n}\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\nconst BalanceBranchFactor = 8;\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, topID = 0, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        while (id == inRepeat) {\n            cursor.next();\n            ({ id, start, end, size } = cursor);\n        }\n        let startPos = start - parentStart;\n        if (size < 0) { // Reused node\n            children.push(reused[id]);\n            positions.push(startPos);\n            cursor.next();\n            return;\n        }\n        let type = types[id], node, buffer;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index, inRepeat);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet, inRepeat < 0 ? NodeType.none : types[inRepeat]);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            while (cursor.pos > endPos)\n                takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n                node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start);\n            else\n                node = new Tree(type, localChildren, localPositions, end - start);\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let nodeSize = fork.size, startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0)\n                    break scan;\n                if (fork.id >= minRepeatType)\n                    localSkipped += 4;\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index, inRepeat) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (id == inRepeat)\n            return index;\n        let startIndex = index;\n        if (size > 4) {\n            let endPos = cursor.pos - (size - 4);\n            while (cursor.pos > endPos)\n                index = copyToBuffer(bufferStart, buffer, index, inRepeat);\n        }\n        if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[topID], children.reverse(), positions.reverse(), length);\n}\nfunction balanceRange(outerType, innerType, children, positions, from, to, start, maxBufferLength, length) {\n    let localChildren = [], localPositions = [];\n    if (length <= maxBufferLength) {\n        for (let i = from; i < to; i++) {\n            localChildren.push(children[i]);\n            localPositions.push(positions[i] - start);\n        }\n    }\n    else {\n        let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor));\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i];\n            i++;\n            for (; i < to; i++) {\n                let nextEnd = positions[i] + children[i].length;\n                if (nextEnd - groupStart > maxChild)\n                    break;\n            }\n            if (i == groupFrom + 1) {\n                let only = children[groupFrom];\n                if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n                    for (let j = 0; j < only.children.length; j++) {\n                        localChildren.push(only.children[j]);\n                        localPositions.push(only.positions[j] + groupStart - start);\n                    }\n                    continue;\n                }\n                localChildren.push(only);\n            }\n            else if (i == groupFrom + 1) {\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart, maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart);\n                if (innerType != NodeType.none && !containsType(inner.children, innerType))\n                    inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length);\n                localChildren.push(inner);\n            }\n            localPositions.push(groupStart - start);\n        }\n    }\n    return new Tree(outerType, localChildren, localPositions, length);\n}\nfunction containsType(nodes, type) {\n    for (let elt of nodes)\n        if (elt.type == type)\n            return true;\n    return false;\n}\n/// Tree fragments are used during [incremental\n/// parsing](#lezer.ParseOptions.fragments) to track parts of old\n/// trees that can be reused in a new parse. An array of fragments is\n/// used to track regions of an old tree whose nodes might be reused\n/// in new parses. Use the static\n/// [`applyChanges`](#tree.TreeFragment^applyChanges) method to update\n/// fragments for document changes.\nclass TreeFragment {\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, open) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = open;\n    }\n    get openStart() { return (this.open & 1 /* Start */) > 0; }\n    get openEnd() { return (this.open & 2 /* End */) > 0; }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        let cI = 0, pos = 0, off = 0;\n        for (;;) {\n            let nextC = cI < changes.length ? changes[cI++] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null :\n                            new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, (cI > 0 ? 1 /* Start */ : 0) | (nextC ? 2 /* End */ : 0));\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the token at its\n    /// end is not included in [`safeTo`](#tree.TreeFragment.safeTo).\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, partial ? 2 /* End */ : 0)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n}\n// Creates an `Input` that is backed by a single, flat string.\nfunction stringInput(input) { return new StringInput(input); }\nclass StringInput {\n    constructor(string, length = string.length) {\n        this.string = string;\n        this.length = length;\n    }\n    get(pos) {\n        return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos);\n    }\n    lineAfter(pos) {\n        if (pos < 0)\n            return \"\";\n        let end = this.string.indexOf(\"\\n\", pos);\n        return this.string.slice(pos, end < 0 ? this.length : Math.min(end, this.length));\n    }\n    read(from, to) { return this.string.slice(from, Math.min(this.length, to)); }\n    clip(at) { return new StringInput(this.string, at); }\n}\n\nexports.DefaultBufferLength = DefaultBufferLength;\nexports.NodeProp = NodeProp;\nexports.NodeSet = NodeSet;\nexports.NodeType = NodeType;\nexports.Tree = Tree;\nexports.TreeBuffer = TreeBuffer;\nexports.TreeCursor = TreeCursor;\nexports.TreeFragment = TreeFragment;\nexports.stringInput = stringInput;\n//# sourceMappingURL=tree.cjs.map\n","import { Annotation, Facet, combineConfig, StateField, Transaction, StateEffect } from '@codemirror/next/state';\n\nconst fromHistory = Annotation.define();\n/// Transaction annotation that will prevent that annotation from\n/// being combined with other annotations in the undo history. Given\n/// `\"before\"`, it'll prevent merging with previous transactions. With\n/// `\"after\"`, subsequent transactions won't be combined with this\n/// one. With `\"full\"`, the transaction is isolated on both sides.\nconst isolateHistory = Annotation.define();\n/// This facet provides a way to register functions that, given a\n/// transaction, provide a set of effects that the history should\n/// store when inverting the transaction. This can be used to\n/// integrate some kinds of effects in the history, so that they can\n/// be undone (and redone again).\nconst invertedEffects = Facet.define();\nconst historyConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500\n        }, { minDepth: Math.max, newGroupDelay: Math.min });\n    }\n});\nconst historyField = StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr), from = fromHist.side;\n            let other = from == 0 /* Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* Done */ ? fromHist.rest : other, from == 0 /* Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return tr.changes.length ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    }\n});\n/// Create a history extension with the given configuration.\nfunction history(config = {}) {\n    // FIXME register beforeinput handler\n    return [\n        historyField,\n        historyConfig.of(config)\n    ];\n}\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        let historyState = state.field(historyField, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/// Undo a single group of history events. Returns false if no group\n/// was available.\nconst undo = cmd(0 /* Done */, false);\n/// Redo a group of history events. Returns false if no group was\n/// available.\nconst redo = cmd(1 /* Undone */, false);\n/// Undo a selection change.\nconst undoSelection = cmd(0 /* Done */, true);\n/// Redo a selection change.\nconst redoSelection = cmd(1 /* Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/// The amount of undoable change events available in a given state.\nconst undoDepth = depth(0 /* Done */);\n/// The amount of redoable change events available in a given state.\nconst redoDepth = depth(1 /* Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, newGroupDelay, maxLen) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes &&\n            time - this.prevTime < newGroupDelay &&\n            !lastEvent.selectionsAfter.length &&\n            lastEvent.changes.length && event.changes &&\n            isAdjacent(lastEvent.changes, event.changes)) {\n            done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, maxLen, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == \"keyboardselection\" && this.prevUserEvent == userEvent &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) })\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false\n            });\n        }\n    }\n}\nHistoryState.empty = new HistoryState(none, none);\n/// Default key bindings for the undo history.\n///\n/// - Mod-z: [`undo`](#history.undo).\n/// - Mod-y (Mod-Shift-z on macOS): [`redo`](#history.redo).\n/// - Mod-u: [`undoSelection`](#history.undoSelection).\n/// - Alt-u (Mod-Shift-u on macOS): [`redoSelection`](#history.redoSelection).\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nexport { history, historyKeymap, invertedEffects, isolateHistory, redo, redoDepth, redoSelection, undo, undoDepth, undoSelection };\n","import { StateEffect, StateField, Facet, combineConfig } from '@codemirror/next/state';\nimport { Decoration, EditorView, WidgetType, themeClass } from '@codemirror/next/view';\nimport { foldable } from '@codemirror/next/language';\nimport { gutter, GutterMarker } from '@codemirror/next/gutter';\n\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\nconst foldEffect = StateEffect.define({ map: mapRange });\nconst unfoldEffect = StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.visualLineAt(head));\n    }\n    return lines;\n}\nconst foldState = StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.primary;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: [EditorView.decorations]\n});\nfunction foldInside(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = ({ from, to });\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state) {\n    return state.field(foldState, false) ? undefined : { append: codeFolding() };\n}\n/// Fold the lines that are selected, if possible.\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: foldEffect.of(range),\n                reconfigure: maybeEnable(view.state) });\n            return true;\n        }\n    }\n    return false;\n};\n/// Unfold folded ranges on selected lines.\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = foldInside(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\n/// Fold all top-level foldable ranges.\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.visualLineAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.visualLineAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects, reconfigure: maybeEnable(view.state) });\n    return !!effects.length;\n};\n/// Unfold all folded code.\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n/// Default fold-related key bindings.\n///\n///  - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](#fold.foldCode).\n///  - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](#fold.unfoldCode).\n///  - Ctrl-Alt-[: [`foldAll`](#fold.foldAll).\n///  - Ctrl-Alt-]: [`unfoldAll`](#fold.unfoldAll).\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/// Create an extension that configures code folding.\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = Decoration.replace({ widget: new class extends WidgetType {\n        ignoreEvents() { return false; }\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM();\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = themeClass(\"foldPlaceholder\");\n            element.onclick = event => {\n                let line = view.visualLineAt(view.posAtDOM(event.target));\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\"\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/// Create an extension that registers a fold gutter, which shows a\n/// fold status indicator before lines which can be clicked to fold or\n/// unfold the line.\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    return [\n        gutter({\n            style: \"foldGutter\",\n            lineMarker(view, line) {\n                // FIXME optimize this. At least don't run it for updates that\n                // don't change anything relevant\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    return canUnfold;\n                if (foldable(view.state, line.from, line.to))\n                    return canFold;\n                return null;\n            },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: {\n                click: (view, line) => {\n                    let folded = foldInside(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme = EditorView.baseTheme({\n    $foldPlaceholder: {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \"$gutterElement.foldGutter\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\nexport { codeFolding, foldAll, foldCode, foldGutter, foldKeymap, unfoldAll, unfoldCode };\n","import { EditorView } from '@codemirror/next/view';\nimport { StateEffect, MapMode, StateField, EditorSelection, Transaction, CharCategory } from '@codemirror/next/state';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nimport { codePointSize, codePointAt, fromCodePoint } from '@codemirror/next/text';\nimport { syntaxTree } from '@codemirror/next/language';\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\nconst closeBracketEffect = StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst skipBracketEffect = StateEffect.define({\n    map(value, mapping) { return mapping.mapPos(value); }\n});\nconst closedBracket = new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.primary.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.primary.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects) {\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n            else if (effect.is(skipBracketEffect))\n                value = value.update({ filter: from => from != effect.value });\n        }\n        return value;\n    }\n});\n/// Extension to enable bracket-closing behavior. When a closeable\n/// bracket is typed, its closing bracket is immediately inserted\n/// after the cursor. When closing a bracket directly in front of that\n/// closing bracket, the cursor moves over the existing bracket.\nfunction closeBrackets() {\n    return [EditorView.inputHandler.of(handleInput), bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.primary;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = handleInsertion(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/// Command that implements deleting a pair of matching brackets when\n/// the cursor is between them.\nconst deleteBracketPair = ({ state, dispatch }) => {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length),\n                        annotations: Transaction.userEvent.of(\"delete\") };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/// Close-brackets related key bindings. Binds Backspace to\n/// [`deleteBracketPair`](#closebrackets.deleteBracketPair).\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/// Implements the extension's behavior on text insertion. @internal\nfunction handleInsertion(state, ch) {\n    let conf = config(state, state.selection.primary.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (ch == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (ch == closed && closedBracketAt(state, state.selection.primary.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        annotations: Transaction.userEvent.of(\"input\")\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, moved = state.selection.ranges.map(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state.update({\n        selection: EditorSelection.create(moved, state.selection.primaryIndex),\n        scrollIntoView: true,\n        effects: state.selection.ranges.map(({ from }) => skipBracketEffect.of(from))\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos);\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),\n                    effects: skipBracketEffect.of(pos) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            let prev = state.sliceDoc(pos - 1, pos);\n            if (prev != token && state.charCategorizer(pos)(prev) != CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        annotations: Transaction.userEvent.of(\"input\")\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolve(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexport { closeBrackets, closeBracketsKeymap, deleteBracketPair, handleInsertion };\n","import { showTooltip, tooltips } from '@codemirror/next/tooltip';\nimport { Facet, combineConfig, StateEffect, StateField, Transaction, Text, EditorSelection, precedence } from '@codemirror/next/state';\nimport { syntaxTree, indentUnit } from '@codemirror/next/language';\nimport { EditorView, Direction, themeClass, ViewPlugin, logException, Decoration, WidgetType, keymap } from '@codemirror/next/view';\nimport { codePointAt, codePointSize, fromCodePoint } from '@codemirror/next/text';\n\n/// An instance of this is passed to completion source functions.\nclass CompletionContext {\n    /// Create a new completion context. (Mostly useful for testing\n    /// completion sources—in the editor, the extension will create\n    /// these for you.)\n    constructor(\n    /// The editor state that the completion happens in.\n    state, \n    /// The position at which the completion happens.\n    pos, \n    /// Indicates whether completion was activated explicitly, or\n    /// implicitly by typing. The usual way to respond to this is to\n    /// only return completions when either there is part of a\n    /// completable entity at the cursor, or explicit is true.\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /// @internal\n        this.abortListeners = [];\n    }\n    /// Get the extent, content, and (if there is a token) type of the\n    /// token before `this.pos`.\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolve(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /// Get the match of the given expression directly before the\n    /// cursor.\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /// Yields true when the query has been aborted. Can be useful in\n    /// asynchronous queries to avoid doing work that will be ignored.\n    get aborted() { return this.abortListeners == null; }\n    /// Allows you to register abort handlers, which will be called when\n    /// the query is\n    /// [aborted](#autocomplete.CompletionContext.aborted).\n    addEventListener(_type, listener) {\n        if (this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nclass Option {\n    constructor(completion, source, match) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n    }\n}\nfunction cur(state) { return state.selection.primary.head; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\nfunction applyCompletion(view, option) {\n    let apply = option.completion.apply || option.completion.label;\n    let result = option.source;\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length }\n        });\n    }\n    else {\n        apply(view, option.completion, result.from, result.to);\n    }\n}\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0);\n            return first == chars[0] ? [0, 0, codePointSize(first)]\n                : first == folded[0] ? [-200 /* CaseFold */, 0, codePointSize(first)] : null;\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [0, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        let preciseTo = 0;\n        let byWordTo = 0, byWordFolded = false;\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Lower */ : next >= 65 && next <= 90 ? 1 /* Upper */ : 0 /* NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Upper */ : ch != ch.toUpperCase() ? 2 /* Lower */ : 0 /* NonWord */);\n            if (type == 1 /* Upper */ || prevType == 0 /* NonWord */ && type != 0 /* NonWord */ &&\n                (this.chars[byWordTo] == next || (this.folded[byWordTo] == next && (byWordFolded = true))))\n                byWord[byWordTo++] = i;\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* CaseFold */, 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* NotStart */, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* CaseFold */ + -700 /* NotStart */, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0) + -700 /* NotStart */, byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* NotStart */ : 0) + -200 /* CaseFold */ + -1100 /* Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            maxRenderedOptions: 100\n        });\n    }\n});\n\nconst MaxInfoWidth = 300;\nconst baseTheme = EditorView.baseTheme({\n    \"$tooltip.autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            overflowY: \"auto\",\n            whiteSpace: \"nowrap\",\n            maxHeight: \"10em\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li\": {\n                cursor: \"pointer\",\n                padding: \"1px 1em 1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li[aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            }\n        }\n    },\n    \"$completionListIncompleteTop:before, $completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \"$tooltip.completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: MaxInfoWidth + \"px\",\n    },\n    \"$tooltip.completionInfo.left\": { right: \"100%\" },\n    \"$tooltip.completionInfo.right\": { left: \"100%\" },\n    \"$$light $snippetField\": { backgroundColor: \"#ddd\" },\n    \"$$dark $snippetField\": { backgroundColor: \"#333\" },\n    \"$snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    $completionMatchedText: {\n        textDecoration: \"underline\"\n    },\n    $completionDetail: {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    $completionIcon: {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\"\n    },\n    \"$completionIcon.function, $completionIcon.method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \"$completionIcon.class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \"$completionIcon.interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \"$completionIcon.variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \"$completionIcon.constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \"$completionIcon.type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \"$completionIcon.enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \"$completionIcon.property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \"$completionIcon.keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \"$completionIcon.namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \"$completionIcon.text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nfunction createListBox(options, id, range) {\n    const ul = document.createElement(\"ul\");\n    ul.id = id;\n    ul.setAttribute(\"role\", \"listbox\");\n    ul.setAttribute(\"aria-expanded\", \"true\");\n    for (let i = range.from; i < range.to; i++) {\n        let { completion, match } = options[i];\n        const li = ul.appendChild(document.createElement(\"li\"));\n        li.id = id + \"-\" + i;\n        let icon = li.appendChild(document.createElement(\"div\"));\n        icon.className = themeClass(\"completionIcon\" + (completion.type ? \".\" + completion.type : \"\"));\n        icon.setAttribute(\"aria-hidden\", \"true\");\n        let labelElt = li.appendChild(document.createElement(\"span\"));\n        labelElt.className = themeClass(\"completionLabel\");\n        let { label, detail } = completion, off = 0;\n        for (let j = 1; j < match.length;) {\n            let from = match[j++], to = match[j++];\n            if (from > off)\n                labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n            let span = labelElt.appendChild(document.createElement(\"span\"));\n            span.appendChild(document.createTextNode(label.slice(from, to)));\n            span.className = themeClass(\"completionMatchedText\");\n            off = to;\n        }\n        if (off < label.length)\n            labelElt.appendChild(document.createTextNode(label.slice(off)));\n        if (detail) {\n            let detailElt = li.appendChild(document.createElement(\"span\"));\n            detailElt.className = themeClass(\"completionDetail\");\n            detailElt.textContent = detail;\n        }\n        li.setAttribute(\"role\", \"option\");\n    }\n    if (range.from)\n        ul.classList.add(themeClass(\"completionListIncompleteTop\"));\n    if (range.to < options.length)\n        ul.classList.add(themeClass(\"completionListIncompleteBottom\"));\n    return ul;\n}\nfunction createInfoDialog(option) {\n    let dom = document.createElement(\"div\");\n    dom.className = themeClass(\"tooltip.completionInfo\");\n    let { info } = option.completion;\n    if (typeof info == \"string\")\n        dom.textContent = info;\n    else\n        dom.appendChild(info(option.completion));\n    return dom;\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfo = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.positionInfo(pos),\n            key: this\n        };\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.list = this.dom.appendChild(createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfo);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        if (update.state.field(this.stateField) != update.prevState.field(this.stateField))\n            this.updateSel();\n    }\n    positioned() {\n        if (this.info)\n            this.view.requestMeasure(this.placeInfo);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfo);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let option = open.options[open.selected];\n            if (option.completion.info) {\n                this.info = this.dom.appendChild(createInfoDialog(option));\n                this.view.requestMeasure(this.placeInfo);\n            }\n        }\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel)\n            return null;\n        let rect = this.dom.getBoundingClientRect();\n        let top = sel.getBoundingClientRect().top - rect.top;\n        if (top < 0 || top > this.list.clientHeight - 10)\n            return null;\n        let left = this.view.textDirection == Direction.RTL;\n        let spaceLeft = rect.left, spaceRight = innerWidth - rect.right;\n        if (left && spaceLeft < Math.min(MaxInfoWidth, spaceRight))\n            left = false;\n        else if (!left && spaceRight < Math.min(MaxInfoWidth, spaceLeft))\n            left = true;\n        return { top, left };\n    }\n    positionInfo(pos) {\n        if (this.info && pos) {\n            this.info.style.top = pos.top + \"px\";\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-left\", pos.left);\n            this.info.classList.toggle(\"cm-tooltip-completionInfo-right\", !pos.left);\n        }\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\nconst MaxOptions = 300;\nfunction sortOptions(active, state) {\n    let options = [];\n    for (let a of active)\n        if (a.hasResult()) {\n            let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n            for (let option of a.result.options)\n                if (match = matcher.match(option.label)) {\n                    if (option.boost != null)\n                        match[0] += option.boost;\n                    options.push(new Option(option, a, match));\n                }\n        }\n    options.sort(cmpOption);\n    return options.length > MaxOptions ? options.slice(0, MaxOptions) : options;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);\n    }\n    static build(active, state, id, prev) {\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return null;\n        let selected = 0;\n        if (prev) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length && !selected; i++) {\n                if (options[i].completion == selectedValue)\n                    selected = i;\n            }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), [{\n                pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n                style: \"autocomplete\",\n                create: completionTooltip(completionState)\n            }], prev ? prev.timestamp : Date.now(), selected);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, [Object.assign(Object.assign({}, this.tooltip[0]), { pos: changes.mapPos(this.tooltip[0].pos) })], this.timestamp, this.selected);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override || state.languageDataAt(\"autocomplete\", cur(state));\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) || new ActiveSource(source, 0 /* Inactive */, false);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open)\n            : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : none; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nfunction makeAttrs(id, selected) {\n    return {\n        \"aria-autocomplete\": \"list\",\n        \"aria-activedescendant\": id + \"-\" + selected,\n        \"aria-owns\": id\n    };\n}\nconst baseAttrs = { \"aria-autocomplete\": \"list\" }, none = [];\nfunction cmpOption(a, b) {\n    let dScore = b.match[0] - a.match[0];\n    if (dScore)\n        return dScore;\n    let lA = a.completion.label, lB = b.completion.label;\n    return lA < lB ? -1 : lA == lB ? 0 : 1;\n}\nclass ActiveSource {\n    constructor(source, state, explicit) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = tr.annotation(Transaction.userEvent), value = this;\n        if (event == \"input\" || event == \"delete\")\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* Inactive */)\n            value = new ActiveSource(value.source, 0 /* Inactive */, false);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* Pending */, effect.value);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* Inactive */, false);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(_tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this : new ActiveSource(this.source, 1 /* Pending */, false);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* Inactive */, false) : this;\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, result, from, to, span) {\n        super(source, 2 /* Result */, explicit);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n        this.span = span;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicit ? pos < from : pos <= from) || pos > to)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* Pending */ : 0 /* Inactive */, false);\n        if (this.span && (from == to || this.span.test(tr.state.sliceDoc(from, to))))\n            return new ActiveResult(this.source, this.explicit, this.result, from, to, this.span);\n        return new ActiveSource(this.source, 1 /* Pending */, this.explicit);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to)\n            ? new ActiveSource(this.source, 0 /* Inactive */, false)\n            : new ActiveResult(this.source, this.explicit, this.result, tr.changes.mapPos(this.from), tr.changes.mapPos(this.to, 1), this.span);\n    }\n    map(mapping) {\n        return new ActiveResult(this.source, this.explicit, this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1), this.span);\n    }\n}\nconst startCompletionEffect = StateEffect.define();\nconst closeCompletionEffect = StateEffect.define();\nconst setActiveEffect = StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.hasResult() && !mapping.empty ? s.map(mapping) : s); }\n});\nconst setSelectedEffect = StateEffect.define();\nconst completionState = StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: [\n        showTooltip.nFrom(state => state.tooltip),\n        EditorView.contentAttributes.from(state => state.attrs)\n    ]\n});\n\nconst CompletionInteractMargin = 75;\n/// Returns a command that moves the completion selection forward or\n/// backward by the given amount.\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = view.dom.querySelector(\".cm-tooltip-autocomplete\")))\n            step = Math.max(2, Math.floor(tooltip.offsetHeight / tooltip.firstChild.offsetHeight));\n        let selected = cState.open.selected + step * (forward ? 1 : -1), { length } = cState.open.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/// Accept the current completion.\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/// Explicitly start autocompletion.\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/// Close the currently active completion.\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(source, context) {\n        this.source = source;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.prevState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let event = tr.annotation(Transaction.userEvent);\n            return (tr.selection || tr.docChanged) && event != \"input\" && event != \"delete\";\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && query.time - Date.now() > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* Pending */ && !this.running.some(q => q.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* None */)\n            for (let tr of update.transactions) {\n                if (tr.annotation(Transaction.userEvent) == \"input\")\n                    this.composing = 2 /* Changed */;\n                else if (this.composing == 2 /* Changed */ && tr.selection)\n                    this.composing = 3 /* ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* Pending */ && !this.running.some(r => r.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit);\n        let pending = new RunningQuery(active.source, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.source, query.context.explicit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state), query.done.span ? ensureAnchor(query.done.span, true) : null);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.source);\n            if (current && current.state == 1 /* Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.source, 0 /* Inactive */, false);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        compositionstart() {\n            this.composing = 1 /* Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* ChangedAndMoved */)\n                this.view.dispatch({ effects: startCompletionEffect.of(false) });\n            this.composing = 0 /* None */;\n        }\n    } // See https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/949\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.slice(0, Math.min(100, lineObj.length)))[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3], found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (name ? fields[i].name == name : seq != null && fields[i].seq == seq)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name: name || null });\n                    found = i;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = Decoration.widget({ widget: new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = themeClass(\"snippetFieldPosition\");\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = Decoration.mark({ class: themeClass(\"snippetField\") });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = StateEffect.define();\nconst snippetState = StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: [EditorView.decorations.from(val => val ? val.deco : Decoration.none)]\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/// Convert a snippet template to a function that can apply it.\n/// Snippets are written using syntax like this:\n///\n///     \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n///\n/// Each `${}` placeholder (you may also use `#{}`) indicates a field\n/// that the user can fill in. Its name, if any, will be the default\n/// content for the field.\n///\n/// When the snippet is activated by calling the returned function,\n/// the code is inserted at the given position. Newlines in the\n/// template are indented by the indentation of the start line, plus\n/// one [indent unit](#language.indentUnit) per tab character after\n/// the newline.\n///\n/// On activation, (all instances of) the first field are selected.\n/// The user can move between fields with Tab and Shift-Tab as long as\n/// the fields are active. Moving to the last field or moving the\n/// cursor out of the current field deactivates the fields.\n///\n/// The order of fields defaults to textual order, but you can add\n/// numbers to placeholders (`${1}` or `${1:defaultText}`) to provide\n/// a custom order.\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, _completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = { changes: { from, to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            spec.effects = setActive.of(new ActiveSnippet(ranges, 0));\n            if (editor.state.field(snippetState, false) === undefined)\n                spec.reconfigure = { append: [snippetState, snippetKeymap, baseTheme] };\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\nconst snippetKeymap = precedence(keymap([\n    { key: \"Tab\", run: moveField(1), shift: moveField(-1) },\n    { key: \"Escape\", run: clearSnippet }\n]), \"override\");\n\n/// Returns an extension that enables autocompletion.\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        baseTheme,\n        tooltips(),\n        precedence(keymap([\n            { key: \"ArrowDown\", run: moveCompletionSelection(true) },\n            { key: \"ArrowUp\", run: moveCompletionSelection(false) },\n            { key: \"PageDown\", run: moveCompletionSelection(true, \"page\") },\n            { key: \"PageUp\", run: moveCompletionSelection(false, \"page\") },\n            { key: \"Enter\", run: acceptCompletion }\n        ]), \"override\")\n    ];\n}\n/// Basic keybindings for autocompletion.\n///\n///  - Ctrl-Space (Cmd-Space on macOS): [`startCompletion`](#autocomplete.startCompletion)\n///  - Escape: [`closeCompletion`](#autocomplete.closeCompletion)\nconst completionKeymap = [\n    { key: \"Mod-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion }\n];\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/// Given a a fixed array of options, return an autocompleter that\n/// compares those options to the current\n/// [token](#autocomplete.CompletionContext.tokenBefore) and returns\n/// the matching ones.\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [span, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, span } : null;\n    };\n}\n/// Wrap the given completion source so that it will not fire when the\n/// cursor is in a syntax node with one of the given names.\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolve(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n        return source(context);\n    };\n}\n/// Create a completion source from an array of snippet specs.\nfunction completeSnippets(snippets) {\n    return completeFromList(snippets.map(s => Object.assign({}, s, { apply: snippet(s.snippet) })));\n}\n/// Get the current completion status. When completions are available,\n/// this will return `\"active\"`. When completions are pending (in the\n/// process of being queried), this returns `\"pending\"`. Otherwise, it\n/// returns `null`.\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* Inactive */) ? \"active\" : null;\n}\n/// Returns the available completions as an array.\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options.map(o => o.completion) : [];\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, closeCompletion, completeFromList, completeSnippets, completionKeymap, completionStatus, currentCompletions, ifNotIn, moveCompletionSelection, snippet, startCompletion };\n","import { EditorSelection } from '@codemirror/next/state';\nimport { EditorView } from '@codemirror/next/view';\nimport { findColumn, countColumn } from '@codemirror/next/text';\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i), str = line.length > MaxOff ? line.slice(0, 2 * endCol) : line.slice();\n            let start = findColumn(str, 0, startCol, state.tabSize), end = findColumn(str, 0, endCol, state.tabSize);\n            if (!start.leftOver)\n                ranges.push(EditorSelection.range(line.from + start.offset, line.from + end.offset));\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (offset == null)\n        return null;\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.slice(0, offset - line.from), 0, view.state.tabSize);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.prevState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/// Create an extension that enables rectangular selections. By\n/// default, it will rect to left mouse drag with the alt key held\n/// down. When such a selection occurs, the text within the rectangle\n/// that was dragged over will be selected, as one selection\n/// [range](#state.SelectionRange) per line. You can pass a custom\n/// predicate function, which takes a `mousedown` event and returns\n/// true if it should be used for rectangular selection.\nfunction rectangularSelection(eventFilter) {\n    let filter = eventFilter || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexport { rectangularSelection };\n","import { getPanel, panels, showPanel } from '@codemirror/next/panel';\nimport { EditorSelection } from '@codemirror/next/state';\nimport { EditorView, themeClass } from '@codemirror/next/view';\n\nconst extTag = typeof Symbol == \"undefined\" ? \"__goto-line\" : Symbol(\"goto-line\");\nfunction createLineDialog(view) {\n    let dom = document.createElement(\"form\");\n    dom.innerHTML = `<label>${view.state.phrase(\"Go to line:\")} <input class=${themeClass(\"textfield\")} name=line></label>\n<button class=${themeClass(\"button\")} type=submit>${view.state.phrase(\"go\")}</button>`;\n    let input = dom.querySelector(\"input\");\n    function go() {\n        let n = parseInt(input.value, 10);\n        view.dispatch({\n            reconfigure: { [extTag]: [baseTheme] },\n            selection: !isNaN(n) && n > 0 && n <= view.state.doc.lines ? EditorSelection.cursor(view.state.doc.line(n).from) : undefined,\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    dom.addEventListener(\"keydown\", event => {\n        if (event.keyCode == 27) { // Escape\n            event.preventDefault();\n            view.dispatch({ reconfigure: { append: [baseTheme] } });\n            view.focus();\n        }\n        else if (event.keyCode == 13) { // Enter\n            event.preventDefault();\n            go();\n        }\n    });\n    dom.addEventListener(\"submit\", go);\n    return { dom, style: \"gotoLine\", pos: -10 };\n}\n/// Command that shows a dialog asking the user for a line number, and\n/// when a valid number is provided, moves the cursor to that line.\n///\n/// The dialog can be styled with the `panel.gotoLine` theme\n/// selector.\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        view.dispatch({ reconfigure: { append: [panels(), showPanel.of(createLineDialog), baseTheme] } });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n/// Keymap that binds Alt-g to [`gotoLine`](#goto-line.gotoLine).\nconst gotoLineKeymap = [\n    { key: \"Alt-g\", run: gotoLine }\n];\n\nexport { gotoLine, gotoLineKeymap };\n","import { highlightSpecialChars, drawSelection, keymap } from '@codemirror/next/view';\nexport { EditorView } from '@codemirror/next/view';\nimport { EditorState } from '@codemirror/next/state';\nexport { EditorState } from '@codemirror/next/state';\nimport { history, historyKeymap } from '@codemirror/next/history';\nimport { foldGutter, foldKeymap } from '@codemirror/next/fold';\nimport { indentOnInput } from '@codemirror/next/language';\nimport { lineNumbers } from '@codemirror/next/gutter';\nimport { defaultKeymap } from '@codemirror/next/commands';\nimport { bracketMatching } from '@codemirror/next/matchbrackets';\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/next/closebrackets';\nimport { searchKeymap } from '@codemirror/next/search';\nimport { autocompletion, completionKeymap } from '@codemirror/next/autocomplete';\nimport { commentKeymap } from '@codemirror/next/comment';\nimport { rectangularSelection } from '@codemirror/next/rectangular-selection';\nimport { gotoLineKeymap } from '@codemirror/next/goto-line';\nimport { highlightActiveLine, highlightSelectionMatches } from '@codemirror/next/highlight-selection';\nimport { defaultHighlightStyle } from '@codemirror/next/highlight';\nimport { lintKeymap } from '@codemirror/next/lint';\n\n/// This is an extension value that just pulls together a whole lot of\n/// extensions that you might want in a basic editor. It is meant as a\n/// convenient helper to quickly set up CodeMirror without installing\n/// and importing a lot of packages.\n///\n/// Specifically, it includes...\n///\n///  - [the default command bindings](#commands.defaultKeymap)\n///  - [line numbers](#gutter.lineNumbers)\n///  - [special character highlighting](#view.highlightSpecialChars)\n///  - [the undo history](#history.history)\n///  - [a fold gutter](#fold.foldGutter)\n///  - [custom selection drawing](#view.drawSelection)\n///  - [multiple selections](#state.EditorState^allowMultipleSelections)\n///  - [reindentation on input](#language.indentOnInput)\n///  - [the default highlight style](#highlight.defaultHighlightStyle)\n///  - [bracket matching](#matchbrackets.bracketMatching)\n///  - [bracket closing](#closebrackets.closeBrackets)\n///  - [autocompletion](#autocomplete.autocompletion)\n///  - [rectangular selection](#rectangular-selection.rectangularSelection)\n///  - [active line highlighting](#highlight-selection.highlightActiveLine)\n///  - [selection match highlighting](#highlight-selection.highlightSelectionMatches)\n///  - [search](#search.searchKeymap)\n///  - [go to line](#goto-line.gotoLineKeymap)\n///  - [commenting](#comment.commentKeymap)\n///  - [linting](#lint.lintKeymap)\n///\n/// (You'll probably want to add some language package to your setup\n/// too.)\n///\n/// This package does not allow customization. The idea is that, once\n/// you decide you want to configure your editor more precisely, you\n/// take this package's source (which is just a bunch of imports and\n/// an array literal), copy it into your own code, and adjust it as\n/// desired.\nconst basicSetup = [\n    lineNumbers(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    defaultHighlightStyle,\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...commentKeymap,\n        ...gotoLineKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n];\n\nexport { basicSetup };\n","import { Transaction, EditorSelection, CharCategory } from '@codemirror/next/state';\nimport { Text, countColumn, codePointSize, codePointAt } from '@codemirror/next/text';\nimport { Direction } from '@codemirror/next/view';\nimport { matchBrackets } from '@codemirror/next/matchbrackets';\nimport { IndentContext, getIndentation, indentString, indentUnit, getIndentUnit, syntaxTree } from '@codemirror/next/language';\nimport { NodeProp } from 'lezer-tree';\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.primaryIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, annotations: Transaction.userEvent.of(\"keyboardselection\") });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one character to the left (which is backward in\n/// left-to-right text, forward in right-to-left text).\nconst cursorCharLeft = view => cursorByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection one character to the right.\nconst cursorCharRight = view => cursorByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection one character forward.\nconst cursorCharForward = view => cursorByChar(view, true);\n/// Move the selection one character backward.\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection across one group of word or non-word (but also\n/// non-space) characters.\nconst cursorGroupLeft = view => cursorByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection one group to the right.\nconst cursorGroupRight = view => cursorByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection one group forward.\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/// Move the selection one group backward.\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolve(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/// Move the cursor over the next syntactic element to the left.\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the cursor over the next syntactic element to the right.\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward) : rangeEnd(range, forward));\n}\n/// Move the selection one line up.\nconst cursorLineUp = view => cursorByLine(view, false);\n/// Move the selection one line down.\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction cursorByPage(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward, view.dom.clientHeight) : rangeEnd(range, forward));\n}\n/// Move the selection one page up.\nconst cursorPageUp = view => cursorByPage(view, false);\n/// Move the selection one page down.\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.visualLineAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head > line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/// Move the selection to the next line wrap point, or to the end of\n/// the line if there isn't one left on this line.\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection to previous line wrap point, or failing that to\n/// the start of the line.\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection to the start of the line.\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from, 1));\n/// Move the selection to the end of the line.\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/// Move the selection to the bracket matching the one it is currently\n/// on, if any.\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/// Extend the selection to the bracket matching the one the selection\n/// head is currently on, if any.\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/// Move the selection head one character to the left, while leaving\n/// the anchor in place.\nconst selectCharLeft = view => selectByChar(view, view.textDirection != Direction.LTR);\n/// Move the selection head one character to the right.\nconst selectCharRight = view => selectByChar(view, view.textDirection == Direction.LTR);\n/// Move the selection head one character forward.\nconst selectCharForward = view => selectByChar(view, true);\n/// Move the selection head one character backward.\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/// Move the selection head one [group](#commands.cursorGroupLeft) to\n/// the left.\nconst selectGroupLeft = view => selectByGroup(view, view.textDirection != Direction.LTR);\n/// Move the selection head one group to the right.\nconst selectGroupRight = view => selectByGroup(view, view.textDirection == Direction.LTR);\n/// Move the selection head one group forward.\nconst selectGroupForward = view => selectByGroup(view, true);\n/// Move the selection head one group backward.\nconst selectGroupBackward = view => selectByGroup(view, false);\n/// Move the selection head over the next syntactic element to the left.\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/// Move the selection head over the next syntactic element to the right.\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/// Move the selection head one line up.\nconst selectLineUp = view => selectByLine(view, false);\n/// Move the selection head one line down.\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, view.dom.clientHeight));\n}\n/// Move the selection head one page up.\nconst selectPageUp = view => selectByPage(view, false);\n/// Move the selection head one page down.\nconst selectPageDown = view => selectByPage(view, true);\n/// Move the selection head to the next line boundary.\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/// Move the selection head to the previous line boundary.\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/// Move the selection head to the start of the line.\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).from));\n/// Move the selection head to the end of the line.\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.visualLineAt(range.head).to));\n/// Move the selection to the start of the document.\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/// Move the selection to the end of the document.\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/// Move the selection head to the start of the document.\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: 0 }));\n    return true;\n};\n/// Move the selection head to the end of the document.\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.primary.anchor, head: state.doc.length }));\n    return true;\n};\n/// Select the entire document.\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Expand the selection to cover entire lines.\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: new EditorSelection(ranges), annotations: Transaction.userEvent.of(\"keyboardselection\") }));\n    return true;\n};\n/// Select the next syntactic construct that is larger than the\n/// selection. Note that this will only work insofar as the language\n/// [provider](#language.language) you use builds up a full\n/// syntax tree.\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolve(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/// Simplify the current selection. When multiple ranges are selected,\n/// reduce it to its primary range. Otherwise, if the selection is\n/// non-empty, convert it to a cursor selection.\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = new EditorSelection([cur.primary]);\n    else if (!cur.primary.empty)\n        selection = new EditorSelection([EditorSelection.cursor(cur.primary.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(view, by) {\n    let { state } = view, changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"delete\") });\n    return true;\n}\nconst deleteByChar = (view, forward, codePoint) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), before;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, 0, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        return pos;\n    }\n    let target;\n    if (codePoint) {\n        let next = line.slice(pos - line.from + (forward ? 0 : -2), pos - line.from + (forward ? 2 : 0));\n        let size = next ? codePointSize(codePointAt(next, 0)) : 1;\n        target = forward ? Math.min(state.doc.length, pos + size) : Math.max(0, pos - size);\n    }\n    else {\n        target = line.findClusterBreak(pos - line.from, forward) + line.from;\n    }\n    if (target == pos && line.number != (forward ? state.doc.lines : 1))\n        target += forward ? 1 : -1;\n    return target;\n});\n/// Delete the selection, or, for cursor selections, the code point\n/// before the cursor.\nconst deleteCodePointBackward = view => deleteByChar(view, false, true);\n/// Delete the selection, or, for cursor selections, the code point\n/// after the cursor.\nconst deleteCodePointForward = view => deleteByChar(view, true, true);\n/// Delete the selection, or, for cursor selections, the character\n/// before the cursor.\nconst deleteCharBackward = view => deleteByChar(view, false, false);\n/// Delete the selection or the character after the cursor.\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (view, forward) => deleteBy(view, pos => {\n    let { state } = view, line = state.doc.lineAt(pos), categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        let next, nextChar;\n        if (pos == (forward ? line.to : line.from)) {\n            if (line.number == (forward ? state.doc.lines : 1))\n                break;\n            line = state.doc.line(line.number + (forward ? 1 : -1));\n            next = forward ? line.from : line.to;\n            nextChar = \"\\n\";\n        }\n        else {\n            next = line.findClusterBreak(pos - line.from, forward) + line.from;\n            nextChar = line.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        }\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextCat != CharCategory.Space)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/// Delete the selection or backward until the end of the next\n/// [group](#view.EditorView.moveByGroup).\nconst deleteGroupBackward = view => deleteByGroup(view, false);\n/// Delete the selection or forward until the end of the next group.\nconst deleteGroupForward = view => deleteByGroup(view, true);\n/// Delete the selection, or, if it is a cursor selection, delete to\n/// the end of the line. If the cursor is directly at the end of the\n/// line, delete the line break after it.\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.visualLineAt(pos).to;\n    if (pos < lineEnd)\n        return lineEnd;\n    return Math.max(view.state.doc.length, pos + 1);\n});\n/// Delete all whitespace directly before a line end from the\n/// document.\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes }));\n    return true;\n};\n/// Replace each selection range with a line break, leaving the cursor\n/// on the line before the break.\nconst splitLine = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") }));\n    return true;\n};\n/// Flip the characters before and after the cursor(s).\nconst transposeChars = ({ state, dispatch }) => {\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : line.findClusterBreak(pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : line.findClusterBreak(pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (upto == startLine.number)\n            blocks[blocks.length - 1].to = endLine.to;\n        else\n            blocks.push({ from: startLine.from, to: endLine.to });\n        upto = endLine.number;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        if (forward)\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.slice() + state.lineBreak });\n        else\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.slice() });\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Move the selected lines up one line.\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/// Move the selected lines down one line.\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true }));\n    return true;\n}\n/// Create a copy of the selected lines. Keep the selection in the top copy.\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/// Create a copy of the selected lines. Keep the selection in the bottom copy.\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/// Delete selected lines.\nconst deleteLine = view => {\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true });\n    return true;\n};\n/// Replace the selection with a newline.\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolve(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/// Replace the selection with a newline and indent the newly created\n/// line(s). If the current line consists only of whitespace, this\n/// will also delete that whitespace. When the cursor is between\n/// matching brackets, an additional newline will be inserted after\n/// the cursor.\nconst insertNewlineAndIndent = ({ state, dispatch }) => {\n    let changes = state.changeByRange(({ from, to }) => {\n        let explode = from == to && isBetweenBrackets(state, from);\n        let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n        let indent = getIndentation(cx, from);\n        if (indent == null)\n            indent = /^\\s*/.exec(state.doc.lineAt(from).slice(0, 50))[0].length;\n        let line = state.doc.lineAt(from);\n        while (to < line.to && /\\s/.test(line.slice(to - line.from, to + 1 - line.from)))\n            to++;\n        if (explode)\n            ({ from, to } = explode);\n        else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.slice(0, from)))\n            from = line.from;\n        let insert = [\"\", indentString(state, indent)];\n        if (explode)\n            insert.push(indentString(state, cx.lineIndent(line)));\n        return { changes: { from, to, insert: Text.of(insert) },\n            range: EditorSelection.cursor(from + 1 + indent) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true }));\n    return true;\n};\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let line = state.doc.lineAt(range.from);;) {\n            if (line.number > atLine) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            if (range.to <= line.to)\n                break;\n            line = state.doc.lineAt(line.to + 1);\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/// Auto-indent the selected lines. This uses the [indentation service\n/// facet](#language.indentService) as source for auto-indent\n/// information.\nconst indentSelection = ({ state, dispatch }) => {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, 200)))[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes));\n    return true;\n};\n/// Add a [unit](#language.indentUnit) of indentation to all selected\n/// lines.\nconst indentMore = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    })));\n    return true;\n};\n/// Remove a [unit](#language.indentUnit) of indentation from all\n/// selected lines.\nconst indentLess = ({ state, dispatch }) => {\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let lineStart = line.slice(0, Math.min(line.length, 200));\n        let space = /^\\s*/.exec(lineStart)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, 0, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    })));\n    return true;\n};\n/// Array of key bindings containing the Emacs-style bindings that are\n/// available on macOS by default.\n///\n///  - Ctrl-b: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - Ctrl-f: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-p: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - Ctrl-n: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Ctrl-a: [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Ctrl-e: [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - Ctrl-d: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-h: [`deleteCharBackward`](#commands.deleteCharBackward)\n///  - Ctrl-k: [`deleteToLineEnd`](#commands.deleteToLineEnd)\n///  - Alt-d: [`deleteGroupForward`](#commands.deleteGroupForward)\n///  - Ctrl-Alt-h: [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-o: [`splitLine`](#commands.splitLine)\n///  - Ctrl-t: [`transposeChars`](#commands.transposeChars)\n///  - Alt-f: [`cursorGroupForward`](#commands.cursorGroupForward) ([`selectGroupForward`](#commands.selectGroupForward) with Shift)\n///  - Alt-b: [`cursorGroupBackward`](#commands.cursorGroupBackward) ([`selectGroupBackward`](#commands.selectGroupBackward) with Shift)\n///  - Alt-<: [`cursorDocStart`](#commands.cursorDocStart)\n///  - Alt->: [`cursorDocEnd`](#commands.cursorDocEnd)\n///  - Ctrl-v: [`cursorPageDown`](#commands.cursorPageDown)\n///  - Alt-v: [`cursorPageUp`](#commands.cursorPageUp)\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Alt-d\", run: deleteGroupForward },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Alt-f\", run: cursorGroupForward, shift: selectGroupForward },\n    { key: \"Alt-b\", run: cursorGroupBackward, shift: selectGroupBackward },\n    { key: \"Alt-<\", run: cursorDocStart },\n    { key: \"Alt->\", run: cursorDocEnd },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n    { key: \"Alt-v\", run: cursorPageUp },\n];\n/// An array of key bindings closely sticking to platform-standard or\n/// widely used bindings. (This includes the bindings from\n/// [`emacsStyleKeymap`](#commands.emacsStyleKeymap), with their `key`\n/// property changed to `mac`.)\n///\n///  - ArrowLeft: [`cursorCharLeft`](#commands.cursorCharLeft) ([`selectCharLeft`](#commands.selectCharLeft) with Shift)\n///  - ArrowRight: [`cursorCharRight`](#commands.cursorCharRight) ([`selectCharRight`](#commands.selectCharRight) with Shift)\n///  - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](#commands.cursorGroupLeft) ([`selectGroupLeft`](#commands.selectGroupLeft) with Shift)\n///  - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](#commands.cursorGroupRight) ([`selectGroupRight`](#commands.selectGroupRight) with Shift)\n///  - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](#commands.cursorLineStart) ([`selectLineStart`](#commands.selectLineStart) with Shift)\n///  - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](#commands.cursorLineEnd) ([`selectLineEnd`](#commands.selectLineEnd) with Shift)\n///  - ArrowUp: [`cursorLineUp`](#commands.cursorLineUp) ([`selectLineUp`](#commands.selectLineUp) with Shift)\n///  - ArrowDown: [`cursorLineDown`](#commands.cursorLineDown) ([`selectLineDown`](#commands.selectLineDown) with Shift)\n///  - Cmd-ArrowUp (on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - PageUp: [`cursorPageUp`](#commands.cursorPageUp) ([`selectPageUp`](#commands.selectPageUp) with Shift)\n///  - PageDown: [`cursorPageDown`](#commands.cursorPageDown) ([`selectPageDown`](#commands.selectPageDown) with Shift)\n///  - Home: [`cursorLineBoundaryBackward`](#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](#commands.selectLineBoundaryBackward) with Shift)\n///  - End: [`cursorLineBoundaryForward`](#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](#commands.selectLineBoundaryForward) with Shift)\n///  - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](#commands.cursorDocStart) ([`selectDocStart`](#commands.selectDocStart) with Shift)\n///  - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](#commands.cursorDocEnd) ([`selectDocEnd`](#commands.selectDocEnd) with Shift)\n///  - Enter: [`insertNewlineAndIndent`](#commands.insertNewlineAndIndent)\n///  - Ctrl-a (Cmd-a on macOS): [`selectAll`](#commands.selectAll)\n///  - Backspace: [`deleteCodePointBackward`](#commands.deleteCodePointBackward)\n///  - Delete: [`deleteCharForward`](#commands.deleteCharForward)\n///  - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](#commands.deleteGroupBackward)\n///  - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](#commands.deleteGroupForward)\nconst standardKeymap = [\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCodePointBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n].concat(emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/// The default keymap. Includes all bindings from\n/// [`standardKeymap`](#commands.standardKeymap) plus the following:\n///\n/// - Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](#commands.selectSyntaxLeft) with Shift)\n/// - Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](#commands.cursorSyntaxRight) ([`selectSyntaxRight`](#commands.selectSyntaxRight) with Shift)\n/// - Alt-ArrowUp: [`moveLineUp`](#commands.moveLineUp)\n/// - Alt-ArrowDown: [`moveLineDown`](#commands.moveLineDown)\n/// - Shift-Alt-ArrowUp: [`copyLineUp`](#commands.copyLineUp)\n/// - Shift-Alt-ArrowDown: [`copyLineDown`](#commands.copyLineDown)\n/// - Escape: [`simplifySelection`](#commands.simplifySelection)\n/// - Ctrl-l (Cmd-l on macOS): [`selectLine`](#commands.selectLine)\n/// - Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](#commands.selectParentSyntax)\n/// - Ctrl-[ (Cmd-[ on macOS): [`indentLess`](#commands.indentLess)\n/// - Ctrl-] (Cmd-] on macOS): [`indentMore`](#commands.indentMore)\n/// - Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](#commands.indentSelection)\n/// - Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](#commands.deleteLine)\n/// - Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](#commands.cursorMatchingBracket)\nconst defaultKeymap = [\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket }\n].concat(standardKeymap);\n\nexport { copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteCodePointBackward, deleteCodePointForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteTrailingWhitespace, emacsStyleKeymap, indentLess, indentMore, indentSelection, insertNewline, insertNewlineAndIndent, moveLineDown, moveLineUp, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, transposeChars };\n","import { EditorSelection } from '@codemirror/next/state';\n\n/// Comments or uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst toggleLineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineComment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using line-comments.\n/// The line-comment token is defined on a language basis.\nconst lineUncomment = target => {\n    return dispatch(toggleLineCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Comments or uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst toggleBlockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.Toggle), target);\n};\n/// Comments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockComment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyComment), target);\n};\n/// Uncomments the current `SelectionRange` using block-comments.\n/// The block-comment tokens are defined on a language basis.\nconst blockUncomment = target => {\n    return dispatch(toggleBlockCommentWithOption(CommentOption.OnlyUncomment), target);\n};\n/// Default key bindings for this package.\n///\n///  - Ctrl-/ (Cmd-/ on macOS): [\\`toggleLineComment\\`](#comment.toggleLineComment).\n///  - Shift-Alt-a: [\\`toggleBlockComment\\`](#comment.toggleBlockComment).\nconst commentKeymap = [\n    { key: \"Mod-/\", run: toggleLineComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n];\nfunction dispatch(cmd, target) {\n    const tr = cmd(target.state);\n    if (!tr)\n        return false;\n    target.dispatch(tr);\n    return true;\n}\nvar CommentOption;\n(function (CommentOption) {\n    CommentOption[CommentOption[\"Toggle\"] = 0] = \"Toggle\";\n    CommentOption[CommentOption[\"OnlyComment\"] = 1] = \"OnlyComment\";\n    CommentOption[CommentOption[\"OnlyUncomment\"] = 2] = \"OnlyUncomment\";\n})(CommentOption || (CommentOption = {}));\nfunction getConfig(state, pos = state.selection.primary.head) {\n    return state.languageDataAt(\"commentTokens\", pos)[0] || {};\n}\nconst toggleBlockCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.block ? new BlockCommenter(config.block.open, config.block.close).toggle(option, state) : null;\n};\nconst toggleLineCommentWithOption = (option) => (state) => {\n    const config = getConfig(state);\n    return config.line ? new LineCommenter(config.line).toggle(option, state) : null;\n};\n// This class performs toggle, comment and uncomment\n// of block comments in languages that support them.\n// The `open` and `close` arguments refer to the open and close\n// tokens of which this `BlockCommenter` is made up.\nclass BlockCommenter {\n    constructor(open, close, margin = \" \") {\n        this.open = open;\n        this.close = close;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const selectionCommented = this.isSelectionCommented(state);\n        if (selectionCommented !== null) {\n            if (option !== CommentOption.OnlyComment) {\n                return state.update({\n                    changes: selectionCommented.map(({ open, close }) => [\n                        { from: open.pos - this.open.length, to: open.pos + open.margin },\n                        { from: close.pos - close.margin, to: close.pos + this.close.length }\n                    ])\n                });\n            }\n        }\n        else {\n            if (option !== CommentOption.OnlyUncomment) {\n                return state.update(state.changeByRange(range => {\n                    const shift = (this.open + this.margin).length;\n                    return {\n                        changes: [{ from: range.from, insert: this.open + this.margin },\n                            { from: range.to, insert: this.margin + this.close }],\n                        range: EditorSelection.range(range.anchor + shift, range.head + shift)\n                    };\n                }));\n            }\n        }\n        return null;\n    }\n    /// Determines whether all selection ranges in `state` are block-commented.\n    isSelectionCommented(state) {\n        let result = [];\n        for (const range of state.selection.ranges) {\n            const x = this.isRangeCommented(state, range);\n            if (x === null)\n                return null;\n            result.push(x);\n        }\n        return result;\n    }\n    /// Determines if the `range` is block-commented in the given `state`.\n    /// The `range` must be a valid range in `state`.\n    isRangeCommented(state, range) {\n        let textBefore = state.sliceDoc(range.from - SearchMargin, range.from);\n        let textAfter = state.sliceDoc(range.to, range.to + SearchMargin);\n        let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n        let beforeOff = textBefore.length - spaceBefore;\n        if (textBefore.slice(beforeOff - this.open.length, beforeOff) == this.open &&\n            textAfter.slice(spaceAfter, spaceAfter + this.close.length) == this.close) {\n            return { open: { pos: range.from - spaceBefore, margin: spaceBefore && 1 },\n                close: { pos: range.to + spaceAfter, margin: spaceAfter && 1 } };\n        }\n        let startText, endText;\n        if (range.to - range.from <= 2 * SearchMargin) {\n            startText = endText = state.sliceDoc(range.from, range.to);\n        }\n        else {\n            startText = state.sliceDoc(range.from, range.from + SearchMargin);\n            endText = state.sliceDoc(range.to - SearchMargin, range.to);\n        }\n        let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n        let endOff = endText.length - endSpace - this.close.length;\n        if (startText.slice(startSpace, startSpace + this.open.length) == this.open &&\n            endText.slice(endOff, endOff + this.close.length) == this.close) {\n            return { open: { pos: range.from + startSpace + this.open.length,\n                    margin: /\\s/.test(startText.charAt(startSpace + this.open.length)) ? 1 : 0 },\n                close: { pos: range.to - endSpace - this.close.length,\n                    margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n        }\n        return null;\n    }\n}\nconst SearchMargin = 50;\n// This class performs toggle, comment and uncomment\n// of line comments in languages that support them.\n// The `lineCommentToken` argument refer to the token of\n// which this `LineCommenter` is made up.\nclass LineCommenter {\n    constructor(lineCommentToken, margin = \" \") {\n        this.lineCommentToken = lineCommentToken;\n        this.margin = margin;\n    }\n    toggle(option, state) {\n        const linesAcrossSelection = [];\n        const linesAcrossRange = {};\n        for (let i = 0; i < state.selection.ranges.length; i++) {\n            const lines = getLinesInRange(state.doc, state.selection.ranges[i]);\n            linesAcrossSelection.push(...lines);\n            linesAcrossRange[i] = lines;\n        }\n        const column = this.isRangeCommented(state, linesAcrossSelection);\n        if (column.isRangeLineSkipped) {\n            if (option != CommentOption.OnlyComment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length > 1 && column.isLineSkipped[line.number])\n                            continue;\n                        const pos = line.from + column.minCol;\n                        const posAfter = column.minCol + this.lineCommentToken.length;\n                        const marginLen = line.slice(posAfter, posAfter + 1) == \" \" ? 1 : 0;\n                        changes.push({ from: pos, to: pos + this.lineCommentToken.length + marginLen });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        else {\n            if (option != CommentOption.OnlyUncomment) {\n                let changes = [];\n                for (let i = 0; i < state.selection.ranges.length; i++) {\n                    const lines = linesAcrossRange[i];\n                    for (const line of lines) {\n                        if (lines.length <= 1 || !column.isLineSkipped[line.number])\n                            changes.push({ from: line.from + column.minCol, insert: this.lineCommentToken + this.margin });\n                    }\n                }\n                return state.update({ changes });\n            }\n        }\n        return null;\n    }\n    isRangeCommented(_state, lines) {\n        let minCol = Infinity;\n        let isRangeLineDiscarded = true;\n        const isLineSkipped = [];\n        for (const line of lines) {\n            const str = line.slice(0, Math.min(line.length, SearchMargin));\n            const col = /^\\s*/.exec(str)[0].length;\n            if ((lines.length == 1 || col < str.length) && col < minCol) {\n                minCol = col;\n            }\n            if (isRangeLineDiscarded && (lines.length == 1 || col < str.length) &&\n                str.slice(col, col + this.lineCommentToken.length) != this.lineCommentToken) {\n                isRangeLineDiscarded = false;\n            }\n            isLineSkipped[line.number] = col == str.length;\n        }\n        return { minCol: minCol, isRangeLineSkipped: isRangeLineDiscarded, isLineSkipped: isLineSkipped };\n    }\n}\n// Computes the lines spanned by `range`.\n/// @internal\nfunction getLinesInRange(doc, range) {\n    let line = doc.lineAt(range.from);\n    const lines = [];\n    while (line.from + line.length < range.to ||\n        (line.from <= range.to && range.to <= line.to)) {\n        lines.push(line);\n        if (line.number + 1 <= doc.lines) {\n            line = doc.line(line.number + 1);\n        }\n        else {\n            break;\n        }\n    }\n    return lines;\n}\n\nexport { blockComment, blockUncomment, commentKeymap, lineComment, lineUncomment, toggleBlockComment, toggleLineComment };\n","import { EditorView, ViewPlugin, themeClass, BlockType, PluginField, Direction } from '@codemirror/next/view';\nimport { RangeValue, Range, RangeSet } from '@codemirror/next/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/next/state';\n\n/// A gutter marker represents a bit of information attached to a line\n/// in a specific gutter. Your own custom markers have to extend this\n/// class.\nclass GutterMarker extends RangeValue {\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// Render the DOM node for this marker, if any.\n    toDOM(_view) { return null; }\n    /// Create a range that places this marker at the given position.\n    at(pos) { return new Range(pos, pos, this); }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nconst defaults = {\n    style: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = Facet.define();\n/// Define an editor gutter.\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = EditorView.baseTheme({\n    $gutters: {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0\n    },\n    \"$$light $gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"$$dark $gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    $gutter: {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        height: \"100%\",\n        overflow: \"hidden\"\n    },\n    $gutterElement: {\n        boxSizing: \"border-box\"\n    },\n    \"$gutterElement.lineNumber\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    }\n});\nconst unfixGutters = Facet.define({\n    combine: values => values.some(x => x)\n});\n/// The gutter-drawing plugin is automatically enabled when you add a\n/// gutter, but you can use this function to explicitly configure it.\n///\n/// Unless `fixed` is explicitly set to `false`, the gutters are\n/// fixed, meaning they don't scroll along with the content\n/// horizontally.\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutters\");\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (!this.updateGutters(update))\n            return;\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport));\n        this.view.viewportLines(line => {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                return;\n            for (let cx of contexts)\n                cx.line(this.view, text);\n        }, 0);\n        for (let cx of contexts)\n            cx.finish();\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (update.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n    }\n    updateGutters(update) {\n        let prev = update.prevState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged;\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters)\n                g.dom.remove();\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        this.dom.remove();\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nclass UpdateContext {\n    constructor(gutter, viewport) {\n        this.gutter = gutter;\n        this.localMarkers = [];\n        this.i = 0;\n        this.height = 0;\n        this.cursor = RangeSet.iter(Array.isArray(gutter.markers) ? gutter.markers : [gutter.markers], viewport.from);\n    }\n    line(view, line) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        while (this.cursor.value && this.cursor.from <= line.from) {\n            if (this.cursor.from == line.from)\n                this.localMarkers.push(this.cursor.value);\n            this.cursor.next();\n        }\n        let forLine = this.gutter.config.lineMarker(view, line, this.localMarkers);\n        if (forLine)\n            this.localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (this.localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, this.localMarkers, gutter.elementClass);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            let markers = this.localMarkers, elt = gutter.elements[this.i];\n            if (sameMarkers(markers, elt.markers)) {\n                markers = elt.markers;\n                this.localMarkers.length = 0;\n            }\n            elt.update(view, line.height, above, markers, gutter.elementClass);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i)\n            gutter.dom.removeChild(gutter.elements.pop().dom);\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = themeClass(\"gutter\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        this.elementClass = themeClass(\"gutterElement\" + (this.config.style ? \".\" + this.config.style : \"\"));\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.visualLineAtHeight(event.clientY, view.contentDOM.getBoundingClientRect().top);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = config.markers(view.state);\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)], this.elementClass);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = this.config.markers(update.state);\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated], this.elementClass);\n        }\n        return this.markers != prevMarkers;\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers, eltClass) {\n        this.height = -1;\n        this.above = 0;\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers, eltClass);\n    }\n    update(view, height, above, markers, cssClass) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (this.markers != markers) {\n            this.markers = markers;\n            for (let ch; ch = this.dom.lastChild;)\n                ch.remove();\n            let cls = cssClass;\n            for (let m of markers) {\n                let dom = m.toDOM(view);\n                if (dom)\n                    this.dom.appendChild(dom);\n                let c = m.elementClass;\n                if (c)\n                    cls += \" \" + c;\n            }\n            this.dom.className = cls;\n        }\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/// Facet used to provide markers to the line number gutter.\nconst lineNumberMarkers = Facet.define();\nconst lineNumberConfig = Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM(view) {\n        let config = view.state.facet(lineNumberConfig);\n        return document.createTextNode(config.formatNumber(this.number));\n    }\n}\nconst lineNumberGutter = gutter({\n    style: \"lineNumber\",\n    markers(state) { return state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.length)\n            return null;\n        // FIXME try to make the line number queries cheaper?\n        return new NumberMarker(view.state.doc.lineAt(line.from).number);\n    },\n    initialSpacer(view) {\n        return new NumberMarker(maxLineNumber(view.state.doc.lines));\n    },\n    updateSpacer(spacer, update) {\n        let max = maxLineNumber(update.view.state.doc.lines);\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    }\n});\n/// Create a line number gutter extension. The order in which the\n/// gutters appear is determined by their extension priority.\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\n\nexport { GutterMarker, gutter, gutters, lineNumberMarkers, lineNumbers };\n","import { Decoration, themeClass, ViewPlugin, EditorView } from '@codemirror/next/view';\nimport { Facet, combineConfig, CharCategory } from '@codemirror/next/state';\nimport { SearchCursor } from '@codemirror/next/search';\n\n/// Mark lines that have a cursor on them with the \\`$activeLine\\`\n/// theme class.\nfunction highlightActiveLine() {\n    return [defaultTheme, activeLineHighlighter];\n}\nconst lineDeco = Decoration.line({ attributes: { class: themeClass(\"activeLine\") } });\nconst activeLineHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                continue;\n            let line = view.visualLineAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/// This extension highlights text that matches the selection. It uses\n/// the `$selectionMatch` theme class for the highlighting. When\n/// `highlightWordAroundCursor` is enabled, the word at the cursor\n/// itself will be highlighted with `selectionMatch.main`.\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nfunction wordAt(doc, pos, check) {\n    let line = doc.lineAt(pos);\n    let from = pos - line.from, to = pos - line.from;\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (check(line.slice(prev, from)) != CharCategory.Word)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (check(line.slice(to, next)) != CharCategory.Word)\n            break;\n        to = next;\n    }\n    return from == to ? null : line.slice(from, to);\n}\nconst matchDeco = Decoration.mark({ class: themeClass(\"selectionMatch\") });\nconst mainMatchDeco = Decoration.mark({ class: themeClass(\"selectionMatch.main\") });\nconst matchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.primary, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = wordAt(state.doc, range.head, check);\n            if (!query)\n                return Decoration.none;\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            query = state.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return Decoration.none;\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n                    (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = EditorView.baseTheme({\n    \"$$light $activeLine\": { backgroundColor: \"#f3f9ff\" },\n    \"$$dark $activeLine\": { backgroundColor: \"#223039\" },\n    \"$selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \"$searchMatch $selectionMatch\": { backgroundColor: \"transparent\" }\n});\n\nexport { highlightActiveLine, highlightSelectionMatches };\n","import { NodeProp } from 'lezer-tree';\nimport { StyleModule } from 'style-mod';\nimport { EditorView, ViewPlugin, Decoration } from '@codemirror/next/view';\nimport { Facet, precedence } from '@codemirror/next/state';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nlet nextTagID = 0;\n/// Highlighting tags are markers that denote a highlighting category.\n/// They are [associated](#highlight.styleTags) with parts of a syntax\n/// tree by a language mode, and then mapped to an actual CSS style by\n/// a [highlight style](#highlight.highlightStyle).\n///\n/// CodeMirror uses a mostly-closed set of tags for generic\n/// highlighters, so that the list of things that a theme must style\n/// is clear and bounded (as opposed to traditional open string-based\n/// systems, which make it hard for highlighting themes to cover all\n/// the tokens produced by the various languages).\n///\n/// It _is_ possible to [define](#highlight.Tag^define) your own\n/// highlighting tags for system-internal use (where you control both\n/// the language package and the highlighter), but such tags will not\n/// be picked up by other highlighters (though you can derive them\n/// from standard tags to allow the highlighters to fall back to\n/// those).\nclass Tag {\n    /// @internal\n    constructor(\n    /// The set of tags that match this tag, starting with this one\n    /// itself, sorted in order of decreasing specificity. @internal\n    set, \n    /// The base unmodified tag that this one is based on, if it's\n    /// modified @internal\n    base, \n    /// The modifiers applied to this.base @internal\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /// @internal\n        this.id = nextTagID++;\n    }\n    /// Define a new tag. If `parent` is given, the tag is treated as a\n    /// sub-tag of that parent, and [highlight\n    /// styles](#highlight.highlightStyle) that don't mention this tag\n    /// will try to fall back to the parent tag (or grandparent tag,\n    /// etc).\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /// Define a tag _modifier_, which is a function that, given a tag,\n    /// will return a tag that is a subtag of the original. Applying the\n    /// same modifier to a twice tag will return the same value (`m1(t1)\n    /// == m1(t1)`) and applying multiple modifiers will, regardless or\n    /// order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    ///\n    /// When multiple modifiers are applied to a given base tag, each\n    /// smaller set of modifiers is registered as a parent, so that for\n    /// example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    /// `m1(m3(t1)`, and so on.\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = permute(mods);\n        for (let parent of base.set)\n            for (let config of configs)\n                set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction permute(array) {\n    let result = [array];\n    for (let i = 0; i < array.length; i++) {\n        for (let a of permute(array.slice(0, i).concat(array.slice(i + 1))))\n            result.push(a);\n    }\n    return result;\n}\n/// This function is used to add a set of tags to a language syntax\n/// via\n/// [`Parser.configure`](https://lezer.codemirror.net/docs/ref#lezer.Parser.configure).\n///\n/// The argument object maps node selectors to [highlighting\n/// tags](#highlight.Tag) or arrays of tags.\n///\n/// Node selectors may hold one or more (space-separated) node paths.\n/// Such a path can be a [node\n/// name](https://lezer.codemirror.net/docs/ref#tree.NodeType.name),\n/// or multiple node names (or `*` wildcards) separated by slash\n/// characters, as in `\"Block/Declaration/VariableName\"`. Such a path\n/// matches the final node but only if its direct parent nodes are the\n/// other nodes mentioned. A `*` in such a path matches any parent,\n/// but only a single level—wildcards that match multiple parents\n/// aren't supported, both for efficiency reasons and because Lezer\n/// trees make it rather hard to reason about what they would match.)\n///\n/// A path can be ended with `/...` to indicate that the tag assigned\n/// to the node should also apply to all parent nodes, even if they\n/// match their own style (by default, only the innermost style is\n/// used).\n///\n/// When a path ends in `!`, as in `Attribute!`, no further matching\n/// happens for the node's child nodes, and the entire node gets the\n/// given style.\n///\n/// In this notation, node names that contain `/`, `!`, `*`, or `...`\n/// must be quoted as JSON strings.\n///\n/// For example:\n///\n/// ```javascript\n/// parser.withProps(\n///   styleTags({\n///     // Style Number and BigNumber nodes\n///     \"Number BigNumber\": tags.number,\n///     // Style Escape nodes whose parent is String\n///     \"String/Escape\": tags.escape,\n///     // Style anything inside Attributes nodes\n///     \"Attributes!\": tags.meta,\n///     // Add a style to all content inside Italic nodes\n///     \"Italic/...\": tags.emphasis,\n///     // Style InvalidString nodes as both `string` and `invalid`\n///     \"InvalidString\": tags.string + tags.invalid,\n///     // Style the node named \"/\" as punctuation\n///     '\"/\"': tags.punctuation\n///   })\n/// )\n/// ```\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? null : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nconst highlightStyleProp = Facet.define({\n    combine(stylings) { return stylings.length ? stylings[0] : null; }\n});\n/// Create a highlighter style that associates the given styles to the\n/// given tags. The spec's property names must be\n/// [tags](#highlight.Tag) or lists of tags (which can be concatenated\n/// with `+`). The values should be\n/// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n/// style objects that define the CSS for that tag.\n///\n/// The CSS rules created for a highlighter will be emitted in the\n/// order of the spec's properties. That means that for elements that\n/// have multiple tags associated with them, styles defined further\n/// down in the list will have a higher CSS precedence than styles\n/// defined earlier.\nfunction highlightStyle(...specs) {\n    let styling = new Styling(specs);\n    return [\n        highlightStyleProp.of(styling),\n        EditorView.styleModule.of(styling.module)\n    ];\n}\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nclass Styling {\n    constructor(spec) {\n        this.map = Object.create(null);\n        let modSpec = Object.create(null);\n        for (let style of spec) {\n            let cls = StyleModule.newName();\n            modSpec[\".\" + cls] = Object.assign({}, style, { tag: null });\n            let tags = style.tag;\n            if (!Array.isArray(tags))\n                tags = [tags];\n            for (let tag of tags)\n                this.map[tag.id] = cls;\n        }\n        this.module = new StyleModule(modSpec);\n    }\n    match(tag) {\n        for (let t of tag.set) {\n            let match = this.map[t.id];\n            if (match) {\n                if (t != tag)\n                    this.map[tag.id] = match;\n                return match;\n            }\n        }\n        return this.map[tag.id] = null;\n    }\n}\n/// Returns an extension that installs a highlighter that uses the\n/// tree produced by the given language, along with the current\n/// [highlight style](#highlight.highlightStyle), to style the\n/// document. If no highlight style is active, this plugin won't do\n/// any highlighting.\nfunction treeHighlighter(language) {\n    return precedence(ViewPlugin.define(view => new TreeHighlighter(view, language), {\n        decorations: v => v.decorations\n    }), \"fallback\");\n}\nclass TreeHighlighter {\n    constructor(view, language) {\n        this.language = language;\n        // Reused stacks for buildDeco\n        this.nodeStack = [\"\"];\n        this.classStack = [\"\"];\n        this.inheritStack = [\"\"];\n        this.markCache = Object.create(null);\n        this.tree = language.getTree(view.state);\n        this.decorations = this.buildDeco(view);\n    }\n    update(update) {\n        if (this.language.getTree(update.state).length < update.view.viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else {\n            let tree = this.language.getTree(update.state);\n            if (tree != this.tree || update.viewportChanged) {\n                this.tree = tree;\n                this.decorations = this.buildDeco(update.view);\n            }\n        }\n    }\n    buildDeco(view) {\n        const style = view.state.facet(highlightStyleProp);\n        if (!style)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        let start, curClass, depth;\n        let flush = (pos, style) => {\n            if (pos > start && style) {\n                let mark = this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style }));\n                builder.add(start, pos, mark);\n            }\n            start = pos;\n        };\n        let { nodeStack, classStack, inheritStack } = this;\n        for (let { from, to } of view.visibleRanges) {\n            curClass = \"\";\n            depth = 0;\n            start = from;\n            this.tree.iterate({\n                from, to,\n                enter: (type, start) => {\n                    depth++;\n                    let inheritedClass = inheritStack[depth - 1];\n                    let cls = inheritedClass;\n                    let rule = type.prop(ruleNodeProp), opaque = false;\n                    while (rule) {\n                        if (!rule.context || matchContext(rule.context, nodeStack, depth)) {\n                            for (let tag of rule.tags) {\n                                let st = style.match(tag);\n                                if (st) {\n                                    if (cls)\n                                        cls += \" \";\n                                    cls += st;\n                                    if (rule.mode == 1 /* Inherit */)\n                                        inheritedClass = cls;\n                                    else if (rule.mode == 0 /* Opaque */)\n                                        opaque = true;\n                                }\n                            }\n                            break;\n                        }\n                        rule = rule.next;\n                    }\n                    if (cls != curClass) {\n                        flush(start, curClass);\n                        curClass = cls;\n                    }\n                    if (opaque) {\n                        depth--;\n                        return false;\n                    }\n                    classStack[depth] = cls;\n                    inheritStack[depth] = inheritedClass;\n                    nodeStack[depth] = type.name;\n                    return undefined;\n                },\n                leave: (_t, _s, end) => {\n                    depth--;\n                    let backTo = classStack[depth];\n                    if (backTo != curClass) {\n                        flush(Math.min(to, end), curClass);\n                        curClass = backTo;\n                    }\n                }\n            });\n        }\n        return builder.finish();\n    }\n}\nfunction matchContext(context, stack, depth) {\n    if (context.length > depth - 1)\n        return false;\n    for (let d = depth - 1, i = context.length - 1; i >= 0; i--, d--) {\n        let check = context[i];\n        if (check && check != stack[d])\n            return false;\n    }\n    return true;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/// The default set of highlighting [tags](#highlight.Tag^define) used\n/// by regular language packages and themes.\n///\n/// This collection is heavily biasted towards programming language,\n/// and necessarily incomplete. A full ontology of syntactic\n/// constructs would fill a stack of books, and be impractical to\n/// write themes for. So try to make do with this set, possibly\n/// encoding more information with flags. If all else fails, [open an\n/// issue](https://github.com/codemirror/codemirror.next) to propose a\n/// new type, or [define](#highlight.Tag^define) a custom tag for your\n/// use case.\n///\n/// Note that it is not obligatory to always attach the most specific\n/// tag possible to an element—if your grammar can't easily\n/// distinguish a certain type of element, it is okay to style it as\n/// its more general variant.\n/// \n/// For tags that extend some parent tag, the documentation links to\n/// the parent.\nconst tags = {\n    /// A comment.\n    comment,\n    /// A line [comment](#highlight.tags.comment).\n    lineComment: t(comment),\n    /// A block [comment](#highlight.tags.comment).\n    blockComment: t(comment),\n    /// A documentation [comment](#highlight.tags.comment).\n    docComment: t(comment),\n    /// Any kind of identifier.\n    name,\n    /// The [name](#highlight.tags.name) of a variable.\n    variableName: t(name),\n    /// A type or tag [name](#highlight.tags.name).\n    typeName: t(name),\n    /// A property, field, or attribute [name](#highlight.tags.name).\n    propertyName: t(name),\n    /// The [name](#highlight.tags.name) of a class.\n    className: t(name),\n    /// A label [name](#highlight.tags.name).\n    labelName: t(name),\n    /// A namespace [name](#highlight.tags.name).\n    namespace: t(name),\n    /// The [name](#highlight.tags.name) of a macro.\n    macroName: t(name),\n    /// A literal value.\n    literal,\n    /// A string [literal](#highlight.tags.literal).\n    string,\n    /// A documentation [string](#highlight.tags.string).\n    docString: t(string),\n    /// A character literal (subtag of [string](#highlight.tags.string)).\n    character: t(string),\n    /// A number [literal](#highlight.tags.literal).\n    number,\n    /// An integer [number](#highlight.tags.number) literal.\n    integer: t(number),\n    /// A floating-point [number](#highlight.tags.number) literal.\n    float: t(number),\n    /// A boolean [literal](#highlight.tags.literal).\n    bool: t(literal),\n    /// Regular expression [literal](#highlight.tags.literal).\n    regexp: t(literal),\n    /// An escape [literal](#highlight.tags.literal), for example a\n    /// backslash escape in a string.\n    escape: t(literal),\n    /// A color [literal](#highlight.tags.literal).\n    color: t(literal),\n    /// A URL [literal](#highlight.tags.literal).\n    url: t(literal),\n    /// A language keyword.\n    keyword,\n    /// The [keyword](#highlight.tags.keyword) for the self or this\n    /// object.\n    self: t(keyword),\n    /// The [keyword](#highlight.tags.keyword) for null.\n    null: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    atom: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that represents a unit.\n    unit: t(keyword),\n    /// A modifier [keyword](#highlight.tags.keyword).\n    modifier: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that acts as an operator.\n    operatorKeyword: t(keyword),\n    /// A control-flow related [keyword](#highlight.tags.keyword).\n    controlKeyword: t(keyword),\n    /// A [keyword](#highlight.tags.keyword) that defines something.\n    definitionKeyword: t(keyword),\n    /// An operator.\n    operator,\n    /// An [operator](#highlight.tags.operator) that defines something.\n    derefOperator: t(operator),\n    /// Arithmetic-related [operator](#highlight.tags.operator).\n    arithmeticOperator: t(operator),\n    /// Logical [operator](#highlight.tags.operator).\n    logicOperator: t(operator),\n    /// Bit [operator](#highlight.tags.operator).\n    bitwiseOperator: t(operator),\n    /// Comparison [operator](#highlight.tags.operator).\n    compareOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that updates its operand.\n    updateOperator: t(operator),\n    /// [Operator](#highlight.tags.operator) that defines something.\n    definitionOperator: t(operator),\n    /// Type-related [operator](#highlight.tags.operator).\n    typeOperator: t(operator),\n    /// Control-flow [operator](#highlight.tags.operator).\n    controlOperator: t(operator),\n    /// Program or markup punctuation.\n    punctuation,\n    /// [Punctuation](#highlight.tags.punctuation) that separates\n    /// things.\n    separator: t(punctuation),\n    /// Bracket-style [punctuation](#highlight.tags.punctuation).\n    bracket,\n    /// Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    /// tokens).\n    angleBracket: t(bracket),\n    /// Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    /// tokens).\n    squareBracket: t(bracket),\n    /// Parentheses (usually `(` and `)` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket)).\n    paren: t(bracket),\n    /// Braces (usually `{` and `}` tokens). Subtag of\n    /// [bracket](#highlight.tags.bracket)).\n    brace: t(bracket),\n    /// Content, for example plain text in XML or markup documents.\n    content,\n    /// [Content](#highlight.tags.content) that represents a heading.\n    heading,\n    /// A level 1 [heading](#highlight.tags.heading).\n    heading1: t(heading),\n    /// A level 2 [heading](#highlight.tags.heading).\n    heading2: t(heading),\n    /// A level 3 [heading](#highlight.tags.heading).\n    heading3: t(heading),\n    /// A level 4 [heading](#highlight.tags.heading).\n    heading4: t(heading),\n    /// A level 5 [heading](#highlight.tags.heading).\n    heading5: t(heading),\n    /// A level 6 [heading](#highlight.tags.heading).\n    heading6: t(heading),\n    /// [Content](#highlight.tags.content) that represents a list or\n    /// list marker.\n    list: t(content),\n    /// [Content](#highlight.tags.content) that represents a quote.\n    quote: t(content),\n    /// [Content](#highlight.tags.content) that is emphasized.\n    emphasis: t(content),\n    /// [Content](#highlight.tags.content) that is styled strong.\n    strong: t(content),\n    /// [Content](#highlight.tags.content) that is part of a link.\n    link: t(content),\n    /// [Content](#highlight.tags.content) that is styled as code or\n    /// monospace.\n    monospace: t(content),\n    /// Inserted content in a change-tracking format.\n    inserted: t(),\n    /// Deleted content.\n    deleted: t(),\n    /// Changed content.\n    changed: t(),\n    /// An invalid or unsyntactic element.\n    invalid: t(),\n    /// Metadata or meta-instruction.\n    meta,\n    /// [Metadata](#highlight.tags.meta) that applies to the entire\n    /// document.\n    documentMeta: t(meta),\n    /// [Metadata](#highlight.tags.meta) that annotates or adds\n    /// attributes to a given syntactic element.\n    annotation: t(meta),\n    /// Processing instruction or preprocessor directive. Subtag of\n    /// [meta](#highlight.tags.meta)).\n    processingInstruction: t(meta),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    /// given element is being defined. Expected to be used with the\n    /// various [name](#highlight.tags.name) tags.\n    definition: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates that\n    /// something is constant. Mostly expected to be used with\n    /// [variable names](#highlight.tags.variableName).\n    constant: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) used to indicate that a\n    /// [variable name](#highlight.tags.variableName) is being called or\n    /// being defined as a function.\n    function: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    /// [names](#highlight.tags.name) to indicate that they belong to\n    /// the standard environment.\n    standard: Tag.defineModifier(),\n    /// [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    /// [names](#highlight.tags.name) is local to some scope.\n    local: Tag.defineModifier(),\n    /// A generic variant [modifier](#highlight.Tag^defineModifier) that\n    /// can be used to tag language-specific alternative variants of\n    /// some common tag. It is recommended for themes to define special\n    /// forms of at least the [string](#highlight.tags.string) and\n    /// [variable name](#highlight.tags.variableName) tags, since those\n    /// come up a lot.\n    special: Tag.defineModifier()\n};\n/// A default highlight style (works well with light themes).\nconst defaultHighlightStyle = precedence(highlightStyle({ tag: tags.deleted,\n    textDecoration: \"line-through\" }, { tag: [tags.inserted, tags.link],\n    textDecoration: \"underline\" }, { tag: tags.heading,\n    textDecoration: \"underline\",\n    fontWeight: \"bold\" }, { tag: tags.emphasis,\n    fontStyle: \"italic\" }, { tag: tags.strong,\n    fontWeight: \"bold\" }, { tag: tags.keyword,\n    color: \"#708\" }, { tag: [tags.atom, tags.bool, tags.url],\n    color: \"#219\" }, { tag: tags.number,\n    color: \"#164\" }, { tag: tags.string,\n    color: \"#a11\" }, { tag: [tags.regexp, tags.escape, tags.special(tags.string)],\n    color: \"#e40\" }, { tag: tags.definition(tags.variableName),\n    color: \"#00f\" }, { tag: tags.typeName,\n    color: \"#085\" }, { tag: tags.className,\n    color: \"#167\" }, { tag: tags.special(tags.variableName),\n    color: \"#256\" }, { tag: tags.definition(tags.propertyName),\n    color: \"#00c\" }, { tag: tags.comment,\n    color: \"#940\" }, { tag: tags.meta,\n    color: \"#555\" }, { tag: tags.invalid,\n    color: \"#f00\" }), \"fallback\");\n\nexport { Tag, defaultHighlightStyle, highlightStyle, styleTags, tags, treeHighlighter };\n","import { NodeProp, Tree, TreeFragment } from 'lezer-tree';\nimport { Facet, EditorState, StateEffect, StateField, Transaction } from '@codemirror/next/state';\nimport { ViewPlugin } from '@codemirror/next/view';\nimport { treeHighlighter } from '@codemirror/next/highlight';\nimport { countColumn } from '@codemirror/next/text';\n\n/// The facet used to associate a language with an editor state.\nconst language = Facet.define();\n/// Node prop stored on a grammar's top node to indicate the facet used\n/// to store language data related to that language.\nconst languageDataProp = new NodeProp();\n/// Helper function to define a facet (to be added to the top syntax\n/// node(s) for a language via\n/// [`languageDataProp`](#language.languageDataProp)), that will be\n/// used to associate language data with the language. You\n/// probably only need this when subclassing\n/// [`Language`](#language.Language).\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/// A language object manages parsing and per-language\n/// [metadata](#state.EditorState.languageDataAt). Parse data is\n/// managed as a [Lezer](https://lezer.codemirror.net) tree. You'll\n/// want to subclass this class for custom parsers, or use the\n/// [`LezerLanguage`](#language.LezerLanguage) or\n/// [`StreamLanguage`](#stream-parser.StreamLanguage) abstractions for\n/// [Lezer](https://lezer.codemirror.net/) or stream parsers.\nclass Language {\n    constructor(\n    /// The [language data](#state.EditorState.languageDataAt) data\n    /// facet used for this language.\n    data, parser, extraExtensions = []) {\n        this.data = data;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        let setState = StateEffect.define();\n        this.parser = parser;\n        this.field = StateField.define({\n            create(state) {\n                let parseState = new EditorParseContext(parser, state, [], Tree.empty, { from: 0, to: state.doc.length }, []);\n                if (!parseState.work(25 /* Apply */))\n                    parseState.takeTree();\n                return new LanguageState(parseState);\n            },\n            update(value, tr) {\n                for (let e of tr.effects)\n                    if (e.is(setState))\n                        return e.value;\n                return value.apply(tr);\n            }\n        });\n        this.extension = [\n            language.of(this),\n            this.field,\n            ViewPlugin.define(view => new ParseWorker(view, this.field, setState)),\n            treeHighlighter(this),\n            EditorState.languageData.of((state, pos) => state.facet(this.languageDataFacetAt(state, pos)))\n        ].concat(extraExtensions);\n    }\n    /// Retrieve the parser tree for a given state.\n    getTree(state) {\n        return state.field(this.field).tree;\n    }\n    /// Try to get a parse tree that spans at least up to `upto`. The\n    /// method will do at most `timeout` milliseconds of work to parse\n    /// up to that point if the tree isn't already available.\n    ensureTree(state, upto, timeout = 100) {\n        let parse = state.field(this.field).context;\n        return parse.tree.length >= upto || parse.work(timeout, upto) ? parse.tree : null;\n    }\n    /// @internal\n    languageDataFacetAt(state, pos) {\n        let tree = this.getTree(state);\n        let target = tree.resolve(pos, -1);\n        while (target) {\n            let facet = target.type.prop(languageDataProp);\n            if (facet)\n                return facet;\n            target = target.parent;\n        }\n        return this.data;\n    }\n}\n/// A subclass of `Language` for use with\n/// [Lezer](https://lezer.codemirror.net/docs/ref#lezer.Parser)\n/// parsers.\nclass LezerLanguage extends Language {\n    constructor(data, parser) {\n        super(data, parser);\n        this.parser = parser;\n    }\n    /// Define a language from a parser.\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LezerLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }));\n    }\n    /// Create a new instance of this language with a reconfigured\n    /// version of its parser.\n    configure(options) {\n        return new LezerLanguage(this.data, this.parser.configure(options));\n    }\n    languageDataFacetAt(state, pos) {\n        return this.parser.hasNested ? super.languageDataFacetAt(state, pos) : this.data;\n    }\n}\n/// Get the syntax tree for a state, which is the current (possibly\n/// incomplete) parse tree of the [language](#language.Language) with\n/// the highest precedence, or the empty tree if there is no language\n/// available.\nfunction syntaxTree(state) {\n    let lang = state.facet(language);\n    return lang.length ? lang[0].getTree(state) : Tree.empty;\n}\n// Lezer-style Input object for a Text document.\nclass DocInput {\n    constructor(doc, length = doc.length) {\n        this.doc = doc;\n        this.length = length;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.prevString = \"\";\n        this.cursor = doc.iter();\n    }\n    syncTo(pos) {\n        if (pos < this.cursorPos) { // Reset the cursor if we have to go back\n            this.cursor = this.doc.iter();\n            this.cursorPos = 0;\n        }\n        this.prevString = pos == this.cursorPos ? this.string : \"\";\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    get(pos) {\n        if (pos >= this.length)\n            return -1;\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos) {\n            if (pos < stringStart && pos >= stringStart - this.prevString.length)\n                return this.prevString.charCodeAt(pos - (stringStart - this.prevString.length));\n            stringStart = this.syncTo(pos);\n        }\n        return this.string.charCodeAt(pos - stringStart);\n    }\n    lineAfter(pos) {\n        if (pos >= this.length || pos < 0)\n            return \"\";\n        let stringStart = this.cursorPos - this.string.length;\n        if (pos < stringStart || pos >= this.cursorPos)\n            stringStart = this.syncTo(pos);\n        let off = pos - stringStart, result = \"\";\n        while (!this.cursor.lineBreak) {\n            result += off ? this.string.slice(off) : this.string;\n            if (this.cursorPos >= this.length) {\n                if (this.cursorPos > this.length)\n                    result = result.slice(0, result.length - (this.cursorPos - this.length));\n                break;\n            }\n            this.syncTo(this.cursorPos);\n            off = 0;\n        }\n        return result;\n    }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n    clip(at) {\n        return new DocInput(this.doc, at);\n    }\n}\n/// A parse context provided to parsers working on the editor content.\nclass EditorParseContext {\n    /// @internal\n    constructor(parser, \n    /// The current editor state.\n    state, \n    /// Tree fragments that can be reused by new parses.\n    fragments = [], \n    /// @internal\n    tree, \n    /// The current editor viewport, or some approximation thereof.\n    /// Intended to be used for opportunistically avoiding work (in\n    /// which case\n    /// [`skipUntilInView`](#language.EditorParseContext.skipUntilInView)\n    /// should be called to make sure the parser is restarted when the\n    /// skipped region becomes visible).\n    viewport, \n    /// @internal\n    skipped) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.parse = null;\n        /// @internal\n        this.skippedUntil = [];\n    }\n    /// @internal\n    // FIXME do something with badness again\n    work(time, upto) {\n        if (this.tree != Tree.empty && (upto == null ? this.tree.length == this.state.doc.length : this.tree.length >= upto))\n            return true;\n        if (!this.parse)\n            this.parse = this.parser.startParse(new DocInput(this.state.doc), 0, this);\n        let endTime = Date.now() + time;\n        for (;;) {\n            let done = this.parse.advance();\n            if (done) {\n                this.fragments = TreeFragment.addTree(done);\n                this.parse = null;\n                this.tree = done;\n                return true;\n            }\n            else if (upto != null && this.parse.pos >= upto) {\n                this.takeTree();\n                return true;\n            }\n            if (Date.now() > endTime)\n                return false;\n        }\n    }\n    /// @internal\n    takeTree() {\n        if (this.parse && this.parse.pos > this.tree.length) {\n            this.tree = this.parse.forceFinish();\n            this.fragments = TreeFragment.addTree(this.tree, this.fragments, true);\n        }\n    }\n    /// @internal\n    changes(changes, newState) {\n        let { fragments, tree, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new EditorParseContext(this.parser, newState, fragments, tree, viewport, skipped);\n    }\n    /// @internal\n    updateViewport(viewport) {\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.cutFragments(from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        return this.skipped.length < startLen;\n    }\n    /// @internal\n    cutFragments(from, to) {\n        this.fragments = TreeFragment.applyChanges(this.fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n    }\n    /// @internal\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    skipUntil(from, to, until) {\n        this.skippedUntil.push({ from, to, until });\n    }\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged)\n            return this;\n        let newState = this.context.changes(tr.changes, tr.state);\n        newState.work(25 /* Apply */);\n        return new LanguageState(newState);\n    }\n}\nlet requestIdle = typeof window != \"undefined\" && window.requestIdleCallback ||\n    ((callback, { timeout }) => setTimeout(callback, timeout));\nlet cancelIdle = typeof window != \"undefined\" && window.cancelIdleCallback || clearTimeout;\n// FIXME figure out some way to back off from full re-parses when the\n// document is large—you could waste a lot of battery re-parsing a\n// multi-megabyte document every time you insert a backtick, even if\n// it happens in the background.\nclass ParseWorker {\n    constructor(view, field, setState) {\n        this.view = view;\n        this.field = field;\n        this.setState = setState;\n        this.working = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        if (update.docChanged)\n            this.scheduleWork();\n        let cx = this.view.state.field(this.field).context;\n        if (update.viewportChanged && cx.updateViewport(update.view.viewport)) {\n            cx.reset();\n            this.scheduleWork();\n        }\n        this.takeSkipped(cx);\n    }\n    scheduleWork() {\n        if (this.working > -1)\n            return;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.tree.length >= state.doc.length)\n            return;\n        this.working = requestIdle(this.work, { timeout: 200 /* Pause */ });\n    }\n    work(deadline) {\n        this.working = -1;\n        let { state } = this.view, field = state.field(this.field);\n        if (field.tree.length >= state.doc.length)\n            return;\n        field.context.work(deadline ? Math.max(25 /* MinSlice */, deadline.timeRemaining()) : 100 /* Slice */);\n        if (field.context.tree.length >= state.doc.length) {\n            this.view.dispatch({ effects: this.setState.of(new LanguageState(field.context)) });\n            this.takeSkipped(field.context);\n        }\n        else {\n            this.scheduleWork();\n        }\n    }\n    takeSkipped(context) {\n        while (context.skippedUntil.length) {\n            let { from, to, until } = context.skippedUntil.pop();\n            until.then(() => {\n                let field = this.view.state.field(this.field, false);\n                if (field && field.context == context) {\n                    context.cutFragments(from, to);\n                    context.reset();\n                    this.scheduleWork();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.working >= 0)\n            cancelIdle(this.working);\n    }\n}\n\n/// Facet that defines a way to provide a function that computes the\n/// appropriate indentation depth at the start of a given line, or\n/// `null` to indicate no appropriate indentation could be determined.\nconst indentService = Facet.define();\n/// Facet for overriding the unit by which indentation happens.\n/// Should be a string consisting either entirely of spaces or\n/// entirely of tabs. When not set, this defaults to 2 spaces.\nconst indentUnit = Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        if (!/^(?: +|\\t+)$/.test(values[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return values[0];\n    }\n});\n/// Return the _column width_ of an indent unit in the state.\n/// Determined by the [`indentUnit`](#language.indentUnit)\n/// facet, and [`tabSize`](#state.EditorState^tabSize) when that\n/// contains tabs.\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/// Create an indentation string that covers columns 0 to `cols`.\n/// Will use tabs for as much of the columns as possible when the\n/// [`indentUnit`](#language.indentUnit) facet contains\n/// tabs.\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize;\n    if (state.facet(indentUnit).charCodeAt(0) == 9)\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n    for (let i = 0; i < cols; i++)\n        result += \" \";\n    return result;\n}\n/// Get the indentation at the given position. Will first consult any\n/// [indent services](#language.indentService) that are registered,\n/// and if none of those return an indentation, this will check the\n/// syntax tree for the [indent node prop](#language.indentNodeProp)\n/// and use that if found. Returns a number when an indentation could\n/// be determined, and null otherwise.\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result != null)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/// Indentation contexts are used when calling [indentation\n/// services](#language.indentService). They provide helper utilities\n/// useful in indentation logic, and can selectively override the\n/// indentation reported for some lines.\nclass IndentContext {\n    /// Create an indent context.\n    constructor(\n    /// The editor state.\n    state, \n    /// @internal\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /// Get the text directly after `pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    textAfterPos(pos) {\n        var _a, _b;\n        let sim = (_a = this.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n        if (pos == sim && ((_b = this.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak))\n            return \"\";\n        return this.state.sliceDoc(pos, Math.min(pos + 100, sim != null && sim > pos ? sim : 1e9, this.state.doc.lineAt(pos).to));\n    }\n    /// find the column position (taking tabs into account) of the given\n    /// position in the given string.\n    countColumn(line, pos) {\n        return countColumn(pos < 0 ? line : line.slice(0, pos), 0, this.state.tabSize);\n    }\n    /// Find the indentation column of the given document line.\n    lineIndent(line) {\n        var _a;\n        let override = (_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation;\n        if (override) {\n            let overriden = override(line.from);\n            if (overriden > -1)\n                return overriden;\n        }\n        let text = line.slice(0, Math.min(100, line.length));\n        return this.countColumn(text, text.search(/\\S/));\n    }\n    /// Find the column for the given position.\n    column(pos) {\n        var _a;\n        let line = this.state.doc.lineAt(pos), text = line.slice(0, pos - line.from);\n        let result = this.countColumn(text, pos - line.from);\n        let override = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.overrideIndentation) ? this.options.overrideIndentation(line.from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S/));\n        return result;\n    }\n}\n/// A syntax tree node prop used to associate indentation strategies\n/// with node types. Such a strategy is a function from an indentation\n/// context to a column number or null, where null indicates that no\n/// definitive indentation can be determined.\nconst indentNodeProp = new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let tree = ast.resolve(pos);\n    // Enter previous nodes that end in empty error terms, which means\n    // they were broken off by error recovery, so that indentation\n    // works even if the constructs haven't been finished.\n    for (let scan = tree, scanPos = pos;;) {\n        let last = scan.childBefore(scanPos);\n        if (!last)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            tree = scan;\n            scanPos = last.from;\n        }\n        else {\n            scan = last;\n            scanPos = scan.to + 1;\n        }\n    }\n    for (; tree; tree = tree.parent) {\n        let strategy = indentStrategy(tree);\n        if (strategy)\n            return strategy(new TreeIndentContext(cx, pos, tree));\n    }\n    return null;\n}\nfunction ignoreClosed(cx) {\n    var _a, _b;\n    return cx.pos == ((_a = cx.options) === null || _a === void 0 ? void 0 : _a.simulateBreak) && ((_b = cx.options) === null || _b === void 0 ? void 0 : _b.simulateDoubleBreak);\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/// Objects of this type provide context information and helper\n/// methods to indentation functions.\nclass TreeIndentContext extends IndentContext {\n    /// @internal\n    constructor(base, \n    /// The position at which indentation is being computed.\n    pos, \n    /// The syntax tree node for which the indentation strategy is\n    /// registered.\n    node) {\n        super(base.state, base.options);\n        this.pos = pos;\n        this.node = node;\n    }\n    /// Get the text directly after `this.pos`, either the entire line\n    /// or the next 100 characters, whichever is shorter.\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /// Get the indentation at the reference line for `this.node`, which\n    /// is the line on which it starts, unless there is a node that is\n    /// _not_ a parent of this node covering the start of that line. If\n    /// so, the line at the start of that node is tried, again skipping\n    /// on if it is covered by another such node.\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    var _a;\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = (_a = context.options) === null || _a === void 0 ? void 0 : _a.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/// An indentation strategy for delimited (usually bracketed) nodes.\n/// Will, by default, indent one unit more than the parent's base\n/// indent unless the line starts with a closing token. When `align`\n/// is true and there are non-skipped nodes on the node's opening\n/// line, the content of the node will be aligned with the end of the\n/// opening node, like this:\n///\n///     foo(bar,\n///         baz)\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/// An indentation strategy that aligns a node content to its base\n/// indentation.\nconst flatIndent = (context) => context.baseIndent;\n/// Creates an indentation strategy that, by default, indents\n/// continued lines one unit more than the node's base indentation.\n/// You can provide `except` to prevent indentation of lines that\n/// match a pattern (for example `/^else\\b/` in `if`/`else`\n/// constructs), and you can change the amount of units used with the\n/// `units` option.\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/// Enables reindentation on input. When a language defines an\n/// `indentOnInput` field in its [language\n/// data](#state.EditorState.languageDataAt), which must hold a regular\n/// expression, the line at the cursor will be reindented whenever new\n/// text is typed and the input from the start of the line up to the\n/// cursor matches that regexp.\n///\n/// To avoid unneccesary reindents, it is recommended to start the\n/// regexp with `^` (usually followed by `\\s*`), and end it with `$`.\n/// For example, `/^\\s*\\}$` will reindent when a closing brace is\n/// added at the start of a line.\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || tr.annotation(Transaction.userEvent) != \"input\")\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.primary.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.primary, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.slice(0, Math.min(line.length, DontIndentBeyond)))[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes }] : tr;\n    });\n}\n\n/// A facet that registers a code folding service. When called with\n/// the extent of a line, such a function should return a range\n/// object when a foldable that starts on that line (but continues\n/// beyond it), if one can be found.\nconst foldService = Facet.define();\n/// This node prop is used to associate folding information with node\n/// types. Given a syntax node, it should check whether that tree is\n/// foldable and return the range that can be collapsed when it is.\nconst foldNodeProp = new NodeProp();\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length == 0)\n        return null;\n    let inner = tree.resolve(end);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\n/// Check whether the given line is foldable. First asks any fold\n/// services registered through\n/// [`foldService`](#language.foldService), and if none of them return\n/// a result, tries to query the [fold node\n/// prop](#language.foldNodeProp) of syntax nodes that cover the end\n/// of the line.\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\n\nexport { EditorParseContext, IndentContext, Language, LezerLanguage, TreeIndentContext, continuedIndent, defineLanguageFacet, delimitedIndent, flatIndent, foldNodeProp, foldService, foldable, getIndentUnit, getIndentation, indentNodeProp, indentOnInput, indentService, indentString, indentUnit, language, languageDataProp, syntaxTree };\n","import { EditorView, Decoration, themeClass, ViewPlugin, logException, WidgetType } from '@codemirror/next/view';\nimport { StateEffect, StateField } from '@codemirror/next/state';\nimport { hoverTooltip } from '@codemirror/next/tooltip';\nimport { panels, showPanel, getPanel } from '@codemirror/next/panel';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, diagnostics.length, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state) {\n    return state.field(lintState, false) ? undefined : { append: [\n            lintState,\n            EditorView.decorations.compute([lintState], state => {\n                let { selected, panel } = state.field(lintState);\n                return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                    activeMark.range(selected.from, selected.to)\n                ]);\n            }),\n            panels(),\n            hoverTooltip(lintTooltip),\n            baseTheme\n        ] };\n}\n/// State effect that is used to update the current set of\n/// diagnostics.\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: setDiagnosticsEffect.of(diagnostics),\n        reconfigure: maybeEnableLint(state)\n    };\n}\nconst setDiagnosticsEffect = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst movePanelSelection = StateEffect.define();\nconst lintState = StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let ranges = Decoration.set(effect.value.map((d) => {\n                    return d.from < d.to\n                        ? Decoration.mark({\n                            attributes: { class: themeClass(\"lintRange.\" + d.severity) },\n                            diagnostic: d\n                        }).range(d.from, d.to)\n                        : Decoration.widget({\n                            widget: new DiagnosticWidget(d),\n                            diagnostic: d\n                        }).range(d.from);\n                }));\n                value = new LintState(ranges, value.panel, findDiagnostic(ranges));\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel ? [s.panel] : []),\n        EditorView.decorations.from(s => s.diagnostics)]\n});\nconst activeMark = Decoration.mark({ class: themeClass(\"lintRange.active\") });\nfunction lintTooltip(view, check) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(0, view.state.doc.length, (start, end, { spec }) => {\n        if (check(start, end)) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(start, stackStart);\n            stackEnd = Math.max(end, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        style: \"lint\",\n        create() {\n            let dom = document.createElement(\"ul\");\n            for (let d of found)\n                dom.appendChild(renderDiagnostic(view, d));\n            return { dom };\n        }\n    };\n}\n/// Command to open and focus the lint panel.\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: maybeEnableLint(view.state) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/// Command to close the lint panel, when open.\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Move the selection to the next diagnostic.\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.primary, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/// A set of default key bindings for the lint functionality.\n///\n/// - Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](#lint.openLintPanel)\n/// - F8: [\\`nextDiagnostic\\`](#lint.nextDiagnostic)\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst LintDelay = 500;\n/// Given a diagnostic source, this function returns an extension that\n/// enables linting with that source. It will be called whenever the\n/// editor is idle (after its content changed).\nfunction linter(source) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.lintTime = Date.now() + LintDelay;\n            this.set = true;\n            this.run = this.run.bind(this);\n            setTimeout(this.run, LintDelay);\n        }\n        run() {\n            let now = Date.now();\n            if (now < this.lintTime - 10) {\n                setTimeout(this.run, this.lintTime - now);\n            }\n            else {\n                this.set = false;\n                let { state } = this.view;\n                Promise.resolve(source(this.view)).then(annotations => {\n                    var _a, _b;\n                    if (this.view.state.doc == state.doc &&\n                        (annotations.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations));\n                }, error => { logException(this.view.state, error); });\n            }\n        }\n        update(update) {\n            if (update.docChanged) {\n                this.lintTime = Date.now() + LintDelay;\n                if (!this.set) {\n                    this.set = true;\n                    setTimeout(this.run, LintDelay);\n                }\n            }\n        }\n    });\n}\nfunction renderDiagnostic(view, diagnostic) {\n    let dom = document.createElement(\"li\");\n    dom.textContent = diagnostic.message;\n    dom.className = themeClass(\"diagnostic.\" + diagnostic.severity);\n    if (diagnostic.actions)\n        for (let action of diagnostic.actions) {\n            let button = dom.appendChild(document.createElement(\"button\"));\n            button.className = themeClass(\"diagnosticAction\");\n            button.textContent = action.name;\n            button.onclick = button.onmousedown = e => {\n                e.preventDefault();\n                let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n                if (found)\n                    action.apply(view, found.from, found.to);\n            };\n        }\n    // FIXME render source?\n    return dom;\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        let elt = document.createElement(\"span\");\n        elt.className = themeClass(\"lintPoint.\" + this.diagnostic.severity);\n        return elt;\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic);\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        this.dom = document.createElement(\"div\");\n        this.list = this.dom.appendChild(document.createElement(\"ul\"));\n        this.list.tabIndex = 0;\n        this.list.setAttribute(\"role\", \"listbox\");\n        this.list.setAttribute(\"aria-label\", this.view.state.phrase(\"Diagnostics\"));\n        this.list.addEventListener(\"keydown\", event => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38) { // ArrowUp\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40) { // ArrowDown\n                event.preventDefault();\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                event.preventDefault();\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                event.preventDefault();\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) {\n                event.preventDefault();\n                this.view.focus();\n            } // FIXME PageDown/PageUp\n        });\n        this.list.addEventListener(\"click\", event => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        });\n        let close = this.dom.appendChild(document.createElement(\"button\"));\n        close.setAttribute(\"name\", \"close\");\n        close.setAttribute(\"aria-label\", this.view.state.phrase(\"close\"));\n        close.textContent = \"×\";\n        close.addEventListener(\"click\", () => closeLintPanel(this.view));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (!this.items.length) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n        if (!this.list.firstChild)\n            this.list.appendChild(renderDiagnostic(this.view, {\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n    }\n    moveSelection(selectedIndex) {\n        // FIXME make actions accessible\n        if (this.items.length == 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    get style() { return \"lint\"; }\n    static open(view) { return new LintPanel(view); }\n}\nfunction underline(color) {\n    if (typeof btoa != \"function\")\n        return \"none\";\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"3\">\n    <path d=\"m0 3 l2 -2 l1 0 l2 2 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>\n  </svg>`;\n    return `url('data:image/svg+xml;base64,${btoa(svg)}')`;\n}\nconst baseTheme = EditorView.baseTheme({\n    $diagnostic: {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\"\n    },\n    \"$diagnostic.error\": { borderLeft: \"5px solid #d11\" },\n    \"$diagnostic.warning\": { borderLeft: \"5px solid orange\" },\n    \"$diagnostic.info\": { borderLeft: \"5px solid #999\" },\n    $diagnosticAction: {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    $lintRange: {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\"\n    },\n    \"$lintRange.error\": { backgroundImage: underline(\"#d11\") },\n    \"$lintRange.warning\": { backgroundImage: underline(\"orange\") },\n    \"$lintRange.info\": { backgroundImage: underline(\"#999\") },\n    \"$lintRange.active\": { backgroundColor: \"#ffdd9980\" },\n    $lintPoint: {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \"$lintPoint.warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \"$lintPoint.info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \"$panel.lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\"\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    },\n    \"$tooltip.lint\": {\n        padding: 0,\n        margin: 0\n    }\n});\n\nexport { closeLintPanel, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics };\n","import { Facet, combineConfig, StateField } from '@codemirror/next/state';\nimport { syntaxTree } from '@codemirror/next/language';\nimport { EditorView, Decoration, themeClass } from '@codemirror/next/view';\nimport { NodeProp } from 'lezer-tree';\n\nconst baseTheme = EditorView.baseTheme({\n    $matchingBracket: { color: \"#0b0\" },\n    $nonmatchingBracket: { color: \"#a22\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist\n        });\n    }\n});\nconst matchingMark = Decoration.mark({ class: themeClass(\"matchingBracket\") }), nonmatchingMark = Decoration.mark({ class: themeClass(\"nonmatchingBracket\") });\nconst bracketMatchingState = StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (!match)\n                continue;\n            let mark = match.matched ? matchingMark : nonmatchingMark;\n            decorations.push(mark.range(match.start.from, match.start.to));\n            if (match.end)\n                decorations.push(mark.range(match.end.from, match.end.to));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: [EditorView.decorations]\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/// Create an extension that enables bracket matching. Whenever the\n/// cursor is next to a bracket, that bracket and the one it matches\n/// are highlighted. Or, when no matching bracket is found, another\n/// highlighting style is used to indicate this.\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\n/// Find the matching bracket for the token at `pos`, scanning\n/// direction `dir`. Only the `brackets` and `maxScanDistance`\n/// properties are used from `config`, if given. Returns null if no\n/// bracket was found at `pos`, or a match result otherwise.\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), sub = tree.resolve(pos, dir), matches;\n    if (matches = matchingNodes(sub.type, dir, brackets))\n        return matchMarkedBrackets(state, pos, dir, sub, matches, brackets);\n    else\n        return matchPlainBrackets(state, pos, dir, tree, sub.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {\n    let parent = token.parent, firstToken = { from: token.from, to: token.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor;\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1) {\n                    return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    depth--;\n                    if (depth == 0)\n                        return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: false };\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolve(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\nexport { bracketMatching, matchBrackets };\n","import { ViewPlugin, themeClass, PluginField, EditorView } from '@codemirror/next/view';\nimport { Facet } from '@codemirror/next/state';\n\nconst panelConfig = Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/// Enables the panel-managing extension.\nfunction panels(config) {\n    let ext = [panelPlugin, baseTheme];\n    if (config)\n        ext.push(panelConfig.of(config));\n    return ext;\n}\n/// Opening a panel is done by providing an object describing the\n/// panel through this facet.\nconst showPanel = Facet.define();\n/// Get the active panel created by the given constructor, if any.\n/// This can be useful when you need access to your panels' DOM\n/// structure.\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = view.state.facet(showPanel).indexOf(panel);\n    return plugin && index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.specs = view.state.facet(showPanel);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.className += \" \" + panelClass(p);\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let specs = update.state.facet(showPanel);\n        if (specs != this.specs) {\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.className += \" \" + panelClass(p);\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nfunction panelClass(panel) {\n    return themeClass(panel.style ? `panel.${panel.style}` : \"panel\");\n}\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = themeClass(this.top ? \"panels.top\" : \"panels.bottom\");\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - this.view.scrollDOM.getBoundingClientRect().top\n                : this.view.scrollDOM.getBoundingClientRect().bottom - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = EditorView.baseTheme({\n    $panels: {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"$$light $panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"$$light $panels.top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"$$light $panels.bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"$$dark $panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n\nexport { getPanel, panels, showPanel };\n","import { MapMode } from '@codemirror/next/state';\n\n/// Each range is associated with a value, which must inherit from\n/// this class.\nclass RangeValue {\n    /// Compare this value with another value. The default\n    /// implementation compares by identity.\n    eq(other) { return this == other; }\n    /// Create a [range](#rangeset.Range) with this value.\n    range(from, to = from) { return new Range(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/// A range associates a value with a range of positions.\nclass Range {\n    /// @internal\n    constructor(\n    /// The range's start position.\n    from, \n    /// Its end position.\n    to, \n    /// The value associated with this range.\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\n// The maximum amount of ranges to store in a single chunk\nconst ChunkSize = 250, \n// Chunks with points of this size are never skipped during\n// compare, since moving past those points is likely to speed\n// up, rather than slow down, the comparison.\nBigPointSize = 500, \n// A large (fixnum) value to use for max/min values.\nFar = 1e9;\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // With side == -1, return the first index where to >= pos. When\n    // side == 1, the first index where from > pos.\n    findIndex(pos, end, side = end * Far, startAt = 0) {\n        if (pos <= 0)\n            return startAt;\n        let arr = end < 0 ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end < 0 ? this.value[mid].startSide : this.value[mid].endSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1), e = this.findIndex(to, 1, undefined, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/// A range set stores a collection of [ranges](#rangeset.Range) in a\n/// way that makes them efficient to [map](#rangeset.RangeSet.map) and\n/// [update](#rangeset.RangeSet.update). This is an immutable data\n/// structure.\nclass RangeSet {\n    /// @internal\n    constructor(\n    /// @internal\n    chunkPos, \n    /// @internal\n    chunk, \n    /// @internal\n    nextLayer = RangeSet.empty, \n    /// @internal\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /// @internal\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /// @internal\n    get size() {\n        if (this == RangeSet.empty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /// @internal\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /// Update the range set, optionally adding new ranges or filtering\n    /// out existing ones.\n    update(updateSpec) {\n        let { add = [], sort = false, filter, filterFrom = 0, filterTo = this.length } = updateSpec;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add.slice().sort(cmpRange);\n        if (this == RangeSet.empty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(new Range(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer == RangeSet.empty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /// Map this range set through a set of changes, return the new set.\n    map(changes) {\n        if (changes.length == 0 || this == RangeSet.empty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next, maxPoint);\n    }\n    /// Iterate over the ranges that touch the region `from` to `to`,\n    /// calling `f` for each. There is no guarantee that the ranges will\n    /// be reported in any order. When the callback returns `false`,\n    /// iteration stops.\n    between(from, to, f) {\n        if (this == RangeSet.empty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /// Iterate over the ranges in this set, in order, including all\n    /// ranges that end at or after `from`.\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /// Iterate over the given sets, starting from `from`.\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /// Iterate over two groups of sets, calling methods on `comparator`\n    /// to notify it of possible differences. `textDiff` indicates how\n    /// the underlying data changed between these ranges, and is needed\n    /// to synchronize the iteration. `from` and `to` are coordinates in\n    /// the _new_ space, after these changes.\n    static compare(oldSets, newSets, textDiff, comparator) {\n        var _a;\n        let minPoint = (_a = comparator.minPointSize) !== null && _a !== void 0 ? _a : -1;\n        let a = oldSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && newSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let b = newSets.filter(set => set.maxPoint >= BigPointSize ||\n            set != RangeSet.empty && oldSets.indexOf(set) < 0 && set.maxPoint >= minPoint);\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, minPoint);\n        let sideB = new SpanCursor(b, sharedChunks, minPoint);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /// Iterate over a group of range sets at the same time, notifying\n    /// the iterator about the ranges covering every given piece of\n    /// content. Returns the open count (see\n    /// [`SpanIterator.span`](#rangeset.SpanIterator.span)) at the end\n    /// of the iteration.\n    static spans(sets, from, to, iterator) {\n        var _a;\n        let cursor = new SpanCursor(sets, null, (_a = iterator.minPointSize) !== null && _a !== void 0 ? _a : -1).goto(from), pos = from;\n        let open = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open);\n                open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, open);\n                open = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                break;\n            pos = cursor.to;\n            cursor.next();\n        }\n        return open;\n    }\n    /// Create a range set for the given range or array of ranges. By\n    /// default, this expects the ranges to be _sorted_ (by start\n    /// position and, if two start at the same position,\n    /// `value.startSide`). You can pass `true` as second argument to\n    /// cause the method to sort them.\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? ranges.slice().sort(cmpRange) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/// The empty set of ranges.\nRangeSet.empty = new RangeSet([], [], null, -1);\nRangeSet.empty.nextLayer = RangeSet.empty;\n/// A range set builder is a data structure that helps build up a\n/// [range set](#rangeset.RangeSet) directly, without first allocating\n/// an array of [`Range`](#rangeset.Range) objects.\nclass RangeSetBuilder {\n    /// Create an empty builder.\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -Far;\n        this.lastTo = -Far;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /// Add a range. Ranges should be added in sorted (by `from` and\n    /// `value.startSide`) order.\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /// @internal\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == ChunkSize)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /// @internal\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /// Finish the range set. Returns the new set. The builder can't be\n    /// used anymore after this has been called.\n    finish() { return this.finishInner(RangeSet.empty); }\n    /// @internal\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = new RangeSet(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint < BigPointSize)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (inA.get(set.chunk[i]) == set.chunkPos[i])\n                shared.add(set.chunk[i]);\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -Far) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        let rangeIndex = this.chunkIndex == this.layer.chunk.length ? 0\n            : this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], -1, side);\n        if (!forward || this.rangeIndex < rangeIndex)\n            this.rangeIndex = rangeIndex;\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = Far;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                if (++this.rangeIndex == chunk.value.length) {\n                    this.chunkIndex++;\n                    if (this.skip) {\n                        while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                            this.chunkIndex++;\n                    }\n                    this.rangeIndex = 0;\n                }\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; cur != RangeSet.empty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -Far) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = Far;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -Far;\n        this.endSide = 0;\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -Far) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = Far;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    if (this.cursor.from < from)\n                        trackExtra = 1;\n                    this.cursor.next();\n                    if (this.to > from)\n                        this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            let openStart = 0;\n            while (openStart < trackOpen.length && trackOpen[openStart] < from)\n                openStart++;\n            this.openStart = openStart + trackExtra;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = 0; i < this.active.length; i++) {\n            if (this.activeRank[i] > this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide > this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active;\n    }\n    openEnd(to) {\n        let open = 0;\n        while (open < this.activeTo.length && this.activeTo[open] > to)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = Far;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\nexport { Range, RangeSet, RangeSetBuilder, RangeValue };\n","import { Decoration, themeClass, ViewPlugin, EditorView, runScopeHandlers } from '@codemirror/next/view';\nimport { StateEffect, StateField, EditorSelection, precedence } from '@codemirror/next/state';\nimport { showPanel, getPanel, panels } from '@codemirror/next/panel';\nimport { RangeSetBuilder } from '@codemirror/next/rangeset';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\" ? x => x.normalize(\"NFKD\") : x => x;\n/// A search cursor provides an iterator over text matches in a\n/// document.\nclass SearchCursor {\n    /// Create a text cursor. The query is the search string, `from` to\n    /// `to` provides the region to search.\n    ///\n    /// When `normalize` is given, it will be called, on both the query\n    /// string and the content it is matched against, before comparing.\n    /// You can, for example, create a case-insensitive search by\n    /// passing `s => s.toLowerCase()`.\n    ///\n    /// Text is always normalized with\n    /// [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    /// (when supported).\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /// The current match (only holds a meaningful value after\n        /// [`next`](#search.SearchCursor.next) has been called and when\n        /// `done` is false).\n        this.value = { from: 0, to: 0 };\n        /// Whether the end of the iterated region has been reached.\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return this.buffer.charCodeAt(this.bufferPos);\n    }\n    /// Look for the next match. Updates the iterator's\n    /// [`value`](#search.SearchCursor.value) and\n    /// [`done`](#search.SearchCursor.done) properties. Should be called\n    /// at least once before using the cursor.\n    next() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = String.fromCharCode(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos++;\n            for (;;) {\n                let peek = this.peek();\n                if (peek < 0xDC00 || peek >= 0xE000)\n                    break;\n                this.bufferPos++;\n                str += String.fromCharCode(peek);\n            }\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\n\nclass Query {\n    constructor(search, replace, caseInsensitive) {\n        this.search = search;\n        this.replace = replace;\n        this.caseInsensitive = caseInsensitive;\n    }\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace && this.caseInsensitive == other.caseInsensitive;\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.search, from, to, this.caseInsensitive ? x => x.toLowerCase() : undefined);\n    }\n    get valid() { return !!this.search; }\n}\nconst setQuery = StateEffect.define();\nconst togglePanel = StateEffect.define();\nconst searchState = StateField.define({\n    create() {\n        return new SearchState(new Query(\"\", \"\", false), []);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setQuery))\n                value = new SearchState(effect.value, value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? [createSearchPanel] : []);\n        }\n        return value;\n    },\n    provide: [showPanel.nFrom(s => s.panel)]\n});\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = Decoration.mark({ class: themeClass(\"searchMatch\") }), selectedMatchMark = Decoration.mark({ class: themeClass(\"searchMatch.selected\") });\nconst searchHighlighter = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.prevState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel.length || !query.valid)\n            return Decoration.none;\n        let state = this.view.state, viewport = this.view.viewport;\n        let cursor = query.cursor(state.doc, Math.max(0, viewport.from - query.search.length), Math.min(viewport.to + query.search.length, state.doc.length));\n        let builder = new RangeSetBuilder();\n        while (!cursor.next().done) {\n            let { from, to } = cursor.value;\n            let selected = state.selection.ranges.some(r => r.from == from && r.to == to);\n            builder.add(from, to, selected ? selectedMatchMark : matchMark);\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\nfunction findNextMatch(doc, from, query) {\n    let cursor = query.cursor(doc, from).next();\n    if (cursor.done) {\n        cursor = query.cursor(doc, 0, from + query.search.length - 1).next();\n        if (cursor.done)\n            return null;\n    }\n    return cursor.value;\n}\n/// Open the search panel if it isn't already open, and move the\n/// selection to the first match after the current primary selection.\n/// Will wrap around to the start of the document when it reaches the\n/// end.\nconst findNext = searchCommand((view, state) => {\n    let { from, to } = view.state.selection.primary;\n    let next = findNextMatch(view.state.doc, view.state.selection.primary.from + 1, state.query);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\nconst FindPrevChunkSize = 10000;\n// Searching in reverse is, rather than implementing inverted search\n// cursor, done by scanning chunk after chunk forward.\nfunction findPrevInRange(query, doc, from, to) {\n    for (let pos = to;;) {\n        let start = Math.max(from, pos - FindPrevChunkSize - query.search.length);\n        let cursor = query.cursor(doc, start, pos), range = null;\n        while (!cursor.next().done)\n            range = cursor.value;\n        if (range)\n            return range;\n        if (start == from)\n            return null;\n        pos -= FindPrevChunkSize;\n    }\n}\n/// Move the selection to the previous instance of the search query,\n/// before the current primary selection. Will wrap past the start\n/// of the document to start searching at the end again.\nconst findPrevious = searchCommand((view, { query }) => {\n    let { state } = view;\n    let range = findPrevInRange(query, state.doc, 0, state.selection.primary.to - 1) ||\n        findPrevInRange(query, state.doc, state.selection.primary.from + 1, state.doc.length);\n    if (!range)\n        return false;\n    view.dispatch({ selection: { anchor: range.from, head: range.to }, scrollIntoView: true });\n    maybeAnnounceMatch(view);\n    return true;\n});\n/// Select all instances of the search query.\nconst selectMatches = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), ranges = [];\n    while (!cursor.next().done)\n        ranges.push(EditorSelection.range(cursor.value.from, cursor.value.to));\n    if (!ranges.length)\n        return false;\n    view.dispatch({ selection: EditorSelection.create(ranges) });\n    return true;\n});\n/// Select all instances of the currently selected text.\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.primary.empty)\n        return false;\n    let { from, to } = sel.primary;\n    let ranges = [], primary = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            primary = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({ selection: new EditorSelection(ranges, primary) }));\n    return true;\n};\n/// Replace the current match of the search query.\nconst replaceNext = searchCommand((view, { query }) => {\n    let { state } = view, next = findNextMatch(state.doc, state.selection.primary.from, query);\n    if (!next)\n        return false;\n    let { from, to } = state.selection.primary, changes = [], selection;\n    if (next.from == from && next.to == to) {\n        changes.push({ from: next.from, to: next.to, insert: query.replace });\n        next = findNextMatch(state.doc, next.to, query);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - query.replace.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({ changes, selection, scrollIntoView: !!selection });\n    if (next)\n        maybeAnnounceMatch(view);\n    return true;\n});\n/// Replace all instances of the search query with the given\n/// replacement.\nconst replaceAll = searchCommand((view, { query }) => {\n    let cursor = query.cursor(view.state.doc), changes = [];\n    while (!cursor.next().done) {\n        let { from, to } = cursor.value;\n        changes.push({ from, to, insert: query.replace });\n    }\n    if (!changes.length)\n        return false;\n    view.dispatch({ changes });\n    return true;\n});\nfunction createSearchPanel(view) {\n    let { query } = view.state.field(searchState);\n    return {\n        dom: buildPanel({\n            view,\n            query,\n            updateQuery(q) {\n                if (!query.eq(q)) {\n                    query = q;\n                    view.dispatch({ effects: setQuery.of(query) });\n                }\n            }\n        }),\n        mount() {\n            this.dom.querySelector(\"[name=search]\").select();\n        },\n        pos: 80,\n        style: \"search\"\n    };\n}\n/// Make sure the search panel is open and focused.\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel.length) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        panel.dom.querySelector(\"[name=search]\").focus();\n    }\n    else {\n        view.dispatch({ effects: togglePanel.of(true),\n            reconfigure: state ? undefined : { append: searchExtensions } });\n    }\n    return true;\n};\n/// Close the search panel.\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel.length)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/// Default search-related key bindings.\n///\n///  * Mod-f: [`openSearchPanel`](#search.openSearchPanel)\n///  * F3, Mod-g: [`findNext`](#search.findNext)\n///  * Shift-F3, Shift-Mod-g: [`findPrevious`](#search.findPrevious)\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\" },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches }\n];\nfunction elt(name, props = null, children = []) {\n    let e = document.createElement(name);\n    if (props)\n        for (let prop in props) {\n            let value = props[prop];\n            if (typeof value == \"string\")\n                e.setAttribute(prop, value);\n            else\n                e[prop] = value;\n        }\n    for (let child of children)\n        e.appendChild(typeof child == \"string\" ? document.createTextNode(child) : child);\n    return e;\n}\n// FIXME sync when search state changes independently\nfunction buildPanel(conf) {\n    function p(phrase) { return conf.view.state.phrase(phrase); }\n    let searchField = elt(\"input\", {\n        value: conf.query.search,\n        placeholder: p(\"Find\"),\n        \"aria-label\": p(\"Find\"),\n        class: themeClass(\"textfield\"),\n        name: \"search\",\n        onchange: update,\n        onkeyup: update\n    });\n    let replaceField = elt(\"input\", {\n        value: conf.query.replace,\n        placeholder: p(\"Replace\"),\n        \"aria-label\": p(\"Replace\"),\n        class: themeClass(\"textfield\"),\n        name: \"replace\",\n        onchange: update,\n        onkeyup: update\n    });\n    let caseField = elt(\"input\", {\n        type: \"checkbox\",\n        name: \"case\",\n        checked: !conf.query.caseInsensitive,\n        onchange: update\n    });\n    function update() {\n        conf.updateQuery(new Query(searchField.value, replaceField.value, !caseField.checked));\n    }\n    function keydown(e) {\n        if (runScopeHandlers(conf.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(conf.view);\n        }\n        else if (e.keyCode == 13 && e.target == replaceField) {\n            e.preventDefault();\n            replaceNext(conf.view);\n        }\n    }\n    function button(name, onclick, content) {\n        return elt(\"button\", { class: themeClass(\"button\"), name, onclick }, content);\n    }\n    let panel = elt(\"div\", { onkeydown: keydown }, [\n        searchField,\n        button(\"next\", () => findNext(conf.view), [p(\"next\")]),\n        button(\"prev\", () => findPrevious(conf.view), [p(\"previous\")]),\n        button(\"select\", () => selectMatches(conf.view), [p(\"all\")]),\n        elt(\"label\", null, [caseField, \"match case\"]),\n        elt(\"br\"),\n        replaceField,\n        button(\"replace\", () => replaceNext(conf.view), [p(\"replace\")]),\n        button(\"replaceAll\", () => replaceAll(conf.view), [p(\"replace all\")]),\n        elt(\"button\", { name: \"close\", onclick: () => closeSearchPanel(conf.view), \"aria-label\": p(\"close\") }, [\"×\"]),\n        elt(\"div\", { style: \"position: absolute; top: -10000px\", \"aria-live\": \"polite\" })\n    ]);\n    return panel;\n}\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\n// FIXME this is a kludge\nfunction maybeAnnounceMatch(view) {\n    let { from, to } = view.state.selection.primary;\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    let panel = getPanel(view, createSearchPanel);\n    if (!panel || !panel.dom.contains(view.root.activeElement))\n        return;\n    let live = panel.dom.querySelector(\"div[aria-live]\");\n    live.textContent = view.state.phrase(\"current match\") + \". \" + text;\n}\nconst baseTheme = EditorView.baseTheme({\n    \"$panel.search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button\": {\n            margin: \".2em .5em .2em 0\"\n        },\n        \"& label\": {\n            fontSize: \"80%\"\n        }\n    },\n    \"$$light $searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"$$dark $searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"$$light $searchMatch.selected\": { backgroundColor: \"#ff6a0054\" },\n    \"$$dark $searchMatch.selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    precedence(searchHighlighter, \"override\"),\n    panels(),\n    baseTheme\n];\n\nexport { SearchCursor, closeSearchPanel, findNext, findPrevious, openSearchPanel, replaceAll, replaceNext, searchKeymap, selectMatches, selectSelectionMatches };\n","import { Text } from '@codemirror/next/text';\nexport { Text } from '@codemirror/next/text';\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/// Distinguishes different ways in which positions can be mapped.\nvar MapMode;\n(function (MapMode) {\n    /// Map a position to a valid new position, even when its context\n    /// was deleted.\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /// Return null if deletion happens across the position.\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /// Return null if the character _before_ the position is deleted.\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /// Return null if the character _after_ the position is deleted.\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\n})(MapMode || (MapMode = {}));\n/// A change description is a variant of [change set](#state.ChangeSet)\n/// that doesn't store the inserted text. As such, it can't be\n/// applied, but is cheaper to store and manipulate.\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /// @internal\n    constructor(\n    /// @internal\n    sections) {\n        this.sections = sections;\n    }\n    /// The length of the document before the change.\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /// The length of the document after the change.\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /// False when there are actual changes in this set.\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /// Iterate over the unchanged parts left by these changes.\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /// Iterate over the ranges changed by these changes. (See\n    /// [`ChangeSet.iterChanges`](#state.ChangeSet.iterChanges) for a\n    /// variant that also provides you with the inserted text.)\n    ///\n    /// When `individual` is true, adjacent changes (which are kept\n    /// separate for [position mapping](#state.ChangeDesc.mapPos)) are\n    /// reported separately.\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a description of the inverted form of these changes.\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /// Compute the combined effect of applying another set of changes\n    /// after this one. The length of the document after this set should\n    /// match the length before `other`.\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /// Map this description, which should start with the same document\n    /// as `other`, over another set of changes, so that it can be\n    /// applied after it.\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /// Check whether these changes touch a given range. When one of the\n    /// changes entirely covers the range, the string `\"cover\"` is\n    /// returned.\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /// @internal\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n}\n/// A change set represents a group of modifications to a document. It\n/// stores the document length, and can only be applied to documents\n/// with exactly that length.\nclass ChangeSet extends ChangeDesc {\n    /// @internal\n    constructor(sections, \n    /// @internal\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /// Apply the changes to a document, returning the modified\n    /// document.\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    /// Map this set, which should start with the same document as\n    /// `other`, over another set of changes, so that it can be applied\n    /// after it. When `before` is true, map as if the changes in\n    /// `other` happened before the ones in `this`.\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /// Given the document as it existed _before_ the changes, return a\n    /// change set that represents the inverse of this set, which could\n    /// be used to go from the document created by the changes back to\n    /// the document as it existed before the changes.\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /// Combine two subsequent change sets into a single set. `other`\n    /// must start in the document produced by `this`. If `this` goes\n    /// `docA` → `docB` and `other` represents `docB` → `docC`, the\n    /// returned value will represent the change `docA` → `docC`.\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /// Given another change set starting in the same document, maps this\n    /// change set over the other, producing a new change set that can be\n    /// applied to the document produced by applying `other`. When\n    /// `before` is `true`, order changes as if `this` comes before\n    /// `other`, otherwise (the default) treat `other` as coming first.\n    ///\n    /// Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    /// `B.compose(A.map(B, true))` will produce the same document. This\n    /// provides a basic form of [operational\n    /// transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    /// and can be used for collaborative editing.\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /// Iterate over the changed ranges in the document, calling `f` for\n    /// each.\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /// Get a [change description](#state.ChangeDesc) for this change\n    /// set.\n    get desc() { return new ChangeDesc(this.sections); }\n    /// @internal\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: new ChangeDesc(filteredSections) };\n    }\n    /// Serialize this change set to a JSON-representable value.\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len, this.inserted[i >> 1].toJSON()]);\n        }\n        return parts;\n    }\n    /// Create a change set for the given changes, for a document of the\n    /// given length, using `lineSep` as line separator.\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /// Create an empty changeset of the given length.\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /// Create a changeset from its JSON representation (as produced by\n    /// [`toJSON`](#state.ChangeSet.toJSON).\n    static fromJSON(json) {\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part[1]);\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let posA = 0, posB = 0;;) {\n        if (a.ins == -1) {\n            posA += a.len;\n            a.next();\n        }\n        else if (b.ins == -1 && posB < posA) {\n            let skip = Math.min(b.len, posA - posB);\n            b.forward(skip);\n            addSection(sections, skip, -1);\n            posB += skip;\n        }\n        else if (b.ins >= 0 && (a.done || posB < posA || posB == posA && (b.len < a.len || b.len == a.len && !before))) {\n            addSection(sections, b.ins, -1);\n            while (posA > posB && !a.done && posA + a.len < posB + b.len) {\n                posA += a.len;\n                a.next();\n            }\n            posB += b.len;\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            let len = 0, end = posA + a.len;\n            for (;;) {\n                if (b.ins >= 0 && posB > posA && posB + b.len < end) {\n                    len += b.ins;\n                    posB += b.len;\n                    b.next();\n                }\n                else if (b.ins == -1 && posB < end) {\n                    let skip = Math.min(b.len, end - posB);\n                    len += skip;\n                    b.forward(skip);\n                    posB += skip;\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, a.ins);\n            if (insert)\n                addInsert(insert, sections, a.text);\n            posA = end;\n            a.next();\n        }\n        else if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/// A single selection range. When\n/// [`allowMultipleSelections`](#state.EditorState^allowMultipleSelections)\n/// is enabled, a [selection](#state.EditorSelection) may hold\n/// multiple ranges. By default, selections hold exactly one range.\nclass SelectionRange {\n    // @internal\n    constructor(\n    /// The lower side of the range.\n    from, \n    /// The upper side of the range.\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /// The anchor of the range—the side that doesn't move when you\n    /// extend it.\n    get anchor() { return this.flags & 16 /* Inverted */ ? this.to : this.from; }\n    /// The head of the range, which is moved when the range is\n    /// [extended](#state.SelectionRange.extend).\n    get head() { return this.flags & 16 /* Inverted */ ? this.from : this.to; }\n    /// True when `anchor` and `head` are at the same position.\n    get empty() { return this.from == this.to; }\n    /// If this is a cursor that is explicitly associated with the\n    /// character on one of its sides, this returns the side. -1 means\n    /// the character before its position, 1 the character after, and 0\n    /// means no association.\n    get assoc() { return this.flags & 4 /* AssocBefore */ ? -1 : this.flags & 8 /* AssocAfter */ ? 1 : 0; }\n    /// The bidirectional text level associated with this cursor.\n    get bidiLevel() {\n        let level = this.flags & 3 /* BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    get goalColumn() {\n        let value = this.flags >> 5 /* GoalColumnOffset */;\n        return value == 33554431 /* NoGoalColumn */ ? undefined : value;\n    }\n    /// Map this range through a mapping.\n    map(mapping) {\n        let from = mapping.mapPos(this.from), to = mapping.mapPos(this.to);\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /// Extend this range to cover at least `from` to `to`.\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /// Compare this range to another range.\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /// Return a JSON-serializable object representing the range.\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /// Convert a JSON representation of a range to a `SelectionRange`\n    /// instance.\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n}\n/// An editor selection holds one or more selection ranges.\nclass EditorSelection {\n    /// @internal\n    constructor(\n    /// The ranges in the selection, sorted by position. Ranges cannot\n    /// overlap (but they may touch, if they aren't empty).\n    ranges, \n    /// The index of the _primary_ range in the selection (which is\n    /// usually the range that was added last).\n    primaryIndex = 0) {\n        this.ranges = ranges;\n        this.primaryIndex = primaryIndex;\n    }\n    /// Map a selection through a mapping. Mostly used to adjust the\n    /// selection position for changes.\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(mapping)), this.primaryIndex);\n    }\n    /// Compare this selection to another selection.\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.primaryIndex != other.primaryIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /// Get the primary selection range. Usually, you should make sure\n    /// your code applies to _all_ ranges, by using methods like\n    /// [`changeByRange`](#state.EditorState.changeByRange).\n    get primary() { return this.ranges[this.primaryIndex]; }\n    /// Make sure the selection only has one range. Returns a selection\n    /// holding only the primary range from this selection.\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.primary]);\n    }\n    /// Extend this selection with an extra range.\n    addRange(range, primary = true) {\n        return EditorSelection.create([range].concat(this.ranges), primary ? 0 : this.primaryIndex + 1);\n    }\n    /// Replace a given range with another range, and then normalize the\n    /// selection to merge and sort ranges if necessary.\n    replaceRange(range, which = this.primaryIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.primaryIndex);\n    }\n    /// Convert this selection to an object that can be serialized to\n    /// JSON.\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), primaryIndex: this.primaryIndex };\n    }\n    /// Create a selection from a JSON representation.\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.primaryIndex != \"number\" || json.primaryIndex >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.primaryIndex);\n    }\n    /// Create a selection holding a single range.\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /// Sort and merge the given set of ranges, creating a valid\n    /// selection.\n    static create(ranges, primaryIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return normalized(ranges.slice(), primaryIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, primaryIndex);\n    }\n    /// Create a cursor selection range at the given position. You can\n    /// probably ignore [association](#state.SelectionRange.assoc) and\n    /// [bidi level](#state.SelectionRange.bidiLevel) in most\n    /// situations.\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return new SelectionRange(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* AssocBefore */ : 8 /* AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */));\n    }\n    /// Create a selection range.\n    static range(anchor, head, goalColumn) {\n        let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */;\n        return head < anchor ? new SelectionRange(head, anchor, 16 /* Inverted */ | goal) : new SelectionRange(anchor, head, goal);\n    }\n}\nfunction normalized(ranges, primaryIndex = 0) {\n    let primary = ranges[primaryIndex];\n    ranges.sort((a, b) => a.from - b.from);\n    primaryIndex = ranges.indexOf(primary);\n    for (let i = 1; i < ranges.length; i++) {\n        let range = ranges[i], prev = ranges[i - 1];\n        if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n            let from = prev.from, to = Math.max(range.to, prev.to);\n            if (i <= primaryIndex)\n                primaryIndex--;\n            ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n        }\n    }\n    return new EditorSelection(ranges, primaryIndex);\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/// A facet is a value that is assicated with a state and can be\n/// influenced by any number of extensions. Extensions can provide\n/// input values for the facet, and the facet combines those into an\n/// output value.\n///\n/// Examples of facets are the theme styles associated with an editor\n/// (which are all stored) or the tab size (which is reduced to a\n/// single value, using the input with the hightest precedence).\nclass Facet {\n    constructor(\n    /// @internal\n    combine, \n    /// @internal\n    compareInput, \n    /// @internal\n    compare, isStatic) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /// @internal\n        this.id = nextID++;\n        this.default = combine([]);\n    }\n    /// Define a new facet.\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static);\n    }\n    /// Returns an extension that adds the given value for this facet.\n    of(value) {\n        return new FacetProvider([], this, 0 /* Static */, value);\n    }\n    /// Create an extension that computes a value for the facet from a\n    /// state. You must take care to declare the parts of the state that\n    /// this value depends on, since your function is only called again\n    /// for a new state when one of those parts changed.\n    ///\n    /// In most cases, you'll want to use the\n    /// [`provide`](#state.StateField^define^config.provide) option when\n    /// defining a field instead.\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Single */, get);\n    }\n    /// Create an extension that computes zero or more values for this\n    /// facet from a state.\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Multi */, get);\n    }\n    /// Helper method for registering a facet source with a state field\n    /// via its [`provide`](#state.StateField^define^config.provide) option.\n    /// Returns a value that can be passed to that option to make the\n    /// field automatically provide a value for this facet.\n    from(get, prec) {\n        return field => maybePrec(prec, this.compute([field], state => get(state.field(field))));\n    }\n    /// Helper for [providing](#state.StateField^define^config.provide)\n    /// a dynamic number of values for this facet from a state field.\n    nFrom(get, prec) {\n        return field => maybePrec(prec, this.computeN([field], state => get(state.field(field))));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let idx = addresses[this.id] >> 1, multi = this.type == 2 /* Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return (state, tr) => {\n            if (!tr || tr.reconfigure) {\n                state.values[idx] = getter(state);\n                return 1 /* Changed */;\n            }\n            else {\n                let depChanged = (depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) ||\n                    depAddrs.some(addr => (ensureAddr(state, addr) & 1 /* Changed */) > 0);\n                if (!depChanged)\n                    return 0;\n                let newVal = getter(state), oldVal = tr.startState.values[idx];\n                if (multi ? compareArray(newVal, oldVal, compare) : compare(newVal, oldVal))\n                    return 0;\n                state.values[idx] = newVal;\n                return 1 /* Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    return (state, tr) => {\n        let oldAddr = !tr ? null : tr.reconfigure ? tr.startState.config.address[facet.id] : idx << 1;\n        let changed = oldAddr == null;\n        for (let dynAddr of dynamic) {\n            if (ensureAddr(state, dynAddr) & 1 /* Changed */)\n                changed = true;\n        }\n        if (!changed)\n            return 0;\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        let newVal = facet.combine(values);\n        if (oldAddr != null && facet.compare(newVal, getAddr(tr.startState, oldAddr)))\n            return 0;\n        state.values[idx] = newVal;\n        return 1 /* Changed */;\n    };\n}\nfunction maybeIndex(state, id) {\n    let found = state.config.address[id];\n    return found == null ? null : found >> 1;\n}\n/// Fields can store additional information in an editor state, and\n/// keep it in sync with the rest of the state.\nclass StateField {\n    constructor(\n    /// @internal\n    id, createF, updateF, compareF, \n    /// @internal\n    facets) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.facets = facets;\n    }\n    /// Define a state field.\n    static define(config) {\n        let facets = [];\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), facets);\n        if (config.provide)\n            for (let p of config.provide) {\n                if (p instanceof Facet)\n                    facets.push(p.compute([field], state => state.field(field)));\n                else\n                    facets.push(p(field));\n            }\n        return field;\n    }\n    /// @internal\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return (state, tr) => {\n            if (!tr) {\n                state.values[idx] = this.createF(state);\n                return 1 /* Changed */;\n            }\n            let oldVal, changed = 0;\n            if (tr.reconfigure) {\n                let oldIdx = maybeIndex(tr.startState, this.id);\n                oldVal = oldIdx == null ? this.createF(tr.startState) : tr.startState.values[oldIdx];\n                changed = 1 /* Changed */;\n            }\n            else {\n                oldVal = tr.startState.values[idx];\n            }\n            let value = this.updateF(oldVal, tr);\n            if (!changed && !this.compareF(oldVal, value))\n                changed = 1 /* Changed */;\n            if (changed)\n                state.values[idx] = value;\n            return changed;\n        };\n    }\n}\nconst Prec = { fallback: 3, default: 2, extend: 1, override: 0 };\n/// By default extensions are registered in the order they are found\n/// the flattened form of nested array that was provided. Individual\n/// extension values can be assigned a precedence to override this.\n/// Extensions that do not have a precedence set get the precedence of\n/// the nearest parent with a precedence, or\n/// [`\"default\"`](#state.Precedence) if there is no such parent. The\n/// final ordering of extensions is determined by first sorting by\n/// precedence and then by order within each precedence.\nfunction precedence(extension, value) {\n    if (!Prec.hasOwnProperty(value))\n        throw new RangeError(`Invalid precedence: ${value}`);\n    return new PrecExtension(extension, Prec[value]);\n}\nfunction maybePrec(prec, ext) {\n    return prec ? precedence(ext, prec) : ext;\n}\nclass PrecExtension {\n    constructor(e, prec) {\n        this.e = e;\n        this.prec = prec;\n    }\n}\nclass TaggedExtension {\n    constructor(tag, extension) {\n        this.tag = tag;\n        this.extension = extension;\n    }\n}\n/// Tagged extensions can be used to make a configuration dynamic.\n/// Tagging an extension allows you to later\n/// [replace](#state.TransactionSpec.reconfigure) it with\n/// another extension. A given tag may only occur once within a given\n/// configuration.\nfunction tagExtension(tag, extension) {\n    return new TaggedExtension(tag, extension);\n}\nclass Configuration {\n    constructor(source, replacements, dynamicSlots, address, staticValues) {\n        this.source = source;\n        this.replacements = replacements;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* Uninitialized */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(extension, replacements = Object.create(null), oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        for (let ext of flatten(extension, replacements)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            if (providers.every(p => p.type == 0 /* Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                let value = facet.combine(providers.map(p => p.value));\n                let oldAddr = oldState ? oldState.config.address[facet.id] : null;\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (facet.compare(value, oldVal))\n                        value = oldVal;\n                }\n                staticValues.push(value);\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        return new Configuration(extension, replacements, dynamicSlots.map(f => f(address)), address, staticValues);\n    }\n}\nfunction allKeys(obj) {\n    return (Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(obj) : []).concat(Object.keys(obj));\n}\nfunction flatten(extension, replacements) {\n    let result = [[], [], [], []];\n    let seen = new Map();\n    let tagsSeen = Object.create(null);\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known >= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof TaggedExtension) {\n            if (ext.tag in tagsSeen)\n                throw new RangeError(`Duplicate use of tag '${String(ext.tag)}' in extensions`);\n            tagsSeen[ext.tag] = true;\n            inner(replacements[ext.tag] || ext.extension, prec);\n        }\n        else if (ext.extension) {\n            inner(ext.extension, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.e, ext.prec);\n        }\n        else {\n            result[prec].push(ext);\n            if (ext instanceof StateField)\n                inner(ext.facets, prec);\n        }\n    }\n    inner(extension, Prec.default);\n    for (let key of allKeys(replacements))\n        if (!(key in tagsSeen) && key != \"full\" && replacements[key]) {\n            tagsSeen[key] = true;\n            inner(replacements[key], Prec.default);\n        }\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* Computed */)\n        return status;\n    state.status[idx] = 4 /* Computing */;\n    let changed = state.config.dynamicSlots[idx](state, state.applying);\n    return state.status[idx] = 2 /* Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = Facet.define();\nconst allowMultipleSelections = Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = Facet.define();\nconst transactionFilter = Facet.define();\nconst transactionExtender = Facet.define();\n\n/// Annotations are tagged values that are used to add metadata to\n/// transactions in an extensible way. They should be used to model\n/// things that effect the entire transaction (such as its [time\n/// stamp](#state.Transaction^time) or information about its\n/// [origin](#state.Transaction^userEvent)). For effects that happen\n/// _alongside_ the other changes made by the transaction, [state\n/// effects](#state.StateEffect) are more appropriate.\nclass Annotation {\n    /// @internal\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Define a new type of annotation.\n    static define() { return new AnnotationType(); }\n}\n/// Marker that identifies a type of [annotation](#state.Annotation).\nclass AnnotationType {\n    of(value) { return new Annotation(this, value); }\n}\n/// State effects can be used to represent additional effects\n/// associated with a [transaction](#state.Transaction.effects). They\n/// are often useful to model changes to custom [state\n/// fields](#state.StateField), when those changes aren't implicit in\n/// document or selection changes.\nclass StateEffect {\n    /// @internal\n    constructor(\n    /// @internal\n    type, \n    /// The value of this effect.\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /// Map this effect through a position mapping. Will return\n    /// `undefined` when that ends up deleting the effect.\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /// Tells you whether this effect object is of a given\n    /// [type](#state.StateEffectType).\n    is(type) { return this.type == type; }\n    /// Define a new effect type. The type parameter indicates the type\n    /// of values that his effect holds.\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /// Map an array of effects through a change set.\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/// Representation of a type of state effect. Defined with\n/// [`StateEffect.define`](#state.StateEffect^define).\nclass StateEffectType {\n    /// @internal\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /// @internal\n    map) {\n        this.map = map;\n    }\n    /// Create a [state effect](#state.StateEffect) instance of this\n    /// type.\n    of(value) { return new StateEffect(this, value); }\n}\n/// Changes to the editor state are grouped into transactions.\n/// Typically, a user action creates a single transaction, which may\n/// contain any number of document changes, may change the selection,\n/// or have other effects. Create a transaction by calling\n/// [`EditorState.update`](#state.EditorState.update).\nclass Transaction {\n    /// @internal\n    constructor(\n    /// The state from which the transaction starts.\n    startState, \n    /// The document changes made by this transaction.\n    changes, \n    /// The selection set by this transaction, or undefined if it\n    /// doesn't explicitly set a selection.\n    selection, \n    /// The effects added to the transaction.\n    effects, \n    /// @internal\n    annotations, \n    /// Holds an object when this transaction\n    /// [reconfigures](#state.ReconfigurationSpec) the state.\n    reconfigure, \n    /// Whether the selection should be scrolled into view after this\n    /// transaction is dispatched.\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.reconfigure = reconfigure;\n        this.scrollIntoView = scrollIntoView;\n        /// @internal\n        this._doc = null;\n        /// @internal\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /// The new document produced by the transaction. (Mostly exposed so\n    /// that [transaction filters](#state.EditorState^transactionFilter)\n    /// can look at the new document without forcing an entire new state\n    /// to be computed by accessing\n    /// [`.state`](#state.Transaction.state).\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /// The new selection produced by the transaction. If\n    /// [`this.selection`](#state.Transaction.selection) is undefined,\n    /// this will [map](#state.EditorSelection.map) the start state's\n    /// current selection through the changes made by the transaction.\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /// The new state created by the transaction.\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /// Get the value of the given annotation type, if any.\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /// Indicates whether the transaction changed the document.\n    get docChanged() { return !this.changes.empty; }\n}\n/// Annotation used to store transaction timestamps.\nTransaction.time = Annotation.define();\n/// Annotation used to associate a transaction with a user interface\n/// event. The view will set this to...\n///\n///  - `\"input\"` when the user types text\n///  - `\"delete\"` when the user deletes the selection or text near the selection\n///  - `\"keyboardselection\"` when moving the selection via the keyboard\n///  - `\"pointerselection\"` when moving the selection through the pointing device\n///  - `\"paste\"` when pasting content\n///  - `\"cut\"` when cutting\n///  - `\"drop\"` when content is inserted via drag-and-drop\nTransaction.userEvent = Annotation.define();\n/// Annotation indicating whether a transaction should be added to\n/// the undo history or not.\nTransaction.addToHistory = Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView,\n        reconfigure: !b.reconfigure ? a.reconfigure : b.reconfigure.full || !a.reconfigure ? b.reconfigure\n            : Object.assign({}, a.reconfigure, b.reconfigure)\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let reconf = spec.reconfigure;\n    if (reconf && reconf.append) {\n        reconf = Object.assign({}, reconf);\n        let tag = typeof Symbol == \"undefined\" ? \"__append\" + Math.floor(Math.random() * 0xffffffff) : Symbol(\"appendConf\");\n        reconf[tag] = reconf.append;\n        reconf.append = undefined;\n    }\n    let sel = spec.selection;\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations: asArray(spec.annotations),\n        scrollIntoView: !!spec.scrollIntoView,\n        reconfigure: reconf\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = new Transaction(state, s.changes, s.selection, s.effects, s.annotations, s.reconfigure, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.invertedDesc;\n        }\n        tr = new Transaction(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.reconfigure, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(tr, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : new Transaction(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.reconfigure, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/// This is used to [categorize](#state.EditorState.charCategorizer)\n/// characters into three categories—word characters, whitespace, and\n/// anything else. It is used do things like selecting by word.\nvar CharCategory;\n(function (CharCategory) {\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\n})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/// The editor state class is a persistent (immutable) data structure.\n/// To update a state, you [create](#state.EditorState.update) a\n/// [transaction](#state.Transaction), which produces a _new_ state\n/// instance, without modifying the original object.\n///\n/// As such, _never_ mutate properties of a state directly. That'll\n/// just break things.\nclass EditorState {\n    /// @internal\n    constructor(\n    /// @internal\n    config, \n    /// The current document.\n    doc, \n    /// The current selection.\n    selection, tr = null) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        /// @internal\n        this.applying = null;\n        this.status = config.statusTemplate.slice();\n        if (tr && !tr.reconfigure) {\n            this.values = tr.startState.values.slice();\n        }\n        else {\n            this.values = config.dynamicSlots.map(_ => null);\n            // Copy over old values for shared facets/fields if this is a reconfigure\n            if (tr)\n                for (let id in config.address) {\n                    let cur = config.address[id], prev = tr.startState.config.address[id];\n                    if (prev != null && (cur & 1) == 0)\n                        this.values[cur >> 1] = getAddr(tr.startState, prev);\n                }\n        }\n        this.applying = tr;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.applying = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Create a [transaction](#state.Transaction) that updates this\n    /// state. Any number of [transaction specs](#state.TransactionSpec)\n    /// can be passed. The [changes](#state.TransactionSpec.changes) (if\n    /// any) of each spec are assumed to start in the _current_ document\n    /// (not the document produced by previous specs), and its\n    /// [selection](#state.TransactionSpec.selection) and\n    /// [effects](#state.TransactionSpec.effects) are assumed to refer\n    /// to the document created by its _own_ changes. The resulting\n    /// transaction contains the combined effect of all the different\n    /// specs. For things like\n    /// [selection](#state.TransactionSpec.selection) or\n    /// [reconfiguration](#state.TransactionSpec.reconfigure), later\n    /// specs take precedence over earlier ones.\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /// @internal\n    applyTransaction(tr) {\n        let conf = this.config;\n        if (tr.reconfigure)\n            conf = Configuration.resolve(tr.reconfigure.full || conf.source, Object.assign(conf.replacements, tr.reconfigure, { full: undefined }), this);\n        new EditorState(conf, tr.newDoc, tr.newSelection, tr);\n    }\n    /// Create a [transaction spec](#state.TransactionSpec) that\n    /// replaces every selection range with the given content.\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /// Create a set of changes and a new selection by running the given\n    /// function for each range in the active selection. The function\n    /// can return an optional set of changes (in the coordinate space\n    /// of the start document), plus an updated range (in the coordinate\n    /// space of the document produced by the call's own changes). This\n    /// method will merge all the changes and ranges into a single\n    /// changeset and selection, and return it as a [transaction\n    /// spec](#state.TransactionSpec), which can be passed to\n    /// [`update`](#state.EditorState.update).\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.primaryIndex),\n            effects\n        };\n    }\n    /// Create a [change set](#state.ChangeSet) from the given change\n    /// description, taking the state's document length and line\n    /// separator into account.\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /// Using the state's [line\n    /// separator](#state.EditorState^lineSeparator), create a\n    /// [`Text`](#text.Text) instance from the given string.\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /// Return the given range of the document as a string.\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /// Get the value of a state [facet](#state.Facet).\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /// Convert this state to a JSON-serializable object.\n    toJSON() {\n        // FIXME plugin state serialization\n        return {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n    }\n    /// Deserialize a state from its JSON representation.\n    static fromJSON(json, config = {}) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions\n        });\n    }\n    /// Create a new state. You'll usually only need this when\n    /// initializing an editor—updated states are created by applying\n    /// transactions.\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || []);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection);\n    }\n    /// The size (in columns) of a tab in the document, determined by\n    /// the [`tabSize`](#state.EditorState^tabSize) facet.\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /// Get the proper [line-break](#state.EditorState^lineSeparator)\n    /// string for this state.\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /// Look up a translation for the given phrase (via the\n    /// [`phrases`](#state.EditorState^phrases) facet), or return the\n    /// original string if no translation is found.\n    phrase(phrase) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase))\n                return map[phrase];\n        return phrase;\n    }\n    /// Find the values for a given language data field, provided by the\n    /// the [`languageData`](#state.EditorState^languageData) facet.\n    languageDataAt(name, pos) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /// Return a function that can categorize strings (expected to\n    /// represent a single [grapheme cluster](#text.nextClusterBreak))\n    /// into one of:\n    ///\n    ///  - Word (contains an alphanumeric character or a character\n    ///    explicitly listed in the local language's `\"wordChars\"`\n    ///    language data, which should be a string)\n    ///  - Space (contains only whitespace)\n    ///  - Other (anything else)\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n}\n/// A facet that, when enabled, causes the editor to allow multiple\n/// ranges to be selected. Be careful though, because by default the\n/// editor relies on the native DOM selection, which cannot handle\n/// multiple selections. An extension like\n/// [`drawSelection`](#view.drawSelection) can be used to make\n/// secondary selections visible to the user.\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/// Configures the tab size to use in this state. The first\n/// (highest-precedence) value of the facet is used. If no value is\n/// given, this defaults to 4.\nEditorState.tabSize = Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/// The line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\n/// and `\"\\r\"` is treated as a separator when splitting lines, and\n/// lines are joined with `\"\\n\"`.\n///\n/// When you configure a value here, only that precise separator\n/// will be used, allowing you to round-trip documents through the\n/// editor without normalizing line separators.\nEditorState.lineSeparator = lineSeparator;\n/// Registers translation phrases. The\n/// [`phrase`](#state.EditorState.phrase) method will look through\n/// all objects registered with this facet to find translations for\n/// its argument.\nEditorState.phrases = Facet.define();\n/// A facet used to register [language\n/// data](#state.EditorState.languageDataAt) providers.\nEditorState.languageData = languageData;\n/// Facet used to register change filters, which are called for each\n/// transaction (unless explicitly\n/// [disabled](#state.TransactionSpec.filter)), and can suppress\n/// part of the transaction's changes.\n///\n/// Such a function can return `true` to indicate that it doesn't\n/// want to do anything, `false` to completely stop the changes in\n/// the transaction, or a set of ranges in which changes should be\n/// suppressed. Such ranges are represented as an array of numbers,\n/// with each pair of two number indicating the start and end of a\n/// range. So for example `[10, 20, 100, 110]` suppresses changes\n/// between 10 and 20, and between 100 and 110.\nEditorState.changeFilter = changeFilter;\n/// Facet used to register a hook that gets a chance to update or\n/// replace transaction specs before they are applied. This will\n/// only be applied for transactions that don't have\n/// [`filter`](#state.TransactionSpec.filter) set to `false`. You\n/// can either return a single (possibly the input transaction), or\n/// an array of specs (which will be combined in the same way as the\n/// arguments to [`EditorState.update`](#state.EditorState.update)).\n///\n/// When possible, it is recommended to avoid accessing\n/// [`Transaction.state`](#state.Transaction.state) in a filter,\n/// since it will force creation of a state that will then be\n/// discarded again, if the transaction is actually filtered.\n///\n/// (This functionality should be used with care. Indiscriminately\n/// modifying transaction is likely to break something or degrade\n/// the user experience.)\nEditorState.transactionFilter = transactionFilter;\n/// This is a more limited form of\n/// [`transactionFilter`](#state.EditorState^transactionFilter),\n/// which can only add\n/// [annotations](#state.TransactionSpec.annotations),\n/// [effects](#state.TransactionSpec.effects), and\n/// [configuration](#state.TransactionSpec.reconfigure) info. _But_,\n/// this type of filter runs even the transaction has disabled\n/// regular [filtering](#state.TransactionSpec.filter), making it\n/// suitable for effects that don't need to touch the changes or\n/// selection, but do want to process every transaction.\n///\n/// Extenders run _after_ filters, when both are applied.\nEditorState.transactionExtender = transactionExtender;\n\n/// Utility function for combining behaviors to fill in a config\n/// object from an array of provided configs. Will, by default, error\n/// when a field gets two values that aren't ===-equal, but you can\n/// provide combine functions per field to do something else.\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, EditorSelection, EditorState, Facet, MapMode, SelectionRange, StateEffect, StateEffectType, StateField, Transaction, combineConfig, precedence, tagExtension };\n","// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = \"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/// Returns a grapheme cluster end _after_ (not equal to) `pos`, if\n/// possible. Moves across surrogate pairs, extending characters,\n/// characters joined with zero-width joiners, and flag emoji.\nfunction nextClusterBreak(str, pos) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\n/// Returns a grapheme cluster end _before_ `pos`, if possible.\nfunction prevClusterBreak(str, pos) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/// Find the code point at the given position in a string (as in the\n/// [`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\n/// string method).\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/// Given a Unicode codepoint, return the JavaScript string that\n/// respresents it (as in\n/// [`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint).\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/// The first character that takes up two positions in a JavaScript\n/// string. It is often useful to compare with this after calling\n/// `codePointAt`, to figure out whether your character takes up 1 or\n/// 2 index positions.\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\n/// Count the column position at the given offset into the string,\n/// taking extending characters and tab size into account.\nfunction countColumn(string, n, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = nextClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/// Find the offset that corresponds to the given column position in a\n/// string, taking extending characters and tab size into account.\nfunction findColumn(string, n, col, tabSize) {\n    for (let i = 0; i < string.length;) {\n        if (n >= col)\n            return { offset: i, leftOver: 0 };\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = nextClusterBreak(string, i);\n    }\n    return { offset: string.length, leftOver: col - n };\n}\n\n/// The document tree type.\nclass Text {\n    /// @internal\n    constructor() { }\n    /// Get the line description around the given position.\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.from <= pos && line.to >= pos)\n                return line;\n        }\n        return cacheLine(this.lineInner(pos, false, 1, 0).finish(this));\n    }\n    /// Get the description for the given (1-based) line number.\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        for (let line of lineCache) {\n            if (line.doc == this && line.number == n)\n                return line;\n        }\n        return cacheLine(this.lineInner(n, true, 1, 0).finish(this));\n    }\n    /// Replace a range of the text with the given lines. `text` should\n    /// have a length of at least one.\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts);\n        parts.push(text);\n        this.decompose(to, this.length, parts);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /// Append another document to this one.\n    append(text) {\n        return this.length == 0 ? text : text.length == 0 ? this : TextNode.from([this, text], this.length + text.length);\n    }\n    /// Retrieve the text between the given points.\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts);\n        return TextNode.from(parts, to - from);\n    }\n    /// Test whether this text is equal to another instance.\n    eq(other) { return this == other || eqContent(this, other); }\n    /// Iterate over the text. When `dir` is `-1`, iteration happens\n    /// from end to start. This will return lines and the breaks between\n    /// them as separate strings, and for long lines, might split lines\n    /// themselves into multiple chunks as well.\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /// Iterate over a range of the text. When `from` > `to`, the\n    /// iterator will run in reverse.\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /// Iterate over lines in the text, starting at position (_not_ line\n    /// number) `from`. An iterator returned by this combines all text\n    /// on a line into a single string (which may be expensive for very\n    /// long lines), and skips line breaks (its\n    /// [`lineBreak`](#text.TextIterator.lineBreak) property is always\n    /// false).\n    iterLines(from = 0) { return new LineCursor(this, from); }\n    /// @internal\n    toString() { return this.sliceString(0); }\n    /// Convert the document to an array of lines (which can be\n    /// deserialized again via [`Text.of`](#text.Text^of).\n    toJSON() {\n        let lines = [];\n        for (let iter = this.iterLines(); !iter.next().done;)\n            lines.push(iter.value);\n        return lines;\n    }\n    /// Create a `Text` instance for the given array of lines.\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0] && Text.empty)\n            return Text.empty;\n        let length = textLength(text);\n        return length < 1024 /* MaxLeaf */ ? new TextLeaf(text, length) : TextNode.from(TextLeaf.split(text, []), length);\n    }\n}\nif (typeof Symbol != \"undefined\")\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\nlet lineCache = [], lineCachePos = -1, lineCacheSize = 10;\nfunction cacheLine(line) {\n    return lineCache[lineCachePos = (lineCachePos + 1) % lineCacheSize] = line;\n}\n// Leaves store an array of strings. There are always line breaks\n// between these strings (though not between adjacent Text nodes).\n// These are limited in length, so that bigger documents are\n// constructed as a tree structure. Long lines will be broken into a\n// number of single-line leaves.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target) {\n        target.push(new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from)));\n    }\n    lastLineLength() { return this.text[this.text.length - 1].length; }\n    firstLineLength() { return this.text[0].length; }\n    replace(from, to, text) {\n        let newLen = this.length + text.length - (to - from);\n        if (newLen >= 1024 /* MaxLeaf */ || !(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        return new TextLeaf(appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        target[target.length - 1] += this.text[0];\n        for (let i = 1; i < this.text.length; i++)\n            target.push(this.text[i]);\n    }\n    static split(text, target) {\n        let part = [], length = -1;\n        for (let line of text) {\n            for (;;) {\n                let newLength = length + line.length + 1;\n                if (newLength < 512 /* BaseLeaf */) {\n                    length = newLength;\n                    part.push(line);\n                    break;\n                }\n                let cut = 512 /* BaseLeaf */ - length - 1, after = line.charCodeAt(cut);\n                if (after >= 0xdc00 && after < 0xe000)\n                    cut++;\n                part.push(line.slice(0, cut));\n                target.push(new TextLeaf(part, 512 /* BaseLeaf */));\n                line = line.slice(cut);\n                length = -1;\n                part = [];\n            }\n        }\n        if (length != -1)\n            target.push(new TextLeaf(part, length));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance itself on\n// changes.\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 1;\n        for (let child of children)\n            this.lines += child.lines - 1;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target) {\n                let inner = child.lineInner(target, isLine, line, offset), add;\n                if (inner.from == offset && (add = this.lineLengthTo(i))) {\n                    inner.from -= add;\n                    inner.content = null;\n                }\n                if (inner.to == end && (add = this.lineLengthFrom(i + 1))) {\n                    inner.to += add;\n                    inner.content = null;\n                }\n                return inner;\n            }\n            offset = end;\n            line = endLine;\n        }\n    }\n    decompose(from, to, target) {\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                if (pos >= from && end <= to)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target);\n            }\n            pos = end;\n        }\n    }\n    lineLengthTo(to) {\n        let length = 0;\n        for (let i = to - 1; i >= 0; i--) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.lastLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    lastLineLength() { return this.lineLengthTo(this.children.length); }\n    lineLengthFrom(from) {\n        let length = 0;\n        for (let i = from; i < this.children.length; i++) {\n            let child = this.children[i];\n            if (child.lines > 1)\n                return length + child.firstLineLength();\n            length += child.length;\n        }\n        return length;\n    }\n    firstLineLength() { return this.lineLengthFrom(0); }\n    replace(from, to, text) {\n        // Looks like a small change, try to optimize\n        if (text.length < 512 /* BaseLeaf */ && to - from < 512 /* BaseLeaf */) {\n            let lengthDiff = text.length - (to - from);\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end &&\n                    child.length + lengthDiff < (this.length + lengthDiff) >> (3 /* BranchShift */ - 1) &&\n                    child.length + lengthDiff > 0) {\n                    let copy = this.children.slice();\n                    copy[i] = child.replace(from - pos, to - pos, text);\n                    return new TextNode(copy, this.length + lengthDiff);\n                }\n                pos = end;\n            }\n        }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; pos < to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from < end && to > pos) {\n                let part = child.sliceString(from - pos, to - pos, lineSep);\n                if (from >= pos && to <= end)\n                    return part;\n                result += part;\n            }\n            pos = end;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    static from(children, length) {\n        if (!children.every(ch => ch instanceof Text))\n            throw new Error(\"NOP\");\n        if (length < 1024 /* MaxLeaf */) {\n            let text = [\"\"];\n            for (let child of children)\n                child.flatten(text);\n            return new TextLeaf(text, length);\n        }\n        let chunkLength = Math.max(512 /* BaseLeaf */, length >> 3 /* BranchShift */), maxLength = chunkLength << 1, minLength = chunkLength >> 1;\n        let chunked = [], currentLength = 0, currentChunk = [];\n        function add(child) {\n            let childLength = child.length, last;\n            if (!childLength)\n                return;\n            if (childLength > maxLength && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (childLength > minLength && (currentLength > minLength || currentLength == 0)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLength > 0 &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.length + last.length <= 512 /* BaseLeaf */) {\n                currentLength += childLength;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(appendText(child.text, last.text.slice()), child.length + last.length);\n            }\n            else {\n                if (currentLength + childLength > chunkLength)\n                    flush();\n                currentLength += childLength;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLength == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLength));\n            currentLength = 0;\n            currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = Text.of([\"\"]);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nfunction eqContent(a, b) {\n    if (a.length != b.length || a.lines != b.lines)\n        return false;\n    let iterA = new RawTextCursor(a), iterB = new RawTextCursor(b);\n    for (let offA = 0, offB = 0;;) {\n        if (iterA.lineBreak != iterB.lineBreak || iterA.done != iterB.done) {\n            return false;\n        }\n        else if (iterA.done) {\n            return true;\n        }\n        else if (iterA.lineBreak) {\n            iterA.next();\n            iterB.next();\n            offA = offB = 0;\n        }\n        else {\n            let strA = iterA.value.slice(offA), strB = iterB.value.slice(offB);\n            if (strA.length == strB.length) {\n                if (strA != strB)\n                    return false;\n                iterA.next();\n                iterB.next();\n                offA = offB = 0;\n            }\n            else if (strA.length > strB.length) {\n                if (strA.slice(0, strB.length) != strB)\n                    return false;\n                offA += strB.length;\n                iterB.next();\n                offB = 0;\n            }\n            else {\n                if (strB.slice(0, strA.length) != strA)\n                    return false;\n                offB += strA.length;\n                iterA.next();\n                offA = 0;\n            }\n        }\n    }\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 0 : text instanceof TextLeaf ? text.text.length : text.children.length];\n    }\n    next(skip = 0) {\n        for (;;) {\n            let last = this.nodes.length - 1;\n            if (last < 0) {\n                this.done = true;\n                this.value = \"\";\n                this.lineBreak = false;\n                return this;\n            }\n            let top = this.nodes[last];\n            let offset = this.offsets[last];\n            if (top instanceof TextLeaf) {\n                // Internal offset with lineBreak == false means we have to\n                // count the line break at this position\n                if (offset != (this.dir > 0 ? 0 : top.text.length) && !this.lineBreak) {\n                    this.lineBreak = true;\n                    if (skip == 0) {\n                        this.value = \"\\n\";\n                        return this;\n                    }\n                    skip--;\n                    continue;\n                }\n                // Otherwise, move to the next string\n                let next = top.text[offset - (this.dir < 0 ? 1 : 0)];\n                this.offsets[last] = (offset += this.dir);\n                if (offset == (this.dir > 0 ? top.text.length : 0)) {\n                    this.nodes.pop();\n                    this.offsets.pop();\n                }\n                this.lineBreak = false;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : this.dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else if (offset == (this.dir > 0 ? top.children.length : 0)) {\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else {\n                let next = top.children[this.dir > 0 ? offset : offset - 1], len = next.length;\n                this.offsets[last] = offset + this.dir;\n                if (skip > len) {\n                    skip -= len;\n                }\n                else {\n                    this.nodes.push(next);\n                    this.offsets.push(this.dir > 0 ? 0 : next instanceof TextLeaf ? next.text.length : next.children.length);\n                }\n            }\n        }\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        if (start > end) {\n            this.skip = text.length - start;\n            this.limit = start - end;\n        }\n        else {\n            this.skip = start;\n            this.limit = end - start;\n        }\n    }\n    next() {\n        if (this.limit <= 0) {\n            this.limit = -1;\n        }\n        else {\n            let { value, lineBreak, done } = this.cursor.next(this.skip);\n            this.skip = 0;\n            this.value = value;\n            let len = lineBreak ? 1 : value.length;\n            if (len > this.limit)\n                this.value = this.cursor.dir > 0 ? value.slice(0, this.limit) : value.slice(len - this.limit);\n            if (done || this.value.length == 0)\n                this.limit = -1;\n            else\n                this.limit -= this.value.length;\n        }\n        return this;\n    }\n    get lineBreak() { return this.cursor.lineBreak; }\n    get done() { return this.limit < 0; }\n}\nclass LineCursor {\n    constructor(text, from = 0) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = text.iter();\n        this.skip = from;\n    }\n    next(skip = 0) {\n        if (this.cursor.done) {\n            this.done = true;\n            this.value = \"\";\n            return this;\n        }\n        skip += this.skip;\n        this.skip = 0;\n        for (this.value = \"\";;) {\n            let { value, lineBreak, done } = this.cursor.next(skip);\n            skip = 0;\n            if (done || lineBreak)\n                return this;\n            this.value += value;\n        }\n    }\n    get lineBreak() { return false; }\n}\n/// This type describes a line in the document. It is created\n/// on-demand when lines are [queried](#text.Text.lineAt).\nclass Line {\n    /// @internal\n    constructor(\n    /// The position of the start of the line.\n    from, \n    /// The position at the end of the line (_before_ the line break,\n    /// if this isn't the last line).\n    to, \n    /// This line's line number (1-based).\n    number, \n    /// @internal\n    content) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.content = content;\n    }\n    /// The length of the line (not including any line break after it).\n    get length() { return this.to - this.from; }\n    /// Retrieve a part of the content of this line. This is a method,\n    /// rather than, say, a string property, to avoid concatenating long\n    /// lines whenever they are accessed. Try to write your code, if it\n    /// is going to be doing a lot of line-reading, to read only the\n    /// parts it needs.\n    slice(from = 0, to = this.length) {\n        if (from == to)\n            return \"\";\n        if (typeof this.content == \"string\")\n            return this.content.slice(from, to);\n        if (!this.content)\n            this.content = new LineContent(this.doc, this.from);\n        let result = this.content.slice(from, to);\n        if (from == 0 && to == this.length)\n            this.content = result;\n        return result;\n    }\n    /// @internal\n    finish(text) {\n        this.doc = text;\n        return this;\n    }\n    /// Find the next (or previous if `forward` is false) grapheme\n    /// cluster break from the given start position (as an offset inside\n    /// the line, not the document). Will return a position greater than\n    /// (or less than if `forward` is false) `start` unless there is no\n    /// such index in the string.\n    findClusterBreak(start, forward) {\n        if (start < 0 || start > this.length)\n            throw new RangeError(\"Invalid position given to Line.findClusterBreak\");\n        let contextStart, context;\n        if (this.content == \"string\") {\n            contextStart = this.from;\n            context = this.content;\n        }\n        else {\n            contextStart = Math.max(0, start - 256);\n            context = this.slice(contextStart, Math.min(this.length, contextStart + 512));\n        }\n        return (forward ? nextClusterBreak : prevClusterBreak)(context, start - contextStart) + contextStart;\n    }\n}\nclass LineContent {\n    constructor(doc, start) {\n        this.doc = doc;\n        this.start = start;\n        this.cursor = null;\n        this.strings = null;\n    }\n    // FIXME quadratic complexity (somewhat) when iterating long lines in small pieces\n    slice(from, to) {\n        if (!this.cursor) {\n            this.cursor = this.doc.iter();\n            this.strings = [this.cursor.next(this.start).value];\n        }\n        for (let result = \"\", pos = 0, i = 0;; i++) {\n            if (i == this.strings.length) {\n                let next = this.cursor.next().value;\n                if (!next)\n                    return result;\n                this.strings.push(next);\n            }\n            let string = this.strings[i], start = pos;\n            pos += string.length;\n            if (pos <= from)\n                continue;\n            result += string.slice(Math.max(0, from - start), Math.min(string.length, to - start));\n            if (pos >= to)\n                return result;\n        }\n    }\n}\n\nexport { Line, Text, codePointAt, codePointSize, countColumn, findColumn, fromCodePoint, nextClusterBreak, prevClusterBreak };\n","import { ViewPlugin, themeClass, Direction, EditorView } from '@codemirror/next/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/next/state';\n\nconst Outside = \"-10000px\";\nconst tooltipPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.tooltips = view.state.facet(showTooltip);\n        this.tooltipViews = this.tooltips.map(tp => this.createTooltip(tp));\n    }\n    update(update) {\n        let tooltips = update.state.facet(showTooltip);\n        if (tooltips == this.tooltips) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n        }\n        else {\n            let views = [];\n            for (let i = 0; i < tooltips.length; i++) {\n                let tip = tooltips[i], known = -1;\n                for (let i = 0; i < this.tooltips.length; i++)\n                    if (this.tooltips[i].create == tip.create)\n                        known = i;\n                if (known < 0) {\n                    views[i] = this.createTooltip(tip);\n                }\n                else {\n                    let tooltipView = views[i] = this.tooltipViews[known];\n                    if (tooltipView.update)\n                        tooltipView.update(update);\n                }\n            }\n            for (let t of this.tooltipViews)\n                if (views.indexOf(t) < 0)\n                    t.dom.remove();\n            this.tooltips = tooltips;\n            this.tooltipViews = views;\n            this.maybeMeasure();\n        }\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.className = themeClass(\"tooltip\" + (tooltip.style ? \".\" + tooltip.style : \"\"));\n        this.view.dom.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        for (let { dom } of this.tooltipViews)\n            dom.remove();\n    }\n    readMeasure() {\n        return {\n            editor: this.view.dom.getBoundingClientRect(),\n            pos: this.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n            size: this.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight\n        };\n    }\n    writeMeasure(measured) {\n        let { editor } = measured;\n        for (let i = 0; i < this.tooltipViews.length; i++) {\n            let tooltip = this.tooltips[i], tView = this.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= editor.top || pos.top >= editor.bottom || pos.right <= editor.left || pos.left >= editor.right) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let left = this.view.textDirection == Direction.LTR ? Math.min(pos.left, measured.innerWidth - width)\n                : Math.max(0, pos.left - width);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide &&\n                (above ? pos.top - (size.bottom - size.top) < 0 : pos.bottom + (size.bottom - size.top) > measured.innerHeight))\n                above = !above;\n            dom.style.top = (above ? pos.top - height : pos.bottom) + \"px\";\n            dom.style.left = left + \"px\";\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.tooltips.length) {\n            if (this.view.inView || this.inView)\n                this.view.requestMeasure(this.measureReq);\n            this.inView = this.view.inView;\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = EditorView.baseTheme({\n    $tooltip: {\n        position: \"fixed\",\n        border: \"1px solid #ddd\",\n        backgroundColor: \"#f5f5f5\",\n        zIndex: 100\n    }\n});\n/// Supporting extension for displaying tooltips. Allows\n/// [`showTooltip`](#tooltip.showTooltip) to be used to define\n/// tooltips.\nfunction tooltips() {\n    return [tooltipPlugin, baseTheme];\n}\n/// Behavior by which an extension can provide a tooltip to be shown.\nconst showTooltip = Facet.define();\nconst HoverTime = 750, HoverMaxDist = 10;\nclass HoverPlugin {\n    constructor(view, source, field, setHover) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.lastMouseMove = null;\n        this.hoverTimeout = -1;\n        this.mouseInside = false;\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseenter\", this.mouseenter = this.mouseenter.bind(this));\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (!this.mouseInside || this.active)\n            return;\n        let now = Date.now(), lastMove = this.lastMouseMove;\n        if (now - lastMove.timeStamp < HoverTime) {\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime - (now - lastMove.timeStamp));\n            return;\n        }\n        let pos = this.view.contentDOM.contains(lastMove.target)\n            ? this.view.posAtCoords({ x: lastMove.clientX, y: lastMove.clientY }) : -1;\n        let open = pos == null ? null : this.source(this.view, (from, to) => {\n            return from <= pos && to >= pos && (from == to || isOverRange(this.view, from, to, lastMove.clientX, lastMove.clientY));\n        });\n        if (open)\n            this.view.dispatch({ effects: this.setHover.of(open) });\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMouseMove = event;\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, HoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(event.target)) {\n            let { pos } = tooltip, end = (_a = tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords({ x: event.clientX, y: event.clientY }) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, HoverMaxDist)))\n                this.view.dispatch({ effects: this.setHover.of(null) });\n        }\n    }\n    mouseenter() {\n        this.mouseInside = true;\n    }\n    mouseleave() {\n        this.mouseInside = false;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseenter\", this.mouseenter);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin = 0) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/// Enable a hover tooltip, which shows up when the pointer hovers\n/// over ranges of text. The callback should, for each hoverable\n/// range, call its `check` argument to see if that range is being\n/// hovered over, and return a tooltip description when it is.\nfunction hoverTooltip(source, options = {}) {\n    const setHover = StateEffect.define();\n    const hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection)))\n                return null;\n            for (let effect of tr.effects)\n                if (effect.is(setHover))\n                    return effect.value;\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                return copy;\n            }\n            return value;\n        },\n        provide: [showTooltip.nFrom(v => v ? [v] : [])]\n    });\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover)),\n        tooltips()\n    ];\n}\n\nexport { hoverTooltip, showTooltip, tooltips };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { MapMode, Facet, Text as Text$1, EditorSelection, ChangeSet, Transaction, CharCategory, EditorState, precedence, combineConfig } from '@codemirror/next/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeValue, RangeSet } from '@codemirror/next/rangeset';\nexport { Range } from '@codemirror/next/rangeset';\nimport { Text, countColumn, findColumn, codePointAt } from '@codemirror/next/text';\nimport { keyName, base } from 'w3c-keyname';\n\nlet [nav, doc] = typeof navigator != \"undefined\"\n    ? [navigator, document]\n    : [{ userAgent: \"\", vendor: \"\", platform: \"\" }, { documentElement: { style: {} } }];\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nvar browser = {\n    mac: /Mac/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n    android: /Android\\b/.test(nav.userAgent),\n    webkit,\n    safari: /Apple Computer/.test(nav.vendor),\n    webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nfunction getSelection(root) {\n    return (root.getSelection ? root.getSelection() : document.getSelection());\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nfunction selectionCollapsed(domSel) {\n    let collapsed = domSel.isCollapsed;\n    if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n        collapsed = false;\n    return collapsed;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return dom.contains(selection.anchorNode.nodeType == 3 ? selection.anchorNode.parentNode : selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3) {\n        let range = tempRange();\n        range.setEnd(dom, dom.nodeValue.length);\n        range.setStart(dom, 0);\n        return range.getClientRects();\n    }\n    else if (dom.nodeType == 1) {\n        return dom.getClientRects();\n    }\n    else {\n        return [];\n    }\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nconst ScrollSpace = 5;\nfunction scrollRectIntoView(dom, rect) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == document.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (rect.top < bounding.top)\n                moveY = -(bounding.top - rect.top + ScrollSpace);\n            else if (rect.bottom > bounding.bottom)\n                moveY = rect.bottom - bounding.bottom + ScrollSpace;\n            if (rect.left < bounding.left)\n                moveX = -(bounding.left - rect.left + ScrollSpace);\n            else if (rect.right > bounding.right)\n                moveX = rect.right - bounding.right + ScrollSpace;\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelection {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    set(domSel) {\n        this.anchorNode = domSel.anchorNode;\n        this.anchorOffset = domSel.anchorOffset;\n        this.focusNode = domSel.focusNode;\n        this.focusOffset = domSel.focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction tempRange() { return scratchRange || (scratchRange = document.createRange()); }\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst none = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom, pos = null;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    let next = pos ? pos.nextSibling : parent.firstChild;\n                    if (next && !child.dom && !ContentView.get(next))\n                        child.reuseDOM(next);\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                if (track && track.node == parent && pos != child.dom)\n                    track.written = true;\n                syncNodeInto(parent, pos, child.dom);\n                pos = child.dom;\n            }\n            let next = pos ? pos.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm(next);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { return false; }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (end >= to && end != pos && toI == -1) {\n                toI = i;\n                toEnd = end;\n                break;\n            }\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd, startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: toI < this.children.length - 1 && toI >= 0 ? this.children[toI + 1].dom : null };\n    }\n    // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n    markDirty(andParent = false) {\n        if (this.dirty & 2 /* Node */)\n            return;\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = none) {\n        this.markDirty();\n        for (let i = from; i < to; i++)\n            this.children[i].parent = null;\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nfunction syncNodeInto(parent, after, dom) {\n    let next = after ? after.nextSibling : parent.firstChild;\n    if (dom.parentNode == parent)\n        while (next != dom)\n            next = rm(next);\n    else\n        parent.insertBefore(dom, next);\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\n\nconst none$1 = [];\nclass InlineView extends ContentView {\n    /// Return true when this view is equivalent to `other` and can take\n    /// on its role.\n    become(_other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // negative number to indicate it is before its position, or a\n    // positive number when after its position.\n    getSide() { return 0; }\n}\nInlineView.prototype.children = none$1;\nconst MaxJoinLen = 256;\nclass TextView extends InlineView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType != 3)\n            return false;\n        this.createDOM(dom);\n        return true;\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new TextView(this.text.slice(from));\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side, this.length);\n    }\n}\nclass MarkView extends InlineView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    createDOM() {\n        let dom = document.createElement(this.mark.tagName);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        this.setDOM(dom);\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        super.sync(track);\n    }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeInlineChildren(this, from, to, source ? source.children : none$1, openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    slice(from) {\n        return new MarkView(this.mark, sliceInlineChildren(this.children, from), this.length - from);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side, length) {\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else\n            to++;\n    }\n    let range = tempRange();\n    range.setEnd(text, to);\n    range.setStart(text, from);\n    let rects = range.getClientRects(), rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends InlineView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    slice(from) { return WidgetView.create(this.widget, this.length - from, this.side); }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) { return new DOMPos(this.widget.text, pos); }\n    sync() { if (!this.dom)\n        this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) { return textCoords(this.widget.text, pos, side, this.length); }\n}\nfunction mergeInlineChildren(parent, from, to, elts, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of elts)\n        dLen += view.length;\n    parent.length += dLen;\n    let { children } = parent;\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n        let start = children[fromI];\n        // Maybe just update that view and be done\n        if (elts.length == 1 && start.merge(fromOff, toOff, elts[0], openStart, openEnd))\n            return;\n        if (elts.length == 0) {\n            start.merge(fromOff, toOff, null, openStart, openEnd);\n            return;\n        }\n        // Otherwise split it, so that we don't have to worry about aliasing front/end afterwards\n        let after = start.slice(toOff);\n        if (after.merge(0, 0, elts[elts.length - 1], 0, openEnd))\n            elts[elts.length - 1] = after;\n        else\n            elts.push(after);\n        toI++;\n        openEnd = toOff = 0;\n    }\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n        let end = children[toI];\n        if (elts.length && end.merge(0, toOff, elts[elts.length - 1], 0, openEnd)) {\n            elts.pop();\n            openEnd = 0;\n        }\n        else {\n            end.merge(0, toOff, null, 0, 0);\n        }\n    }\n    else if (toI < children.length && elts.length &&\n        children[toI].merge(0, 0, elts[elts.length - 1], 0, openEnd)) {\n        elts.pop();\n        openEnd = 0;\n    }\n    if (fromOff) {\n        let start = children[fromI];\n        if (elts.length && start.merge(fromOff, start.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n        else {\n            start.merge(fromOff, start.length, null, 0, 0);\n        }\n        fromI++;\n    }\n    else if (fromI && elts.length) {\n        let end = children[fromI - 1];\n        if (end.merge(end.length, end.length, elts[0], openStart, 0)) {\n            elts.shift();\n            openStart = 0;\n        }\n    }\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && children[toI - 1].become(elts[elts.length - 1])) {\n        elts.pop();\n        toI--;\n        openEnd = 0;\n    }\n    while (fromI < toI && elts.length && children[fromI].become(elts[0])) {\n        elts.shift();\n        fromI++;\n        openStart = 0;\n    }\n    if (!elts.length && fromI && toI < children.length && openStart && openEnd &&\n        children[toI].merge(0, 0, children[fromI - 1], openStart, openEnd))\n        fromI--;\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI)\n        parent.replaceChildren(fromI, toI, elts);\n}\nfunction sliceInlineChildren(children, from) {\n    let result = [], off = 0;\n    for (let elt of children) {\n        let end = off + elt.length;\n        if (end > from)\n            result.push(off < from ? elt.slice(from - off) : elt);\n        off = end;\n    }\n    return result;\n}\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (side <= 0 || end == view.length ? end >= pos : end > pos)\n            return child.coordsAt(pos - off, side);\n        off = end;\n    }\n    return (view.dom.lastChild || view.dom).getBoundingClientRect();\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(name, attrs[name]);\n}\n\n/// Widgets added to the content are described by subclasses of this\n/// class. This makes it possible to delay creating of the DOM\n/// structure for a widget until it is needed, and to avoid redrawing\n/// widgets even when the decorations that define them are recreated.\n/// `T` can be a type of value passed to instances of the widget type.\nclass WidgetType {\n    /// Compare this instance to another instance of the same type.\n    /// (TypeScript can't express this, but only instances of the same\n    /// specific class will be passed to this method.) This is used to\n    /// avoid redrawing widgets when they are replace by a new\n    /// decoration of the same type. The default implementation just\n    /// returns `false`, which may be wasteful.\n    eq(_widget) { return false; }\n    /// Update a DOM element created by a widget of the same type (but\n    /// different, non-`eq` content) to reflect this widget. May return\n    /// true to indicate that it could update, false to indicate it\n    /// couldn't (in which case the widget will be redrawn). The default\n    /// implementation just returns false.\n    updateDOM(_dom) { return false; }\n    /// @internal\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /// The estimated height this widget will have, to be used when\n    /// estimating the height of content that hasn't been drawn. May\n    /// return -1 to indicate you don't know. The default implementation\n    /// returns -1.\n    get estimatedHeight() { return -1; }\n    /// Can be used to configure which kinds of events inside the widget\n    /// should be ignored by the editor. The default is to ignore all\n    /// events.\n    ignoreEvent(_event) { return true; }\n    //// @internal\n    get customView() { return null; }\n}\n/// The different types of blocks that can occur in an editor view.\nvar BlockType;\n(function (BlockType) {\n    /// A line of text.\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /// A block widget associated with the position after it.\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /// A block widget associated with the position before it.\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /// A block widget [replacing](#view.Decoration^replace) a range of content.\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\n})(BlockType || (BlockType = {}));\n/// A decoration provides information on how to draw or style a piece\n/// of content. You'll usually use it wrapped in a\n/// [`Range`](#rangeset.Range), which adds a start and end position.\nclass Decoration extends RangeValue {\n    /// @internal\n    constructor(\n    /// @internal\n    startSide, \n    /// @internal\n    endSide, \n    /// @internal\n    widget, \n    /// The config object used to create this decoration.\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /// @internal\n    get heightRelevant() { return false; }\n    /// Create a mark decoration, which influences the styling of the\n    /// content in its range. Nested mark decorations will cause nested\n    /// DOM elements to be created. Nesting order is determined by\n    /// precedence of the [facet](#view.EditorView^decorations) or\n    /// (below the facet-provided decorations) [view\n    /// plugin](#view.PluginSpec.decorations). Such elements are broken\n    /// on line boundaries and on the boundaries of higher-precedence\n    /// decorations.\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /// Create a widget decoration, which adds an element at the given\n    /// position.\n    static widget(spec) {\n        let side = spec.side || 0;\n        if (spec.block)\n            side += (200000000 /* BigBlock */ + 1) * (side > 0 ? 1 : -1);\n        return new PointDecoration(spec, side, side, !!spec.block, spec.widget || null, false);\n    }\n    /// Create a replace decoration which replaces the given range with\n    /// a widget, or simply hides it.\n    static replace(spec) {\n        let block = !!spec.block;\n        let { start, end } = getInclusive(spec);\n        let startSide = block ? -200000000 /* BigBlock */ * (start ? 2 : 1) : 100000000 /* BigInline */ * (start ? -1 : 1);\n        let endSide = block ? 200000000 /* BigBlock */ * (end ? 2 : 1) : 100000000 /* BigInline */ * (end ? 1 : -1);\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /// Create a line decoration, which can add DOM attributes to the\n    /// line starting at the given position.\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /// Build a [`DecorationSet`](#view.DecorationSet) from the given\n    /// decorated range or ranges.\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /// @internal\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/// The empty set of decorations.\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(100000000 /* BigInline */ * (start ? -1 : 1), 100000000 /* BigInline */ * (end ? 1 : -1), null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-100000000 /* BigInline */, -100000000 /* BigInline */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide < 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide < 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide < 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start || false, end: end || false };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nconst MinRangeGap = 4;\nfunction addRange(from, to, ranges) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + MinRangeGap > from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nconst theme = Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = StyleModule.newName();\nfunction expandThemeClasses(sel) {\n    return sel.replace(/\\$\\w[\\w\\.]*/g, cls => {\n        let parts = cls.slice(1).split(\".\"), result = \"\";\n        for (let i = 1; i <= parts.length; i++)\n            result += \".cm-\" + parts.slice(0, i).join(\"-\");\n        return result;\n    });\n}\nfunction buildTheme(main, spec) {\n    return new StyleModule(spec, {\n        process(sel) {\n            sel = expandThemeClasses(sel);\n            return /\\$/.test(sel) ? sel.replace(/\\$/, main) : main + \" \" + sel;\n        },\n        extend(template, sel) {\n            template = expandThemeClasses(template);\n            return sel.slice(0, main.length + 1) == main + \" \"\n                ? main + \" \" + template.replace(/&/, sel.slice(main.length + 1))\n                : template.replace(/&/, sel);\n        }\n    });\n}\n/// Create a set of CSS class names for the given theme class, which\n/// can be added to a DOM element within an editor to make themes able\n/// to style it. Theme classes can be single words or words separated\n/// by dot characters. In the latter case, the returned classes\n/// combine those that match the full name and those that match some\n/// prefix—for example `\"panel.search\"` will match both the theme\n/// styles specified as `\"panel.search\"` and those with just\n/// `\"panel\"`. More specific theme classes (with more dots) take\n/// precedence over less specific ones.\nfunction themeClass(selector) {\n    if (selector.indexOf(\".\") < 0)\n        return \"cm-\" + selector;\n    let parts = selector.split(\".\"), result = \"\";\n    for (let i = 1; i <= parts.length; i++)\n        result += (result ? \" \" : \"\") + \"cm-\" + parts.slice(0, i).join(\"-\");\n    return result;\n}\nconst baseTheme = buildTheme(\".\" + baseThemeID, {\n    $: {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&$focused\": {\n            // FIXME it would be great if we could directly use the browser's\n            // default focus outline, but it appears we can't, so this tries to\n            // approximate that\n            outline_fallback: \"1px dotted #212121\",\n            outline: \"5px auto -webkit-focus-ring-color\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    $scroller: {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    $content: {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\"\n    },\n    \"$$light $content\": { caretColor: \"black\" },\n    \"$$dark $content\": { caretColor: \"white\" },\n    $line: {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    $selectionLayer: {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    $selectionBackground: {\n        position: \"absolute\",\n    },\n    \"$$light $selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"$$dark $selectionBackground\": {\n        background: \"#222\"\n    },\n    \"$$focused$light $selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"$$focused$dark $selectionBackground\": {\n        background: \"#233\"\n    },\n    $cursorLayer: {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"$$focused $cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    $cursor: {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid #bbb\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\"\n    },\n    \"$$dark $cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \"$$focused $cursor\": {\n        borderLeft: \"1.2px solid black\",\n    },\n    $placeholder: {\n        color: \"#888\",\n        display: \"inline-block\"\n    },\n    $button: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"3px\"\n    },\n    \"$$light $button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"$$dark $button\": {\n        backgroundImage: \"linear-gradient(#555, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    $textfield: {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"$$light $textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"$$dark $textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n});\n\nconst LineClass = themeClass(\"line\");\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, takeDeco, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (takeDeco)\n            this.setDeco(source ? source.attrs : null);\n        mergeInlineChildren(this, from, to, source ? source.children : none$2, openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].slice(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0) {\n            this.children[i - 1].parent = null;\n            i--;\n        }\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    // Only called when building a line view in ContentBuilder\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    // FIXME might need another hack to work around Firefox's behavior\n    // of not actually displaying the cursor even though it's there in\n    // the DOM\n    sync(track) {\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = LineClass;\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(LineClass);\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        if (!last || (last.nodeName != \"BR\" && (ContentView.get(last) instanceof WidgetView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height, charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    match(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0;; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (block.length)\n                    return null;\n            }\n            off = end + block.breakAfter;\n        }\n    }\n}\nconst none$2 = [];\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        return new BlockWidgetView(this.widget, len, this.type);\n    }\n    get children() { return none$2; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n    }\n    domBoundsAround() { return null; }\n    match(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine)\n            this.content.push(this.curLine = new LineView);\n        return this.curLine;\n    }\n    addWidget(view) {\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish() {\n        if (!this.posCovered())\n            this.getLine();\n    }\n    wrapMarks(view, active) {\n        for (let i = active.length - 1; i >= 0; i--)\n            view = new MarkView(active[i], [view], view.length);\n        return view;\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length);\n            this.getLine().append(this.wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            length -= take;\n            this.textOff += take;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart) {\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let widget = this.wrapMarks(WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide), active);\n                this.getLine().append(widget, openStart);\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations) {\n        let builder = new ContentBuilder(text, from, to);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish();\n        return builder;\n    }\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\n/// Used to indicate [text direction](#view.EditorView.textDirection).\nvar Direction;\n(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\n})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/// Represents a contiguous range of text that has a single direction\n/// (as in left-to-right or right-to-left).\nclass BidiSpan {\n    /// @internal\n    constructor(\n    /// The start of the span (relative to the start of the line).\n    from, \n    /// The end of the span.\n    to, \n    /// The [\"bidi\n    /// level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    /// of the span (in this context, 0 means\n    /// left-to-right, 1 means right-to-left, 2 means left-to-right\n    /// number inside right-to-left text).\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /// The direction of this span.\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /// @internal\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /// @internal\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = line.findClusterBreak(startIndex, indexForward);\n    movedOver = line.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, 0, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, 0, span.level);\n}\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.direction = Direction.LTR;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefresh(lineHeights, whiteSpace, direction) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight || (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction;\n    }\n    refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n            this.lineWrapping != lineWrapping ||\n            this.direction != direction;\n        this.lineWrapping = lineWrapping;\n        this.direction = direction;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/// Record used to represent information about a block-level element\n/// in the editor view.\nclass BlockInfo {\n    /// @internal\n    constructor(\n    /// The start of the element in the document.\n    from, \n    /// The length of the element.\n    length, \n    /// The top position of the element.\n    top, \n    /// Its height.\n    height, \n    /// The type of element this is. When querying lines, this may be\n    /// an array of all the blocks that make up the line.\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /// The end of the element as a document position.\n    get to() { return this.from + this.length; }\n    /// The bottom position of the element.\n    get bottom() { return this.top + this.height; }\n    /// @internal\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n}\nvar QueryType;\n(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\n})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-4;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(_from, _to, doc, top, offset, f) {\n        f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = from; pos < to;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, top += lineHeight, BlockType.Text));\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from);\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let line = new HeightMapText(len, measured.heights[measured.index++]);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            oracle.heightChanged = true;\n            return HeightMap.of(nodes);\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid || this.right.height == 0 ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop || this.right.height == 0 : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? Math.max(0, deco.widget.estimatedHeight) : 0;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder);\n        return builder.finish(from);\n    }\n    get minPointSize() { return 0; }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator();\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes);\n    }\n    get minPointSize() { return 0; }\n}\n\nconst none$3 = [];\nconst clickAddsSelectionRange = Facet.define();\nconst dragMovesSelection = Facet.define();\nconst mouseSelectionStyle = Facet.define();\nconst exceptionSink = Facet.define();\nconst updateListener = Facet.define();\nconst inputHandler = Facet.define();\n/// Log or report an unhandled exception in client code. Should\n/// probably only be used by extension code that allows client code to\n/// provide functions, and calls those functions in a context where an\n/// exception can't be propagated to calling code in a reasonable way\n/// (for example when in an event handler).\n///\n/// Either calls a handler registered with\n/// [`EditorView.exceptionSink`](#view.EditorView^exceptionSink),\n/// `window.onerror`, if defined, or `console.error` (in which case\n/// it'll pass `context`, when given, as first argument).\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = Facet.define({ combine: values => values.length ? values[0] : true });\n/// Used to [declare](#view.PluginSpec.provide) which\n/// [fields](#view.PluginValue) a [view plugin](#view.ViewPlugin)\n/// provides.\nclass PluginFieldProvider {\n    /// @internal\n    constructor(\n    /// @internal\n    field, \n    /// @internal\n    get) {\n        this.field = field;\n        this.get = get;\n    }\n}\n/// Plugin fields are a mechanism for allowing plugins to provide\n/// values that can be retrieved through the\n/// [`pluginField`](#view.EditorView.pluginField) view method.\nclass PluginField {\n    from(get) {\n        return new PluginFieldProvider(this, get);\n    }\n    /// Define a new plugin field.\n    static define() { return new PluginField(); }\n}\n/// Plugins can provide additional scroll margins (space around the\n/// sides of the scrolling element that should be considered\n/// invisible) through this field. This can be useful when the\n/// plugin introduces elements that cover part of that element (for\n/// example a horizontally fixed gutter).\nPluginField.scrollMargins = PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = Facet.define();\n/// View plugins associate stateful values with a view. They can\n/// influence the way the content is drawn, and are notified of things\n/// that happen in the view.\nclass ViewPlugin {\n    constructor(\n    /// @internal\n    id, \n    /// @internal\n    create, \n    /// @internal\n    fields) {\n        this.id = id;\n        this.create = create;\n        this.fields = fields;\n        this.extension = viewPlugin.of(this);\n    }\n    /// Define a plugin from a constructor function that creates the\n    /// plugin's value, given an editor view.\n    static define(create, spec) {\n        let { eventHandlers, provide, decorations } = spec || {};\n        let fields = [];\n        if (provide)\n            for (let provider of Array.isArray(provide) ? provide : [provide])\n                fields.push(provider);\n        if (eventHandlers)\n            fields.push(domEventHandlers.from((value) => ({ plugin: value, handlers: eventHandlers })));\n        if (decorations)\n            for (let get of Array.isArray(decorations) ? decorations : [decorations])\n                fields.push(pluginDecorations.from(get));\n        return new ViewPlugin(nextPluginID++, create, fields);\n    }\n    /// Create a plugin for a class whose constructor takes a single\n    /// editor view as argument.\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\n// FIXME somehow ensure that no replacing decorations end up in here\nconst pluginDecorations = PluginField.define();\nconst domEventHandlers = PluginField.define();\nclass PluginInstance {\n    constructor(value, spec) {\n        this.value = value;\n        this.spec = spec;\n    }\n    static create(spec, view) {\n        let value;\n        try {\n            value = spec.create(view);\n        }\n        catch (e) {\n            logException(view.state, e, \"CodeMirror plugin crashed\");\n            return PluginInstance.dummy;\n        }\n        return new PluginInstance(value, spec);\n    }\n    takeField(type, target) {\n        for (let { field, get } of this.spec.fields)\n            if (field == type)\n                target.push(get(this.value));\n    }\n    update(update) {\n        if (!this.value.update)\n            return this;\n        try {\n            this.value.update(update);\n            return this;\n        }\n        catch (e) {\n            logException(update.state, e, \"CodeMirror plugin crashed\");\n            if (this.value.destroy)\n                try {\n                    this.value.destroy();\n                }\n                catch (_) { }\n            return PluginInstance.dummy;\n        }\n    }\n    destroy(view) {\n        if (this.value.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n}\nPluginInstance.dummy = new PluginInstance({}, ViewPlugin.define(() => ({})));\nconst editorAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\nconst contentAttributes = Facet.define({\n    combine: values => values.reduce((a, b) => combineAttrs(b, a), {})\n});\n// Provide decorations\nconst decorations = Facet.define();\nconst styleModule = Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/// View [plugins](#view.ViewPlugin) are given instances of this\n/// class, which describe what happened, whenever the view is updated.\nclass ViewUpdate {\n    /// @internal\n    constructor(\n    /// The editor view that the update is associated with.\n    view, \n    /// The new editor state.\n    state, \n    /// The transactions involved in the update. May be empty.\n    transactions = none$3) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /// @internal\n        this.flags = 0;\n        this.prevState = view.state;\n        this.changes = ChangeSet.empty(this.prevState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags != 1 /* Focus */;\n        }\n        if (this.docChanged)\n            this.flags |= 2 /* Height */;\n    }\n    /// Tells you whether the viewport changed in this update.\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /// Indicates whether the line height in the editor changed in this update.\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /// Returns true when the document changed or the size of the editor\n    /// or the lines or characters within it has changed.\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (16 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /// True when this update indicates a focus change.\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /// Whether the document changed in this update.\n    get docChanged() {\n        return this.transactions.some(tr => tr.docChanged);\n    }\n    /// Whether the selection was explicitly set in this update.\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /// @internal\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent;) { // (Cast to any because TypeScript is useless with Node types)\n        if (parent.nodeType == 1) {\n            if ((parent.scrollHeight > parent.clientHeight || parent.scrollWidth > parent.clientWidth) &&\n                window.getComputedStyle(parent).overflow != \"visible\") {\n                let parentRect = parent.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = parent.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: right - rect.left,\n        top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentWidth = 0;\n        this.heightOracle = new HeightOracle;\n        this.heightMap = HeightMap.empty();\n        this.scrollTo = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be signficant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.heightMap = this.heightMap.applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    update(update, scrollTo = null) {\n        let prev = this.state;\n        this.state = update.state;\n        let newDeco = this.state.facet(decorations);\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.prevState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTo && (scrollTo.head < viewport.from || scrollTo.head > viewport.to) || !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTo);\n        if (!viewport.eq(this.viewport)) {\n            this.viewport = viewport;\n            update.flags |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            update.flags |= this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        this.computeVisibleRanges();\n        if (scrollTo)\n            this.scrollTo = scrollTo;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.primary.empty && update.state.selection.primary.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(docView, repeated) {\n        let dom = docView.dom, whiteSpace = \"\", direction = Direction.LTR;\n        if (!repeated) {\n            // Vertical padding\n            let style = window.getComputedStyle(dom);\n            whiteSpace = style.whiteSpace, direction = (style.direction == \"rtl\" ? Direction.RTL : Direction.LTR);\n            this.paddingTop = parseInt(style.paddingTop) || 0;\n            this.paddingBottom = parseInt(style.paddingBottom) || 0;\n        }\n        // Pixel viewport\n        let pixelViewport = this.printing ? { top: -1e8, bottom: 1e8, left: -1e8, right: 1e8 } : visiblePixelRange(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        this.inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (!this.inView)\n            return 0;\n        let lineHeights = docView.measureVisibleLineHeights();\n        let refresh = false, bias = 0, result = 0, oracle = this.heightOracle;\n        if (!repeated) {\n            let contentWidth = docView.dom.clientWidth;\n            if (oracle.mustRefresh(lineHeights, whiteSpace, direction) ||\n                oracle.lineWrapping && Math.abs(contentWidth - this.contentWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    docView.minWidth = 0;\n                    result |= 16 /* Geometry */;\n                }\n            }\n            if (this.contentWidth != contentWidth) {\n                this.contentWidth = contentWidth;\n                result |= 16 /* Geometry */;\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n        }\n        oracle.heightChanged = false;\n        this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n        if (oracle.heightChanged)\n            result |= 2 /* Height */;\n        if (!this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTo && (this.scrollTo.head < this.viewport.from || this.scrollTo.head > this.viewport.to)) {\n            this.viewport = this.getViewport(bias, this.scrollTo);\n            result |= 4 /* Viewport */;\n        }\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 15000 /* MinViewPort */)\n            result |= this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    getViewport(bias, scrollTo) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { top, bottom } = this.pixelViewport;\n        let viewport = new Viewport(map.lineAt(top - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(bottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTo is given, make sure the viewport includes that position\n        if (scrollTo) {\n            if (scrollTo.head < viewport.from) {\n                let { top: newTop } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newTop - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newTop + (bottom - top) + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n            else if (scrollTo.head > viewport.to) {\n                let { bottom: newBottom } = map.lineAt(scrollTo.head, QueryType.ByPos, doc, 0, 0);\n                viewport = new Viewport(map.lineAt(newBottom - (bottom - top) - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(newBottom + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        return (from == 0 || top <= this.pixelViewport.top - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= this.pixelViewport.bottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > this.pixelViewport.top - 2 * 1000 /* Margin */ && bottom < this.pixelViewport.bottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.heightOracle.direction != Direction.LTR)\n            return gaps;\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, line => {\n            if (line.length < 10000 /* Margin */)\n                return;\n            let structure = lineStructure(line.from, line.to, this.state);\n            if (structure.total < 10000 /* Margin */)\n                return;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                if (line.from != this.viewport.from)\n                    viewFrom = line.from;\n                else\n                    viewFrom = findPosition(structure, (this.pixelViewport.top - line.top) / line.height);\n                if (line.to != this.viewport.to)\n                    viewTo = line.to;\n                else\n                    viewTo = findPosition(structure, (this.pixelViewport.bottom - line.top) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, this.pixelViewport.left / totalWidth);\n                viewTo = findPosition(structure, this.pixelViewport.right / totalWidth);\n            }\n            let sel = this.state.selection.primary;\n            // Make sure the gap doesn't cover a selection end\n            if (sel.from <= viewFrom && sel.to >= line.from)\n                viewFrom = sel.from;\n            if (sel.from <= line.to && sel.to >= viewTo)\n                viewTo = sel.to;\n            let gapTo = viewFrom - 10000 /* Margin */, gapFrom = viewTo + 10000 /* Margin */;\n            if (gapTo > line.from + 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.from == line.from && gap.to > gapTo - 5000 /* HalfMargin */ && gap.to < gapTo + 5000 /* HalfMargin */) ||\n                    new LineGap(line.from, gapTo, this.gapSize(line, gapTo, true, structure)));\n            if (gapFrom < line.to - 5000 /* HalfMargin */)\n                gaps.push(find(current, gap => gap.to == line.to && gap.from > gapFrom - 5000 /* HalfMargin */ &&\n                    gap.from < gapFrom + 5000 /* HalfMargin */) ||\n                    new LineGap(gapFrom, line.to, this.gapSize(line, gapFrom, false, structure)));\n        });\n        return gaps;\n    }\n    gapSize(line, pos, start, structure) {\n        if (this.heightOracle.lineWrapping) {\n            let height = line.height * findFraction(structure, pos);\n            return start ? height : line.height - height;\n        }\n        else {\n            let ratio = findFraction(structure, pos);\n            return structure.total * this.heightOracle.charWidth * (start ? ratio : 1 - ratio);\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n            return 8 /* LineGaps */;\n        }\n        return 0;\n    }\n    computeVisibleRanges() {\n        let deco = this.state.facet(decorations);\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { },\n            minPointSize: 20\n        });\n        this.visibleRanges = ranges;\n    }\n    lineAt(pos, editorTop) {\n        return this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    lineAtHeight(height, editorTop) {\n        return this.heightMap.lineAt(height, QueryType.ByHeight, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    blockAtHeight(height, editorTop) {\n        return this.heightMap.blockAt(height, this.state.doc, editorTop + this.paddingTop, 0);\n    }\n    forEachLine(from, to, f, editorTop) {\n        return this.heightMap.forEachLine(from, to, this.state.doc, editorTop + this.paddingTop, 0, f);\n    }\n}\n/// Indicates the range of the document that is in the visible\n/// viewport.\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n    eq(b) { return this.from == b.from && this.to == b.to; }\n}\nfunction lineStructure(from, to, state) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(state.facet(decorations), from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        },\n        minPointSize: 20 // We're only interested in collapsed ranges of a significant size\n    });\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n\nconst none$4 = [];\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.viewports = none$4;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // checkLayout, this is updated to point at the width of a given\n        // element and its extent in the document. When a change happens in\n        // that range, these are reset. That way, once we've seen a\n        // line/element of a given length, we keep the editor wide enough to\n        // fit at least that element, until it is changed, at which point we\n        // forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], this.updateDeco(), 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        var _a;\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (!((_a = this.view.inputState) === null || _a === void 0 ? void 0 : _a.composing))\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        let forceSelection = (browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.prevState.doc.lines;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        let pointerSel = update.transactions.some(tr => tr.annotation(Transaction.userEvent) == \"pointerselection\");\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0 &&\n            !(update.flags & (4 /* Viewport */ | 8 /* LineGaps */)) &&\n            update.state.selection.primary.from >= this.view.viewport.from &&\n            update.state.selection.primary.to <= this.view.viewport.to) {\n            this.updateSelection(forceSelection, pointerSel);\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, deco, update.prevState.doc.length, forceSelection, pointerSel);\n            return true;\n        }\n    }\n    // Used both by update and checkLayout do perform the actual DOM\n    // update\n    updateInner(changes, deco, oldLength, forceSelection = false, pointerSel = false) {\n        this.updateChildren(changes, deco, oldLength);\n        this.view.observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.heightMap.height + \"px\";\n            this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome ? { node: getSelection(this.view.root).focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track === null || track === void 0 ? void 0 : track.written)\n                forceSelection = true;\n            this.updateSelection(forceSelection, pointerSel);\n            this.dom.style.height = \"\";\n        });\n    }\n    updateChildren(changes, deco, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, deco);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            this.replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    replaceRange(fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd) {\n        let before = this.children[fromI], last = content.length ? content[content.length - 1] : null;\n        let breakAtEnd = last ? last.breakAfter : breakAtStart;\n        // Change within a single line\n        if (fromI == toI && !breakAtStart && !breakAtEnd && content.length < 2 &&\n            before.merge(fromOff, toOff, content.length ? last : null, fromOff == 0, openStart, openEnd))\n            return;\n        let after = this.children[toI];\n        // Make sure the end of the line after the update is preserved in `after`\n        if (toOff < after.length || after.children.length && after.children[after.children.length - 1].length == 0) {\n            // If we're splitting a line, separate part of the start line to\n            // avoid that being mangled when updating the start line.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                content[content.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff || after.children.length && after.children[0].length == 0)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                content.push(after);\n            }\n        }\n        else if (after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && content.length && before.merge(fromOff, before.length, content[0], false, openStart, 0)) {\n                before.breakAfter = content.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n        // Try to merge widgets on the boundaries of the replacement\n        while (fromI < toI && content.length) {\n            if (this.children[toI - 1].match(content[content.length - 1]))\n                toI--, content.pop();\n            else if (this.children[fromI].match(content[0]))\n                fromI++, content.shift();\n            else\n                break;\n        }\n        if (fromI < toI || content.length)\n            this.replaceChildren(fromI, toI, content);\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(force = false, fromPointer = false) {\n        if (!(fromPointer || this.mayControlSelection()))\n            return;\n        let primary = this.view.state.selection.primary;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(primary.anchor);\n        let head = this.domAtPos(primary.head);\n        let domSel = getSelection(this.root);\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            (browser.gecko && primary.empty && nextToUneditable(domSel.focusNode, domSel.focusOffset)) ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                if (primary.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    domSel.collapse(anchor.node, anchor.offset);\n                    if (primary.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = primary.bidiLevel;\n                }\n                else if (domSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    domSel.collapse(anchor.node, anchor.offset);\n                    domSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (primary.anchor > primary.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    domSel.removeAllRanges();\n                    domSel.addRange(range);\n                }\n            });\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        let cursor = this.view.state.selection.primary;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head); // FIXME provide view-line-range finding helper\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom : hasSelection(this.dom, getSelection(this.root));\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start || pos == start && (child.type == BlockType.Text || !i || this.children[i - 1].breakAfter))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights() {\n        let result = [], { from, to } = this.view.viewState.viewport;\n        let minWidth = Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                result.push(child.dom.getBoundingClientRect().height);\n                let width = child.dom.scrollWidth;\n                if (width > minWidth) {\n                    this.minWidth = minWidth = width;\n                    this.minWidthFrom = pos;\n                    this.minWidthTo = end;\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let visible = this.view.viewState.viewport, viewports = [visible];\n        let { head, anchor } = this.view.state.selection.primary;\n        if (head < visible.from || head > visible.to) {\n            let { from, to } = this.view.viewState.lineAt(head, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        if (!viewports.some(({ from, to }) => anchor >= from && anchor <= to)) {\n            let { from, to } = this.view.viewState.lineAt(anchor, 0);\n            viewports.push(new Viewport(from, to));\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        let deco = [];\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == viewports.length ? null : viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = this.view.viewState.lineAt(end, 0).bottom - this.view.viewState.lineAt(pos, 0).top;\n                deco.push(Decoration.replace({ widget: new BlockGapWidget(height), block: true, inclusive: true }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        return this.decorations = [\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco,\n            this.compositionDeco,\n            ...this.view.state.facet(decorations),\n            ...this.view.pluginField(pluginDecorations)\n        ];\n    }\n    scrollPosIntoView(pos, side) {\n        let rect = this.coordsAt(pos, side);\n        if (!rect)\n            return;\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.pluginField(PluginField.scrollMargins))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        scrollRectIntoView(this.dom, {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        });\n    }\n}\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MaxNodeHeight = 1e7;\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        if (this.height < MaxNodeHeight) {\n            while (elt.lastChild)\n                elt.lastChild.remove();\n            elt.style.height = this.height + \"px\";\n        }\n        else {\n            elt.style.height = \"\";\n            for (let remaining = this.height; remaining > 0; remaining -= MaxNodeHeight) {\n                let fill = elt.appendChild(document.createElement(\"div\"));\n                fill.style.height = Math.min(remaining, MaxNodeHeight) + \"px\";\n            }\n        }\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction computeCompositionDeco(view, changes) {\n    let sel = getSelection(view.root);\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return Decoration.none;\n    let cView = view.docView.nearest(textNode);\n    let from, to, topNode = textNode;\n    if (cView instanceof InlineView) {\n        while (cView.parent instanceof InlineView)\n            cView = cView.parent;\n        from = cView.posAtStart;\n        to = from + cView.length;\n        topNode = cView.dom;\n    }\n    else if (cView instanceof LineView) {\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        from = to = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n    }\n    else {\n        return Decoration.none;\n    }\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let text = textNode.nodeValue, { state } = view;\n    if (newTo - newFrom < text.length) {\n        if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.sliceDoc(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(topNode, textNode) }).range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text) {\n        super();\n        this.top = top;\n        this.text = text;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = line.findClusterBreak(linePos, false);\n    else\n        to = line.findClusterBreak(linePos, true);\n    let cat = categorize(line.slice(from, to));\n    while (from > 0) {\n        let prev = line.findClusterBreak(from, false);\n        if (categorize(line.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = line.findClusterBreak(to, true);\n        if (categorize(line.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length, range = tempRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rects = range.getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (rect.left - 1 <= x && rect.right + 1 >= x &&\n                rect.top - 1 <= y && rect.bottom + 1 >= y) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    range.setEnd(node, i);\n                    let rectBefore = range.getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                return { node, offset: i + (after ? 1 : 0) };\n            }\n        }\n    }\n    return { node, offset: 0 };\n}\nfunction posAtCoords(view, { x, y }, bias = -1) {\n    let content = view.contentDOM.getBoundingClientRect(), block;\n    let halfLine = view.defaultLineHeight / 2;\n    for (let bounced = false;;) {\n        block = view.blockAtHeight(y, content.top);\n        if (block.top > y || block.bottom < y) {\n            bias = block.top > y ? -1 : 1;\n            y = Math.min(block.bottom - halfLine, Math.max(block.top + halfLine, y));\n            if (bounced)\n                return -1;\n            else\n                bounced = true;\n        }\n        if (block.type == BlockType.Text)\n            break;\n        y = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n    }\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : null;\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length : null;\n    // Clip x to the viewport sides\n    x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n    let root = view.root, element = root.elementFromPoint(x, y);\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n        if (root.caretPositionFromPoint) {\n            let pos = root.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (root.caretRangeFromPoint) {\n            let range = root.caretRangeFromPoint(x, y);\n            if (range)\n                ({ startContainer: node, startOffset: offset } = range);\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let pos = view.posAtCoords({ x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, view.textDirection, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    var _a;\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos);\n    let startCoords = view.coordsAtPos(startPos);\n    if (startCoords) {\n        let rect = view.dom.getBoundingClientRect();\n        let goal = (_a = start.goalColumn) !== null && _a !== void 0 ? _a : startCoords.left - rect.left;\n        let resolvedGoal = rect.left + goal;\n        let dist = distance !== null && distance !== void 0 ? distance : 5;\n        for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, extra = 0; extra < 50; extra += 10) {\n            let pos = posAtCoords(view, { x: resolvedGoal, y: startY + (dist + extra) * dir }, dir);\n            if (pos == null)\n                break;\n            if (pos != startPos)\n                return EditorSelection.cursor(pos, undefined, undefined, goal);\n        }\n    }\n    // Outside of the drawn viewport, use a crude column-based approach\n    let { doc } = view.state, line = doc.lineAt(startPos), tabSize = view.state.tabSize;\n    let goal = start.goalColumn, goalCol = 0;\n    if (goal == null) {\n        for (const iter = doc.iterRange(line.from, startPos); !iter.next().done;)\n            goalCol = countColumn(iter.value, goalCol, tabSize);\n        goal = goalCol * view.defaultCharacterWidth;\n    }\n    else {\n        goalCol = Math.round(goal / view.defaultCharacterWidth);\n    }\n    if (dir < 0 && line.from == 0)\n        return EditorSelection.cursor(0);\n    else if (dir > 0 && line.to == doc.length)\n        return EditorSelection.cursor(line.to);\n    let otherLine = doc.line(line.number + dir);\n    let result = otherLine.from;\n    let seen = 0;\n    for (const iter = doc.iterRange(otherLine.from, otherLine.to); seen >= goalCol && !iter.next().done;) {\n        const { offset, leftOver } = findColumn(iter.value, seen, goalCol, tabSize);\n        seen = goalCol - leftOver;\n        result += offset;\n    }\n    return EditorSelection.cursor(result, undefined, undefined, goal);\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        this.composing = false;\n        this.compositionEndedAt = 0;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        // Must always run, even if a custom handler handled the event\n        view.contentDOM.addEventListener(\"keydown\", (event) => {\n            view.inputState.lastKeyCode = event.keyCode;\n            view.inputState.lastKeyTime = Date.now();\n        });\n        this.notifiedFocused = view.hasFocus;\n        this.ensureHandlers(view);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view) {\n        let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n        for (let set of handlers) {\n            for (let type in set.handlers)\n                if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                    this.registeredEvents.push(type);\n                    view.contentDOM.addEventListener(type, (event) => {\n                        if (!eventBelongsToEditor(view, event))\n                            return;\n                        if (this.runCustomHandlers(type, view, event))\n                            event.preventDefault();\n                    });\n                }\n        }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && event.timeStamp - this.compositionEndedAt < 500) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return event.type == \"keydown\" || event.type == \"compositionend\";\n    }\n    startMouseSelection(view, event, style) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = new MouseSelection(this, view, event, style);\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nclass MouseSelection {\n    constructor(inputState, view, startEvent, style) {\n        this.inputState = inputState;\n        this.view = view;\n        this.startEvent = startEvent;\n        this.style = style;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection$1(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.startEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (!selection.eq(this.view.state.selection) || selection.primary.assoc != this.view.state.selection.primary.assoc)\n            this.view.dispatch({\n                selection,\n                annotations: Transaction.userEvent.of(\"pointerselection\"),\n                scrollIntoView: true\n            });\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        this.style.update(update);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection$1(view, event) {\n    let facet = view.state.facet(dragMovesSelection);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { primary } = view.state.selection;\n    if (primary.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        changes = {\n            changes: state.selection.ranges.map(r => state.doc.lineAt(r.from))\n                .filter((l, i, a) => i == 0 || a[i - 1] != l)\n                .map(line => ({ from: line.from, insert: (byLine ? text.line(i++).slice() : input) + state.lineBreak }))\n        };\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.slice() },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        annotations: Transaction.userEvent.of(\"paste\"),\n        scrollIntoView: true\n    });\n}\nfunction mustCapture(event) {\n    let mods = (event.ctrlKey ? 1 /* Ctrl */ : 0) | (event.metaKey ? 8 /* Meta */ : 0) |\n        (event.altKey ? 2 /* Alt */ : 0) | (event.shiftKey ? 4 /* Shift */ : 0);\n    let code = event.keyCode, macCtrl = browser.mac && mods == 1 /* Ctrl */;\n    return code == 8 || (macCtrl && code == 72) || // Backspace, Ctrl-h on Mac\n        code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n        code == 27 || // Esc\n        (mods == (browser.mac ? 8 /* Meta */ : 1 /* Ctrl */) && // Ctrl/Cmd-[biyz]\n            (code == 66 || code == 73 || code == 89 || code == 90));\n}\nhandlers.keydown = (view, event) => {\n    if (mustCapture(event))\n        event.preventDefault();\n    view.inputState.setSelectionOrigin(\"keyboardselection\");\n};\nhandlers.touchdown = handlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"pointerselection\");\n};\nhandlers.mousedown = (view, event) => {\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        if (view.root.activeElement != view.contentDOM)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(view, event, style);\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let line = LineView.find(view.docView, pos);\n        if (line)\n            return EditorSelection.range(line.posAtStart, line.posAtEnd);\n        let { from, to } = view.state.doc.lineAt(pos);\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    if (pos == null)\n        return null;\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown;\n    lastMouseDown = event;\n    return lastMouseDownCount = !last || (last.timeStamp > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.changes) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.primary.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { primary } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = primary;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(primary.from, primary.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY });\n    let text = event.dataTransfer.getData(\"Text\");\n    if (dropPos == null || !text)\n        return;\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        annotations: Transaction.userEvent.of(\"drop\")\n    });\n};\nhandlers.paste = (view, event) => {\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let text = data && data.getData(\"text/plain\");\n    if (text) {\n        doPaste(view, text);\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.slice());\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\")\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            annotations: Transaction.userEvent.of(\"cut\")\n        });\n};\nhandlers.focus = handlers.blur = view => {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n};\nhandlers.beforeprint = view => {\n    view.viewState.printing = true;\n    view.requestMeasure();\n    setTimeout(() => {\n        view.viewState.printing = false;\n        view.requestMeasure();\n    }, 2000);\n};\nfunction forceClearComposition(view) {\n    if (view.docView.compositionDeco.size)\n        view.update([]);\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (!view.inputState.composing) {\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view);\n        }\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = true;\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = false;\n    view.inputState.compositionEndedAt = Date.now();\n    setTimeout(() => {\n        if (!view.inputState.composing)\n            forceClearComposition(view);\n    }, 50);\n};\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        this.ignoreSelection = new DOMSelection;\n        this.delayedFlush = -1;\n        this.queue = [];\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.intersecting = false;\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM\n            if (browser.ie && browser.ie_version <= 11 &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = (event) => {\n            if (this.view.root.activeElement != this.dom)\n                return;\n            let sel = getSelection(this.view.root);\n            let context = sel.anchorNode && this.view.docView.nearest(sel.anchorNode);\n            if (context && context.ignoreEvent(event))\n                return;\n            // Deletions on IE11 fire their events in the wrong order, giving\n            // us a selection change event before the DOM changes are\n            // reported.\n            // (Selection.isCollapsed isn't reliable on IE)\n            if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.primary.empty &&\n                sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                this.flushSoon();\n            else\n                this.flush();\n        };\n        this.start();\n        this.onScroll = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScroll);\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n        }\n        this.listenForScroll();\n    }\n    onScroll(e) {\n        if (this.intersecting) {\n            this.flush();\n            this.onScrollChanged(e);\n        }\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        // FIXME is this shadow-root safe?\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    clearSelection() {\n        this.ignoreSelection.set(getSelection(this.view.root));\n    }\n    // Throw away any pending changes\n    clear() {\n        this.observer.takeRecords();\n        this.queue.length = 0;\n        this.clearSelection();\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    // Apply pending changes, if any\n    flush() {\n        if (this.delayedFlush >= 0)\n            return;\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let selection = getSelection(this.view.root);\n        let newSel = !this.ignoreSelection.eq(selection) && hasSelection(this.dom, selection);\n        if (records.length == 0 && !newSel)\n            return;\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        let startState = this.view.state;\n        if (from > -1 || newSel)\n            this.onChange(from, to, typeOver);\n        if (this.view.state == startState) { // The view wasn't updated\n            if (this.view.docView.dirty) {\n                this.ignore(() => this.view.docView.sync());\n                this.view.docView.dirty = 0 /* Not */;\n            }\n            this.view.docView.updateSelection();\n        }\n        this.clearSelection();\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty();\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else { // \"characterData\"\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this.intersection)\n            this.intersection.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        clearTimeout(this.parentCheck);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.primary, bounds;\n    if (start > -1 && (bounds = view.docView.domBoundsAround(start, end, 0))) {\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view.contentDOM, view.root);\n        let reader = new DOMReader(selPoints, view.state.lineBreak);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        newSel = selectionFromPoints(selPoints, from);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n        if (diff)\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: view.state.toText(reader.text.slice(diff.from, diff.toB)) };\n    }\n    else if (view.hasFocus) {\n        let domSel = getSelection(view.root);\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ? view.state.selection.primary.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset\n            ? view.state.selection.primary.anchor\n            : selectionCollapsed(domSel) ? head : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.primary.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    if (change) {\n        let startState = view.state;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events.\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view, \"Enter\", 10)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view, \"Delete\", 46))))\n            return;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) +\n                after));\n        }\n        else {\n            let changes = startState.changes(change);\n            tr = {\n                changes,\n                selection: newSel && !startState.selection.primary.eq(newSel.primary) && newSel.primary.to <= changes.newLength\n                    ? startState.selection.replaceRange(newSel.primary) : undefined\n            };\n        }\n        view.dispatch(tr, { scrollIntoView: true, annotations: Transaction.userEvent.of(\"input\") });\n    }\n    else if (newSel && !newSel.primary.eq(sel)) {\n        let scrollIntoView = false, annotations;\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"keyboardselection\")\n                scrollIntoView = true;\n            else\n                annotations = Transaction.userEvent.of(view.inputState.lastSelectionOrigin);\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, annotations });\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nclass DOMReader {\n    constructor(points, lineSep) {\n        this.points = points;\n        this.lineSep = lineSep;\n        this.text = \"\";\n    }\n    readRange(start, end) {\n        if (!start)\n            return;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if ((view ? view.breakAfter : isBlockElement(cur)) ||\n                ((nextView ? nextView.breakAfter : isBlockElement(next)) && !(cur.nodeName == \"BR\" && !cur.cmIgnore)))\n                this.text += this.lineSep;\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        let text;\n        if (fromView != null)\n            text = fromView.sliceString(0, undefined, this.lineSep);\n        else if (node.nodeType == 3)\n            text = node.nodeValue;\n        else if (node.nodeName == \"BR\")\n            text = node.nextSibling ? this.lineSep : \"\";\n        else if (node.nodeType == 1)\n            this.readRange(node.firstChild, null);\n        if (text != null) {\n            this.findPointIn(node, text.length);\n            this.text += text;\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointIn(node, maxLen) {\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, maxLen);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\nfunction selectionPoints(dom, root) {\n    let result = [];\n    if (root.activeElement != dom)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = getSelection(root);\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\nfunction dispatchKey(view, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    view.contentDOM.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    view.contentDOM.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/// An editor view represents the editor's user interface. It holds\n/// the editable DOM surface, and possibly other elements such as the\n/// line number gutter. It handles events and dispatches state\n/// transactions for editing actions.\nclass EditorView {\n    /// Construct a new view. You'll usually want to put `view.dom` into\n    /// your document after creating a view, so that the user can see\n    /// it.\n    constructor(\n    /// Configuration options.\n    config = {}) {\n        this.plugins = [];\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        /// @internal\n        this.updateState = 2 /* Updating */;\n        /// @internal\n        this.measureScheduled = -1;\n        /// @internal\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.className = themeClass(\"scroller\");\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n        this.observer = new DOMObserver(this, (from, to, typeOver) => {\n            applyDOMChange(this, from, to, typeOver);\n        }, event => {\n            this.inputState.runScrollHandlers(this, event);\n            this.measure();\n        });\n        this.docView = new DocView(this);\n        this.inputState = new InputState(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        ensureGlobalHandler();\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /// The current editor state.\n    get state() { return this.viewState.state; }\n    /// To be able to display large documents without consuming too much\n    /// memory or overloading the browser, CodeMirror only draws the\n    /// code that is visible (plus a margin around it) to the DOM. This\n    /// property tells you the extent of the current drawn viewport, in\n    /// document positions.\n    get viewport() { return this.viewState.viewport; }\n    /// When there are, for example, large collapsed ranges in the\n    /// viewport, its size can be a lot bigger than the actual visible\n    /// content. Thus, if you are doing something like styling the\n    /// content in the viewport, it is preferable to only do so for\n    /// these ranges, which are the subset of the viewport that is\n    /// actually drawn.\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /// Returns false when the editor is entirely scrolled out of view\n    /// or otherwise hidden.\n    get inView() { return this.viewState.inView; }\n    /// Indicates whether the user is currently composing text via\n    /// [IME](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide).\n    get composing() { return this.inputState.composing; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /// Update the view for the given array of transactions. This will\n    /// update the visible document and selection to match the state\n    /// produced by the transactions, and notify view plugins of the\n    /// change. You should usually call\n    /// [`dispatch`](#view.EditorView.dispatch) instead, which uses this\n    /// as a primitive.\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, update;\n        this.updateState = 2 /* Updating */;\n        try {\n            let state = this.state;\n            for (let tr of transactions) {\n                if (tr.startState != state)\n                    throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n                state = tr.state;\n            }\n            update = new ViewUpdate(this, state, transactions);\n            let scrollTo = transactions.some(tr => tr.scrollIntoView) ? state.selection.primary : null;\n            this.viewState.update(update, scrollTo);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty)\n                this.updatePlugins(update);\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            this.updateAttrs();\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (redrawn || scrollTo || this.viewState.mustEnforceCursorAssoc)\n            this.requestMeasure();\n        for (let listener of this.state.facet(updateListener))\n            listener(update);\n    }\n    /// Reset the view to the given state. (This will cause the entire\n    /// document to be redrawn and all view plugins to be reinitialized,\n    /// so you should probably only use it when the new state isn't\n    /// derived from the old state. Otherwise, use\n    /// [`update`](#view.EditorView.update) instead.)\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        this.updateState = 2 /* Updating */;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => PluginInstance.create(spec, this));\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.prevState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [], reused = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(PluginInstance.create(spec, this));\n                }\n                else {\n                    let plugin = this.plugins[found].update(update);\n                    reused.push(plugin);\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (reused.indexOf(plugin) < 0)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.inputState.ensureHandlers(this);\n        }\n        else {\n            for (let i = 0; i < this.plugins.length; i++)\n                this.plugins[i] = this.plugins[i].update(update);\n        }\n    }\n    /// @internal\n    measure() {\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = -1; // Prevent requestMeasure calls from scheduling another animation frame\n        let updated = null;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let changed = this.viewState.measure(this.docView, i > 0);\n                let measuring = this.measureRequests;\n                if (!changed && !measuring.length && this.viewState.scrollTo == null)\n                    break;\n                this.measureRequests = [];\n                if (i > 5) {\n                    console.warn(\"Viewport failed to stabilize\");\n                    break;\n                }\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = new ViewUpdate(this, this.state);\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                this.updatePlugins(update);\n                this.updateAttrs();\n                if (changed)\n                    this.docView.update(update);\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            measuring[i].write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.scrollTo) {\n                    this.docView.scrollPosIntoView(this.viewState.scrollTo.head, this.viewState.scrollTo.assoc);\n                    this.viewState.scrollTo = null;\n                }\n                if (!(changed & 4 /* Viewport */) && this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.measureScheduled = -1;\n        if (updated)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /// Get the CSS classes for the currently active editor themes.\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? \"cm-dark\" : \"cm-light\") + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = combineAttrs(this.state.facet(editorAttributes), {\n            class: themeClass(\"wrap\") + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n        this.editorAttrs = editorAttrs;\n        let contentAttrs = combineAttrs(this.state.facet(contentAttributes), {\n            spellcheck: \"false\",\n            contenteditable: String(this.state.facet(editable)),\n            class: themeClass(\"content\"),\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        });\n        updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n        this.contentAttrs = contentAttrs;\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n    }\n    /// Find the DOM parent node and offset (child offset if `node` is\n    /// an element, character offset when it is a text node) at the\n    /// given document position.\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /// Find the document position at the given DOM node. Can be useful\n    /// for associating positions with DOM events. Will raise an error\n    /// when `node` isn't part of the editor content.\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure();\n    }\n    /// Make sure plugins get a chance to measure the DOM before the\n    /// next frame. Calling this is preferable to messing with the DOM\n    /// directly from, for example, an even handler, because it'll make\n    /// sure measuring and drawing done by other components is\n    /// synchronized, avoiding unnecessary DOM layout computations.\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /// Collect all values provided by the active plugins for a given\n    /// field.\n    pluginField(field) {\n        // FIXME make this error when called during plugin updating\n        let result = [];\n        for (let plugin of this.plugins)\n            plugin.takeField(field, result);\n        return result;\n    }\n    /// Get the value of a specific plugin, if present. Note that\n    /// plugins that crash can be dropped from a view, so even when you\n    /// know you registered a given plugin, it is recommended to check\n    /// the return value of this method.\n    plugin(plugin) {\n        for (let inst of this.plugins)\n            if (inst.spec == plugin)\n                return inst.value;\n        return null;\n    }\n    /// Find the line or block widget at the given vertical position.\n    /// `editorTop`, if given, provides the vertical position of the top\n    /// of the editor. It defaults to the editor's screen position\n    /// (which will force a DOM layout).\n    blockAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.blockAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find information for the visual line (see\n    /// [`visualLineAt`](#view.EditorView.visualLineAt)) at the given\n    /// vertical position. The resulting block info might hold another\n    /// array of block info structs in its `type` field if this line\n    /// consists of more than one block.\n    ///\n    /// Heights are interpreted relative to the given `editorTop`\n    /// position. When not given, the top position of the editor's\n    /// [content element](#view.EditorView.contentDOM) is taken.\n    visualLineAtHeight(height, editorTop) {\n        this.readMeasured();\n        return this.viewState.lineAtHeight(height, ensureTop(editorTop, this.contentDOM));\n    }\n    /// Find the extent and height of the visual line (the content shown\n    /// in the editor as a line, which may be smaller than a document\n    /// line when broken up by block widgets, or bigger than a document\n    /// line when line breaks are covered by replaced decorations) at\n    /// the given position.\n    ///\n    /// Vertical positions are computed relative to the `editorTop`\n    /// argument. You can pass `view.dom.getBoundingClientRect().top`\n    /// here to get screen coordinates.\n    visualLineAt(pos, editorTop = 0) {\n        return this.viewState.lineAt(pos, editorTop);\n    }\n    /// Iterate over the height information of the lines in the\n    /// viewport.\n    viewportLines(f, editorTop) {\n        let { from, to } = this.viewport;\n        this.viewState.forEachLine(from, to, f, ensureTop(editorTop, this.contentDOM));\n    }\n    /// The editor's total content height.\n    get contentHeight() {\n        return this.viewState.heightMap.height + this.viewState.paddingTop + this.viewState.paddingBottom;\n    }\n    /// Move a cursor position by [grapheme\n    /// cluster](#text.nextClusterBreak). `forward` determines whether\n    /// the motion is away from the line start, or towards it. Motion in\n    /// bidirectional text is in visual order, in the editor's [text\n    /// direction](#view.EditorView.textDirection). When the start\n    /// position was the last one on the line, the returned position\n    /// will be across the line break. If there is no further line, the\n    /// original position is returned.\n    moveByChar(start, forward, by) {\n        return moveByChar(this, start, forward, by);\n    }\n    /// Move a cursor position across the next group of either\n    /// [letters](#state.EditorState.charCategorizer) or non-letter\n    /// non-whitespace characters.\n    moveByGroup(start, forward) {\n        return moveByChar(this, start, forward, initial => byGroup(this, start.head, initial));\n    }\n    /// Move to the next line boundary in the given direction. If\n    /// `includeWrap` is true, line wrapping is on, and there is a\n    /// further wrap point on the current line, the wrap point will be\n    /// returned. Otherwise this function will return the start or end\n    /// of the line.\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /// Move a cursor position vertically. When `distance` isn't given,\n    /// it defaults to moving to the next line (including wrapped\n    /// lines). Otherwise, `distance` should provide a positive distance\n    /// in pixels.\n    ///\n    /// When `start` has a\n    /// [`goalColumn`](#state.SelectionRange.goalColumn), the vertical\n    /// motion will use that as a target horizontal position. Otherwise,\n    /// the cursor's own horizontal position is used. The returned\n    /// cursor will have its goal column set to whichever column was\n    /// used.\n    moveVertically(start, forward, distance) {\n        return moveVertically(this, start, forward, distance);\n    }\n    /// Scroll the given document position into view.\n    scrollPosIntoView(pos) {\n        this.viewState.scrollTo = EditorSelection.cursor(pos);\n        this.requestMeasure();\n    }\n    /// Get the document position at the given screen coordinates.\n    /// Returns null if no valid position could be found.\n    posAtCoords(coords) {\n        this.readMeasured();\n        return posAtCoords(this, coords);\n    }\n    /// Get the screen coordinates at the given document position.\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /// The default width of a character in the editor. May not\n    /// accurately reflect the width of all characters.\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /// The default height of a line in the editor.\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /// The text direction (`direction` CSS property) of the editor.\n    get textDirection() { return this.viewState.heightOracle.direction; }\n    /// Whether this editor [wraps lines](#view.EditorView.lineWrapping)\n    /// (as determined by the `white-space` CSS property of its content\n    /// element).\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /// Returns the bidirectional text structure of the given line\n    /// (which should be in the current document) as an array of span\n    /// objects. The order of these spans matches the [text\n    /// direction](#view.EditorView.textDirection)—if that is\n    /// left-to-right, the leftmost spans come first, otherwise the\n    /// rightmost spans come first.\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirection;\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.slice(), this.textDirection);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /// Check whether the editor has focus.\n    get hasFocus() {\n        return document.hasFocus() && this.root.activeElement == this.contentDOM;\n    }\n    /// Put focus on the editor.\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /// Clean up this editor view, removing its element from the\n    /// document, unregistering event handlers, and notifying\n    /// plugins. The view instance can no longer be used after\n    /// calling this.\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n    }\n    /// Facet that can be used to add DOM event handlers. The value\n    /// should be an object mapping event names to handler functions. The\n    /// first such function to return true will be assumed to have handled\n    /// that event, and no other handlers or built-in behavior will be\n    /// activated for it.\n    /// These are registered on the [content\n    /// element](#view.EditorView.contentDOM), except for `scroll`\n    /// handlers, which will be called any time the editor's [scroll\n    /// element](#view.EditorView.scrollDOM) or one of its parent nodes\n    /// is scrolled.\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /// Create a theme extension. The first argument can be a\n    /// [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    /// style spec providing the styles for the theme. These will be\n    /// prefixed with a generated class for the style.\n    ///\n    /// It is highly recommended you use _theme classes_, rather than\n    /// regular CSS classes, in your selectors. These are prefixed with\n    /// a `$` instead of a `.`, and will be expanded (as with\n    /// [`themeClass`](#view.themeClass)) to one or more prefixed class\n    /// names. So for example `$content` targets the editor's [content\n    /// element](#view.EditorView.contentDOM).\n    ///\n    /// Because the selectors will be prefixed with a scope class,\n    /// directly matching the editor's [wrapper\n    /// element](#view.EditorView.dom), which is the element on which\n    /// the scope class will be added, needs to be explicitly\n    /// differentiated by adding an additional `$` to the front of the\n    /// pattern. For example `$$focused $panel` will expand to something\n    /// like `.[scope].cm-focused .cm-panel`.\n    ///\n    /// When `dark` is set to true, the theme will be marked as dark,\n    /// which will add the `$dark` selector to the wrapper element (as\n    /// opposed to `$light` when a light theme is active).\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${baseThemeID}.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /// Create an extension that adds styles to the base theme. The\n    /// given object works much like the one passed to\n    /// [`theme`](#view.EditorView^theme). You'll often want to qualify\n    /// base styles with `$dark` or `$light` so they only apply when\n    /// there is a dark or light theme active. For example `\"$$dark\n    /// $myHighlight\"`.\n    static baseTheme(spec) {\n        return precedence(styleModule.of(buildTheme(\".\" + baseThemeID, spec)), \"fallback\");\n    }\n}\n/// Facet to add a [style\n/// module](https://github.com/marijnh/style-mod#documentation) to\n/// an editor view. The view will ensure that the module is\n/// registered in its [document\n/// root](#view.EditorView.constructor^config.root).\nEditorView.styleModule = styleModule;\n/// An input handler can be used to override the way changes to the\n/// content are handled. A handler is passed the document positions\n/// between which the change was found, and the new content. When it\n/// returns true, no further input handlers are called and the\n/// default behavior is prevented.\nEditorView.inputHandler = inputHandler;\n/// Allows you to provide a function that should be called when the\n/// library catches an exception from an extension (mostly from view\n/// plugins, but may be used by other extensions to route exceptions\n/// from user-code-provided callbacks). This is mostly useful for\n/// debugging and logging. See [`logException`](#view.logException).\nEditorView.exceptionSink = exceptionSink;\n/// A facet that can be used to have a listener function be notified\n/// every time the view updates.\nEditorView.updateListener = updateListener;\n/// Facet that controls whether the editor content is editable. When\n/// its the highest-precedence value is `false`, editing is\n/// disabled, and the content element will no longer have its\n/// `contenteditable` attribute set to `true`. (Note that this\n/// doesn't affect API calls that change the editor content, even\n/// when those are bound to keys or buttons.)\nEditorView.editable = editable;\n/// Facet used to configure whether a given selection drag event\n/// should move or copy the selection. The given predicate will be\n/// called with the `mousedown` event, and can return `true` when\n/// the drag should move the content.\nEditorView.dragMovesSelection = dragMovesSelection;\n/// Facet used to configure whether a given selecting click adds\n/// a new range to the existing selection or replaces it entirely.\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/// Allows you to influence the way mouse selection happens. The\n/// functions in this facet will be called for a `mousedown` event\n/// on the editor, and can return an object that overrides the way a\n/// selection is computed from that mouse click or drag.\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/// A facet that determines which [decorations](#view.Decoration)\n/// are shown in the view. See also [view\n/// plugins](#view.EditorView^decorations), which have a separate\n/// mechanism for providing decorations.\nEditorView.decorations = decorations;\n/// An extension that enables line wrapping in the editor.\nEditorView.lineWrapping = EditorView.theme({ $content: { whiteSpace: \"pre-wrap\" } });\n/// Facet that provides attributes for the editor's editable DOM\n/// element.\nEditorView.contentAttributes = contentAttributes;\n/// Facet that provides editor DOM attributes for the editor's\n/// outer element.\nEditorView.editorAttributes = editorAttributes;\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nfunction ensureTop(given, dom) {\n    return given == null ? dom.getBoundingClientRect().top : given;\n}\nlet resizeDebounce = -1;\nfunction ensureGlobalHandler() {\n    window.addEventListener(\"resize\", () => {\n        if (resizeDebounce == -1)\n            resizeDebounce = setTimeout(handleResize, 50);\n    });\n}\nfunction handleResize() {\n    resizeDebounce = -1;\n    let found = document.querySelectorAll(\".cm-content\");\n    for (let i = 0; i < found.length; i++) {\n        let docView = ContentView.get(found[i]);\n        if (docView)\n            docView.editorView.requestMeasure();\n    }\n}\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\n\nconst currentPlatform = typeof navigator == \"undefined\" ? \"key\"\n    : /Mac/.test(navigator.platform) ? \"mac\"\n        : /Win/.test(navigator.platform) ? \"win\"\n            : /Linux|X11/.test(navigator.platform) ? \"linux\"\n                : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst keymaps = Facet.define();\nconst handleKeyEvents = EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(view.state.facet(keymaps), event, view, \"editor\");\n    }\n});\n/// Create a view extension that registers a keymap.\n///\n/// You can add multiple keymap extensions to an editor. Their\n/// priorities determine their precedence (the ones specified early or\n/// with high priority get checked first). When a handler has returned\n/// `true` for a given key, no further handlers are called.\n///\n/// When a key is bound multiple times (either in a single keymap or\n/// in separate maps), the bound commands all get a chance to handle\n/// the key stroke, in order of precedence, until one of them returns\n/// true.\nfunction keymap(bindings, platform) {\n    return [handleKeyEvents, keymaps.of(buildKeymap(bindings, platform))];\n}\n/// Run the key handlers registered for a given scope. Returns true if\n/// any of them handled the event.\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(view.state.facet(keymaps), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(maps, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\";\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        storedPrefix = null;\n    }\n    let fallthrough = !!prefix;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    for (let map of maps) {\n        let scopeObj = map[scope], baseName;\n        if (!scopeObj)\n            continue;\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/// Returns an extension that hides the browser's native selection and\n/// cursor, replacing the selection with a background behind the text\n/// (labeled with the `$selectionBackground` theme class), and the\n/// cursors with elements overlaid over the code (using\n/// `$cursor.primary` and `$cursor.secondary`).\n///\n/// This allows the editor to display secondary selection ranges, and\n/// tends to produce a type of selection more in line with that users\n/// expect in a text editor (the native selection styling will often\n/// leave gaps between lines and won't fill the horizontal space after\n/// a line when the selection continues past it).\n///\n/// It does have a performance cost, in that it requires an extra DOM\n/// layout cycle for many updates (the selection is drawn based on DOM\n/// layout information that's only available after laying out the\n/// content).\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n        return elt;\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = themeClass(\"selectionLayer\");\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = themeClass(\"cursorLayer\");\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.prevState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.primary;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            this.cursorLayer.textContent = \"\";\n            for (let c of cursors)\n                this.cursorLayer.appendChild(c.draw());\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    $line: {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec.$line.caretColor = \"transparent !important\";\nconst hideNativeSelection = precedence(EditorView.theme(themeSpec), \"override\");\nconst selectionClass = themeClass(\"selectionBackground\");\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    return { left: rect.left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from) };\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft);\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let visualStart = view.visualLineAt(from);\n    let visualEnd = view.visualLineAt(to);\n    if (view.lineWrapping) {\n        visualStart = wrappedLine(view, from, visualStart);\n        visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to));\n    }\n    else {\n        let top = drawForLine(range.from, null);\n        let bottom = drawForLine(null, range.to);\n        let between = [];\n        if (visualStart.to < visualEnd.from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && bottom.top - top.bottom < 4)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top, right - left, bottom - top, selectionClass);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            let fromCoords = view.coordsAtPos(from, 1), toCoords = view.coordsAtPos(to, -1);\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : view.moveToLineBoundary(EditorSelection.cursor(to, 1), false).head;\n        let end = to !== null && to !== void 0 ? to : view.moveToLineBoundary(EditorSelection.cursor(from, -1), true).head;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0) {\n            let coords = view.coordsAtPos(start, -1);\n            top = Math.min(coords.top, top);\n            bottom = Math.max(coords.bottom, bottom);\n        }\n        return { top, bottom, horizontal };\n    }\n}\nconst primaryCursorClass = themeClass(\"cursor.primary\");\nconst cursorClass = themeClass(\"cursor.secondary\");\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? primaryCursorClass : cursorClass);\n}\n\nconst Specials = /[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200c\\u200e\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/gu;\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = (styles.tabSize || styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst specialCharConfig = Facet.define({\n    combine(configs) {\n        // FIXME make configurations compose properly\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/// Returns an extension that installs highlighting of special\n/// characters.\nfunction highlightSpecialChars(\n/// Configuration options.\nconfig = {}) {\n    let ext = [specialCharConfig.of(config), specialCharPlugin];\n    if (!supportsTabSize())\n        ext.push(tabStyle);\n    return ext;\n}\nconst specialCharPlugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = Decoration.none;\n        this.decorationCache = Object.create(null);\n        this.recompute();\n    }\n    update(update) {\n        let confChange = update.prevState.facet(specialCharConfig) != update.state.facet(specialCharConfig);\n        if (confChange)\n            this.decorationCache = Object.create(null);\n        if (confChange || update.changes.length || update.viewportChanged)\n            this.recompute();\n    }\n    recompute() {\n        let decorations = [];\n        for (let { from, to } of this.view.visibleRanges)\n            this.getDecorationsFor(from, to, decorations);\n        this.decorations = Decoration.set(decorations);\n    }\n    getDecorationsFor(from, to, target) {\n        let config = this.view.state.facet(specialCharConfig);\n        let { doc } = this.view.state;\n        for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n            if (!cursor.lineBreak) {\n                while (m = config.specialChars.exec(cursor.value)) {\n                    let code = codePointAt(m[0], 0), deco;\n                    if (code == null)\n                        continue;\n                    if (code == 9) {\n                        let line = doc.lineAt(pos + m.index);\n                        let size = this.view.state.tabSize, col = countColumn(doc.sliceString(line.from, pos + m.index), 0, size);\n                        deco = Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    else {\n                        deco = this.decorationCache[code] ||\n                            (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(config, code) }));\n                    }\n                    target.push(deco.range(pos + m.index, pos + m.index + m[0].length));\n                }\n            }\n            pos += cursor.value.length;\n        }\n    }\n}, {\n    decorations: v => v.decorations\n});\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code) {\n    if (code >= 32)\n        return null;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nconst DefaultPlaceholder = \"\\u2022\";\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM() {\n        let ph = placeHolder(this.code) || DefaultPlaceholder;\n        let desc = \"Control character \" + (Names[this.code] || this.code);\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.style.color = \"red\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = tab;\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nconst tab = StyleModule.newName(), tabStyle = EditorView.styleModule.of(new StyleModule({\n    [\".\" + tab]: {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    }\n}));\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = themeClass(\"placeholder\");\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/// Extension that enables a placeholder—a piece of extample content\n/// to show when the editor is empty.\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n/// @internal\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, highlightSpecialChars, keymap, logException, placeholder, runScopeHandlers, themeClass };\n","import * as N3 from \"n3.ts\"\n\ntype TypeMap = Record<string, APG.Type>\ntype ExpressionMap = Record<string, APG.Expression[]>\n\nnamespace APG {\n\texport type Schema<T extends TypeMap = TypeMap> = T\n\n\texport const schema = <T extends TypeMap>(labels: T): Schema<T> =>\n\t\tObject.freeze(labels)\n\n\texport type Type = Uri | Literal | Product | Coproduct | Reference\n\n\texport interface Reference<T extends string = string> {\n\t\treadonly type: \"reference\"\n\t\treadonly value: T\n\t}\n\n\texport const reference = <T extends string>(value: T): Reference<T> =>\n\t\tObject.freeze({ type: \"reference\", value })\n\n\texport interface Uri {\n\t\treadonly type: \"uri\"\n\t}\n\n\texport const uri = (): Uri => Object.freeze({ type: \"uri\" })\n\n\texport interface Literal<T extends string = string> {\n\t\treadonly type: \"literal\"\n\t\treadonly datatype: T\n\t}\n\n\texport const literal = <T extends string>(datatype: T): Literal<T> =>\n\t\tObject.freeze({ type: \"literal\", datatype })\n\n\texport interface Product<T extends TypeMap = TypeMap> {\n\t\treadonly type: \"product\"\n\t\treadonly components: Readonly<T>\n\t}\n\n\texport const product = <T extends TypeMap>(components: T): Product<T> =>\n\t\tObject.freeze({ type: \"product\", components: Object.freeze(components) })\n\n\texport interface Coproduct<T extends TypeMap = TypeMap> {\n\t\treadonly type: \"coproduct\"\n\t\treadonly options: Readonly<T>\n\t}\n\n\texport const coproduct = <T extends TypeMap>(options: T): Coproduct<T> =>\n\t\tObject.freeze({ type: \"coproduct\", options: Object.freeze(options) })\n\n\texport type Instance<S extends Schema = Schema> = Readonly<\n\t\t{ [key in keyof S]: Value<S[key]>[] }\n\t>\n\n\texport type Value<T extends Type = Type> = T extends Uri\n\t\t? N3.NamedNode\n\t\t: T extends Literal\n\t\t? N3.Literal\n\t\t: T extends Product<infer Components>\n\t\t? Record<Components>\n\t\t: T extends Coproduct<infer Options>\n\t\t? Variant<Options>\n\t\t: T extends Reference\n\t\t? Pointer\n\t\t: never\n\n\texport class Pointer {\n\t\tconstructor(readonly index: number) {\n\t\t\tObject.freeze(this)\n\t\t}\n\t\tpublic get termType(): \"Pointer\" {\n\t\t\treturn \"Pointer\"\n\t\t}\n\t}\n\n\texport class Record<T extends TypeMap = TypeMap> extends Array<\n\t\tValue<T[keyof T]>\n\t> {\n\t\tpublic get termType(): \"Record\" {\n\t\t\treturn \"Record\"\n\t\t}\n\n\t\tconstructor(\n\t\t\treadonly components: readonly (keyof T)[],\n\t\t\tvalues: Iterable<Value<T[keyof T]>>\n\t\t) {\n\t\t\tsuper(...values)\n\t\t\tObject.freeze(this)\n\t\t}\n\n\t\tget<K extends keyof T>(key: K): Value<T[K]> {\n\t\t\tconst index = this.components.indexOf(key)\n\t\t\tif (index in this) {\n\t\t\t\treturn this[index] as Value<T[K]>\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Index out of range: ${index}`)\n\t\t\t}\n\t\t}\n\n\t\tmap<V>(\n\t\t\tf: (value: Value<T[keyof T]>, index: number, record: Record<T>) => V\n\t\t): V[] {\n\t\t\tconst result = new Array<V>(this.length)\n\t\t\tfor (const [i, value] of this.entries()) {\n\t\t\t\tresult[i] = f(value, i, this)\n\t\t\t}\n\t\t\treturn result\n\t\t}\n\t}\n\n\tconst unitKeys: [] = []\n\tconst unitValues: [] = []\n\texport const unit = () => new Record<{}>(unitKeys, unitValues)\n\n\texport class Variant<\n\t\tT extends TypeMap = TypeMap,\n\t\tK extends keyof T = keyof T\n\t> {\n\t\treadonly index: number\n\t\tconstructor(\n\t\t\treadonly options: readonly (keyof T)[],\n\t\t\treadonly key: K,\n\t\t\treadonly value: Value<T[K]>\n\t\t) {\n\t\t\tthis.index = options.indexOf(key)\n\t\t\tif (this.index in options) {\n\t\t\t\tObject.freeze(this)\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Varint index out of range\")\n\t\t\t}\n\t\t}\n\t\tpublic get termType(): \"Variant\" {\n\t\t\treturn \"Variant\"\n\t\t}\n\t\tis<Key extends K>(key: Key): this is Variant<T, Key> {\n\t\t\treturn key === this.key\n\t\t}\n\t}\n\n\texport type Expression =\n\t\t| Identity\n\t\t| Identifier\n\t\t| Constant\n\t\t| Dereference\n\t\t| Projection\n\t\t| Injection\n\t\t| Tuple\n\t\t| Match\n\n\texport interface Identity {\n\t\treadonly type: \"identity\"\n\t}\n\n\texport const identity = (): Identity => Object.freeze({ type: \"identity\" })\n\n\texport interface Identifier<T extends string = string> {\n\t\treadonly type: \"identifier\"\n\t\treadonly value: T\n\t}\n\n\texport const identifier = <Value extends string>(\n\t\tvalue: Value\n\t): Identifier<Value> => Object.freeze({ type: \"identifier\", value })\n\n\texport interface Constant<\n\t\tDatatype extends string = string,\n\t\tValue extends string = string\n\t> {\n\t\treadonly type: \"constant\"\n\t\treadonly value: Value\n\t\treadonly datatype: Datatype\n\t}\n\n\texport const constant = <\n\t\tDatatype extends string = string,\n\t\tValue extends string = string\n\t>(\n\t\tvalue: Value,\n\t\tdatatype: Datatype\n\t): Constant<Datatype, Value> =>\n\t\tObject.freeze({ type: \"constant\", value, datatype })\n\n\texport interface Dereference<Key extends string = string> {\n\t\treadonly type: \"dereference\"\n\t\treadonly key: Key\n\t}\n\n\texport const dereference = <Key extends string = string>(\n\t\tkey: Key\n\t): Dereference<Key> => Object.freeze({ type: \"dereference\", key })\n\n\texport interface Projection<Key extends string = string> {\n\t\treadonly type: \"projection\"\n\t\treadonly key: Key\n\t}\n\n\texport const projection = <Key extends string = string>(\n\t\tkey: Key\n\t): Projection<Key> => Object.freeze({ type: \"projection\", key })\n\n\texport interface Injection<\n\t\tKey extends string = string,\n\t\tValue extends readonly Expression[] = readonly Expression[]\n\t> {\n\t\treadonly type: \"injection\"\n\t\treadonly key: Key\n\t\treadonly value: Value\n\t}\n\n\texport const injection = <\n\t\tKey extends string = string,\n\t\tValue extends readonly Expression[] = readonly Expression[]\n\t>(\n\t\tkey: Key,\n\t\tvalue: Value\n\t): Injection<Key, Value> => Object.freeze({ type: \"injection\", key, value })\n\n\texport interface Tuple {\n\t\treadonly type: \"tuple\"\n\t\treadonly slots: Readonly<ExpressionMap>\n\t}\n\n\texport const tuple = (slots: Readonly<ExpressionMap>): Tuple =>\n\t\tObject.freeze({ type: \"tuple\", slots: Object.freeze(slots) })\n\n\texport interface Match {\n\t\treadonly type: \"match\"\n\t\treadonly cases: Readonly<ExpressionMap>\n\t}\n\n\texport const match = (cases: Readonly<ExpressionMap>): Match =>\n\t\tObject.freeze({ type: \"match\", cases: Object.freeze(cases) })\n\n\texport interface Map {\n\t\treadonly type: \"map\"\n\t\treadonly source: string\n\t\treadonly value: readonly APG.Expression[]\n\t}\n\n\texport const map = (source: string, value: readonly APG.Expression[]): Map =>\n\t\tObject.freeze({ type: \"map\", source, value })\n\n\texport type Mapping = Readonly<{ [key: string]: Map }>\n\n\texport const mapping = (maps: Readonly<{ [key: string]: Map }>): Mapping =>\n\t\tObject.freeze(maps)\n}\n\nexport default APG\n","export const label = \"http://underlay.org/ns/label\",\n\treference = \"http://underlay.org/ns/reference\",\n\turi = \"http://underlay.org/ns/uri\",\n\tliteral = \"http://underlay.org/ns/literal\",\n\tdatatype = \"http://underlay.org/ns/datatype\",\n\tproduct = \"http://underlay.org/ns/product\",\n\tcoproduct = \"http://underlay.org/ns/coproduct\",\n\tcomponent = \"http://underlay.org/ns/component\",\n\toption = \"http://underlay.org/ns/option\",\n\tkey = \"http://underlay.org/ns/key\",\n\tvalue = \"http://underlay.org/ns/value\",\n\tsource = \"http://underlay.org/ns/source\",\n\ttarget = \"http://underlay.org/ns/target\",\n\tnone = \"http://underlay.org/ns/none\",\n\tsome = \"http://underlay.org/ns/some\",\n\thead = \"http://underlay.org/ns/head\",\n\ttail = \"http://underlay.org/ns/tail\",\n\texpression = \"http://underlay.org/ns/expression\",\n\tidentity = \"http://underlay.org/ns/identity\",\n\tidentifier = \"http://underlay.org/ns/identifier\",\n\tconstant = \"http://underlay.org/ns/constant\",\n\tdereference = \"http://underlay.org/ns/dereference\",\n\tprojection = \"http://underlay.org/ns/injection\",\n\tinjection = \"http://underlay.org/ns/injection\",\n\ttuple = \"http://underlay.org/ns/tuple\",\n\tslot = \"http://underlay.org/ns/slot\",\n\tmatch = \"http://underlay.org/ns/match\",\n\tCASE = \"http://underlay.org/ns/case\",\n\tpath = \"http://underlay.org/ns/path\",\n\tmap = \"http://underlay.org/ns/map\"\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import { v4 as uuid } from \"uuid\"\n\ntype R<K extends string = string, V = any> = Readonly<Record<K, V>>\n\nconst keyMap = new WeakMap<R, readonly string[]>()\n\nexport function* forEntries<K extends string = string, V = any>(\n\tobject: R<K, V>\n): Generator<[K, V, number], void, undefined> {\n\tfor (const [index, key] of getKeys(object).entries()) {\n\t\tyield [key, object[key], index]\n\t}\n}\n\nexport function getKeys<T extends R = R>(object: T): readonly (keyof T)[] {\n\tif (keyMap.has(object)) {\n\t\treturn keyMap.get(object)!\n\t} else {\n\t\tconst keys = Object.keys(object).sort()\n\t\tObject.freeze(keys)\n\t\tkeyMap.set(object, keys)\n\t\treturn keys\n\t}\n}\n\nexport function getKeyIndex(\n\tobject: Readonly<{ [key: string]: any }>,\n\tkey: string\n) {\n\tif (keyMap.has(object)) {\n\t\tconst index = keyMap.get(object)!.indexOf(key)\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Key not found: ${key}`)\n\t\t}\n\t\treturn index\n\t} else {\n\t\tconst keys = Object.keys(object).sort()\n\t\tObject.freeze(keys)\n\t\tkeyMap.set(object, keys)\n\t\tconst index = keys.indexOf(key)\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Key not found: ${key}`)\n\t\t}\n\t\treturn index\n\t}\n}\n\nexport function mapKeys<T, K extends string = string, V = any>(\n\tobject: R<K, V>,\n\tmap: <Key extends K>(value: R[Key], key: Key) => T\n) {\n\tconst keys = getKeys(object)\n\tconst result = Object.fromEntries(\n\t\tkeys.map((key) => [key, map(object[key], key)])\n\t)\n\tkeyMap.set(result, keys)\n\tObject.freeze(result)\n\treturn result\n}\n\nexport function signalInvalidType(type: never): never {\n\tconsole.error(type)\n\tthrow new Error(\"Invalid type\")\n}\n\nexport const rootId = uuid()\n","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\nimport { getKeys } from \"./utils.js\"\n\nexport function* forType(\n\ttype: APG.Type,\n\tstack: APG.Type[] = []\n): Generator<[APG.Type, APG.Type[]], void, undefined> {\n\tif (stack.includes(type)) {\n\t\tthrow new Error(\"Recursive type\")\n\t}\n\n\tyield [type, stack]\n\tif (type.type === \"product\") {\n\t\tstack.push(type)\n\t\tfor (const key of getKeys(type.components)) {\n\t\t\tyield* forType(type.components[key], stack)\n\t\t}\n\t\tstack.pop()\n\t} else if (type.type === \"coproduct\") {\n\t\tstack.push(type)\n\t\tfor (const key of getKeys(type.options)) {\n\t\t\tyield* forType(type.options[key], stack)\n\t\t}\n\t\tstack.pop()\n\t}\n}\n\nexport function isTypeEqual(a: APG.Type, b: APG.Type) {\n\tif (a === b) {\n\t\treturn true\n\t} else if (a.type !== b.type) {\n\t\treturn false\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\treturn a.value === b.value\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn true\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\treturn a.datatype === b.datatype\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tconst A = getKeys(a.components)\n\t\tconst B = getKeys(b.components)\n\t\tif (A.length !== B.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\t\tif (keyA !== keyB) {\n\t\t\t\treturn false\n\t\t\t} else if (isTypeEqual(a.components[keyA], a.components[keyB])) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tconst A = getKeys(a.options)\n\t\tconst B = getKeys(b.options)\n\t\tif (A.length !== B.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\t\tif (keyA !== keyB) {\n\t\t\t\treturn false\n\t\t\t} else if (isTypeEqual(a.options[keyA], b.options[keyB])) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function isTypeAssignable(a: APG.Type, b: APG.Type): boolean {\n\tif (a === b) {\n\t\treturn true\n\t} else if (a.type !== b.type) {\n\t\treturn false\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\treturn a.value === b.value\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn true\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\treturn a.datatype === b.datatype\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\tfor (const key of getKeys(b.components)) {\n\t\t\tif (\n\t\t\t\tkey in a.components &&\n\t\t\t\tisTypeAssignable(a.components[key], b.components[key])\n\t\t\t) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else if (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\tfor (const key of getKeys(a.options)) {\n\t\t\tif (\n\t\t\t\tkey in b.options &&\n\t\t\t\tisTypeAssignable(a.options[key], b.options[key])\n\t\t\t) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport function unify(a: APG.Type, b: APG.Type): APG.Type {\n\tif (a === b) {\n\t\treturn b\n\t} else if (a.type === \"reference\" && b.type === \"reference\") {\n\t\tif (a.value === b.value) {\n\t\t\treturn b\n\t\t}\n\t} else if (a.type === \"uri\" && b.type === \"uri\") {\n\t\treturn b\n\t} else if (a.type === \"literal\" && b.type === \"literal\") {\n\t\tif (a.datatype === b.datatype) {\n\t\t\treturn b\n\t\t}\n\t} else if (a.type === \"product\" && b.type === \"product\") {\n\t\treturn APG.product(Object.fromEntries(unifyComponents(a, b)))\n\t}\n\tif (a.type === \"coproduct\" && b.type === \"coproduct\") {\n\t\treturn APG.coproduct(Object.fromEntries(unifyOptions(a, b)))\n\t} else {\n\t\tthrow new Error(\"Cannot unify unequal types\")\n\t}\n}\n\nfunction* unifyComponents(\n\ta: APG.Product,\n\tb: APG.Product\n): Generator<[string, APG.Type], void, undefined> {\n\tconst A = getKeys(a.components)\n\tconst B = getKeys(b.components)\n\tif (A.length !== B.length) {\n\t\tthrow new Error(\"Cannot unify unequal products\")\n\t}\n\n\tfor (const [keyA, keyB] of zip(A, B)) {\n\t\tif (keyA !== keyB) {\n\t\t\tthrow new Error(\"Cannot unify unequal types\")\n\t\t} else {\n\t\t\tyield [keyA, unify(a.components[keyA], b.components[keyB])]\n\t\t}\n\t}\n}\n\nfunction* unifyOptions(\n\ta: APG.Coproduct,\n\tb: APG.Coproduct\n): Generator<[string, APG.Type], void, undefined> {\n\tconst keys = Array.from(\n\t\tnew Set([...getKeys(a.options), ...getKeys(b.options)])\n\t).sort()\n\tfor (const key of keys) {\n\t\tconst A = a.options[key]\n\t\tconst B = b.options[key]\n\t\tif (A !== undefined && B === undefined) {\n\t\t\tyield [key, A]\n\t\t} else if (A === undefined && B !== undefined) {\n\t\t\tyield [key, B]\n\t\t} else if (A !== undefined && B !== undefined) {\n\t\t\tyield [key, unify(A, B)]\n\t\t} else {\n\t\t\tthrow new Error(\"Error unifying options\")\n\t\t}\n\t}\n}\n","import APG from \"./apg.js\"\n\nimport { isTypeAssignable, unify } from \"./type.js\"\nimport { getKeys, mapKeys, signalInvalidType } from \"./utils.js\"\n\nexport const applyExpressions = (\n\tS: APG.Schema,\n\texpressions: readonly APG.Expression[],\n\tsource: APG.Type\n) =>\n\texpressions.reduce(\n\t\t(type: APG.Type, expression: APG.Expression) => apply(S, expression, type),\n\t\tsource\n\t)\n\nexport function apply(\n\tS: APG.Schema,\n\texpression: APG.Expression,\n\tsource: APG.Type\n): APG.Type {\n\tif (expression.type === \"identity\") {\n\t\treturn source\n\t} else if (expression.type === \"identifier\") {\n\t\treturn APG.uri()\n\t} else if (expression.type === \"constant\") {\n\t\treturn APG.literal(expression.datatype)\n\t} else if (expression.type === \"dereference\") {\n\t\tif (\n\t\t\tsource.type === \"reference\" &&\n\t\t\tsource.value in S &&\n\t\t\tsource.value === expression.key\n\t\t) {\n\t\t\treturn S[source.value]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid dereference morphism\")\n\t\t}\n\t} else if (expression.type === \"projection\") {\n\t\tif (source.type === \"product\" && expression.key in source.components) {\n\t\t\treturn source.components[expression.key]\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid projection morphism\")\n\t\t}\n\t} else if (expression.type === \"injection\") {\n\t\tconst { key, value } = expression\n\t\treturn APG.coproduct({\n\t\t\t[key]: value.reduce(\n\t\t\t\t(type, expression) => apply(S, expression, type),\n\t\t\t\tsource\n\t\t\t),\n\t\t})\n\t} else if (expression.type === \"tuple\") {\n\t\treturn APG.product(\n\t\t\tmapKeys(expression.slots, (value) => applyExpressions(S, value, source))\n\t\t)\n\t} else if (expression.type === \"match\") {\n\t\tif (source.type === \"coproduct\") {\n\t\t\tconst cases = Array.from(applyCases(S, source, expression))\n\t\t\tif (cases.length === 0) {\n\t\t\t\tthrow new Error(\"Empty case analysis\")\n\t\t\t} else {\n\t\t\t\treturn cases.reduce(unify)\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid match morphism\")\n\t\t}\n\t} else {\n\t\tsignalInvalidType(expression)\n\t}\n}\n\nfunction* applyCases(\n\tS: APG.Schema,\n\tsource: APG.Coproduct,\n\t{ cases }: APG.Match\n): Generator<APG.Type, void, undefined> {\n\tfor (const key of getKeys(source.options)) {\n\t\tif (key in cases) {\n\t\t\tyield applyExpressions(S, cases[key], source.options[key])\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid case analysis\")\n\t\t}\n\t}\n}\n\nexport function validateExpressions(\n\tS: APG.Schema,\n\texpressions: readonly APG.Expression[],\n\tsource: APG.Type,\n\ttarget: APG.Type\n): boolean {\n\tlet type: APG.Type\n\ttry {\n\t\ttype = applyExpressions(S, expressions, source)\n\t} catch (e) {\n\t\treturn false\n\t}\n\n\treturn isTypeAssignable(type, target)\n}\n","import * as N3 from \"n3.ts\"\nimport zip from \"ziterable\"\n\nimport APG from \"./apg.js\"\nimport { validateExpressions } from \"./morphism.js\"\n\nimport {\n\trootId,\n\tsignalInvalidType,\n\tgetKeys,\n\tforEntries,\n\tmapKeys,\n} from \"./utils.js\"\n\nexport function validateMapping(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema\n): boolean {\n\tfor (const [key, type] of forEntries(S)) {\n\t\tif (!(key in M)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { source, value } = M[key]\n\t\tif (validateExpressions(S, value, T[source], fold(M, S, T, type))) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n\nexport function fold(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema,\n\ttype: APG.Type\n): APG.Type {\n\tif (type.type === \"reference\") {\n\t\tconst { source } = M[type.value]\n\t\tconst value = T[source]\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(\"Invalid reference index\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"uri\") {\n\t\treturn type\n\t} else if (type.type === \"literal\") {\n\t\treturn type\n\t} else if (type.type === \"product\") {\n\t\treturn APG.product(\n\t\t\tmapKeys(type.components, (value) => fold(M, S, T, value))\n\t\t)\n\t} else if (type.type === \"coproduct\") {\n\t\treturn APG.coproduct(mapKeys(type.options, (value) => fold(M, S, T, value)))\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nexport const mapExpressions = (\n\texpressions: readonly APG.Expression[],\n\tvalue: APG.Value,\n\tinstance: APG.Instance,\n\tschema: APG.Schema\n) =>\n\texpressions.reduce(\n\t\t(value: APG.Value, expression: APG.Expression) =>\n\t\t\tmap(expression, value, instance, schema),\n\t\tvalue\n\t)\n\nexport function map(\n\texpression: APG.Expression,\n\tvalue: APG.Value,\n\tinstance: APG.Instance,\n\tschema: APG.Schema\n): APG.Value {\n\tif (expression.type === \"identity\") {\n\t\treturn value\n\t} else if (expression.type === \"identifier\") {\n\t\treturn new N3.NamedNode(expression.value)\n\t} else if (expression.type === \"constant\") {\n\t\treturn new N3.Literal(\n\t\t\texpression.value,\n\t\t\t\"\",\n\t\t\tnew N3.NamedNode(expression.datatype)\n\t\t)\n\t} else if (expression.type === \"dereference\") {\n\t\tif (value.termType === \"Pointer\") {\n\t\t\tconst { key } = expression\n\t\t\tif (key in instance && value.index in instance[key]) {\n\t\t\t\treturn instance[key][value.index]\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid pointer dereference\")\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid pointer dereference\")\n\t\t}\n\t} else if (expression.type === \"projection\") {\n\t\tif (value.termType === \"Record\") {\n\t\t\treturn value.get(expression.key)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid projection\")\n\t\t}\n\t} else if (expression.type === \"match\") {\n\t\tif (value.termType === \"Variant\") {\n\t\t\tif (value.key in expression.cases) {\n\t\t\t\tconst c = expression.cases[value.key]\n\t\t\t\treturn mapExpressions(c, value.value, instance, schema)\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid case analysis\")\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid match morphism\")\n\t\t}\n\t} else if (expression.type === \"tuple\") {\n\t\tconst keys = getKeys(expression.slots)\n\t\treturn new APG.Record(\n\t\t\tkeys,\n\t\t\tkeys.map((key) =>\n\t\t\t\tmapExpressions(expression.slots[key], value, instance, schema)\n\t\t\t)\n\t\t)\n\t} else if (expression.type === \"injection\") {\n\t\treturn new APG.Variant(\n\t\t\tObject.freeze([expression.key]),\n\t\t\texpression.key,\n\t\t\tmapExpressions(expression.value, value, instance, schema)\n\t\t)\n\t} else {\n\t\tsignalInvalidType(expression)\n\t}\n}\n\nexport function delta(\n\tM: APG.Mapping,\n\tS: APG.Schema,\n\tT: APG.Schema,\n\tTI: APG.Instance\n): APG.Instance {\n\tconst SI: APG.Instance = mapKeys(S, () => [])\n\n\tconst indices = mapKeys(S, () => new Map<APG.Value, number>())\n\n\tfor (const [key, type] of forEntries(S)) {\n\t\tif (!(key in M) || !(key in indices)) {\n\t\t\tthrow new Error(\"Invalid mapping\")\n\t\t}\n\n\t\tconst { source } = M[key]\n\t\tif (!(source in TI)) {\n\t\t\tthrow new Error(\"Invalid instance\")\n\t\t}\n\n\t\tfor (const value of TI[source]) {\n\t\t\tif (indices[key].has(value)) {\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\tconst imageValue = mapExpressions(M[key].value, value, TI, T)\n\t\t\t\tconst i = SI[key].push(placeholder) - 1\n\t\t\t\tindices[key].set(value, i)\n\t\t\t\tSI[key][i] = pullback({ M, S, T, SI, TI, indices }, type, imageValue)\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key of getKeys(S)) {\n\t\tObject.freeze(SI[key])\n\t}\n\n\tObject.freeze(SI)\n\n\treturn SI\n}\n\nconst placeholder = new N3.NamedNode(rootId)\n\ntype State = {\n\tM: APG.Mapping\n\tS: APG.Schema\n\tT: APG.Schema\n\tSI: APG.Instance\n\tTI: APG.Instance\n\tindices: Readonly<{ [key: string]: Map<APG.Value, number> }>\n}\n\nfunction pullback(\n\tstate: State,\n\ttype: APG.Type, // in source\n\tvalue: APG.Value // of image\n): APG.Value {\n\tif (type.type === \"reference\") {\n\t\t// Here we actually know that value is an instance of M1[type.value]\n\t\t// So now what?\n\t\t// First we check to see if the value is in the index cache.\n\t\t// (We're ultimately going to return a Pointer for sure)\n\t\tconst index = state.indices[type.value].get(value)\n\t\tif (index !== undefined) {\n\t\t\treturn new APG.Pointer(index)\n\t\t} else {\n\t\t\t// Otherwise, we map value along the morphism M2[type.value].\n\t\t\t// This gives us a value that is an instance of the image of the referenced type\n\t\t\t// - ie an instance of fold(M1, T, S[type.value].value)\n\t\t\tconst t = state.S[type.value]\n\t\t\tconst m = state.M[type.value]\n\t\t\tconst v = mapExpressions(m.value, value, state.TI, state.T)\n\t\t\tconst index = state.SI[type.value].push(placeholder) - 1\n\t\t\tstate.indices[type.value].set(value, index)\n\t\t\tconst p = pullback(state, t, v)\n\t\t\tstate.SI[type.value][index] = p\n\t\t\treturn new APG.Pointer(index)\n\t\t}\n\t} else if (type.type === \"uri\") {\n\t\tif (value.termType !== \"NamedNode\") {\n\t\t\tthrow new Error(\"Invalid image value: expected iri\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"literal\") {\n\t\tif (value.termType !== \"Literal\") {\n\t\t\tthrow new Error(\"Invalid image value: expected literal\")\n\t\t} else {\n\t\t\treturn value\n\t\t}\n\t} else if (type.type === \"product\") {\n\t\tif (value.termType !== \"Record\") {\n\t\t\tthrow new Error(\"Invalid image value: expected record\")\n\t\t} else {\n\t\t\treturn new APG.Record(\n\t\t\t\tvalue.components,\n\t\t\t\tpullbackComponents(state, type, value)\n\t\t\t)\n\t\t}\n\t} else if (type.type === \"coproduct\") {\n\t\tif (value.termType !== \"Variant\") {\n\t\t\tthrow new Error(\"Invalid image value: expected variant\")\n\t\t} else if (value.key in type.options) {\n\t\t\treturn new APG.Variant(\n\t\t\t\tvalue.options,\n\t\t\t\tvalue.key,\n\t\t\t\tpullback(state, type.options[value.key], value.value)\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid image variant\")\n\t\t}\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nfunction* pullbackComponents(\n\tstate: State,\n\ttype: APG.Product,\n\tvalue: APG.Record\n) {\n\tfor (const [k1, k2, field] of zip(\n\t\tgetKeys(type.components),\n\t\tvalue.components,\n\t\tvalue\n\t)) {\n\t\tif (k1 === k2) {\n\t\t\tyield pullback(state, type.components[k1], field)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid image record\")\n\t\t}\n\t}\n}\n","import zip from \"ziterable\"\nimport APG from \"./apg.js\"\nimport { getKeys, signalInvalidType } from \"./utils.js\"\n\nexport function validateValue(type: APG.Type, value: APG.Value): boolean {\n\tif (type.type === \"reference\") {\n\t\treturn value.termType === \"Pointer\"\n\t} else if (type.type === \"uri\") {\n\t\treturn value.termType === \"NamedNode\"\n\t} else if (type.type === \"literal\") {\n\t\treturn (\n\t\t\tvalue.termType === \"Literal\" && value.datatype.value === type.datatype\n\t\t)\n\t} else if (type.type === \"product\") {\n\t\tif (value.termType === \"Record\") {\n\t\t\tconst keys = getKeys(type.components)\n\t\t\tif (keys.length !== value.length) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tfor (const [k1, k2, v] of zip(keys, value.components, value)) {\n\t\t\t\tif (k1 !== k2) {\n\t\t\t\t\treturn false\n\t\t\t\t} else if (validateValue(type.components[k1], v)) {\n\t\t\t\t\tcontinue\n\t\t\t\t} else {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} else if (type.type === \"coproduct\") {\n\t\tif (value.termType === \"Variant\" && value.key in type.options) {\n\t\t\treturn validateValue(type.options[value.key], value.value)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} else {\n\t\tsignalInvalidType(type)\n\t}\n}\n\nexport function* forValue(\n\tvalue: APG.Value,\n\tstack: APG.Value[] = []\n): Generator<[APG.Value, APG.Value[]], void, undefined> {\n\tif (stack.includes(value)) {\n\t\tthrow new Error(\"Recursive type\")\n\t}\n\n\tyield [value, stack]\n\tif (value.termType === \"Record\") {\n\t\tstack.push(value)\n\t\tfor (const leaf of value) {\n\t\t\tyield* forValue(leaf, stack)\n\t\t}\n\t\tstack.pop()\n\t} else if (value.termType === \"Variant\") {\n\t\tstack.push(value)\n\t\tyield* forValue(value.value, stack)\n\t\tstack.pop()\n\t}\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parser = void 0;\n\nvar _lezer = require(\"lezer\");\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {\n  __proto__: null,\n  namespace: 8,\n  type: 16,\n  class: 42,\n  edge: 46,\n  list: 50\n};\n\nconst parser = _lezer.Parser.deserialize({\n  version: 13,\n  states: \")`QYQPOOOkQPO'#C_OpQPO'#CcOuQQO'#CpOzQQO'#CrO!PQQO'#CtOOQO'#C|'#C|OOQO'#Cv'#CvQYQPOOOOQO'#Ca'#CaO!UQQO,58yOOQO'#Ce'#CeO!ZQPO,58}O!ZQPO,59[O!rQPO,59^O!wQPO,59`OOQO-E6t-E6tOOQO1G.e1G.eOOQO'#Cf'#CfO!ZQPO'#CgO!|QQO'#ChO#RQQO'#CkO#WQQO'#ClO#`QQO'#CnOOQO'#DO'#DOOOQO1G.i1G.iOOQO1G.v1G.vO#hQQO1G.xO!ZQPO1G.zOOQO,59R,59ROOQO,59S,59SO#mQPO,59VO#rQPO'#CmO#wQPO'#DTO$PQPO,59WO$UQQO'#CoO$aQPO'#DYO$iQPO,59YO$nQPO7+$dOOQO7+$f7+$fOOQO1G.q1G.qO!ZQPO,59XO$uQQO,59oO$}QPO,59oOOQO1G.r1G.rO!ZQPO,59ZO%VQQO,59tO%_QPO,59tOOQO1G.t1G.tO%gQQO<<HOO%lQPO<<HOOOQO1G.s1G.sOOQO,59c,59cO%qQQO1G/ZOOQO-E6u-E6uOOQO1G.u1G.uOOQO,59d,59dO%yQQO1G/`OOQO-E6v-E6vOOQOAN=jAN=jO&RQQOAN=jP&WQQO'#CwP&]QQO'#CxOOQOG23UG23U\",\n  stateData: \"&b~OoOSPOS~OSPOWQOeROgSOiTO~OqXO~OqZO~OU]O~OU^O~OU_O~OUaO~O]dO^hOqbOscOteOvfO{gO~O!PkO~O!RlO~OUnO~OUoO~OUpOzwP~OUsO!O|P~OUvO~OuxO~OxyO~OyzOzwX~Oz|O~O}}OycX!OcX~Oy!OO!O|X~O!O!QO~O!Q!RO~P!ZOUpOzwa~Oy!VOzwa~OUsO!O|a~Oy!ZO!O|a~OU!]O~O!Q!^O~OUpOzwi~OUsO!O|i~OU!aO~OUpO~OUsO~O\",\n  goto: \"#v}PPP!OP!SP!OP!V!Y!Y!YPP!Y!Y!c!Y!k!OP!OP!OP!s!y#PPPP#VP#ZPPPP#pPPPP#sTUOWRYPR[Q_h[]clvy}QqfV!Uz!V!_QtgV!Y!O!Z!`QWOR`WQ{qR!W{Q!PtR![!PTVOWQi[Qj]QmcQwlQ!SvQ!TyR!X}RrfRug\",\n  nodeNames: \"⚠ Comment Schema Namespace namespace Prefix Term Type type TypeName Variable Optional Reference Pointer Uri Literal Product Component Coproduct Option Class class Edge edge List list\",\n  maxTerm: 49,\n  nodeProps: [[_lezer.NodeProp.group, -7, 10, 11, 12, 14, 15, 16, 18, \"Expression\"]],\n  skippedNodes: [0, 1],\n  repeatNodeCount: 3,\n  tokenData: \"'c~RjX^!spq!sst#hz{#s}!O#x!P!Q$T![!]$f!]!^$q!^!_$v!_!`%T!`!a%f!a!b%s!c!}%x!}#O&}#P#Q'S#T#o%x#o#p'X#q#r'^#y#z!s$f$g!s#BY#BZ!s$IS$I_!s$I|$JO!s$JT$JU!s$KV$KW!s&FU&FV!s~!xYo~X^!spq!s#y#z!s$f$g!s#BY#BZ!s$IS$I_!s$I|$JO!s$JT$JU!s$KV$KW!s&FU&FV!s~#mQP~OY#hZ~#h~#xO]~~#{P!`!a$O~$TOx~~$WP!_!`$Z~$^P!`!a$a~$fO!Q~~$iP![!]$l~$qO!R~~$vOy~~${Pt~!`!a%O~%TO^~~%WP!_!`%Z~%^P!P!Q%a~%fO!P~R%kPuP}!O%nQ%sO}Q~%xOs~R&PSUQqP!Q![%x![!]&]!c!}%x#T#o%xQ&bXUQst&]}!O&]!O!P&]!P!Q&]!Q![&]![!]&]!c!}&]#R#S&]#T#o&]~'SO{~~'XO!O~~'^Ov~~'cOz~\",\n  tokenizers: [0, 1],\n  topRules: {\n    \"Schema\": [0, 2]\n  },\n  specialized: [{\n    term: 33,\n    get: value => spec_identifier[value] || -1\n  }],\n  tokenPrec: 0\n});\n\nexports.parser = parser;","export * from \"./parse.js\"\nexport * from \"./stdlib.js\"\n","import { APG, ns } from \"@underlay/apg\"\nimport { SyntaxNode } from \"lezer\"\n\nimport { parser } from \"../grammar/index.js\"\nimport { defaultTypes } from \"./stdlib.js\"\n\nexport const uriPattern = /^[a-z]+:[a-zA-Z0-9-/_.:#]+$/\nexport const namespacePattern = /[#/]$/\n\nexport type ParseState = {\n\tslice: (node: { from: number; to: number }) => string\n\tnamespaces: Record<string, string>\n\tschema: Record<string, APG.Type>\n\ttypes: Record<string, APG.Type>\n\treferences: { from: number; to: number; key: string }[]\n}\n\nexport class LintError extends Error {\n\tconstructor(\n\t\treadonly from: number,\n\t\treadonly to: number,\n\t\treadonly value: string,\n\t\tmessage: string\n\t) {\n\t\tsuper(message)\n\t}\n}\n\nexport interface ParseResult {\n\tschema: APG.Schema\n\tnamespaces: Record<string, string>\n}\n\nexport function parse(input: string): ParseResult {\n\tconst tree = parser.configure({ strict: true }).parse(input)\n\tconst cursor = tree.cursor()\n\n\tif (cursor.name === \"Schema\") {\n\t\tcursor.firstChild()\n\t} else {\n\t\tthrow new LintError(cursor.from, cursor.to, \"\", \"Invalid top-level node\")\n\t}\n\n\tconst state: ParseState = {\n\t\tslice: ({ from, to }: { from: number; to: number }) =>\n\t\t\tinput.slice(from, to),\n\t\tnamespaces: {},\n\t\ttypes: { ...defaultTypes },\n\t\tschema: {},\n\t\treferences: [],\n\t}\n\n\tdo {\n\t\tif (cursor.type.name === \"Namespace\") {\n\t\t\tconst term = cursor.node.getChild(\"Term\")!\n\t\t\tconst namespace = state.slice(term)\n\t\t\tif (!uriPattern.test(namespace)) {\n\t\t\t\tthrow new LintError(\n\t\t\t\t\tterm.from,\n\t\t\t\t\tterm.to,\n\t\t\t\t\tnamespace,\n\t\t\t\t\t`Invalid URI: URIs must match ${uriPattern.source}`\n\t\t\t\t)\n\t\t\t} else if (!namespacePattern.test(namespace)) {\n\t\t\t\tthrow new LintError(\n\t\t\t\t\tterm.from,\n\t\t\t\t\tterm.to,\n\t\t\t\t\tnamespace,\n\t\t\t\t\t\"Invalid namespace: namespaces must end in / or #\"\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst identifier = cursor.node.getChild(\"Prefix\")!\n\t\t\tconst prefix = state.slice(identifier)\n\t\t\tif (prefix in state.namespaces) {\n\t\t\t\tconst message = `Duplicate namespace: ${prefix}`\n\t\t\t\tthrow new LintError(identifier.from, identifier.to, prefix, message)\n\t\t\t} else {\n\t\t\t\tstate.namespaces[prefix] = namespace\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Type\") {\n\t\t\tconst identifier = cursor.node.getChild(\"TypeName\")!\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\tconst type = parseType(state, expression)\n\n\t\t\tconst name = state.slice(identifier)\n\t\t\tif (name in state.types) {\n\t\t\t\tconst { from, to } = identifier\n\t\t\t\tconst message = `Invalid type declaration: type ${name} has already been declared`\n\t\t\t\tthrow new LintError(from, to, name, message)\n\t\t\t} else {\n\t\t\t\tstate.types[name] = type\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Class\") {\n\t\t\tconst node = cursor.node.getChild(\"Term\")!\n\t\t\tconst term = parseURI(state, node)!\n\t\t\tif (term in state.schema) {\n\t\t\t\tconst { from, to } = node\n\t\t\t\tconst message = `Invalid class declaration: class ${term} has already been declared`\n\t\t\t\tthrow new LintError(from, to, term, message)\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\t\tstate.schema[term] = parseType(state, expression)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"Edge\") {\n\t\t\tconst terms = cursor.node.getChildren(\"Term\")\n\t\t\tconst names = terms.map((uri) => parseURI(state, uri))\n\n\t\t\tconst expression = cursor.node.getChild(\"Expression\")\n\t\t\tconst value = expression && parseType(state, expression)\n\n\t\t\tconst [sourceNode, labelNode, targetNode] = terms\n\t\t\tconst [source, label, target] = names\n\t\t\tif (label in state.schema) {\n\t\t\t\tconst { from, to } = labelNode\n\t\t\t\tconst message = `Invalid edge declaration: class ${label} has already been declared`\n\t\t\t\tthrow new LintError(from, to, label, message)\n\t\t\t} else {\n\t\t\t\tif (!(source in state.schema)) {\n\t\t\t\t\tconst { from, to } = sourceNode\n\t\t\t\t\tstate.references.push({ from, to, key: source })\n\t\t\t\t}\n\n\t\t\t\tif (!(target in state.schema)) {\n\t\t\t\t\tconst { from, to } = targetNode\n\t\t\t\t\tstate.references.push({ from, to, key: target })\n\t\t\t\t}\n\n\t\t\t\tconst components: Record<string, APG.Type> = {\n\t\t\t\t\t[ns.source]: APG.reference(source),\n\t\t\t\t\t[ns.target]: APG.reference(target),\n\t\t\t\t}\n\n\t\t\t\tif (value !== null) {\n\t\t\t\t\tcomponents[ns.value] = value\n\t\t\t\t}\n\n\t\t\t\tstate.schema[label] = APG.product(components)\n\t\t\t}\n\t\t} else if (cursor.type.name === \"List\") {\n\t\t\tconst node = cursor.node.getChild(\"Term\")!\n\t\t\tconst term = parseURI(state, node)!\n\t\t\tif (term in state.schema) {\n\t\t\t\tconst { from, to } = node\n\t\t\t\tconst message = `Invalid list declaration: class ${term} has already been declared`\n\t\t\t\tthrow new LintError(from, to, term, message)\n\t\t\t} else {\n\t\t\t\tconst expression = cursor.node.getChild(\"Expression\")!\n\t\t\t\tstate.schema[term] = APG.coproduct({\n\t\t\t\t\t[ns.none]: APG.product({}),\n\t\t\t\t\t[ns.some]: APG.product({\n\t\t\t\t\t\t[ns.head]: parseType(state, expression),\n\t\t\t\t\t\t[ns.tail]: APG.reference(term),\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t} while (cursor.nextSibling())\n\n\tfor (const { from, to, key } of state.references) {\n\t\tif (key in state.schema) {\n\t\t\tcontinue\n\t\t} else {\n\t\t\tconst message = `Invalid reference: class ${key} is not defined`\n\t\t\tthrow new LintError(from, to, key, message)\n\t\t}\n\t}\n\n\treturn { schema: APG.schema(state.schema), namespaces: state.namespaces }\n}\n\nexport function parseURI(state: ParseState, node: SyntaxNode): string {\n\tconst value = state.slice(node)\n\tconst index = value.indexOf(\":\")\n\tif (index === -1) {\n\t\tconst { from, to } = node\n\t\tconst message = `Invalid URI: URIs must be of the form [namespace]:[path]`\n\t\tthrow new LintError(from, to, value, message)\n\t}\n\n\tconst prefix = value.slice(0, index)\n\tif (prefix in state.namespaces) {\n\t\treturn state.namespaces[prefix] + value.slice(index + 1)\n\t} else {\n\t\tconst { from, to } = node\n\t\tconst message = `Invalid URI: namespace ${prefix} is not defined`\n\t\tthrow new LintError(from, to, value, message)\n\t}\n}\n\n// Variable | Optional | Reference  | Uri | Literal | Product | Coproduct\nexport function parseType(state: ParseState, node: SyntaxNode): APG.Type {\n\tif (node.name === \"Variable\") {\n\t\tconst value = state.slice(node)\n\t\tif (value in state.types) {\n\t\t\treturn state.types[value]\n\t\t} else {\n\t\t\tconst { from, to } = node\n\t\t\tthrow new LintError(from, to, value, `Type ${value} is not defined`)\n\t\t}\n\t} else if (node.name === \"Optional\") {\n\t\tconst expression = node.getChild(\"Expression\")!\n\t\tconst type = parseType(state, expression)\n\t\treturn APG.coproduct({ [ns.none]: APG.product({}), [ns.some]: type })\n\t} else if (node.name === \"Reference\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst key = parseURI(state, term)\n\t\tif (!(key in state.schema)) {\n\t\t\tconst { from, to } = term\n\t\t\tstate.references.push({ from, to, key })\n\t\t}\n\n\t\treturn APG.reference(key)\n\t} else if (node.name === \"Uri\") {\n\t\treturn APG.uri()\n\t} else if (node.name === \"Literal\") {\n\t\tconst term = node.getChild(\"Term\")!\n\t\tconst datatype = parseURI(state, term)\n\t\treturn APG.literal(datatype)\n\t} else if (node.name === \"Product\") {\n\t\tconst components: Record<string, APG.Type> = {}\n\t\tfor (const component of node.getChildren(\"Component\")) {\n\t\t\tconst term = component.getChild(\"Term\")!\n\n\t\t\tconst key = parseURI(state, term)\n\t\t\tif (key in components) {\n\t\t\t\tconst { to, from } = term\n\t\t\t\tconst message = `Duplicate product component key: ${key}`\n\t\t\t\tthrow new LintError(from, to, key, message)\n\t\t\t} else {\n\t\t\t\tconst expression = component.getChild(\"Expression\")!\n\t\t\t\tcomponents[key] = parseType(state, expression)\n\t\t\t}\n\t\t}\n\n\t\treturn APG.product(components)\n\t} else if (node.name === \"Coproduct\") {\n\t\tconst options: Record<string, APG.Type> = {}\n\t\tfor (const option of node.getChildren(\"Option\")) {\n\t\t\tconst term = option.getChild(\"Term\")!\n\t\t\tconst key = parseURI(state, term)\n\t\t\tif (key in options) {\n\t\t\t\tconst { from, to } = term\n\t\t\t\tconst message = `Duplicate coproduct option key: ${key}`\n\t\t\t\tthrow new LintError(from, to, key, message)\n\t\t\t} else {\n\t\t\t\tconst expression = option.getChild(\"Expression\")\n\t\t\t\tif (expression === null) {\n\t\t\t\t\toptions[key] = APG.product({})\n\t\t\t\t} else {\n\t\t\t\t\toptions[key] = parseType(state, expression)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn APG.coproduct(options)\n\t} else {\n\t\tthrow new Error(\"Unexpected Expression node\")\n\t}\n}\n\nexport function printSyntax(node: SyntaxNode, prefix: string = \"\") {\n\tconsole.log(`${prefix}- ${node.type.name} ${node.from} ${node.to}`)\n\tfor (let child = node.firstChild; child !== null; child = child.nextSibling) {\n\t\tprintSyntax(child, prefix + \"  \")\n\t}\n}\n","import { APG } from \"@underlay/apg\"\nimport { rdf, xsd } from \"n3.ts\"\n\nexport const defaultTypes: Record<string, APG.Type> = {\n\tunit: APG.product({}),\n\turi: APG.uri(),\n\n\tstring: APG.literal(xsd.string),\n\tboolean: APG.literal(xsd.boolean),\n\tinteger: APG.literal(xsd.integer),\n\tdouble: APG.literal(xsd.double),\n\tdate: APG.literal(xsd.date),\n\tdateTime: APG.literal(xsd.dateTime),\n\tbase64Binary: APG.literal(xsd.base64Binary),\n\tJSON: APG.literal(rdf.JSON),\n}\n\nexport const defaultNamespaces: Record<string, string> = {\n\tul: \"http://underlay.org/ns/\",\n\txsd: \"http://www.w3.org/2001/XMLSchema#\",\n\trdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n}\n","/// The default maximum length of a `TreeBuffer` node.\nexport const DefaultBufferLength = 1024\n\nlet nextPropID = 0\n\nconst CachedNode = new WeakMap<Tree, TreeNode>()\n\n/// Each [node type](#tree.NodeType) can have metadata associated with\n/// it in props. Instances of this class represent prop names.\nexport class NodeProp<T> {\n  /// @internal\n  id: number\n\n  /// A method that deserializes a value of this prop from a string.\n  /// Can be used to allow a prop to be directly written in a grammar\n  /// file. Defaults to raising an error.\n  deserialize: (str: string) => T\n\n  /// Create a new node prop type. You can optionally pass a\n  /// `deserialize` function.\n  constructor({deserialize}: {deserialize?: (str: string) => T} = {}) {\n    this.id = nextPropID++\n    this.deserialize = deserialize || (() => {\n      throw new Error(\"This node type doesn't define a deserialize function\")\n    })\n  }\n\n  /// Create a string-valued node prop whose deserialize function is\n  /// the identity function.\n  static string() { return new NodeProp<string>({deserialize: str => str}) }\n\n  /// Create a number-valued node prop whose deserialize function is\n  /// just `Number`.\n  static number() { return new NodeProp<number>({deserialize: Number}) }\n\n  /// Creates a boolean-valued node prop whose deserialize function\n  /// returns true for any input.\n  static flag() { return new NodeProp<boolean>({deserialize: () => true}) }\n\n  /// Store a value for this prop in the given object. This can be\n  /// useful when building up a prop object to pass to the\n  /// [`NodeType`](#tree.NodeType) constructor. Returns its first\n  /// argument.\n  set(propObj: {[prop: number]: any}, value: T) {\n    propObj[this.id] = value\n    return propObj\n  }\n\n  /// This is meant to be used with\n  /// [`NodeSet.extend`](#tree.NodeSet.extend) or\n  /// [`Parser.withProps`](#lezer.Parser.withProps) to compute prop\n  /// values for each node type in the set. Takes a [match\n  /// object](#tree.NodeType^match) or function that returns undefined\n  /// if the node type doesn't get this prop, and the prop's value if\n  /// it does.\n  add(match: {[selector: string]: T} | ((type: NodeType) => T | undefined)): NodePropSource {\n    if (typeof match != \"function\") match = NodeType.match(match)\n    return (type) => {\n      let result = (match as (type: NodeType) => T | undefined)(type)\n      return result === undefined ? null : [this, result]\n    }\n  }\n\n  /// Prop that is used to describe matching delimiters. For opening\n  /// delimiters, this holds an array of node names (written as a\n  /// space-separated string when declaring this prop in a grammar)\n  /// for the node types of closing delimiters that match it.\n  static closedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// The inverse of [`openedBy`](#tree.NodeProp^closedBy). This is\n  /// attached to closing delimiters, holding an array of node names\n  /// of types of matching opening delimiters.\n  static openedBy = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n\n  /// Used to assign node types to groups (for example, all node\n  /// types that represent an expression could be tagged with an\n  /// `\"Expression\"` group).\n  static group = new NodeProp<readonly string[]>({deserialize: str => str.split(\" \")})\n}\n\n/// Type returned by [`NodeProp.add`](#tree.NodeProp.add). Describes\n/// the way a prop should be added to each node type in a node set.\nexport type NodePropSource = (type: NodeType) => null | [NodeProp<any>, any]\n\n// Note: this is duplicated in lezer/src/constants.ts\nconst enum NodeFlag {\n  Top = 1,\n  Skipped = 2,\n  Error = 4,\n  Anonymous = 8\n}\n\nconst noProps: {[propID: number]: any} = Object.create(null)\n\n/// Each node in a syntax tree has a node type associated with it.\nexport class NodeType {\n  /// @internal\n  constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    readonly name: string,\n    /// @internal\n    readonly props: {readonly [prop: number]: any},\n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    readonly id: number,\n    /// @internal\n    readonly flags: number = 0) {}\n\n  static define(spec: {\n    /// The ID of the node type. When this type is used in a\n    /// [set](#tree.NodeSet), the ID must correspond to its index in\n    /// the type array.\n    id: number, \n    /// The name of the node type. Leave empty to define an anonymous\n    /// node.\n    name?: string,\n    /// [Node props](#tree.NodeProp) to assign to the type. The value\n    /// given for any given prop should correspond to the prop's type.\n    props?: readonly ([NodeProp<any>, any] | NodePropSource)[],\n    /// Whether is is a [top node](#tree.NodeType.isTop).\n    top?: boolean,\n    /// Whether this node counts as an [error\n    /// node](#tree.NodeType.isError).\n    error?: boolean,\n    /// Whether this node is a [skipped](#tree.NodeType.isSkipped)\n    /// node.\n    skipped?: boolean\n  }) {\n    let props = spec.props && spec.props.length ? Object.create(null) : noProps\n    let flags = (spec.top ? NodeFlag.Top : 0) | (spec.skipped ? NodeFlag.Skipped : 0) |\n      (spec.error ? NodeFlag.Error : 0) | (spec.name == null ? NodeFlag.Anonymous : 0)\n    let type = new NodeType(spec.name || \"\", props, spec.id, flags)\n    if (spec.props) for (let src of spec.props) {\n      if (!Array.isArray(src)) src = src(type)!\n      if (src) src[0].set(props, src[1])\n    }\n    return type\n  }\n\n  /// Retrieves a node prop for this type. Will return `undefined` if\n  /// the prop isn't present on this node.\n  prop<T>(prop: NodeProp<T>): T | undefined { return this.props[prop.id] }\n\n  /// True when this is the top node of a grammar.\n  get isTop() { return (this.flags & NodeFlag.Top) > 0 }\n\n  /// True when this node is produced by a skip rule.\n  get isSkipped() { return (this.flags & NodeFlag.Skipped) > 0 }\n\n  /// Indicates whether this is an error node.\n  get isError() { return (this.flags & NodeFlag.Error) > 0 }\n\n  /// When true, this node type doesn't correspond to a user-declared\n  /// named node, for example because it is used to cache repetition.\n  get isAnonymous() { return (this.flags & NodeFlag.Anonymous) > 0 }\n\n  /// Returns true when this node's name or one of its\n  /// [groups](#tree.NodeProp^group) matches the given string.\n  is(name: string | number) {\n    if (typeof name == 'string') {\n      if (this.name == name) return true\n      let group = this.prop(NodeProp.group)\n      return group ? group.indexOf(name) > -1 : false\n    }\n    return this.id == name\n  }\n\n  /// An empty dummy node type to use when no actual type is available.\n  static none: NodeType = new NodeType(\"\", Object.create(null), 0, NodeFlag.Anonymous)\n\n  /// Create a function from node types to arbitrary values by\n  /// specifying an object whose property names are node or\n  /// [group](#tree.NodeProp^group) names. Often useful with\n  /// [`NodeProp.add`](#tree.NodeProp.add). You can put multiple\n  /// names, separated by spaces, in a single property name to map\n  /// multiple node names to a single value.\n  static match<T>(map: {[selector: string]: T}): (node: NodeType) => T | undefined {\n    let direct = Object.create(null)\n    for (let prop in map)\n      for (let name of prop.split(\" \")) direct[name] = map[prop]\n    return (node: NodeType) => {\n      for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n        let found = direct[i < 0 ? node.name : groups![i]]\n        if (found) return found\n      }\n    }\n  }\n}\n\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a number array. Each parser\n/// [has](#lezer.Parser.nodeSet) a node set, and [tree\n/// buffers](#tree.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536)\n/// node types in it, so that the ids fit into 16-bit typed array\n/// slots.\nexport class NodeSet {\n  /// Create a set with the given types. The `id` property of each\n  /// type should correspond to its position within the array.\n  constructor(\n    /// The node types in this set, by id.\n    readonly types: readonly NodeType[]\n  ) {\n    for (let i = 0; i < types.length; i++) if (types[i].id != i)\n      throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\")\n  }\n\n  /// Create a copy of this set with some node properties added. The\n  /// arguments to this method should be created with\n  /// [`NodeProp.add`](#tree.NodeProp.add).\n  extend(...props: NodePropSource[]): NodeSet {\n    let newTypes: NodeType[] = []\n    for (let type of this.types) {\n      let newProps = null\n      for (let source of props) {\n        let add = source(type)\n        if (add) {\n          if (!newProps) newProps = Object.assign({}, type.props)\n          add[0].set(newProps, add[1])\n        }\n      }\n      newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type)\n    }\n    return new NodeSet(newTypes)\n  }\n}\n\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the `TreeCursor` interface instead, which provides a view on\n/// some part of this data structure, and can be used to move around\n/// to adjacent nodes.\nexport class Tree {\n  /// Construct a new tree. You usually want to go through\n  /// [`Tree.build`](#tree.Tree^build) instead.\n  constructor(\n    readonly type: NodeType,\n    /// The tree's child nodes. Children small enough to fit in a\n    /// `TreeBuffer will be represented as such, other children can be\n    /// further `Tree` instances with their own internal structure.\n    readonly children: readonly (Tree | TreeBuffer)[],\n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    readonly positions: readonly number[],\n    /// The total length of this tree\n    readonly length: number\n  ) {}\n\n  /// @internal\n  toString(): string {\n    let children = this.children.map(c => c.toString()).join()\n    return !this.type.name ? children :\n      (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n      (children.length ? \"(\" + children + \")\" : \"\")\n  }\n\n  /// The empty tree\n  static empty = new Tree(NodeType.none, [], [], 0)\n\n  /// Get a [tree cursor](#tree.TreeCursor) rooted at this tree. When\n  /// `pos` is given, the cursor is [moved](#tree.TreeCursor.moveTo)\n  /// to the given position and side.\n  cursor(pos?: number, side: -1 | 0 | 1 = 0): TreeCursor {\n    let scope = (pos != null && CachedNode.get(this)) || (this.topNode as TreeNode)\n    let cursor = new TreeCursor(scope)\n    if (pos != null) {\n      cursor.moveTo(pos, side)\n      CachedNode.set(this, cursor._tree)\n    }\n    return cursor\n  }\n\n  /// Get a [tree cursor](#tree.TreeCursor) that, unlike regular\n  /// cursors, doesn't skip [anonymous](#tree.NodeType.isAnonymous)\n  /// nodes.\n  fullCursor(): TreeCursor {\n    return new TreeCursor(this.topNode as TreeNode, true)\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) object for the top of the\n  /// tree.\n  get topNode(): SyntaxNode {\n    return new TreeNode(this, 0, 0, null)\n  }\n\n  /// Get the [syntax node](#tree.SyntaxNode) at the given position.\n  /// If `side` is -1, this will move into nodes that end at the\n  /// position. If 1, it'll move into nodes that start at the\n  /// position. With 0, it'll only enter nodes that cover the position\n  /// from both sides.\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor(pos, side).node\n  }\n\n  /// Iterate over the tree and its children, calling `enter` for any\n  /// node that touches the `from`/`to` region (if given) before\n  /// running over such a node's children, and `leave` (if given) when\n  /// leaving the node. When `enter` returns `false`, the given node\n  /// will not have its children iterated over (or `leave` called).\n  iterate(spec: {\n    enter(type: NodeType, from: number, to: number): false | void,\n    leave?(type: NodeType, from: number, to: number): void,\n    from?: number,\n    to?: number\n  }) {\n    let {enter, leave, from = 0, to = this.length} = spec\n    for (let c = this.cursor();;) {\n      let mustLeave = false\n      if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to) !== false)) {\n        if (c.firstChild()) continue\n        if (!c.type.isAnonymous) mustLeave = true\n      }\n      for (;;) {\n        if (mustLeave && leave) leave(c.type, c.from, c.to)\n        mustLeave = c.type.isAnonymous\n        if (c.nextSibling()) break\n        if (!c.parent()) return\n        mustLeave = true\n      }\n    }\n  }\n\n  /// Balance the direct children of this tree.\n  balance(maxBufferLength = DefaultBufferLength) {\n    return this.children.length <= BalanceBranchFactor ? this\n      : balanceRange(this.type, NodeType.none, this.children, this.positions, 0, this.children.length, 0,\n                     maxBufferLength, this.length)\n  }\n\n  /// Build a tree from a postfix-ordered buffer of node information,\n  /// or a cursor over such a buffer.\n  static build(data: BuildData) { return buildTree(data) }\n}\n\ntype BuildData = {\n  /// The buffer or buffer cursor to read the node data from.\n  ///\n  /// When this is an array, it should contain four values for every\n  /// node in the tree.\n  ///\n  ///  - The first holds the node's type, as a node ID pointing into\n  ///    the given `NodeSet`.\n  ///  - The second holds the node's start offset.\n  ///  - The third the end offset.\n  ///  - The fourth the amount of space taken up in the array by this\n  ///    node and its children. Since there's four values per node,\n  ///    this is the total number of nodes inside this node (children\n  ///    and transitive children) plus one for the node itself, times\n  ///    four.\n  ///\n  /// Parent nodes should appear _after_ child nodes in the array. As\n  /// an example, a node of type 10 spanning positions 0 to 4, with\n  /// two children, of type 11 and 12, might look like this:\n  ///\n  ///     [11, 0, 1, 4, 12, 2, 4, 4, 10, 0, 4, 12]\n  buffer: BufferCursor | readonly number[],\n  /// The node types to use.\n  nodeSet: NodeSet,\n  /// The id of the top node type, if any.\n  topID?: number,\n  /// The position the tree should start at. Defaults to 0.\n  start?: number,\n  /// The length of the wrapping node. The end offset of the last\n  /// child is used when not provided.\n  length?: number,\n  /// The maximum buffer length to use. Defaults to\n  /// [`DefaultBufferLength`](#tree.DefaultBufferLength).\n  maxBufferLength?: number,\n  /// An optional set of reused nodes that the buffer can refer to.\n  reused?: (Tree | TreeBuffer)[],\n  /// The first node type that indicates repeat constructs in this\n  /// grammar.\n  minRepeatType?: number\n}\n\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nexport class TreeBuffer {\n  /// Create a tree buffer @internal\n  constructor(\n    /// @internal\n    readonly buffer: Uint16Array,\n    // The total length of the group of nodes in the buffer.\n    readonly length: number,\n    /// @internal\n    readonly set: NodeSet,\n    readonly type = NodeType.none\n  ) {}\n\n  /// @internal\n  toString() {\n    let result: string[] = []\n    for (let index = 0; index < this.buffer.length;) {\n      result.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result.join(\",\")\n  }\n\n  /// @internal\n  childString(index: number): string {\n    let id = this.buffer[index], endIndex = this.buffer[index + 3]\n    let type = this.set.types[id], result = type.name\n    if (/\\W/.test(result) && !type.isError) result = JSON.stringify(result)\n    index += 4\n    if (endIndex == index) return result\n    let children: string[] = []\n    while (index < endIndex) {\n      children.push(this.childString(index))\n      index = this.buffer[index + 3]\n    }\n    return result + \"(\" + children.join(\",\") + \")\"\n  }\n\n  /// @internal\n  findChild(startIndex: number, endIndex: number, dir: 1 | -1, after: number) {\n    let {buffer} = this, pick = -1\n    for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n      if (after != After.None) {\n        let start = buffer[i + 1], end = buffer[i + 2]\n        if (dir > 0) {\n          if (end > after) pick = i\n          if (end > after) break\n        } else {\n          if (start < after) pick = i\n          if (end >= after) break\n        }\n      } else {\n        pick = i\n        if (dir > 0) break\n      }\n    }\n    return pick\n  }\n}\n\nconst enum After { None = -1e8 }\n\n/// A syntax node provides an immutable pointer at a give node in a\n/// tree. When iterating over large amounts of nodes, you may want to\n/// use a mutable [cursor](#tree.TreeCursor) instead, which is more\n/// efficient.\nexport interface SyntaxNode {\n  /// The type of the node.\n  type: NodeType\n  /// The name of the node (`.type.name`).\n  name: string\n  /// The start position of the node.\n  from: number\n  /// The end position of the node.\n  to: number\n\n  /// The node's parent node, if any.\n  parent: SyntaxNode | null\n  /// The first child, if the node has children.\n  firstChild: SyntaxNode | null\n  /// The node's last child, if available.\n  lastChild: SyntaxNode | null\n  /// The first child that starts at or after `pos`.\n  childAfter(pos: number): SyntaxNode | null\n  /// The last child that ends at or before `pos`.\n  childBefore(pos: number): SyntaxNode | null\n  /// This node's next sibling, if any.\n  nextSibling: SyntaxNode | null\n  /// This node's previous sibling.\n  prevSibling: SyntaxNode | null\n  /// A [tree cursor](#tree.TreeCursor) starting at this node.\n  cursor: TreeCursor\n  /// Find the node around, before (if `side` is -1), or after (`side`\n  /// is 1) the given position. Will look in parent nodes if the\n  /// position is outside this node.\n  resolve(pos: number, side?: -1 | 0 | 1): SyntaxNode\n\n  /// Get the first child of the given type (which may be a [node\n  /// name](#tree.NodeProp.name) or a [group\n  /// name](#tree.NodeProp^group)). If `before` is non-null, only\n  /// return children that occur somewhere after a node with that name\n  /// or group. If `after` is non-null, only return children that\n  /// occur somewhere before a node with that name or group.\n  getChild(type: string | number, before?: string | number | null, after?: string | number | null): SyntaxNode | null\n\n  /// Like [`getChild`](#tree.SyntaxNode.getChild), but return all\n  /// matching children, not just the first.\n  getChildren(type: string | number, before?: string | number | null, after?: string | number | null): SyntaxNode[]\n}\n\nclass TreeNode implements SyntaxNode {\n  constructor(readonly node: Tree,\n              readonly from: number,\n              readonly index: number,\n              readonly _parent: TreeNode | null) {}\n\n  get type() { return this.node.type }\n\n  get name() { return this.node.type.name }\n\n  get to() { return this.from + this.node.length }\n\n  nextChild(i: number, dir: 1 | -1, after: number, full = false): TreeNode | BufferNode | null {\n    for (let parent: TreeNode = this;;) {\n      for (let {children, positions} = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n        let next = children[i], start = positions[i] + parent.from\n        if (after != After.None && (dir < 0 ? start >= after : start + next.length <= after))\n          continue\n        if (next instanceof TreeBuffer) {\n          let index = next.findChild(0, next.buffer.length, dir, after == After.None ? After.None : after - start)\n          if (index > -1) return new BufferNode(new BufferContext(parent, next, i, start), null, index)\n        } else if (full || (!next.type.isAnonymous || hasChild(next))) {\n          let inner = new TreeNode(next, start, i, parent)\n          return full || !inner.type.isAnonymous ? inner : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, after)\n        }\n      }\n      if (full || !parent.type.isAnonymous) return null\n      i = parent.index + dir\n      parent = parent._parent!\n      if (!parent) return null\n    }\n  }\n\n  get firstChild() { return this.nextChild(0, 1, After.None) }\n  get lastChild() { return this.nextChild(this.node.children.length - 1, -1, After.None) }\n\n  childAfter(pos: number) { return this.nextChild(0, 1, pos) }\n  childBefore(pos: number) { return this.nextChild(this.node.children.length - 1, -1, pos) }\n\n  nextSignificantParent() {\n    let val: TreeNode = this\n    while (val.type.isAnonymous && val._parent) val = val._parent\n    return val\n  }\n\n  get parent() {\n    return this._parent ? this._parent.nextSignificantParent() : null\n  }\n\n  get nextSibling() {\n    return this._parent ? this._parent.nextChild(this.index + 1, 1, -1) : null\n  }\n  get prevSibling() {\n    return this._parent ? this._parent.nextChild(this.index - 1, -1, -1) : null\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  getChild(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    return getChildren(this, type, before, after)\n  }\n\n  /// @internal\n  toString() { return this.node.toString() }\n}\n\nfunction getChildren(node: SyntaxNode, type: string | number, before: string | number | null, after: string | number | null): SyntaxNode[] {\n  let cur = node.cursor, result: SyntaxNode[] = []\n  if (!cur.firstChild()) return result\n  if (before != null) while (!cur.type.is(before)) if (!cur.nextSibling()) return result\n  for (;;) {\n    if (after != null && cur.type.is(after)) return result\n    if (cur.type.is(type)) result.push(cur.node)\n    if (!cur.nextSibling()) return after == null ? result : []\n  }\n}\n\nclass BufferContext {\n  constructor(readonly parent: TreeNode,\n              readonly buffer: TreeBuffer,\n              readonly index: number,\n              readonly start: number) {}\n}\n\nclass BufferNode implements SyntaxNode {\n  type: NodeType\n\n  get name() { return this.type.name }\n\n  get from() { return this.context.start + this.context.buffer.buffer[this.index + 1] }\n\n  get to() { return this.context.start + this.context.buffer.buffer[this.index + 2] }\n\n  constructor(readonly context: BufferContext,\n              readonly _parent: BufferNode | null,\n              readonly index: number) {\n    this.type = context.buffer.set.types[context.buffer.buffer[index]]\n  }\n\n  child(dir: 1 | -1, after: number): BufferNode | null {\n    let {buffer} = this.context\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.context.start)\n    return index < 0 ? null : new BufferNode(this.context, this, index)\n  }\n\n  get firstChild() { return this.child(1, After.None) }\n  get lastChild() { return this.child(-1, After.None) }\n\n  childAfter(pos: number) { return this.child(1, pos) }\n  childBefore(pos: number) { return this.child(-1, pos) }\n\n  get parent() {\n    return this._parent || this.context.parent.nextSignificantParent()\n  }\n\n  externalSibling(dir: 1 | -1) {\n    return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, -1)\n  }\n\n  get nextSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let after = buffer.buffer[this.index + 3]\n    if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n      return new BufferNode(this.context, this._parent, after)\n    return this.externalSibling(1)\n  }\n\n  get prevSibling(): SyntaxNode | null {\n    let {buffer} = this.context\n    let parentStart = this._parent ? this._parent.index + 4 : 0\n    if (this.index == parentStart) return this.externalSibling(-1)\n    return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, After.None))\n  }\n\n  get cursor() { return new TreeCursor(this) }\n\n  resolve(pos: number, side: -1 | 0 | 1 = 0) {\n    return this.cursor.moveTo(pos, side).node\n  }\n\n  /// @internal\n  toString() { return this.context.buffer.childString(this.index) }\n\n  getChild(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    let r = getChildren(this, type, before, after)\n    return r.length ? r[0] : null\n  }\n\n  getChildren(type: string | number, before: string | number | null = null, after: string | number | null = null) {\n    return getChildren(this, type, before, after)\n  }\n}\n\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nexport class TreeCursor {\n  /// The node's type.\n  type!: NodeType\n\n  /// Shorthand for `.type.name`.\n  get name() { return this.type.name }\n\n  /// The start source offset of this node.\n  from!: number\n\n  /// The end source offset.\n  to!: number\n\n  /// @internal\n  _tree!: TreeNode\n  private buffer: BufferContext | null = null\n  private stack: number[] = []\n  private index: number = 0\n  private bufferNode: BufferNode | null = null\n\n  /// @internal\n  constructor(node: TreeNode | BufferNode, readonly full = false) {\n    if (node instanceof TreeNode) {\n      this.yieldNode(node)\n    } else {\n      this._tree = node.context.parent\n      this.buffer = node.context\n      for (let n: BufferNode | null = node._parent; n; n = n._parent) this.stack.unshift(n.index)\n      this.bufferNode = node\n      this.yieldBuf(node.index)\n    }\n  }\n\n  private yieldNode(node: TreeNode | null) {\n    if (!node) return false\n    this._tree = node\n    this.type = node.type\n    this.from = node.from\n    this.to = node.to\n    return true\n  }\n\n  private yieldBuf(index: number, type?: NodeType) {\n    this.index = index\n    let {start, buffer} = this.buffer!\n    this.type = type || buffer.set.types[buffer.buffer[index]]\n    this.from = start + buffer.buffer[index + 1]\n    this.to = start + buffer.buffer[index + 2]\n    return true\n  }\n\n  private yield(node: TreeNode | BufferNode | null) {\n    if (!node) return false\n    if (node instanceof TreeNode) {\n      this.buffer = null\n      return this.yieldNode(node)\n    }\n    this.buffer = node.context\n    return this.yieldBuf(node.index, node.type)\n  }\n\n  /// @internal\n  toString() {\n    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString()\n  }\n\n  /// @internal\n  enter(dir: 1 | -1, after: number) {\n    if (!this.buffer)\n      return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, after, this.full))\n\n    let {buffer} = this.buffer\n    let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir,\n                                 after == After.None ? After.None : after - this.buffer.start)\n    if (index < 0) return false\n    this.stack.push(this.index)\n    return this.yieldBuf(index)\n  }\n\n  /// Move the cursor to this node's first child. When this returns\n  /// false, the node has no child, and the cursor has not been moved.\n  firstChild() { return this.enter(1, After.None) }\n\n  /// Move the cursor to this node's last child.\n  lastChild() { return this.enter(-1, After.None) }\n\n  /// Move the cursor to the first child that starts at or after `pos`.\n  childAfter(pos: number) { return this.enter(1, pos) }\n\n  /// Move to the last child that ends at or before `pos`.\n  childBefore(pos: number) { return this.enter(-1, pos) }\n\n  /// Move the node's parent node, if this isn't the top node.\n  parent() {\n    if (!this.buffer) return this.yieldNode(this.full ? this._tree._parent : this._tree.parent)\n    if (this.stack.length) return this.yieldBuf(this.stack.pop()!)\n    let parent = this.full ? this.buffer.parent : this.buffer.parent.nextSignificantParent()\n    this.buffer = null\n    return this.yieldNode(parent)\n  }\n\n  /// @internal\n  sibling(dir: 1 | -1) {\n    if (!this.buffer)\n      return !this._tree._parent ? false\n        : this.yield(this._tree._parent.nextChild(this._tree.index + dir, dir, After.None, this.full))\n\n    let {buffer} = this.buffer, d = this.stack.length - 1\n    if (dir < 0) {\n      let parentStart = d < 0 ? 0 : this.stack[d] + 4\n      if (this.index != parentStart)\n        return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, After.None))\n    } else {\n      let after = buffer.buffer[this.index + 3]\n      if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n        return this.yieldBuf(after)\n    }\n    return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, After.None, this.full)) : false\n  }\n\n  /// Move to this node's next sibling, if any.\n  nextSibling() { return this.sibling(1) }\n\n  /// Move to this node's previous sibling, if any.\n  prevSibling() { return this.sibling(-1) }\n\n  private atLastNode(dir: 1 | -1) {\n    let index, parent: TreeNode | null, {buffer} = this\n    if (buffer) {\n      if (dir > 0) {\n        if (this.index < buffer.buffer.buffer.length) return false\n      } else {\n        for (let i = 0; i < this.index; i++) if (buffer.buffer.buffer[i + 3] < this.index) return false\n      }\n      ;({index, parent} = buffer)\n    } else {\n      ({index, _parent: parent} = this._tree)\n    }\n    for (; parent; {index, _parent: parent} = parent) {\n      for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n        let child = parent.node.children[i]\n        if (this.full || !child.type.isAnonymous || child instanceof TreeBuffer || hasChild(child)) return false\n      }\n    }\n    return true\n  }\n\n  private move(dir: 1 | -1) {\n    if (this.enter(dir, After.None)) return true\n    for (;;) {\n      if (this.sibling(dir)) return true\n      if (this.atLastNode(dir) || !this.parent()) return false\n    }\n  }\n\n  /// Move to the next node in a\n  /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n  /// traversal, going from a node to its first child or, if the\n  /// current node is empty, its next sibling or the next sibling of\n  /// the first parent node that has one.\n  next() { return this.move(1) }\n\n  /// Move to the next node in a last-to-first pre-order traveral. A\n  /// node is followed by ist last child or, if it has none, its\n  /// previous sibling or the previous sibling of the first parent\n  /// node that has one.\n  prev() { return this.move(-1) }\n\n  /// Move the cursor to the innermost node that covers `pos`. If\n  /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n  /// it will enter nodes that start at `pos`.\n  moveTo(pos: number, side: -1 | 0 | 1 = 0) {\n    // Move up to a node that actually holds the position, if possible\n    while (this.from == this.to ||\n           (side < 1 ? this.from >= pos : this.from > pos) ||\n           (side > -1 ? this.to <= pos : this.to < pos))\n      if (!this.parent()) break\n\n    // Then scan down into child nodes as far as possible\n    for (;;) {\n      if (side < 0 ? !this.childBefore(pos) : !this.childAfter(pos)) break\n      if (this.from == this.to ||\n          (side < 1 ? this.from >= pos : this.from > pos) ||\n          (side > -1 ? this.to <= pos : this.to < pos)) {\n        this.parent()\n        break\n      }\n    }\n    return this\n  }\n\n  /// Get a [syntax node](#tree.SyntaxNode) at the cursor's current\n  /// position.\n  get node(): SyntaxNode {\n    if (!this.buffer) return this._tree\n    \n    let cache = this.bufferNode, result: BufferNode | null = null, depth = 0\n    if (cache && cache.context == this.buffer) {\n      scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n        for (let c: BufferNode | null = cache; c; c = c._parent) if (c.index == index) {\n          if (index == this.index) return c\n          result = c\n          depth = d + 1\n          break scan\n        }\n        index = this.stack[--d]\n      }\n    }\n    for (let i = depth; i < this.stack.length; i++) result = new BufferNode(this.buffer, result, this.stack[i])\n    return this.bufferNode = new BufferNode(this.buffer, result, this.index)\n  }\n\n  /// Get the [tree](#tree.Tree) that represents the current node, if\n  /// any. Will return null when the node is in a [tree\n  /// buffer](#tree.TreeBuffer).\n  get tree(): Tree | null {\n    return this.buffer ? null : this._tree.node\n  }\n}\n\nfunction hasChild(tree: Tree): boolean {\n  return tree.children.some(ch => !ch.type.isAnonymous || ch instanceof TreeBuffer || hasChild(ch))\n}\n\n/// This is used by `Tree.build` as an abstraction for iterating over\n/// a tree buffer. A cursor initially points at the very last element\n/// in the buffer. Every time `next()` is called it moves on to the\n/// previous one.\nexport interface BufferCursor {\n  /// The current buffer position (four times the number of nodes\n  /// remaining).\n  pos: number\n  /// The node ID of the next node in the buffer.\n  id: number\n  /// The start position of the next node in the buffer.\n  start: number\n  /// The end position of the next node.\n  end: number\n  /// The size of the next node (the number of nodes inside, counting\n  /// the node itself, times 4).\n  size: number\n  /// Moves `this.pos` down by 4.\n  next(): void\n  /// Create a copy of this cursor.\n  fork(): BufferCursor\n}\n\nclass FlatBufferCursor implements BufferCursor {\n  constructor(readonly buffer: readonly number[], public index: number) {}\n\n  get id() { return this.buffer[this.index - 4] }\n  get start() { return this.buffer[this.index - 3] }\n  get end() { return this.buffer[this.index - 2] }\n  get size() { return this.buffer[this.index - 1] }\n\n  get pos() { return this.index }\n\n  next() { this.index -= 4 }\n\n  fork() { return new FlatBufferCursor(this.buffer, this.index) }\n}\n\nconst BalanceBranchFactor = 8\n\nfunction buildTree(data: BuildData) {\n  let {buffer, nodeSet, topID = 0,\n       maxBufferLength = DefaultBufferLength,\n       reused = [],\n       minRepeatType = nodeSet.types.length} = data as BuildData\n  let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer as BufferCursor\n  let types = nodeSet.types\n  function takeNode(parentStart: number, minPos: number,\n                    children: (Tree | TreeBuffer)[], positions: number[],\n                    inRepeat: number) {\n    let {id, start, end, size} = cursor\n    while (id == inRepeat) { cursor.next(); ({id, start, end, size} = cursor) }\n\n    let startPos = start - parentStart\n    if (size < 0) { // Reused node\n      children.push(reused[id])\n      positions.push(startPos)\n      cursor.next()\n      return\n    }\n\n    let type = types[id], node, buffer: {size: number, start: number, skip: number} | undefined\n    if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n      // Small enough for a buffer, and no reused nodes inside\n      let data = new Uint16Array(buffer.size - buffer.skip)\n      let endPos = cursor.pos - buffer.size, index = data.length\n      while (cursor.pos > endPos)\n        index = copyToBuffer(buffer.start, data, index, inRepeat)\n      node = new TreeBuffer(data, end - buffer.start, nodeSet, inRepeat < 0 ? NodeType.none : types[inRepeat])\n      startPos = buffer.start - parentStart\n    } else { // Make it a node\n      let endPos = cursor.pos - size\n      cursor.next()\n      let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n      let localInRepeat = id >= minRepeatType ? id : -1\n      while (cursor.pos > endPos)\n        takeNode(start, endPos, localChildren, localPositions, localInRepeat)\n      localChildren.reverse(); localPositions.reverse()\n\n      if (localInRepeat > -1 && localChildren.length > BalanceBranchFactor)\n        node = balanceRange(type, type, localChildren, localPositions, 0, localChildren.length, 0, maxBufferLength, end - start)\n      else\n        node = new Tree(type, localChildren, localPositions, end - start)\n    }\n\n    children.push(node)\n    positions.push(startPos)\n  }\n\n  function findBufferSize(maxSize: number, inRepeat: number) {\n    // Scan through the buffer to find previous siblings that fit\n    // together in a TreeBuffer, and don't contain any reused nodes\n    // (which can't be stored in a buffer).\n    // If `inRepeat` is > -1, ignore node boundaries of that type for\n    // nesting, but make sure the end falls either at the start\n    // (`maxSize`) or before such a node.\n    let fork = cursor.fork()\n    let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength\n    let result = {size: 0, start: 0, skip: 0}\n    scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n      // Pretend nested repeat nodes of the same type don't exist\n      if (fork.id == inRepeat) {\n        // Except that we store the current state as a valid return\n        // value.\n        result.size = size; result.start = start; result.skip = skip\n        skip += 4; size += 4\n        fork.next()\n        continue\n      }\n      let nodeSize = fork.size, startPos = fork.pos - nodeSize\n      if (nodeSize < 0 || startPos < minPos || fork.start < minStart) break\n      let localSkipped = fork.id >= minRepeatType ? 4 : 0\n      let nodeStart = fork.start\n      fork.next()\n      while (fork.pos > startPos) {\n        if (fork.size < 0) break scan\n        if (fork.id >= minRepeatType) localSkipped += 4\n        fork.next()\n      }\n      start = nodeStart\n      size += nodeSize\n      skip += localSkipped\n    }\n    if (inRepeat < 0 || size == maxSize) {\n      result.size = size; result.start = start; result.skip = skip\n    }\n    return result.size > 4 ? result : undefined\n  }\n\n  function copyToBuffer(bufferStart: number, buffer: Uint16Array, index: number, inRepeat: number): number {\n    let {id, start, end, size} = cursor\n    cursor.next()\n    if (id == inRepeat) return index\n    let startIndex = index\n    if (size > 4) {\n      let endPos = cursor.pos - (size - 4)\n      while (cursor.pos > endPos)\n        index = copyToBuffer(bufferStart, buffer, index, inRepeat)\n    }\n    if (id < minRepeatType) { // Don't copy repeat nodes into buffers\n      buffer[--index] = startIndex\n      buffer[--index] = end - bufferStart\n      buffer[--index] = start - bufferStart\n      buffer[--index] = id\n    }\n    return index\n  }\n\n  let children: (Tree | TreeBuffer)[] = [], positions: number[] = []\n  while (cursor.pos > 0) takeNode(data.start || 0, 0, children, positions, -1)\n  let length = data.length ?? (children.length ? positions[0] + children[0].length : 0)\n  return new Tree(types[topID], children.reverse(), positions.reverse(), length)\n}\n\nfunction balanceRange(outerType: NodeType, innerType: NodeType,\n                      children: readonly (Tree | TreeBuffer)[], positions: readonly number[],\n                      from: number, to: number,\n                      start: number, maxBufferLength: number, length: number): Tree {\n  let localChildren: (Tree | TreeBuffer)[] = [], localPositions: number[] = []\n  if (length <= maxBufferLength) {\n    for (let i = from; i < to; i++) {\n      localChildren.push(children[i])\n      localPositions.push(positions[i] - start)\n    }\n  } else {\n    let maxChild = Math.max(maxBufferLength, Math.ceil(length * 1.5 / BalanceBranchFactor))\n    for (let i = from; i < to;) {\n      let groupFrom = i, groupStart = positions[i]\n      i++\n      for (; i < to; i++) {\n        let nextEnd = positions[i] + children[i].length\n        if (nextEnd - groupStart > maxChild) break\n      }\n      if (i == groupFrom + 1) {\n        let only = children[groupFrom]\n        if (only instanceof Tree && only.type == innerType && only.length > maxChild << 1) { // Too big, collapse\n          for (let j = 0; j < only.children.length; j++) {\n            localChildren.push(only.children[j])\n            localPositions.push(only.positions[j] + groupStart - start)\n          }\n          continue\n        }\n        localChildren.push(only)\n      } else if (i == groupFrom + 1) {\n        localChildren.push(children[groupFrom])\n      } else {\n        let inner = balanceRange(innerType, innerType, children, positions, groupFrom, i, groupStart,\n                                 maxBufferLength, positions[i - 1] + children[i - 1].length - groupStart)\n        if (innerType != NodeType.none && !containsType(inner.children, innerType))\n          inner = new Tree(NodeType.none, inner.children, inner.positions, inner.length)\n        localChildren.push(inner)\n      }\n      localPositions.push(groupStart - start)\n    }\n  }\n  return new Tree(outerType, localChildren, localPositions, length)\n}\n\nfunction containsType(nodes: readonly (Tree | TreeBuffer)[], type: NodeType) {\n  for (let elt of nodes) if (elt.type == type) return true\n  return false\n}\n\n/// The [`TreeFragment.applyChanges`](#tree.TreeFragment^applyChanges)\n/// method expects changed ranges in this format.\nexport interface ChangedRange {\n  /// The start of the change in the start document\n  fromA: number\n  /// The end of the change in the start document\n  toA: number\n  /// The start of the replacement in the new document\n  fromB: number\n  /// The end of the replacement in the new document\n  toB: number\n}\n\nconst enum Open { Start = 1, End = 2 }\n\n/// Tree fragments are used during [incremental\n/// parsing](#lezer.ParseOptions.fragments) to track parts of old\n/// trees that can be reused in a new parse. An array of fragments is\n/// used to track regions of an old tree whose nodes might be reused\n/// in new parses. Use the static\n/// [`applyChanges`](#tree.TreeFragment^applyChanges) method to update\n/// fragments for document changes.\nexport class TreeFragment {\n  constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    readonly from: number,\n    /// The end of the unchanged range.\n    readonly to: number,\n    /// The tree that this fragment is based on.\n    readonly tree: Tree,\n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    readonly offset: number,\n    private open: number\n  ) {}\n\n  get openStart() { return (this.open & Open.Start) > 0 }\n\n  get openEnd() { return (this.open & Open.End) > 0 }\n\n  /// Apply a set of edits to an array of fragments, removing or\n  /// splitting fragments as necessary to remove edited ranges, and\n  /// adjusting offsets for fragments that moved.\n  static applyChanges(fragments: readonly TreeFragment[], changes: readonly ChangedRange[], minGap = 128) {\n    if (!changes.length) return fragments\n    let result: TreeFragment[] = []\n    let fI = 1, nextF = fragments.length ? fragments[0] : null\n    let cI = 0, pos = 0, off = 0\n    for (;;) {\n      let nextC = cI < changes.length ? changes[cI++] : null\n      let nextPos = nextC ? nextC.fromA : 1e9\n      if (nextPos - pos >= minGap) while (nextF && nextF.from < nextPos) {\n        let cut: TreeFragment | null = nextF\n        if (pos >= cut.from || nextPos <= cut.to || off) {\n          let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off\n          cut = fFrom >= fTo ? null :\n            new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off,\n                             (cI > 0 ? Open.Start : 0) | (nextC ? Open.End : 0))\n        }\n        if (cut) result.push(cut)\n        if (nextF.to > nextPos) break\n        nextF = fI < fragments.length ? fragments[fI++] : null\n      }\n      if (!nextC) break\n      pos = nextC.toA\n      off = nextC.toA - nextC.toB\n    }\n    return result\n  }\n\n  /// Create a set of fragments from a freshly parsed tree, or update\n  /// an existing set of fragments by replacing the ones that overlap\n  /// with a tree with content from the new tree. When `partial` is\n  /// true, the parse is treated as incomplete, and the token at its\n  /// end is not included in [`safeTo`](#tree.TreeFragment.safeTo).\n  static addTree(tree: Tree, fragments: readonly TreeFragment[] = [], partial = false) {\n    let result = [new TreeFragment(0, tree.length, tree, 0, partial ? Open.End : 0)]\n    for (let f of fragments) if (f.to > tree.length) result.push(f)\n    return result\n  }\n}\n\n/// Interface used to represent an in-progress parse, which can be\n/// moved forward piece-by-piece.\nexport interface PartialParse {\n  /// Advance the parse state by some amount.\n  advance(): Tree | null\n  /// The current parse position.\n  pos: number\n  /// Get the currently parsed content as a tree, even though the\n  /// parse hasn't finished yet.\n  forceFinish(): Tree\n}\n\n/// A parse context is an object providing additional information to the\n/// parser. It is passed through to nested parsers.\nexport interface ParseContext {\n  /// A set of fragments from a previous parse to be used for incremental\n  /// parsing. These should be aligned with the current document\n  /// (through a call to\n  /// [`TreeFragment.applyChanges`](#tree.TreeFragment^applyChanges))\n  /// if any changes were made since they were produced. The parser\n  /// will try to reuse nodes from the fragments in the new parse,\n  /// greatly speeding up the parse when it can do so for most of the\n  /// document.\n  fragments?: readonly TreeFragment[]\n}\n\n/// This is the interface the parser uses to access the document. It\n/// exposes a sequence of UTF16 code units. Most (but not _all_)\n/// access, especially through `get`, will be sequential, so\n/// implementations can optimize for that.\nexport interface Input {\n  /// The end of the stream.\n  length: number\n  /// Get the code unit at the given position. Will return -1 when\n  /// asked for a point below 0 or beyond the end of the stream.\n  get(pos: number): number\n  /// Returns the string between `pos` and the next newline character\n  /// or the end of the document. Not used by the built-in tokenizers,\n  /// but can be useful in custom tokenizers or completely custom\n  /// parsers.\n  lineAfter(pos: number): string\n  /// Read part of the stream as a string\n  read(from: number, to: number): string\n  /// Return a new `Input` over the same data, but with a lower\n  /// `length`. Used, for example, when nesting grammars to give the\n  /// inner grammar a narrower view of the input.\n  clip(at: number): Input\n}\n\n// Creates an `Input` that is backed by a single, flat string.\nexport function stringInput(input: string): Input { return new StringInput(input) }\n\nclass StringInput implements Input {\n  constructor(readonly string: string, readonly length = string.length) {}\n\n  get(pos: number) {\n    return pos < 0 || pos >= this.length ? -1 : this.string.charCodeAt(pos)\n  }\n\n  lineAfter(pos: number) {\n    if (pos < 0) return \"\"\n    let end = this.string.indexOf(\"\\n\", pos)\n    return this.string.slice(pos, end < 0 ? this.length : Math.min(end, this.length))\n  }\n  \n  read(from: number, to: number): string { return this.string.slice(from, Math.min(this.length, to)) }\n\n  clip(at: number) { return new StringInput(this.string, at) }\n}\n","const xsdString = \"http://www.w3.org/2001/XMLSchema#string\";\nconst xsdBoolean = \"http://www.w3.org/2001/XMLSchema#boolean\";\nconst xsdDecimal = \"http://www.w3.org/2001/XMLSchema#decimal\";\nconst xsdInteger = \"http://www.w3.org/2001/XMLSchema#integer\";\nconst xsdDouble = \"http://www.w3.org/2001/XMLSchema#double\";\nconst xsdFloat = \"http://www.w3.org/2001/XMLSchema#float\";\nconst xsdDate = \"http://www.w3.org/2001/XMLSchema#date\";\nconst xsdTime = \"http://www.w3.org/2001/XMLSchema#time\";\nconst xsdDateTime = \"http://www.w3.org/2001/XMLSchema#dateTime\";\nconst xsdDateTimeStamp = \"http://www.w3.org/2001/XMLSchema#dateTimeStamp\";\nconst xsdGYear = \"http://www.w3.org/2001/XMLSchema#gYear\";\nconst xsdGMonth = \"http://www.w3.org/2001/XMLSchema#gMonth\";\nconst xsdGDay = \"http://www.w3.org/2001/XMLSchema#gDay\";\nconst xsdGYearMonth = \"http://www.w3.org/2001/XMLSchema#gYearMonth\";\nconst xsdGMonthDay = \"http://www.w3.org/2001/XMLSchema#gMonthDay\";\nconst xsdDuration = \"http://www.w3.org/2001/XMLSchema#duration\";\nconst xsdYearMonthDuration = \"http://www.w3.org/2001/XMLSchema#yearMonthDuration\";\nconst xsdDayTimeDuration = \"http://www.w3.org/2001/XMLSchema#dayTimeDuration\";\nconst xsdByte = \"http://www.w3.org/2001/XMLSchema#byte\";\nconst xsdShort = \"http://www.w3.org/2001/XMLSchema#short\";\nconst xsdInt = \"http://www.w3.org/2001/XMLSchema#int\";\nconst xsdLong = \"http://www.w3.org/2001/XMLSchema#long\";\nconst xsdUnsignedByte = \"http://www.w3.org/2001/XMLSchema#unsignedByte\";\nconst xsdUnsignedSHort = \"http://www.w3.org/2001/XMLSchema#unsignedShort\";\nconst xsdUnsignedInt = \"http://www.w3.org/2001/XMLSchema#unsignedInt\";\nconst xsdUnsignedLong = \"http://www.w3.org/2001/XMLSchema#unsignedLong\";\nconst xsdPositiveInteger = \"http://www.w3.org/2001/XMLSchema#positiveInteger\";\nconst xsdNonNegativeInteger = \"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\";\nconst xsdNonPositiveInteger = \"http://www.w3.org/2001/XMLSchema#nonPositiveInteger\";\nconst xsdHexBinary = \"http://www.w3.org/2001/XMLSchema#hexBinary\";\nconst xsdBase64Binary = \"http://www.w3.org/2001/XMLSchema#base64Binary\";\nconst xsdAnyURI = \"http://www.w3.org/2001/XMLSchema#anyURI\";\nconst xsdLanguage = \"http://www.w3.org/2001/XMLSchema#language\";\nconst xsdNormalizedString = \"http://www.w3.org/2001/XMLSchema#normalizedString\";\nconst xsdToken = \"http://www.w3.org/2001/XMLSchema#token\";\nconst xsdNMTOKEN = \"http://www.w3.org/2001/XMLSchema#NMTOKEN\";\nconst xsdName = \"http://www.w3.org/2001/XMLSchema#Name\";\nconst xsdNCNames = \"http://www.w3.org/2001/XMLSchema#NCNames\";\nconst rdfType = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nconst rdfNil = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\";\nconst rdfFirst = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\";\nconst rdfRest = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\";\nconst rdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\nconst rdfJSON = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#JSON\";\nexport const xsd = {\n    string: xsdString,\n    boolean: xsdBoolean,\n    decimal: xsdDecimal,\n    integer: xsdInteger,\n    double: xsdDouble,\n    float: xsdFloat,\n    date: xsdDate,\n    time: xsdTime,\n    dateTime: xsdDateTime,\n    dateTimeStamp: xsdDateTimeStamp,\n    hexBinary: xsdHexBinary,\n    base64Binary: xsdBase64Binary,\n};\nexport const rdf = {\n    type: rdfType,\n    nil: rdfNil,\n    first: rdfFirst,\n    rest: rdfRest,\n    langString: rdfLangString,\n    JSON: rdfJSON,\n};\n","import { rdf, xsd } from \"./IRIs.js\";\nlet _blankNodeCounter = 0;\nexport class NamedNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get termType() {\n        return \"NamedNode\";\n    }\n    get id() {\n        return `<${this.value}>`;\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return other.termType === \"NamedNode\" && other.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nconst xsdString = new NamedNode(xsd.string);\nconst rdfLangString = new NamedNode(rdf.langString);\nexport class Literal {\n    constructor(value, language, datatype) {\n        this.value = value;\n        this.language = language;\n        this.datatype = datatype;\n        if (datatype.value === xsd.string) {\n            this.id = JSON.stringify(value);\n        }\n        else if (datatype.value === rdf.langString && language !== \"\") {\n            this.id = `${JSON.stringify(value)}@${this.language}`;\n        }\n        else {\n            this.id = `${JSON.stringify(value)}^^<${datatype.value}>`;\n        }\n    }\n    get termType() {\n        return \"Literal\";\n    }\n    get datatypeString() {\n        return this.datatype.value;\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return (this.termType === term.termType &&\n                this.value === term.value &&\n                this.language === term.language &&\n                this.datatype.equals(term.datatype));\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n            language: this.language,\n            datatype: { termType: \"NamedNode\", value: this.datatype.value },\n        };\n    }\n}\nexport class BlankNode {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `_:${this.value}`;\n    }\n    get termType() {\n        return \"BlankNode\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class Variable {\n    constructor(value) {\n        this.value = value;\n    }\n    get id() {\n        return `?${this.value}`;\n    }\n    get termType() {\n        return \"Variable\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType && term.value === this.value;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: this.value,\n        };\n    }\n}\nexport class DefaultGraph {\n    get termType() {\n        return \"DefaultGraph\";\n    }\n    get id() {\n        return \"\";\n    }\n    get value() {\n        return \"\";\n    }\n    equals(term) {\n        if (term === null || term === undefined) {\n            return false;\n        }\n        else {\n            return this.termType === term.termType;\n        }\n    }\n    toJSON() {\n        return {\n            termType: this.termType,\n            value: \"\",\n        };\n    }\n}\nexport const Default = new DefaultGraph();\nexport function fromId(id) {\n    if (id === \"\") {\n        return Default;\n    }\n    switch (id[0]) {\n        case \"_\":\n            return new BlankNode(id.slice(2));\n        case \"?\":\n            return new Variable(id.slice(1));\n        case '\"':\n            const i = id.lastIndexOf('\"');\n            if (i === -1) {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n            const value = id.slice(1, i);\n            if (id.length === i + 1) {\n                return new Literal(value, \"\", xsdString);\n            }\n            else if (id[i + 1] === \"@\") {\n                return new Literal(value, id.slice(i + 2), rdfLangString);\n            }\n            else if (id.slice(i, i + 4) === '\"^^<' && id[id.length - 1] === \">\") {\n                const datatype = new NamedNode(id.slice(i + 4, -1));\n                return new Literal(value, \"\", datatype);\n            }\n            else {\n                throw new Error(`Invalid literal id ${id}`);\n            }\n        case \"<\":\n            return new NamedNode(id.slice(1, -1));\n        default:\n            throw new Error(`Invalid term id ${id}`);\n    }\n}\nexport function toId(term) {\n    if (typeof term === \"string\") {\n        return term;\n    }\n    switch (term.termType) {\n        case \"NamedNode\":\n            return `<${term.value}>`;\n        case \"BlankNode\":\n            return \"_:\" + term.value;\n        case \"Variable\":\n            return \"?\" + term.value;\n        case \"DefaultGraph\":\n            return \"\";\n        case \"Literal\":\n            return ('\"' +\n                term.value +\n                '\"' +\n                (term.language\n                    ? \"@\" + term.language\n                    : term.datatype && term.datatype.value !== xsd.string\n                        ? \"^^<\" + term.datatype.value + \">\"\n                        : \"\"));\n        default:\n            throw new Error(\"Invalid term: \" + term);\n    }\n}\n// TODO: think about it\nexport class Quad extends Array {\n    constructor(subject, predicate, object, graph) {\n        super(subject, predicate, object, graph || Default);\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph || Default;\n    }\n    get termType() {\n        return \"Quad\";\n    }\n    get value() {\n        return \"\";\n    }\n    get id() {\n        if (this.graph.equals(Default)) {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} .`;\n        }\n        else {\n            return `${this.subject.id} ${this.predicate.id} ${this.object.id} ${this.graph.id} .`;\n        }\n    }\n    toJSON() {\n        return {\n            termType: \"Quad\",\n            value: \"\",\n            subject: this.subject.toJSON(),\n            predicate: this.predicate.toJSON(),\n            object: this.object.toJSON(),\n            graph: this.graph.toJSON(),\n        };\n    }\n    equals(other) {\n        if (other === undefined || other === null) {\n            return false;\n        }\n        else {\n            return (other.termType === \"Quad\" &&\n                this.subject.equals(other.subject) &&\n                this.predicate.equals(other.predicate) &&\n                this.object.equals(other.object) &&\n                this.graph.equals(other.graph));\n        }\n    }\n}\nfunction namedNode(iri) {\n    return new NamedNode(iri);\n}\nfunction blankNode(name) {\n    return new BlankNode(name || `b${_blankNodeCounter++}`);\n}\nfunction literal(value, languageOrDataType) {\n    if (languageOrDataType === undefined) {\n        return new Literal(value, \"\", xsdString);\n    }\n    else if (typeof languageOrDataType === \"string\") {\n        return new Literal(value, languageOrDataType, rdfLangString);\n    }\n    else {\n        const datatype = new NamedNode(languageOrDataType.value);\n        return new Literal(value, \"\", datatype);\n    }\n}\nfunction variable(name) {\n    return new Variable(name);\n}\nfunction defaultGraph() {\n    return Default;\n}\nfunction quad(subject, predicate, object, graph) {\n    return new Quad(subject, predicate, object, graph);\n}\n// export function getTerm(\n// \tterm: null | string | Term\n// ): null | NamedNode | BlankNode | Literal | Variable | DefaultGraph {\n// \tif (term === null) {\n// \t\treturn null\n// \t} else if (typeof term === \"string\") {\n// \t\treturn fromId(term)\n// \t} else if (term instanceof BaseTerm) {\n// \t\treturn term\n// \t} else {\n// \t\tswitch (term.termType) {\n// \t\t\tcase \"NamedNode\":\n// \t\t\t\treturn new NamedNode(term.value)\n// \t\t\tcase \"BlankNode\":\n// \t\t\t\treturn new BlankNode(term.value)\n// \t\t\tcase \"Literal\":\n// \t\t\t\treturn new Literal(\n// \t\t\t\t\tterm.value,\n// \t\t\t\t\tterm.language || new NamedNode(term.datatype.value)\n// \t\t\t\t)\n// \t\t\tcase \"DefaultGraph\":\n// \t\t\t\treturn Default\n// \t\t\tcase \"Variable\":\n// \t\t\t\treturn new Variable(term.value)\n// \t\t}\n// \t}\n// }\nconst DataFactory = {\n    namedNode,\n    blankNode,\n    variable,\n    literal,\n    defaultGraph,\n    quad,\n};\nexport default DataFactory;\n","import DataFactory, { toId, fromId, Quad } from \"./DataFactory.js\";\nconst SPO = [\"subject\", \"predicate\", \"object\"];\nconst POS = [\"predicate\", \"object\", \"subject\"];\nconst OSP = [\"object\", \"subject\", \"predicate\"];\nexport default class Store {\n    constructor(quads) {\n        this.sizeCache = 0;\n        this.graphMap = new Map();\n        this.id = 0;\n        this.ids = new Map([[\"><\", 0]]);\n        this.entities = new Map();\n        this.blankNodeIndex = 0;\n        // Add quads if passed\n        if (quads !== undefined) {\n            this.addQuads(quads);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.quads(null, null, null, null);\n    }\n    get size() {\n        if (this.sizeCache !== null) {\n            return this.sizeCache;\n        }\n        // Calculate the number of quads by counting to the deepest level\n        let size = 0;\n        for (const { subjects } of this.graphMap.values()) {\n            for (const predicates of subjects.values()) {\n                for (const objects of predicates.values()) {\n                    size += objects.size;\n                }\n            }\n        }\n        this.sizeCache = size;\n        return size;\n    }\n    // ## Private methods\n    // Returns if the index has changed, if the entry did not already exist.\n    addToIndex(index0, key0, key1, key2) {\n        // Create layers as necessary\n        let existed = false;\n        const index1 = index0.get(key0);\n        if (index1 === undefined) {\n            index0.set(key0, new Map([[key1, new Set([key2])]]));\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 === undefined) {\n                index1.set(key1, new Set([key2]));\n            }\n            else {\n                existed = index2.has(key2);\n                index2.add(key2);\n            }\n        }\n        return existed;\n    }\n    // ### `_removeFromIndex` removes a quad from a three-layered index\n    removeFromIndex(index0, key0, key1, key2) {\n        // Remove the quad from the index\n        const index1 = index0.get(key0);\n        const index2 = index1.get(key1);\n        index2.delete(key2);\n        if (index2.size === 0) {\n            index1.delete(key1);\n            if (index1.size === 0) {\n                index0.delete(key0);\n            }\n        }\n    }\n    *generateIndex(index0, key0, key1, key2, rotation, graph) {\n        const entities = [\"\", \"\", \"\"];\n        if (key0) {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                entities[0] = this.entities.get(key0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n        else {\n            for (const [value0, index1] of index0) {\n                entities[0] = this.entities.get(value0);\n                yield* this.generateIndex1(entities, index1, key1 || null, key2 || null, rotation, graph);\n            }\n        }\n    }\n    *generateIndex1(e, index1, key1, key2, r, graph) {\n        if (key1) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                e[1] = this.entities.get(key1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n        else {\n            for (const [value1, index2] of index1) {\n                e[1] = this.entities.get(value1);\n                yield* this.generateIndex2(e, key2, index2, r, graph);\n            }\n        }\n    }\n    *generateIndex2(e, key2, index2, r, graph) {\n        if (key2) {\n            if (index2.has(key2)) {\n                e[2] = this.entities.get(key2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n        else {\n            for (const value2 of index2) {\n                e[2] = this.entities.get(value2);\n                yield this.makeQuad(e, r, graph);\n            }\n        }\n    }\n    makeQuad([entity0, entity1, entity2], [name0, name1, name2], graph) {\n        const parts = { subject: null, predicate: null, object: null };\n        parts[name0] = fromId(entity0);\n        parts[name1] = fromId(entity1);\n        parts[name2] = fromId(entity2);\n        return new Quad(parts.subject, parts.predicate, parts.object, fromId(graph));\n    }\n    *loopByKey0(index0, key0) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            yield* index1.keys();\n        }\n    }\n    *loopByKey1(index0, key1) {\n        for (const [key0, index1] of index0) {\n            if (index1.has(key1)) {\n                yield key0;\n            }\n        }\n    }\n    *loopBy2Keys(index0, key0, key1) {\n        const index1 = index0.get(key0);\n        if (index1 !== undefined) {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                yield* index2.keys();\n            }\n        }\n    }\n    // ### `countInIndex` counts matching quads in a three-layered index.\n    // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n    // Any of these keys can be undefined, which is interpreted as a wildcard.\n    countInIndex(index0, key0, key1, key2) {\n        let count = 0;\n        if (key0 === null) {\n            for (const index1 of index0.values()) {\n                count += this.countInIndex1(index1, key1, key2);\n            }\n        }\n        else {\n            const index1 = index0.get(key0);\n            if (index1 !== undefined) {\n                count = this.countInIndex1(index1, key1, key2);\n            }\n        }\n        return count;\n    }\n    countInIndex1(index1, key1, key2) {\n        let count = 0;\n        if (key1 === null) {\n            for (const index2 of index1.values()) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        else {\n            const index2 = index1.get(key1);\n            if (index2 !== undefined) {\n                count += key2 === null ? index2.size : index2.has(key2) ? 1 : 0;\n            }\n        }\n        return count;\n    }\n    // ### `getGraphIndices` returns an array with the given graph,\n    // or all graphs if the argument is null or undefined.\n    getGraphIndices(graph) {\n        if (graph === undefined || graph === null) {\n            return this.graphMap;\n        }\n        else {\n            const graphIndex = this.graphMap.get(graph);\n            return new Map([[graph, graphIndex]]);\n        }\n    }\n    getGraphIndex(graph) {\n        const graphIndex = this.graphMap.get(graph);\n        if (graphIndex !== undefined) {\n            return graphIndex;\n        }\n        const newGraphIndex = Object.freeze({\n            subjects: new Map(),\n            predicates: new Map(),\n            objects: new Map(),\n        });\n        this.graphMap.set(graph, newGraphIndex);\n        return newGraphIndex;\n    }\n    addQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            if (args[3] === undefined) {\n                graph = \"\";\n            }\n            else {\n                graph = toId(args[3]);\n            }\n        }\n        const graphIndex = this.getGraphIndex(graph);\n        // Since entities can often be long IRIs, we avoid storing them in every index.\n        // Instead, we have a separate index that maps entities to numbers,\n        // which are then used as keys in the other indexes.\n        if (!this.ids.has(subject)) {\n            const id = ++this.id;\n            this.entities.set(id, subject);\n            this.ids.set(subject, id);\n        }\n        const s = this.ids.get(subject);\n        if (!this.ids.has(predicate)) {\n            const id = ++this.id;\n            this.entities.set(id, predicate);\n            this.ids.set(predicate, id);\n        }\n        const p = this.ids.get(predicate);\n        if (!this.ids.has(object)) {\n            const id = ++this.id;\n            this.entities.set(id, object);\n            this.ids.set(object, id);\n        }\n        const o = this.ids.get(object);\n        const changed = this.addToIndex(graphIndex.subjects, s, p, o);\n        this.addToIndex(graphIndex.predicates, p, o, s);\n        this.addToIndex(graphIndex.objects, o, s, p);\n        // The cached quad count is now invalid\n        this.sizeCache = null;\n        return changed;\n    }\n    // ### `addQuads` adds multiple quads to the store\n    addQuads(quads) {\n        for (const quad of quads) {\n            this.addQuad(quad);\n        }\n    }\n    removeQuad(...args) {\n        let [subject, predicate, object, graph] = [\"\", \"\", \"\", \"\"];\n        if (args.length === 1) {\n            subject = toId(args[0].subject);\n            predicate = toId(args[0].predicate);\n            object = toId(args[0].object);\n            graph = toId(args[0].graph);\n        }\n        else if (args.length === 3) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = \"\";\n        }\n        else if (args.length === 4) {\n            subject = toId(args[0]);\n            predicate = toId(args[1]);\n            object = toId(args[2]);\n            graph = toId(args[3]);\n        }\n        // Find internal identifiers for all components\n        // and verify the quad exists.\n        const index = this.graphMap.get(graph);\n        if (index === undefined) {\n            return false;\n        }\n        if (!this.ids.has(subject) ||\n            !this.ids.has(predicate) ||\n            !this.ids.has(object)) {\n            return false;\n        }\n        const [s, p, o] = [\n            this.ids.get(subject),\n            this.ids.get(predicate),\n            this.ids.get(object),\n        ];\n        const subjects = index.subjects.get(s);\n        if (subjects === undefined) {\n            return false;\n        }\n        const predicates = subjects.get(p);\n        if (predicates === undefined || !predicates.has(o)) {\n            return false;\n        }\n        // Remove it from all indexes\n        this.removeFromIndex(index.subjects, s, p, o);\n        this.removeFromIndex(index.predicates, p, o, s);\n        this.removeFromIndex(index.objects, o, s, p);\n        if (this.sizeCache !== null) {\n            this.sizeCache--;\n        }\n        if (index.subjects.size === 0) {\n            this.graphMap.delete(graph);\n        }\n        return true;\n    }\n    // ### `remove` removes a stream of quads from the store\n    remove(stream) {\n        for (const quad of stream) {\n            this.removeQuad(quad);\n        }\n    }\n    // ### `removeMatches` removes all matching quads from the store\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    removeMatches(subject, predicate, object, graph) {\n        return this.remove(this.quads(subject, predicate, object, graph));\n    }\n    // ### `deleteGraph` removes all triples with the given graph from the store\n    deleteGraph(graph) {\n        return this.removeMatches(null, null, null, graph);\n    }\n    getGraphId(graph) {\n        const graphId = toId(graph);\n        if (this.graphMap.has(graphId)) {\n            return graphId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    // TODO::::::\n    getIds(s, p, o, graph) {\n        return [\n            s === null ? null : this.ids.get(toId(s)),\n            p === null ? null : this.ids.get(toId(p)),\n            o === null ? null : this.ids.get(toId(o)),\n            graph === null ? null : this.getGraphId(graph),\n        ];\n    }\n    *q(s, p, o, g) {\n        const graphs = this.getGraphIndices(g);\n        for (const [graphId, { subjects, predicates, objects }] of graphs) {\n            // Choose the optimal index, based on what fields are present\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    yield* this.generateIndex(objects, o, s, p, OSP, graphId);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    yield* this.generateIndex(subjects, s, p, null, SPO, graphId);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                yield* this.generateIndex(predicates, p, o, null, POS, graphId);\n            }\n            else if (o) {\n                // If only object is given, the object index will be the fastest\n                yield* this.generateIndex(objects, o, null, null, OSP, graphId);\n            }\n            else {\n                // If nothing is given, iterate subjects and predicates first\n                yield* this.generateIndex(subjects, null, null, null, SPO, graphId);\n            }\n        }\n    }\n    // ### `match` returns a stream of quads matching a pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    *quads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return;\n        }\n        yield* this.q(s, p, o, g);\n    }\n    getQuads(subject, predicate, object, graph) {\n        return Array.from(this.quads(subject, predicate, object, graph));\n    }\n    countQuads(subject, predicate, object, graph) {\n        const [s, p, o, g] = this.getIds(subject, predicate, object, graph);\n        if (s === undefined ||\n            p === undefined ||\n            o === undefined ||\n            g === undefined) {\n            return 0;\n        }\n        const graphs = this.getGraphIndices(g);\n        let count = 0;\n        for (const content of graphs.values()) {\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the object index will be the fastest\n                    count += this.countInIndex(content.objects, o, s, p);\n                }\n                else {\n                    // If only subject and possibly predicate are given, the subject index will be the fastest\n                    count += this.countInIndex(content.subjects, s, p, o);\n                }\n            }\n            else if (p) {\n                // If only predicate and possibly object are given, the predicate index will be the fastest\n                count += this.countInIndex(content.predicates, p, o, s);\n            }\n            else {\n                // If only object is possibly given, the object index will be the fastest\n                count += this.countInIndex(content.objects, o, s, p);\n            }\n        }\n        return count;\n    }\n    getSubjects(predicate, object, graph) {\n        return Array.from(this.subjects(predicate, object, graph));\n    }\n    *subjects(predicate, object, graph) {\n        const [_, p, o, g] = this.getIds(null, predicate, object, graph);\n        if (p === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (p) {\n                if (o) {\n                    // If predicate and object are given, the POS index is best.\n                    iterator = this.loopBy2Keys(predicates, p, o);\n                }\n                else {\n                    // If only predicate is given, the SPO index is best.\n                    iterator = this.loopByKey1(subjects, p);\n                }\n            }\n            else if (o) {\n                // If only object is given, the OSP index is best.\n                iterator = this.loopByKey0(objects, o);\n            }\n            else {\n                // If no params given, iterate all the subjects\n                iterator = subjects.keys();\n            }\n            for (const s of iterator) {\n                yield* this.unique(s, ids);\n            }\n        }\n    }\n    getPredicates(subject, object, graph) {\n        return Array.from(this.predicates(subject, object, graph));\n    }\n    *predicates(subject, object, graph) {\n        const [s, _, o, g] = this.getIds(subject, null, object, graph);\n        if (s === undefined || o === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            let iterator;\n            if (s) {\n                if (o) {\n                    // If subject and object are given, the OSP index is best.\n                    iterator = this.loopBy2Keys(objects, o, s);\n                }\n                else {\n                    // If only subject is given, the SPO index is best.\n                    iterator = this.loopByKey0(subjects, s);\n                }\n            }\n            else if (o) {\n                // If only object is given, the POS index is best.\n                iterator = this.loopByKey1(predicates, o);\n            }\n            else {\n                // If no params given, iterate all the predicates.\n                iterator = predicates.keys();\n            }\n            for (const p of iterator) {\n                yield* this.unique(p, ids);\n            }\n        }\n    }\n    // ### `getObjects` returns all objects that match the pattern.\n    // Setting any field to `undefined` or `null` indicates a wildcard.\n    getObjects(subject, predicate, graph) {\n        return Array.from(this.objects(subject, predicate, graph));\n    }\n    *objects(subject, predicate, graph) {\n        const [s, p, _, g] = this.getIds(subject, predicate, null, graph);\n        if (s === undefined || p === undefined || g === undefined) {\n            return;\n        }\n        const graphs = this.getGraphIndices(g);\n        const ids = new Set();\n        for (const { subjects, predicates, objects } of graphs.values()) {\n            // Choose optimal index based on which fields are wildcards\n            if (s) {\n                if (p) {\n                    // If subject and predicate are given, the SPO index is best.\n                    for (const o of this.loopBy2Keys(subjects, s, p)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n                else {\n                    // If only subject is given, the OSP index is best.\n                    for (const o of this.loopByKey1(objects, s)) {\n                        yield* this.unique(o, ids);\n                    }\n                }\n            }\n            else if (p) {\n                // If only predicate is given, the POS index is best.\n                for (const o of this.loopByKey0(predicates, p)) {\n                    yield* this.unique(o, ids);\n                }\n            }\n            else {\n                // If no params given, iterate all the objects.\n                for (const o of objects.keys()) {\n                    yield* this.unique(o, ids);\n                }\n            }\n        }\n    }\n    getGraphs(subject, predicate, object) {\n        return Array.from(this.graphs(subject, predicate, object));\n    }\n    *graphs(subject, predicate, object) {\n        const [s, p, o, _] = this.getIds(subject, predicate, object, null);\n        if (s === undefined || p === undefined || o === undefined) {\n            return;\n        }\n        for (const g of this.graphMap.keys()) {\n            const graph = fromId(g);\n            for (const _ of this.q(s, p, o, g)) {\n                yield graph;\n                break;\n            }\n        }\n    }\n    *unique(id, ids) {\n        if (!ids.has(id)) {\n            ids.add(id);\n            yield fromId(this.entities.get(id));\n        }\n    }\n    createBlankNode(suggestedName) {\n        let name = \"\";\n        if (suggestedName) {\n            // Generate a name based on the suggested name\n            name = \"_:\" + suggestedName;\n            for (let index = 1; this.ids.has(name); index++) {\n                name = \"_:\" + suggestedName + index;\n            }\n        }\n        else {\n            // Generate a generic blank node name\n            do {\n                name = \"_:b\" + this.blankNodeIndex++;\n            } while (this.ids.has(name));\n        }\n        // Add the blank node to the entities, avoiding the generation of duplicates\n        const id = ++this.id;\n        this.ids.set(name, id);\n        this.entities.set(id, name);\n        return DataFactory.blankNode(name.substr(2));\n    }\n}\n","import { Quad, NamedNode, BlankNode, Literal, Default, } from \"./DataFactory.js\";\nconst nnClosingTagError = () => new Error(`named node without closing angle bracket`);\nconst bnOpenTagError = () => new Error(`invalid blank node label`);\nconst unexpectedCharError = (identifier) => new Error(`Unexpected character '${identifier}'`);\nconst quadClosingPeriodError = (line) => new Error(`quad without closing period ${line}`);\nconst nnOpeningToken = \"<\";\nconst nnOpeningTokenOffset = nnOpeningToken.length;\nconst nnClosingToken = \">\";\nconst nnClosingPostfix = \"> \";\nconst nnClosingPostfixOffset = nnClosingPostfix.length;\nconst bnOpeningToken = \"_\";\nconst bnOpeningPrefix = \"_:\";\nconst bnOpeningPrefixOffset = bnOpeningPrefix.length;\nconst bnClosingToken = \" \";\nconst bnClosingTokenOffset = bnClosingToken.length;\nconst ltOpeningToken = '\"';\nconst ltOpeningTokenOffset = ltOpeningToken.length;\nconst quadClosingPostfix = \".\";\nconst ltReservedReplace = /\\\\(.)/g;\nconst ltReservedReplaceFn = (match) => {\n    switch (match) {\n        case \"\\\\n\":\n            return \"\\n\";\n        case \"\\\\r\":\n            return \"\\r\";\n        case '\\\\\"':\n            return '\"';\n        case \"\\\\\\\\\":\n            return \"\\\\\";\n        default:\n            throw new Error(`Unknown token ${match}`);\n    }\n};\n// const lgOpeningToken: string = \"@\"\n// const lgOpeningTokenOffset: number = lgOpeningToken.length\nconst lgOpeningPrefix = '\"@';\nconst lgOpeningPrefixOffset = lgOpeningPrefix.length;\nconst lgClosingToken = \" \";\nconst dtSplitPrefix = '\"^^<';\nconst dtSplitPrefixOffset = dtSplitPrefix.length;\nconst xsdString = new NamedNode(\"http://www.w3.org/2001/XMLSchema#string\");\nconst rdfLangString = new NamedNode(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\");\nexport default function* Parse(input) {\n    if (!input || input.length === 0) {\n        return;\n    }\n    let rightBoundary, leftBoundary;\n    let lang, datatype;\n    let subject, predicate, object, graph;\n    for (const line of input.split(\"\\n\")) {\n        if (line === \"\") {\n            continue;\n        }\n        rightBoundary = -1;\n        leftBoundary = -1;\n        /*\n         * Parse the subject\n         */\n        switch (line.charAt(0)) {\n            case nnOpeningToken:\n                rightBoundary = line.indexOf(nnClosingPostfix);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                const namedNodeValue = line.substring(nnOpeningTokenOffset, rightBoundary);\n                subject = new NamedNode(namedNodeValue);\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                rightBoundary = line.indexOf(bnClosingToken);\n                const blankNodeValue = line.substring(bnOpeningPrefixOffset, rightBoundary);\n                subject = new BlankNode(blankNodeValue);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(0));\n        }\n        /*\n         * Parse the predicate\n         */\n        // We currently assume blank nodes can't be predicates\n        rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n        if (rightBoundary === -1) {\n            throw nnClosingTagError();\n        }\n        leftBoundary =\n            line.indexOf(nnOpeningToken, leftBoundary) + nnOpeningTokenOffset;\n        predicate = new NamedNode(line.substring(leftBoundary, rightBoundary));\n        leftBoundary = rightBoundary + nnClosingPostfixOffset;\n        /*\n         * Parse the object\n         */\n        switch (line.charAt(leftBoundary)) {\n            case nnOpeningToken:\n                leftBoundary = leftBoundary + nnOpeningTokenOffset;\n                // When parsing ntriples, the space of the nnClosingPostfix might not exist, so it can't be used\n                rightBoundary = line.indexOf(nnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw nnClosingTagError();\n                }\n                object = new NamedNode(line.substring(leftBoundary, rightBoundary));\n                leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                break;\n            case bnOpeningToken:\n                leftBoundary =\n                    line.indexOf(bnOpeningPrefix, leftBoundary) + bnOpeningPrefixOffset;\n                rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n                if (rightBoundary === -1) {\n                    throw quadClosingPeriodError(line);\n                }\n                const value = line.substring(leftBoundary, rightBoundary);\n                object = new BlankNode(value);\n                leftBoundary = rightBoundary + bnClosingTokenOffset;\n                break;\n            case '\"':\n                leftBoundary = leftBoundary + ltOpeningTokenOffset;\n                const objEndIndex = line.lastIndexOf(ltOpeningToken);\n                const literalValue = line\n                    .substring(leftBoundary, objEndIndex)\n                    .replace(ltReservedReplace, ltReservedReplaceFn);\n                leftBoundary = objEndIndex;\n                // dtOrLgBoundary = line.indexOf(dtSplitPrefix, leftBoundary)\n                if (line.substring(leftBoundary, leftBoundary + dtSplitPrefixOffset) ===\n                    dtSplitPrefix) {\n                    // Typed literal\n                    rightBoundary = line.indexOf(nnClosingToken, leftBoundary + dtSplitPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw nnClosingTagError();\n                    }\n                    const value = line.substring(leftBoundary + dtSplitPrefixOffset, rightBoundary);\n                    lang = null;\n                    datatype = new NamedNode(value);\n                    leftBoundary = rightBoundary + nnClosingPostfixOffset;\n                }\n                else if (line.substring(leftBoundary, leftBoundary + lgOpeningPrefixOffset) ===\n                    lgOpeningPrefix) {\n                    rightBoundary = line.indexOf(lgClosingToken, leftBoundary + lgOpeningPrefixOffset);\n                    if (rightBoundary === -1) {\n                        throw quadClosingPeriodError(line);\n                    }\n                    lang = line.substring(leftBoundary + lgOpeningPrefixOffset, rightBoundary);\n                    datatype = rdfLangString;\n                    leftBoundary = rightBoundary;\n                }\n                else {\n                    // Implicit literals are strings\n                    lang = null;\n                    datatype = xsdString;\n                    leftBoundary += ltOpeningTokenOffset + 1;\n                }\n                object =\n                    lang === null\n                        ? new Literal(literalValue, \"\", datatype)\n                        : new Literal(literalValue, lang, rdfLangString);\n                break;\n            default:\n                throw unexpectedCharError(line.charAt(leftBoundary));\n        }\n        /*\n         * Parse the graph, if any\n         */\n        if (line[leftBoundary] === nnOpeningToken) {\n            leftBoundary += nnOpeningTokenOffset;\n            rightBoundary = line.indexOf(nnClosingPostfix, leftBoundary);\n            if (rightBoundary === -1) {\n                throw nnClosingTagError();\n            }\n            else if (line.substring(rightBoundary, rightBoundary + nnClosingPostfixOffset) !== nnClosingPostfix) {\n                throw nnClosingTagError();\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            leftBoundary = rightBoundary + nnClosingPostfixOffset;\n            graph = new NamedNode(value);\n        }\n        else if (line[leftBoundary] === bnOpeningToken) {\n            if (line.substring(leftBoundary, leftBoundary + bnOpeningPrefixOffset) !==\n                bnOpeningPrefix) {\n                throw bnOpenTagError();\n            }\n            leftBoundary = leftBoundary + bnOpeningPrefixOffset;\n            rightBoundary = line.indexOf(bnClosingToken, leftBoundary);\n            if (rightBoundary === -1) {\n                throw quadClosingPeriodError(line);\n            }\n            const value = line.substring(leftBoundary, rightBoundary);\n            graph = new BlankNode(value);\n            leftBoundary = rightBoundary + bnClosingTokenOffset;\n        }\n        else {\n            graph = Default;\n        }\n        if (line.substring(leftBoundary) === quadClosingPostfix) {\n            yield new Quad(subject, predicate, object, graph);\n        }\n        else {\n            throw quadClosingPeriodError(line);\n        }\n    }\n}\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{process: (string) → string, extend: (string, string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `process` is given, it is called on regular (non-`@`)\n  // selector properties to provide the actual selector. When `extend`\n  // is given, it is called when a property containing an `&` is\n  // found, and should somehow combine the `&`-template (its first\n  // argument) with the selector (its second argument) to produce an\n  // extended selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {process, extend} = options || {}\n\n    function processSelector(selector) {\n      if (/^@/.test(selector)) return [selector]\n      let selectors = selector.split(\",\")\n      return process ? selectors.map(process) : selectors\n    }\n\n    function render(selectors, spec, target) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0])\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(selectors.map(s => extend ? extend(prop, s) : prop.replace(/&/, s)), value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(isAt[1] == \"keyframes\" ? [prop] : processSelector(prop), value, local)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || isAt && isAt[1] == \"keyframes\") target.push(selectors.join(\",\") + \" {\" + local.join(\" \") + \"}\")\n    }\n\n    for (let prop in spec) render(processSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = null\n\nclass StyleSet {\n  constructor(root) {\n    if (root.adoptedStyleSheets && typeof CSSStyleSheet != \"undefined\") {\n      if (adoptedSet) {\n        root.adoptedStyleSheets = [adoptedSet.sheet].concat(root.adoptedStyleSheets)\n        return root[SET] = adoptedSet\n      }\n      this.sheet = new CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet].concat(root.adoptedStyleSheets)\n      adoptedSet = this\n    } else {\n      this.styleTag = (root.ownerDocument || root).createElement(\"style\")\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst zip = (...args) => ({\n    [Symbol.iterator]() {\n        const iterators = args.map((arg) => arg[Symbol.iterator]());\n        let i = 0;\n        return {\n            next() {\n                const results = iterators.map((iter) => iter.next());\n                if (results.some(({ done }) => done)) {\n                    return { done: true, value: undefined };\n                }\n                else {\n                    const values = results.map(({ value }) => value);\n                    return { done: false, value: [...values, i++] };\n                }\n            },\n        };\n    },\n});\nexports.default = zip;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { openLintPanel } from \"@codemirror/next/lint\"\nimport { EditorState } from \"@codemirror/next/state\"\nimport { EditorView } from \"@codemirror/next/view\"\nimport { editableConfig, makeSchemaLinter } from \"../lib/index\"\n\nconst initialValue = `# Welcome to the schema editor!\n# If you're new, you probably want to read\n# the schema language documentation here:\n# http://r1.underlay.org/docs/schemas\n\nnamespace ex http://example.com#\nnamespace ul http://underlay.org/ns/\n\ntype foo {\n  ex:a -> ? uri ;\n  ex:b -> string ;\n  ex:c -> dateTime ;\n}\n\nedge ex:cool ==/ ex:map /=> ex:wau\n\nclass ex:cool unit\n\nclass ex:wau {\n  ex:bar -> foo ;\n  ex:age -> integer ;\n  ex:self -> * ex:wau ;\n}\n\n\n\n\n\n\n`\n\nconst linter = makeSchemaLinter()\nconst extensions = [...editableConfig, linter]\n\nconst state = EditorState.create({\n\tdoc: initialValue,\n\textensions,\n})\n\nconst view = new EditorView({\n\tstate,\n\tparent: document.getElementById(\"editor\"),\n})\n\nopenLintPanel(view)\nview.focus()\n"],"sourceRoot":""}