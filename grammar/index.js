// This file was generated by lezer-generator. You probably shouldn't edit it.
import {Parser} from "lezer"
import {NodeProp} from "lezer"
const spec_identifier = {__proto__:null,namespace:8, type:16, class:44, edge:48}
export const parser = Parser.deserialize({
  version: 12,
  states: "(dQYQPOOOhQPO'#C_OmQPO'#CcOrQQO'#CqOwQQO'#CsOOQO'#C{'#C{OOQO'#Cu'#CuQYQPOOOOQO'#Ca'#CaO|QQO,58yOOQO'#Ce'#CeO!RQPO,58}O!RQPO,59]O!mQPO,59_OOQO-E6s-E6sOOQO1G.e1G.eOOQO'#Cf'#CfO!RQPO'#CgO!rQQO'#ChO!wQQO'#ClO!|QQO'#CmO#UQPO'#CoOOQO'#C}'#C}OOQO1G.i1G.iOOQO1G.w1G.wO#]QQO1G.yOOQO,59R,59ROOQO,59S,59SO#bQPO,59WO#gQPO'#CnO#lQPO'#DSO#tQPO,59XO#yQQO'#CpO$OQPO'#DXO$WQPO,59ZO$]QPO7+$eOOQO1G.r1G.rO!RQPO,59YO$bQQO,59nO$jQPO,59nOOQO1G.s1G.sO$rQQO,59[O$wQPO,59sO%OQPO,59sOOQO1G.u1G.uO%WQQO<<HPOOQO1G.t1G.tOOQO,59b,59bO%]QQO1G/YOOQO-E6t-E6tOOQO1G.v1G.vOOQO,59c,59cO%eQPO1G/_OOQO-E6u-E6uOOQOAN=kAN=kP%lQQO'#CvP!RQPO'#Cw",
  stateData: "%q~OnOSPOS~OSPOWQOfROhSO~OpWO~OpYO~OU[O~OU]O~OU_O~O]bO^fO_fOp`OraOscOudOzeO~O!OiO~OUkO~OUlO~OUmOyvP~O}{P~P!ROUsO~OttO~OwuO~OxvOyvX~OyxO~O|yO~OxzO}{X~O}|O~O!P}O~OUmOyva~Ox!QOyva~OU!SO~O}{a~P!ROx!UO}{a~OU!WO~OUmOyvi~O}{i~P!ROUmO~O",
  goto: "#s|PPP}P!RP}P!U!X!X!XPPP!X!X!c!X!k}P}P!s!y#PPPP#VP#ZPPPP#mPPPP#pTTOVRXPRZQafZ[aeuz!U!YQndV!Pv!Q!XQqeV!Tz!U!YQVOR^VQwnR!RwQ{qR!V{TUOVQgZQh[QjaWpez!U!YR!OuRodRre",
  nodeNames: "âš  Comment Schema Namespace namespace Prefix Uri Type type TypeName Variable Optional Reference Pointer Unit Iri Literal Product Component Coproduct Option Class class Edge edge",
  maxTerm: 47,
  nodeProps: [
    [NodeProp.group, -8,10,11,12,14,15,16,17,19,"Expression"]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 3,
  tokenData: "'h~RiX^!ppq!pqr#est#jz{#u}!O#z!P!Q$V!]!^$h!^!_$m!_!`$z!`!a%]!a!b%j!}#O%o#P#Q%t#T#o%y#o#p'^#q#r'c#y#z!p$f$g!p#BY#BZ!p$IS$I_!p$I|$JO!p$JT$JU!p$KV$KW!p&FU&FV!p~!uYn~X^!ppq!p#y#z!p$f$g!p#BY#BZ!p$IS$I_!p$I|$JO!p$JT$JU!p$KV$KW!p&FU&FV!p~#jO^~~#oQP~OY#jZ~#j~#zO]~~#}P!`!a$Q~$VOw~~$YP!_!`$]~$`P!`!a$c~$hO!P~~$mOx~~$rPs~!`!a$u~$zO_~~$}P!_!`%Q~%TP!P!Q%W~%]O!O~R%bPtP}!O%eQ%jO|Q~%oOr~~%tOz~~%yO}~R&QSUQpP!Q![&^![!]&l!c!}&^#T#o%yP&cRpP!Q![&^!c!}&^#T#o&^Q&qXUQst&l!O!P&l!P!Q&l!Q![&l![!]&l!c!}&l#R#S&l#T#o&l?Ar?As&l~'cOu~~'hOy~",
  tokenizers: [0, 1],
  topRules: {"Schema":[0,2]},
  specialized: [{term: 32, get: value => spec_identifier[value] || -1}],
  tokenPrec: 0
})
